
(function(window,document,Laya){
	var __un=Laya.un,__uns=Laya.uns,__static=Laya.static,__class=Laya.class,__getset=Laya.getset,__newvec=Laya.__newvec;

	var Bean=engine.base.data.Bean,ByteArray=engine.base.data.ByteArray,EventCenter=boots.EventCenter;
	var GameEvent=boots.GameEvent,long=engine.base.data.long;
/**
*@author Administrator
*/
//class net.MNetHandler
var MNetHandler=(function(){
	function MNetHandler(){
		this._message=null;
	}

	__class(MNetHandler,'net.MNetHandler');
	var __proto=MNetHandler.prototype;
	__proto.action=function(){}
	__getset(0,__proto,'message',function(){
		return this._message;
		},function(value){
		this._message=value;
	});

	return MNetHandler;
})()


//class net.NetPool
var NetPool=(function(){
	function NetPool(mp,hp){
		this._messagepool=null;
		this._handlerpool=null;
		this._cacheHandelr={};
		this._cacheMessage={};
		this._messagepool=mp;
		this._handlerpool=hp;
	}

	__class(NetPool,'net.NetPool');
	var __proto=NetPool.prototype;
	__proto.getMessage=function(id){
		var c=this._cacheMessage;
		if (c[id] !=null && c[id].length > 0)
			return c[id].shift();
		return this._messagepool.message(id);
	}

	__proto.getHandler=function(id){
		var c=this._cacheHandelr;
		if (c[id] !=null && c[id].length > 0)
			return c[id].shift();
		return this._handlerpool.handler(id);
	}

	__proto.cache=function(handler){
		var id=handler.message.getId();
		var mc=this._cacheMessage;
		var hc=this._cacheHandelr;
		if (hc[id]==null){
			hc[id]=[handler];
			mc[id]=[handler.message];
		}
		else{
			hc[id].push(handler);
			mc[id].push(handler.message);
		}
		handler.message=null;
	}

	return NetPool;
})()


/**Created by FreeMarker. DO NOT EDIT!!! */
//class net.MessagePool
var MessagePool=(function(){
	function MessagePool(){
		this.messages={};
		this.messages[1099]=ResEmptyCityPayColdMessage;
		this.messages[59]=ResShopBuyErrorMessage;
		this.messages[282]=ResArenaGetInfoErrorMessage;
		this.messages[113]=ResChallengeGuanQiaErrorMessage;
		this.messages[439]=ResTeamDuplicateSweepAwayMessage;
		this.messages[273]=ResRankMoBaiErrorMessage;
		this.messages[755]=ResRaceLampMessage;
		this.messages[466]=ResSoulBoySynthesisErrorMessage;
		this.messages[1671]=ResQinWangTeGongErrorMessage;
		this.messages[1503]=ResRecommendIntegralUpdateMessage;
		this.messages[724]=ResAdvancedRewardErrorMessage;
		this.messages[1425]=ResLikeVideoErrorMessage;
		this.messages[1466]=ResUpdateXuanNvOverTimeMessage;
		this.messages[356]=ResFlushActivitiesMessage;
		this.messages[484]=ResTeamDuplicateUpdateAssistMessage;
		this.messages[1370]=ResChatErrorMessage;
		this.messages[555]=ResSoulBoyXilianTranslateErrorMessage;
		this.messages[483]=ResTeamDuplicateZhuluBoxErrorMessage;
		this.messages[99]=ResReplaceZhanwenErrorMessage;
		this.messages[49]=ResRemoveMailMessage;
		this.messages[1474]=ResQuanMinBossOtherJoinMessage;
		this.messages[526]=ResWorldBossPayRebornErrorMessage;
		this.messages[285]=ResArenaGetRankInfoErrorMessage;
		this.messages[1493]=ResMarriagePataInviteMessage;
		this.messages[287]=ResYuanZhengBuyGoodsMessage;
		this.messages[1636]=ResXuYuanMessage;
		this.messages[1348]=ResLegionBattleAttackThroneMessage;
		this.messages[355]=ResFlushEscortDayEndMessage;
		this.messages[193]=ResTameWildPetErrorMessage;
		this.messages[3]=ResLoginLocalMessage;
		this.messages[20]=ResUpdateItemInPacketMessage;
		this.messages[764]=ResChatHelpRewardErrorMessage;
		this.messages[568]=ResMarriageRdivorceErrorMessage;
		this.messages[524]=ResWorldBossBoxRemoveErrorMessage;
		this.messages[1483]=ResEquipPromoteErrorMessage;
		this.messages[278]=ResArenaChallengeMessage;
		this.messages[1531]=ResWxIOSAuthorizeDataMessage;
		this.messages[767]=ResReceiveAllDungeonPrizeErrorMessage;
		this.messages[477]=ResQunYingHuiBetMessage;
		this.messages[211]=ResDayEndMessage;
		this.messages[1595]=ResAwakePetErrorMessage;
		this.messages[1014]=ResZhiZhunBossGetInfoMessage;
		this.messages[1525]=ResGuanQiaInvestmentUpdateMessageMessage;
		this.messages[1557]=ResZhiJianFollowSucMessage;
		this.messages[1058]=ResUpdateNameErrorMessage;
		this.messages[1214]=ResGuildChangeFightPowerErrorMessage;
		this.messages[1650]=ResGetJunTuanInfoMessage;
		this.messages[1617]=ResselectTowerMessage;
		this.messages[226]=ResUpdateYeWaiBossMessage;
		this.messages[1213]=ResGuildChangeFightPowerMessage;
		this.messages[1304]=ResTaskGuildSquarePayErrorMessage;
		this.messages[1662]=ResGodGeneraThisLifeMessage;
		this.messages[1080]=ResUpdateHeroAttributeGoodsMessage;
		this.messages[1676]=ResGetLeginMemberInfoMessage;
		this.messages[482]=ResTeamDuplicateZhuluBoxMessage;
		this.messages[427]=ResTeamDuplicateRoomCloseFullMessage;
		this.messages[413]=ResKejuAnswerExaminationMessage;
		this.messages[353]=ResEscortRevengeRewardMessage;
		this.messages[1512]=ResTeamMarryLeaveMessage;
		this.messages[1389]=ResQunYingHuiGetFightInfoMessage;
		this.messages[1594]=ResAwakePetMessage;
		this.messages[134]=ResChallengeShiMenMessage;
		this.messages[1183]=ResNineHeavyUpdateAppearanceMessage;
		this.messages[98]=ResReplaceZhanwenMessage;
		this.messages[1097]=ResEmptyUpdatePlayerMessage;
		this.messages[1443]=ResOtherPlayerFightTeamErrorMessage;
		this.messages[1510]=ResRecommendTaskUpdateMessage;
		this.messages[1533]=ResEquipZhuWenMessage;
		this.messages[488]=ResKingWarUpdateMessage;
		this.messages[144]=ResTakeShiMenRoundPrizeErrorMessage;
		this.messages[1391]=ResPataUpdateStateMessage;
		this.messages[1494]=ResMarriagePataInviteErrorMessage;
		this.messages[573]=ResAuctionContendErrorMessage;
		this.messages[1188]=ResUpdateCaiLiaoDungeonTimeMessage;
		this.messages[1159]=ResFitUpgradeWeaponErrorMessage;
		this.messages[491]=ResKingWarStartFightErrorMessage;
		this.messages[794]=ResLookPlayerErrorMessage;
		this.messages[1042]=ResGarrisonFindTargetErrorMessage;
		this.messages[1579]=ResLimitWuJiangHuntActMessage;
		this.messages[52]=ResZhuanShengErrorMessage;
		this.messages[854]=ResGodClothesOperationErrorMessage;
		this.messages[649]=ResLegionIntoSquareMessageErrorMessage;
		this.messages[1265]=ResTeamCreateErrorMessage;
		this.messages[424]=ResTeamDuplicateRoomLeaveErrorMessage;
		this.messages[1282]=ResKingWarFightGetWorshipInfoMessage;
		this.messages[1169]=ResRemoveRedEnvelopesMessage;
		this.messages[639]=ResLegionExchangeItemMessageMessage;
		this.messages[1322]=ResLegionBattleAttackDoorErrorMessage;
		this.messages[1554]=ResSuperSupplyActErrorMessage;
		this.messages[687]=ResNineHeavyPlayerAttackResultMessage;
		this.messages[493]=ResKingWarFightRewardMessage;
		this.messages[454]=ResSoulBoyHunUpgradeMessage;
		this.messages[84]=ResLockMijiMessage;
		this.messages[1440]=ResFirePetErrorMessage;
		this.messages[175]=ResPutUpgradeEquipMessage;
		this.messages[45]=ResCollectMailErrorMessage;
		this.messages[16]=ResRemoveItemInPacketMessage;
		this.messages[1305]=ResTaskCleanMessage;
		this.messages[1132]=ResEscortRevengeRecordMessage;
		this.messages[973]=ResPutOnGodClothesMessage;
		this.messages[1048]=ResGarrisonUpdateTargetMessage;
		this.messages[545]=ResMarriageReceiveFlowersMessage;
		this.messages[1633]=ResBuyHuntTreasureErrorMessage;
		this.messages[1219]=ResGuildChangeNoticeMessage;
		this.messages[12]=ResCreateMainHeroErrorMessage;
		this.messages[40]=ResActiveGameSystemErrorMessage;
		this.messages[1497]=ResMarriagePataInviteUpdateErrorMessage;
		this.messages[1414]=ResAuctionRemovedMessage;
		this.messages[1477]=ResEquipMakingErrorMessage;
		this.messages[1287]=ResPVPFightOverUnlockMessage;
		this.messages[1386]=ResGarrisonGetDataMessage;
		this.messages[449]=ResSoulBoyDrugErrorMessage;
		this.messages[39]=ResActiveGameSystemMessage;
		this.messages[1041]=ResGarrisonFindTargetMessage;
		this.messages[643]=ResLegionSignMessageErrorMessage;
		this.messages[1491]=ResUpdateNewJueWeiLevelErrorMessage;
		this.messages[700]=ResHuntStartErrorMessage;
		this.messages[1376]=ResAuctionAttentionMessage;
		this.messages[468]=ResSoulBoyXilianMessage;
		this.messages[1120]=ResHandBookActivateMessage;
		this.messages[1312]=ResSceneAddMessage;
		this.messages[1502]=ResGetMarryPataInfoErrorMessage;
		this.messages[434]=ResTeamDuplicateRoomRewardErrorMessage;
		this.messages[697]=ResHuntRecordMessage;
		this.messages[1277]=ResTeamMemberRemoveMessage;
		this.messages[1235]=ResGuildGetAllErrorMessage;
		this.messages[523]=ResWorldBossBoxRemoveMessage;
		this.messages[79]=ResUpdateLevelMessage;
		this.messages[893]=ResUpdateWarTokenMessage;
		this.messages[200]=ResDisposeMessage;
		this.messages[701]=ResHuntUpdateLuckCountMessage;
		this.messages[252]=ResTakeYCTTPrizeMessage;
		this.messages[739]=ResUpdateRedEnvelopesMessage;
		this.messages[1038]=ResCommonSynthesisMessage;
		this.messages[1210]=ResGuildChangeAutoAgreeApplyMessage;
		this.messages[173]=ResCommonUpgradeErrorMessage;
		this.messages[1267]=ResTeamExitMessage;
		this.messages[557]=ResMarriagePromoteHouseLvMessage;
		this.messages[448]=ResSoulBoyDrugMessage;
		this.messages[416]=ResTeamDuplicateRoomForIDMessage;
		this.messages[575]=ResActivateSkinMessage;
		this.messages[1644]=ResZhunDianMessage;
		this.messages[1418]=ResFitGemUpgradeErrorMessage;
		this.messages[1326]=ResLegionBattleHireErrorMessage;
		this.messages[1606]=ResActTurntableMessage;
		this.messages[1255]=ResTeamApplyMessage;
		this.messages[81]=ResExchangeMijiMessage;
		this.messages[158]=ResUpgradePetLevelMessage;
		this.messages[1112]=ResEmptyGetBattleRecordMessage;
		this.messages[1354]=ResSceneChangeMessage;
		this.messages[14]=ResEquipPacketAddCapacityMessage;
		this.messages[1480]=ResEquipMakingStoneErrorMessage;
		this.messages[1135]=ResFitSetEquipMessage;
		this.messages[1412]=ResGeneralUpgradeWeaponMessage;
		this.messages[347]=ResEscortRobberyRewardErrorMessage;
		this.messages[143]=ResTakeShiMenRoundPrizeMessage;
		this.messages[1394]=ResUpdateShopReturnMessage;
		this.messages[1130]=ResArenaGetFightRecordErrorMessage;
		this.messages[865]=ResTotemUpgradeErrorMessage;
		this.messages[530]=ResMarriageTakeSinglePlayerErrorMessage;
		this.messages[254]=ResUpdateXuanNvAttributeMessage;
		this.messages[490]=ResKingWarStartFightMessage;
		this.messages[1601]=ResSendGoodLuckMessage;
		this.messages[197]=ResDuanZaoUpgradeErrorMessage;
		this.messages[853]=ResGodClothesOperationMessage;
		this.messages[88]=ResSetMijiErrorMessage;
		this.messages[1401]=ResUpgradeUpdateCritMessage;
		this.messages[802]=ResAdviserSurmountMessage;
		this.messages[436]=ResTeamDuplicateGetFirstClearanceMessage;
		this.messages[1057]=ResUpdateNameMessage;
		this.messages[1455]=ResFastOnHookRewardMessage;
		this.messages[1186]=ResGlobalUpdateAppearanceMessage;
		this.messages[53]=ResUpdateZhuanShengExpMessage;
		this.messages[176]=ResPutUpgradeEquipErrorMessage;
		this.messages[1668]=ResMeiWuHuntErrorMessage;
		this.messages[558]=ResMarriagePromoteHouseLvErrorMessage;
		this.messages[1110]=ResUpdateCostGoldMessage;
		this.messages[1641]=ResGetBaoWuRestTimesMessage;
		this.messages[766]=ResReceiveAllDungeonPrizeMessage;
		this.messages[319]=ResUpgradeOfficialLvMessage;
		this.messages[1611]=ResEnterTowerMessage;
		this.messages[1225]=ResGuildCreateMessage;
		this.messages[1612]=ResEnterTowerErrorMessage;
		this.messages[1]=ResKickMessage;
		this.messages[517]=ResWorldBossPlayerRebornMessage;
		this.messages[551]=ResSoulBoyXilianReplaceMessage;
		this.messages[1264]=ResTeamCreateMessage;
		this.messages[1297]=ResTaskFinishErrorMessage;
		this.messages[1271]=ResTeamGetAllErrorMessage;
		this.messages[100]=ResUpdateZhanwenLengthMessage;
		this.messages[1476]=ResEquipMakingMessage;
		this.messages[1045]=ResGarrisonTakeRewardErrorMessage;
		this.messages[1202]=ResGuildAddEventMessage;
		this.messages[882]=ResUpgradeOfficialActivityMessage;
		this.messages[782]=ResChangeBossOwnerMessage;
		this.messages[519]=ResWorldBossFlushBoxMessage;
		this.messages[1294]=ResTaskPingDingAnBangPayErrorMessage;
		this.messages[1256]=ResTeamApplyErrorMessage;
		this.messages[875]=ResChatNeedHelpMessage;
		this.messages[997]=ResNineHeavyPayRebornErrorMessage;
		this.messages[167]=ResActivePetGroupMessage;
		this.messages[1200]=ResFightPositionRemoveMessage;
		this.messages[138]=ResChangeShiMenStarErrorMessage;
		this.messages[862]=ResTotemSurmountErrorMessage;
		this.messages[1473]=ResQuanMinBossMoveMessage;
		this.messages[848]=ResGeneralSurmountErrorMessage;
		this.messages[486]=ResJingMaiUpgradeMessage;
		this.messages[1496]=ResMarriagePataInviteUpdateMessage;
		this.messages[1118]=ResEmptyCityOccupiedMessage;
		this.messages[805]=ResAdviserUpgradeMessage;
		this.messages[1660]=ResTongShuaiJinJianErrorMessage;
		this.messages[212]=ResUpdateDungeonTodayTimesMessage;
		this.messages[1296]=ResTaskFinishMessage;
		this.messages[1345]=ResLegionBattleAttackMonsterErrorMessage;
		this.messages[1665]=ResRechargeTurntableErrorMessage;
		this.messages[1194]=ResAdviserUpgradeElementQuickErrorMessage;
		this.messages[246]=ResPataFightMessage;
		this.messages[1044]=ResGarrisonTakeRewardMessage;
		this.messages[60]=ResUpdateShopInfoMessage;
		this.messages[1133]=ResEscortRevengeRecordErrorMessage;
		this.messages[350]=ResEscortRevengeMessage;
		this.messages[1592]=ResGetLuckRewardInfoMessage;
		this.messages[386]=ResNineHeavyPlayerRankMessage;
		this.messages[384]=ResNineHeavyChangeStateMessage;
		this.messages[952]=ResEquipIllusionErrorMessage;
		this.messages[162]=ResUpgradePetStarErrorMessage;
		this.messages[1356]=ResLegionBattleUpdateScorePrizeMessage;
		this.messages[1482]=ResEquipPromoteMessage;
		this.messages[224]=ResClickQuanMinBossDungeonErrorMessage;
		this.messages[1642]=ResGetBaoWuRestTimesErrorMessage;
		this.messages[1406]=ResGeneralUpgradeYuanMaiMessage;
		this.messages[1158]=ResFitUpgradeWeaponMessage;
		this.messages[37]=ResCommandErrorMessage;
		this.messages[1683]=ResGetAttributeInfoMessage;
		this.messages[1349]=ResLegionBattleAttackThroneErrorMessage;
		this.messages[892]=ResGetWarTokenRewardErrorMessage;
		this.messages[257]=ResXuanNvFeiShengQiangHuaMessage;
		this.messages[861]=ResTotemSurmountMessage;
		this.messages[1523]=ResGuanQiaInvestmentGetRewardMessageMessage;
		this.messages[1461]=ResFirstDayEndLoginMessage;
		this.messages[1168]=ResTakeFitPrizeErrorMessage;
		this.messages[1624]=ResTreasureActiveErrorMessage;
		this.messages[761]=ResChatHelpErrorMessage;
		this.messages[1638]=ResXuYuanStatusMessage;
		this.messages[1248]=ResGuildMemberValueUpdateMessage;
		this.messages[118]=ResChangeGuanQiaDungeonIDMessage;
		this.messages[410]=ResKejuNowExaminationErrorMessage;
		this.messages[1293]=ResTaskPingDingAnBangPayMessage;
		this.messages[881]=ResTakeActiveGameSystemRewardErrorMessage;
		this.messages[147]=ResTakeShiMenTaskErrorMessage;
		this.messages[172]=ResCommonUpgradeMessage;
		this.messages[758]=ResUseCardErrorMessage;
		this.messages[380]=ResNineHeavyPlayerAttackMessage;
		this.messages[1179]=ResUpdateSkinErrorMessage;
		this.messages[731]=ResLiemingErrorMessage;
		this.messages[1424]=ResLikeVideoMessage;
		this.messages[1317]=ResSceneUpdateDeadMessage;
		this.messages[238]=ResGetXYCMInfoErrorMessage;
		this.messages[1393]=ResRemoveShopMessage;
		this.messages[1173]=ResWorldBossPlayerDeadMessage;
		this.messages[1083]=ResUpdateEscortMessage;
		this.messages[1223]=ResGuildChangePositionErrorMessage;
		this.messages[110]=ResReceiveDungeonPrizeErrorMessage;
		this.messages[1167]=ResTakeFitPrizeMessage;
		this.messages[149]=ResActivePetMessage;
		this.messages[55]=ResCreateViceHeroMessage;
		this.messages[107]=ResUpdateAttributeMessage;
		this.messages[1055]=ResGarrisonSetGuardErrorMessage;
		this.messages[275]=ResArenaBuyTimesMessage;
		this.messages[1426]=ResUpdateAllShopGoodsBuyTimesMessage;
		this.messages[1005]=ResYuanZhengRefreshSkillErrorMessage;
		this.messages[433]=ResTeamDuplicateRoomRewardMessage;
		this.messages[452]=ResSoulBoyLingUpgradeErrorMessage;
		this.messages[1449]=ResOnHookRewardErrorMessage;
		this.messages[1201]=ResFightPositionRemoveErrorMessage;
		this.messages[1681]=ResGetIdeaUpKfQQMessage;
		this.messages[264]=ResReplaceXiLianFaQiErrorMessage;
		this.messages[1547]=ResGoldBasinfulActUpdateMessage;
		this.messages[455]=ResSoulBoyHunUpgradeErrorMessage;
		this.messages[1217]=ResGuildChangeNameErrorMessage;
		this.messages[240]=ResGetYCTTInfoMessage;
		this.messages[389]=ResNineHeavyIntegralRewardMessage;
		this.messages[44]=ResCollectMailMessage;
		this.messages[1306]=ResTaskRemoveMessage;
		this.messages[1415]=ResAuctionStatusChangeMessage;
		this.messages[82]=ResExchangeMijiErrorMessage;
		this.messages[1033]=ResGetXXHJInfoErrorMessage;
		this.messages[845]=ResGeneralActiveErrorMessage;
		this.messages[1342]=ResLegionBattleIntegralRewardErrorMessage;
		this.messages[417]=ResTeamDuplicateRoomForIDErrorMessage;
		this.messages[1330]=ResLegionBattleUpdateSceneCountMessage;
		this.messages[443]=ResSoulBoyActivationErrorMessage;
		this.messages[896]=ResBuyWarTokenLevelErrorMessage;
		this.messages[1371]=ResKejuExaminationRankErrorMessage;
		this.messages[1149]=ResFitUnclockMessage;
		this.messages[1355]=ResSceneChangeErrorMessage;
		this.messages[1422]=ResGetVideosMessage;
		this.messages[1193]=ResAdviserUpgradeElementQuickMessage;
		this.messages[11]=ResCreateMainHeroMessage;
		this.messages[1516]=ResGetWorldBossInfoMessage;
		this.messages[392]=ResChibiStartTaskMessage;
		this.messages[1521]=ResGuanQiaInvestmentBuyBestMessageMessage;
		this.messages[1161]=ResKingWarFightRecordMessage;
		this.messages[1086]=ResEmptyUpdateStateMessage;
		this.messages[579]=ResWearSkinErrorMessage;
		this.messages[258]=ResXuanNvFeiShengQiangHuaErrorMessage;
		this.messages[803]=ResAdviserSurmountErrorMessage;
		this.messages[42]=ResAddMailMessage;
		this.messages[1165]=ResGetPFITInfoErrorMessage;
		this.messages[572]=ResAuctionContendMessage;
		this.messages[1004]=ResYuanZhengRefreshSkillMessage;
		this.messages[267]=ResDuiHuanErrorMessage;
		this.messages[1270]=ResTeamGetAllMessage;
		this.messages[501]=ResWorldBossJoinMessage;
		this.messages[1172]=ResWorldBossAttackPlayerErrorMessage;
		this.messages[1185]=ResGetRechargeInfoMessage;
		this.messages[255]=ResUpdateXuanNvLingZhuangMessage;
		this.messages[340]=ResReceiveEscortRewardMessage;
		this.messages[552]=ResSoulBoyXilianReplaceErrorMessage;
		this.messages[718]=ResLogin37ErrorMessage;
		this.messages[1684]=ResGetAttributeInfoErrorMessage;
		this.messages[152]=ResChangePetNameMessage;
		this.messages[620]=ResLegionUpdateGuardTaskMessageMessage;
		this.messages[727]=ResUpdateJueWeiLevelErrorMessage;
		this.messages[1274]=ResTeamKickMessage;
		this.messages[949]=ResUpGradeEquipErrorMessage;
		this.messages[1284]=ResKingWarFightGetWorshipRewardMessage;
		this.messages[1629]=ResTreasureStarUpMessage;
		this.messages[1558]=ResZhiJianFollowSucErrorMessage;
		this.messages[1220]=ResGuildChangeNoticeErrorMessage;
		this.messages[1333]=ResLegionBattleLeaveErrorMessage;
		this.messages[1651]=ResGetJunTuanInfoErrorMessage;
		this.messages[1536]=ResGetZhuWenInfoMessage;
		this.messages[864]=ResTotemUpgradeMessage;
		this.messages[400]=ResChibiBuyQueueMessage;
		this.messages[165]=ResXiLianPetErrorMessage;
		this.messages[456]=ResNineHeavyGameOverMessage;
		this.messages[576]=ResActivateSkinErrorMessage;
		this.messages[1555]=ResUpdateSpecialActListMessage;
		this.messages[1234]=ResGuildGetAllMessage;
		this.messages[469]=ResSoulBoyXilianErrorMessage;
		this.messages[198]=ResShowOfflinePrizeMessage;
		this.messages[243]=ResTakeCBTPrizeMessage;
		this.messages[155]=ResReplaceXiLianPetMessage;
		this.messages[1095]=ResEmptyCityAttackErrorMessage;
		this.messages[951]=ResEquipIllusionMessage;
		this.messages[1310]=ResSceneInitMessage;
		this.messages[293]=ResYuanZhengGetInfoMessage;
		this.messages[1176]=ResFitSetSkillErrorMessage;
		this.messages[695]=ResHuntMsgMessage;
		this.messages[570]=ResAuctionMonitorMessage;
		this.messages[1679]=ResTeamCreateCDMessage;
		this.messages[1018]=ResAdviserUpgradeTalentErrorMessage;
		this.messages[390]=ResNineHeavyIntegralRewardErrorMessage;
		this.messages[1115]=ResNineHeavyReliveErrorMessage;
		this.messages[1063]=ResGarrisonGerRankErrorMessage;
		this.messages[508]=ResWorldBossLeaveMessage;
		this.messages[404]=ResChibiRefreshTaskErrorMessage;
		this.messages[344]=ResEscortRobberyErrorMessage;
		this.messages[75]=ResUpdateShopGoodsBuyTimesMessage;
		this.messages[1205]=ResGuildApplyErrorMessage;
		this.messages[1581]=ResUpdateGMStateMessage;
		this.messages[760]=ResChatHelpMessage;
		this.messages[1369]=ResLegionBattleUpdateRecordsMessage;
		this.messages[1623]=ResTreasureActiveMessage;
		this.messages[27]=ResUseGoodsErrorMessage;
		this.messages[1021]=ResAdviserUpgradeDestinyErrorMessage;
		this.messages[1374]=ResKejuExitErrorMessage;
		this.messages[196]=ResDuanZaoUpgradeMessage;
		this.messages[351]=ResEscortRevengeErrorMessage;
		this.messages[58]=ResShopBuyMessage;
		this.messages[442]=ResSoulBoyActivationMessage;
		this.messages[290]=ResYuanZhengChallengeMessage;
		this.messages[1381]=ResAuctionUpperErrorMessage;
		this.messages[213]=ResInitQuanMinBossMessage;
		this.messages[1046]=ResGarrisonUpdateRevengesMessage;
		this.messages[1360]=ResGuildUpdateLevelMessage;
		this.messages[541]=ResMarriageGetTeammateSkinErrorMessage;
		this.messages[1262]=ResTeamChangeFightPowerErrorMessage;
		this.messages[844]=ResGeneralActiveMessage;
		this.messages[1106]=ResQuanFuBossBuyTimeErrorMessage;
		this.messages[516]=ResWorldBossRebornMessage;
		this.messages[261]=ResXiLianFaQiErrorMessage;
		this.messages[423]=ResTeamDuplicateRoomLeaveMessage;
		this.messages[1258]=ResTeamApplyReplyMessage;
		this.messages[1448]=ResOnHookRewardMessage;
		this.messages[779]=ResChatKanZhuangBiMessage;
		this.messages[664]=ResLegionLvUpdateMessageMessage;
		this.messages[793]=ResLookPlayerMessage;
		this.messages[1677]=ResGetLeginMemberInfoErrorMessage;
		this.messages[1509]=ResRecommendTaskRewardErrorMessage;
		this.messages[1222]=ResGuildChangePositionMessage;
		this.messages[1590]=ResUsePetBoxErrorMessage;
		this.messages[783]=ResChangeBossOwnerErrorMessage;
		this.messages[235]=ResGetLLBTInfoErrorMessage;
		this.messages[1338]=ResLegionBattleAttackPlayerMessage;
		this.messages[636]=ResLegionSkillUpgradeMessageErrorMessage;
		this.messages[1171]=ResWorldBossAttackPlayerMessage;
		this.messages[1052]=ResGarrisonUpdateGarrisonCountMessage;
		this.messages[223]=ResClickQuanMinBossDungeonMessage;
		this.messages[1236]=ResGuildInitMessage;
		this.messages[1207]=ResGuildApplyReplyMessage;
		this.messages[1094]=ResEmptyCityAttackMessage;
		this.messages[1488]=ResEscortRobberyBackMessage;
		this.messages[1618]=ResselectTowerErrorMessage;
		this.messages[751]=ResYaoQianMessage;
		this.messages[559]=ResMarriageReceiveUpdateMessage;
		this.messages[1619]=ResNotifyArenaOpenMessage;
		this.messages[1039]=ResCommonSynthesisErrorMessage;
		this.messages[394]=ResChibiUpdateMessage;
		this.messages[1465]=ResUpgradeSkinStarErrorMessage;
		this.messages[1244]=ResGuildKickMessage;
		this.messages[1129]=ResArenaGetFightRecordMessage;
		this.messages[726]=ResUpdateJueWeiLevelMessage;
		this.messages[228]=ResReceiveYeWaiBossDungeonPrizeMessage;
		this.messages[1027]=ResAdviserUpgradeWakeUpErrorMessage;
		this.messages[543]=ResMarriageFlowersMessage;
		this.messages[1164]=ResGetPFITInfoMessage;
		this.messages[1383]=ResGarrisonBuyTimesMessage;
		this.messages[1035]=ResTakeXXHJPrizeMessage;
		this.messages[985]=ResUpdateFightPowerMessage;
		this.messages[1226]=ResGuildCreateErrorMessage;
		this.messages[904]=ResCommonWakeUpMessage;
		this.messages[260]=ResXiLianFaQiMessage;
		this.messages[1409]=ResGeneralUpgradeStarMessage;
		this.messages[137]=ResChangeShiMenStarMessage;
		this.messages[266]=ResDuiHuanMessage;
		this.messages[1436]=ResPVPFightStateChangeMessage;
		this.messages[1556]=ResUpdateServerOpenTimeMessage;
		this.messages[623]=ResLegionGuardRewardMessageErrorMessage;
		this.messages[103]=ResUpgradeZhanwenErrorMessage;
		this.messages[150]=ResActivePetErrorMessage;
		this.messages[6]=ResVersionCheckMessage;
		this.messages[419]=ResTeamDuplicateRoomJoinMessage;
		this.messages[1413]=ResGeneralUpgradeWeaponErrorMessage;
		this.messages[1621]=ResQunYingHuiNotifyMessage;
		this.messages[645]=ResLegionSignRewardMessageMessage;
		this.messages[1545]=ResFuLingGetInfoMessage;
		this.messages[1175]=ResFitSetSkillMessage;
		this.messages[1325]=ResLegionBattleHireMessage;
		this.messages[529]=ResMarriageTakeSinglePlayerMessage;
		this.messages[858]=ResTotemActiveMessage;
		this.messages[1152]=ResFitUpdateMasterMessage;
		this.messages[509]=ResWorldBossLeaveErrorMessage;
		this.messages[1446]=ResFightPositionExchangeErrorMessage;
		this.messages[232]=ResGetCBTInfoErrorMessage;
		this.messages[190]=ResUpdatePetAttributeMessage;
		this.messages[1124]=ResHandBookDecomposeErrorMessage;
		this.messages[377]=ResNineHeavyPlayerLeaveMessage;
		this.messages[769]=ResGetVipRewardMessage;
		this.messages[1231]=ResGuildExitMessage;
		this.messages[1036]=ResTakeXXHJPrizeErrorMessage;
		this.messages[56]=ResCreateViceHeroErrorMessage;
		this.messages[1078]=ResGarrisonWorshipMessage;
		this.messages[1141]=ResFitSetParticipantMessage;
		this.messages[536]=ResMarriageOperationProposeMessage;
		this.messages[622]=ResLegionGuardRewardMessageMessage;
		this.messages[30]=ResPutOnEquipErrorMessage;
		this.messages[1085]=ResMarriageUpdateMessage;
		this.messages[1407]=ResGeneralUpgradeYuanMaiErrorMessage;
		this.messages[1553]=ResSuperSupplyActMessage;
		this.messages[496]=ResKingWarBuyCountMessage;
		this.messages[1096]=ResEmptyUpdateCityMessage;
		this.messages[733]=ResUpdateLieMingLevelMessage;
		this.messages[770]=ResGetVipRewardErrorMessage;
		this.messages[288]=ResYuanZhengBuyGoodsErrorMessage;
		this.messages[1259]=ResTeamApplyReplyErrorMessage;
		this.messages[905]=ResCommonWakeUpErrorMessage;
		this.messages[463]=ResNineHeavyUpdateIntegralMessage;
		this.messages[1534]=ResEquipZhuWenErrorMessage;
		this.messages[1047]=ResGarrisonUpdateDoorMessage;
		this.messages[1499]=ResMarriagePataOtherFightSkipMessage;
		this.messages[1249]=ResGuildUpdatePositionMessage;
		this.messages[305]=ResYuanZhengTakePrizeMessage;
		this.messages[1387]=ResGarrisonGetDataErrorMessage;
		this.messages[806]=ResAdviserUpgradeErrorMessage;
		this.messages[562]=ResMarriagePromoteHouseReceiveErrorMessage;
		this.messages[1673]=ResSelectQingWangRewardMessage;
		this.messages[738]=ResRedEnvelopesErrorMessage;
		this.messages[1250]=ResGuildValueUpdateMessage;
		this.messages[47]=ResReadMailMessage;
		this.messages[737]=ResRedEnvelopesMessage;
		this.messages[1608]=ResActTurntableTimesUpdateMessage;
		this.messages[1204]=ResGuildApplyMessage;
		this.messages[554]=ResSoulBoyXilianTranslateMessage;
		this.messages[1298]=ResTaskUpdateMessage;
		this.messages[420]=ResTeamDuplicateRoomJoinErrorMessage;
		this.messages[780]=ResChatKanZhuangBiErrorMessage;
		this.messages[544]=ResMarriageFlowersErrorMessage;
		this.messages[1068]=ResGarrisonRevengeMessage;
		this.messages[397]=ResChibiFinishTaskMessage;
		this.messages[9]=ResHeartBeatMessage;
		this.messages[331]=ResFlushEscortLvErrorMessage;
		this.messages[655]=ResLegionOutSquareMessageErrorMessage;
		this.messages[642]=ResLegionSignMessageMessage;
		this.messages[1062]=ResGarrisonGerRankMessage;
		this.messages[723]=ResAdvancedRewardMessage;
		this.messages[1539]=ResEquipFuLingMessage;
		this.messages[164]=ResXiLianPetMessage;
		this.messages[334]=ResFlushEscortTargetErrorMessage;
		this.messages[231]=ResGetCBTInfoMessage;
		this.messages[1469]=ResQuanMinBossJoinMessage;
		this.messages[112]=ResChallengeGuanQiaMessage;
		this.messages[194]=ResUpdateWildPetMessage;
		this.messages[734]=ResUpdateLieMingLevelErrorMessage;
		this.messages[320]=ResUpgradeOfficialLvErrorMessage;
		this.messages[1607]=ResActTurntableErrorMessage;
		this.messages[1537]=ResGetZhuWenInfoErrorMessage;
		this.messages[337]=ResStartEscortErrorMessage;
		this.messages[1384]=ResGarrisonBuyTimesErrorMessage;
		this.messages[1051]=ResGarrisonChallengeTargetErrorMessage;
		this.messages[640]=ResLegionExchangeItemMessageErrorMessage;
		this.messages[116]=ResReceiveGuanQiaChapterPrizeErrorMessage;
		this.messages[1211]=ResGuildChangeAutoAgreeApplyErrorMessage;
		this.messages[1656]=ResWeekendXuYuanSelectMessage;
		this.messages[578]=ResWearSkinMessage;
		this.messages[1485]=ResEquipSuitActiveMessage;
		this.messages[662]=ResLegionUpdateTeamDuplicateMessageMessage;
		this.messages[690]=ResMarriageUpdateIntimateMessage;
		this.messages[754]=ResLevelUpErrorMessage;
		this.messages[1505]=ResRecommendTaskIntegralRewardMessage;
		this.messages[1279]=ResKingWarGetExtPrizeMessage;
		this.messages[1001]=ResYuanZhengTakeSkillMessage;
		this.messages[1020]=ResAdviserUpgradeDestinyMessage;
		this.messages[1479]=ResEquipMakingStoneMessage;
		this.messages[1603]=ResSelectLuckMessage;
		this.messages[497]=ResKingWarBuyCountErrorMessage;
		this.messages[4]=ResLoginLocalErrorMessage;
		this.messages[646]=ResLegionSignRewardMessageErrorMessage;
		this.messages[472]=ResQunYingHuiSignUpErrorMessage;
		this.messages[1123]=ResHandBookDecomposeMessage;
		this.messages[89]=ResUpdateMijiUsableGridMessage;
		this.messages[1178]=ResUpdateSkinMessage;
		this.messages[851]=ResGeneralUpgradeErrorMessage;
		this.messages[1584]=ResUpdateCommonWarTokenMessage;
		this.messages[672]=ResInvestmengBuyMessageMessage;
		this.messages[1373]=ResKejuExitMessage;
		this.messages[153]=ResChangePetNameErrorMessage;
		this.messages[440]=ResTeamDuplicateSweepAwayErrorMessage;
		this.messages[717]=ResLogin37Message;
		this.messages[1528]=ResZhiJianShareSucMessage;
		this.messages[637]=ResLegionUpdateExchangeMessageMessage;
		this.messages[1396]=ResTuanGouGetInfoMessage;
		this.messages[1148]=ResFitSynthesisErrorMessage;
		this.messages[1540]=ResEquipFuLingErrorMessage;
		this.messages[790]=ResKillEscortTimeMessage;
		this.messages[221]=ResBuyQuanMinBossTimesErrorMessage;
		this.messages[425]=ResTeamDuplicateRoomDissolutionMessage;
		this.messages[409]=ResKejuNowExaminationMessage;
		this.messages[1464]=ResUpgradeSkinStarMessage;
		this.messages[1182]=ResGetHuntInfoErrorMessage;
		this.messages[487]=ResJingMaiUpgradeErrorMessage;
		this.messages[1428]=ResPlayVideoMessage;
		this.messages[527]=ResSoulBoySkillUpgradeMessage;
		this.messages[1181]=ResGetHuntInfoMessage;
		this.messages[1362]=ResUpgradeCommonSkillLevelMessage;
		this.messages[192]=ResTameWildPetMessage;
		this.messages[1599]=ResSelectLoveHeroErrorMessage;
		this.messages[799]=ResAdviserActiveMessage;
		this.messages[721]=ResRechargeErrorMessage;
		this.messages[1029]=ResBuyXXHJChallengeTimeMessage;
		this.messages[537]=ResMarriageOperationProposeErrorMessage;
		this.messages[354]=ResEscortRevengeRewardErrorMessage;
		this.messages[742]=ResGetFuLiRewardErrorMessage;
		this.messages[1490]=ResUpdateNewJueWeiLevelMessage;
		this.messages[1308]=ResTaskGuildSquareResetMessage;
		this.messages[1065]=ResGarrisonGetOverLoadMessage;
		this.messages[665]=ResLegionUpdateMoneyMessageMessage;
		this.messages[518]=ResWorldBossUpdateRankMessage;
		this.messages[1139]=ResFitSetEquipGemErrorMessage;
		this.messages[1069]=ResGarrisonRevengeErrorMessage;
		this.messages[1032]=ResGetXXHJInfoMessage;
		this.messages[465]=ResSoulBoySynthesisMessage;
		this.messages[1339]=ResLegionBattleAttackPlayerErrorMessage;
		this.messages[461]=ResSoulBoyDestinyMessage;
		this.messages[1285]=ResKingWarFightGetWorshipRewardErrorMessage;
		this.messages[1678]=ResLeginUpdateMessageMessage;
		this.messages[1661]=ResArmyForHelpMessage;
		this.messages[93]=ResUpgradeSkillErrorMessage;
		this.messages[102]=ResUpgradeZhanwenMessage;
		this.messages[1404]=ResGeneralUpgradeJueWuErrorMessage;
		this.messages[1577]=ResActScoreUpdateMessage;
		this.messages[974]=ResPutOnGodClothesErrorMessage;
		this.messages[374]=ResNineHeavyOtherPlayerJoinMessage;
		this.messages[1156]=ResFitUpgradePositionErrorMessage;
		this.messages[1323]=ResLegionBattleGameOverMessage;
		this.messages[1162]=ResKingWarFightRecordErrorMessage;
		this.messages[785]=ResupdateVipLevelMessage;
		this.messages[1198]=ResFightPositionAddErrorMessage;
		this.messages[1030]=ResBuyXXHJChallengeTimeErrorMessage;
		this.messages[407]=ResChibiBuyTodayErrorMessage;
		this.messages[1403]=ResGeneralUpgradeJueWuMessage;
		this.messages[1674]=ResSelectQingWangRewardErrorMessage;
		this.messages[328]=ResResetOfficialMessage;
		this.messages[1319]=ResLegionBattleUpdateMinionRankMessage;
		this.messages[214]=ResUpdateQuanMinBossMessage;
		this.messages[1313]=ResSceneRemoveMessage;
		this.messages[791]=ResKillEscortTimeErrorMessage;
		this.messages[1432]=ResRefreshMystersiousShopErrorMessage;
		this.messages[763]=ResChatHelpRewardMessage;
		this.messages[619]=ResLegionUpdateGuardMessageMessage;
		this.messages[1451]=ResOnHookRewardInfoMessage;
		this.messages[217]=ResReceiveQuanMinBossDungeonPrizeMessage;
		this.messages[431]=ResTeamDuplicateRoomStartFightErrorMessage;
		this.messages[776]=ResChatZhuangBiMessage;
		this.messages[880]=ResTakeActiveGameSystemRewardMessage;
		this.messages[1321]=ResLegionBattleAttackDoorMessage;
		this.messages[673]=ResInvestmengBuyMessageErrorMessage;
		this.messages[1242]=ResGuildInviteReplyErrorMessage;
		this.messages[1462]=ResBuyWarTokenSucessMessage;
		this.messages[297]=ResYuanZhengReliveErrorMessage;
		this.messages[502]=ResWorldBossJoinErrorMessage;
		this.messages[7]=ResVersionCheckErrorMessage;
		this.messages[749]=ResUpdateWelfareMessage;
		this.messages[1126]=ResHandBookUpStarMessage;
		this.messages[41]=ResUpdateGameSystemStatusMessage;
		this.messages[1452]=ResYuanZhengUpdateFightSettingMessage;
		this.messages[999]=ResFightTestMessage;
		this.messages[29]=ResPutOnEquipMessage;
		this.messages[398]=ResChibiFinishTaskErrorMessage;
		this.messages[1142]=ResFitSetParticipantErrorMessage;
		this.messages[1352]=ResLegionBattleUpdateBossRankMessage;
		this.messages[1377]=ResAuctionAttentionErrorMessage;
		this.messages[1344]=ResLegionBattleAttackMonsterMessage;
		this.messages[474]=ResQunYingHuiSignUpRecordMessage;
		this.messages[1458]=ResFastOnHookRewardInfoMessage;
		this.messages[1351]=ResLegionBattleGetStateMessage;
		this.messages[346]=ResEscortRobberyRewardMessage;
		this.messages[1529]=ResZhiJianShareSucErrorMessage;
		this.messages[1088]=ResEmptyGetDataMessage;
		this.messages[299]=ResYuanZhengResetMessage;
		this.messages[1303]=ResTaskGuildSquarePayMessage;
		this.messages[421]=ResTeamDuplicateRoomOtherJoinMessage;
		this.messages[1524]=ResGuanQiaInvestmentGetRewardMessageErrorMessage;
		this.messages[333]=ResFlushEscortTargetMessage;
		this.messages[367]=ResNineHeavyPlayerJoinErrorMessage;
		this.messages[187]=ResUpgradeHeroSkillMessage;
		this.messages[26]=ResUseGoodsMessage;
		this.messages[480]=ResTeamDuplicateRoomKickErrorMessage;
		this.messages[1435]=ResNineHeavyUpdateOhterIntegralMessage;
		this.messages[1357]=ResLegionBattleGetLegalKingGuildErrorMessage;
		this.messages[218]=ResReceiveQuanMinBossDungeonPrizeErrorMessage;
		this.messages[327]=ResReceiveOfficialYesterdayRewardErrorMessage;
		this.messages[878]=ResTeamDuplicateUpdateMessage;
		this.messages[1280]=ResKingWarGetExtPrizeErrorMessage;
		this.messages[140]=ResGetShiMenInfoMessage;
		this.messages[884]=ResCommonIllusionMessage;
		this.messages[168]=ResActivePetGroupErrorMessage;
		this.messages[48]=ResReadMailErrorMessage;
		this.messages[1627]=ResTreasurePyErrorMessage;
		this.messages[1456]=ResFastOnHookRewardErrorMessage;
		this.messages[92]=ResUpgradeSkillMessage;
		this.messages[549]=ResMarriageGiftErrorMessage;
		this.messages[505]=ResWorldBossMoveMessage;
		this.messages[1437]=ResNineHeavyFightResultMessage;
		this.messages[1155]=ResFitUpgradePositionMessage;
		this.messages[885]=ResCommonIllusionErrorMessage;
		this.messages[1026]=ResAdviserUpgradeWakeUpMessage;
		this.messages[1614]=ResTowerFightMessage;
		this.messages[272]=ResRankMoBaiMessage;
		this.messages[1147]=ResFitSynthesisMessage;
		this.messages[1301]=ResTaskGuildSquareTakePrizeErrorMessage;
		this.messages[648]=ResLegionIntoSquareMessageMessage;
		this.messages[1239]=ResGuildInviteErrorMessage;
		this.messages[499]=ResKingWarGetRankMessage;
		this.messages[1121]=ResHandBookActivateErrorMessage;
		this.messages[338]=ResFinishEscortMessage;
		this.messages[209]=ResDisposeEquipMessage;
		this.messages[395]=ResChibiUpdateTodayMessage;
		this.messages[624]=ResLegionUpdateShopMessageMessage;
		this.messages[1191]=ResUpgradePetSkillErrorMessage;
		this.messages[247]=ResPataFightErrorMessage;
		this.messages[876]=ResChatNeedHelpErrorMessage;
		this.messages[1246]=ResGuildMemberAddMessage;
		this.messages[210]=ResDisposeEquipErrorMessage;
		this.messages[281]=ResArenaGetInfoMessage;
		this.messages[682]=ResUpdateExchangeGoodsMessage;
		this.messages[533]=ResMarriageProposeErrorMessage;
		this.messages[269]=ResGetRankInfoMessage;
		this.messages[1113]=ResEmptyGetBattleRecordErrorMessage;
		this.messages[1261]=ResTeamChangeFightPowerMessage;
		this.messages[311]=ResSettingMessage;
		this.messages[459]=ResSoulBoyTaletUpgradeErrorMessage;
		this.messages[515]=ResWorldBossAttackResultErrorMessage;
		this.messages[886]=ResWorldBossChangeStateMessage;
		this.messages[341]=ResReceiveEscortRewardErrorMessage;
		this.messages[679]=ResInvestmengTaskRewardMessageErrorMessage;
		this.messages[699]=ResHuntStartMessage;
		this.messages[663]=ResVipUpdateMessage;
		this.messages[1583]=ResGetCommonWarTokenRewardErrorMessage;
		this.messages[1268]=ResTeamExitErrorMessage;
		this.messages[276]=ResArenaBuyTimesErrorMessage;
		this.messages[1138]=ResFitSetEquipGemMessage;
		this.messages[1075]=ResGarrisonUpgradeMessage;
		this.messages[323]=ResReceiveOfficialBoxMessage;
		this.messages[1136]=ResFitSetEquipErrorMessage;
		this.messages[1519]=ResWxRechargeMessage;
		this.messages[430]=ResTeamDuplicateRoomStartFightMessage;
		this.messages[715]=ResUpdateExchangeCountMessage;
		this.messages[1626]=ResTreasurePyMessage;
		this.messages[720]=ResRechargeMessage;
		this.messages[1275]=ResTeamKickErrorMessage;
		this.messages[989]=ResSendNoticeMessage;
		this.messages[948]=ResUpGradeEquipMessage;
		this.messages[237]=ResGetXYCMInfoMessage;
		this.messages[859]=ResTotemActiveErrorMessage;
		this.messages[1245]=ResGuildKickErrorMessage;
		this.messages[115]=ResReceiveGuanQiaChapterPrizeMessage;
		this.messages[847]=ResGeneralSurmountMessage;
		this.messages[564]=ResMarriageRenovationHouseMessage;
		this.messages[1309]=ResTaskGuildSquareResetErrorMessage;
		this.messages[752]=ResYaoQianErrorMessage;
		this.messages[984]=ResUpdateRobotMessage;
		this.messages[534]=ResMarriageUpdateProposeMessage;
		this.messages[1657]=ResWeekendXuYuanSelectErrorMessage;
		this.messages[1667]=ResMeiWuHuntMessage;
		this.messages[735]=ResUpdateLieMingLevelSucessMessage;
		this.messages[296]=ResYuanZhengReliveMessage;
		this.messages[800]=ResAdviserActiveErrorMessage;
		this.messages[201]=ResDisposeErrorMessage;
		this.messages[1150]=ResFitUpdateArtMessage;
		this.messages[796]=ResLoginForTypeMessage;
		this.messages[582]=ResSoulBoyAttributeUpdateMessage;
		this.messages[788]=ResKejuExaminationRankMessage;
		this.messages[1017]=ResAdviserUpgradeTalentMessage;
		this.messages[1241]=ResGuildInviteReplyMessage;
		this.messages[494]=ResKingWarFightRewardErrorMessage;
		this.messages[161]=ResUpgradePetStarMessage;
		this.messages[850]=ResGeneralUpgradeMessage;
		this.messages[1315]=ResSceneMoveMessage;
		this.messages[220]=ResBuyQuanMinBossTimesMessage;
		this.messages[654]=ResLegionOutSquareMessageMessage;
		this.messages[1316]=ResSceneMoveErrorMessage;
		this.messages[548]=ResMarriageGiftMessage;
		this.messages[263]=ResReplaceXiLianFaQiMessage;
		this.messages[406]=ResChibiBuyTodayMessage;
		this.messages[1442]=ResOtherPlayerFightTeamMessage;
		this.messages[1050]=ResGarrisonChallengeTargetMessage;
		this.messages[1073]=ResGarrisonUpdateRewardMessage;
		this.messages[364]=ResNineHeavyMonsterFlushMessage;
		this.messages[1434]=ResHandBookFastUpStarMessage;
		this.messages[1378]=ResAuctionAttentionNotifyMessage;
		this.messages[1501]=ResGetMarryPataInfoMessage;
		this.messages[15]=ResEquipPacketAddCapacityErrorMessage;
		this.messages[324]=ResReceiveOfficialBoxErrorMessage;
		this.messages[253]=ResTakeYCTTPrizeErrorMessage;
		this.messages[109]=ResReceiveDungeonPrizeMessage;
		this.messages[1054]=ResGarrisonSetGuardMessage;
		this.messages[856]=ResSaveLastQuenchingAttrMessage;
		this.messages[403]=ResChibiRefreshTaskMessage;
		this.messages[1329]=ResLegionBattleUpdateThroneMessage;
		this.messages[774]=ResLegionHireMessageErrorMessage;
		this.messages[241]=ResGetYCTTInfoErrorMessage;
		this.messages[1023]=ResAdviserUpgradeElementMessage;
		this.messages[462]=ResSoulBoyDestinyErrorMessage;
		this.messages[797]=ResLoginForTypeErrorMessage;
		this.messages[1410]=ResGeneralUpgradeStarErrorMessage;
		this.messages[387]=ResNineHeavyPlayerRankErrorMessage;
		this.messages[1591]=ResUpdateXuanNvSkillMessage;
		this.messages[1445]=ResFightPositionExchangeMessage;
		this.messages[675]=ResInvestmengUpdateTaskMessageMessage;
		this.messages[379]=ResNineHeavyPlayerMoveMessage;
		this.messages[1066]=ResGarrisonGetOverLoadErrorMessage;
		this.messages[1082]=ResGetAdvancedInfoMessage;
		this.messages[1089]=ResEmptyGetDataErrorMessage;
		this.messages[1071]=ResGarrisonTakeWeekRewardMessage;
		this.messages[678]=ResInvestmengTaskRewardMessageMessage;
		this.messages[393]=ResChibiStartTaskErrorMessage;
		this.messages[1100]=ResEmptyCityPayColdErrorMessage;
		this.messages[1630]=ResTreasureStarUpErrorMessage;
		this.messages[383]=ResNineHeavyPlayerAttackResultErrorMessage;
		this.messages[1589]=ResUsePetBoxMessage;
		this.messages[188]=ResUpgradeHeroSkillErrorMessage;
		this.messages[689]=ResChatMessage;
		this.messages[381]=ResNineHeavyPlayerAttackErrorMessage;
		this.messages[1024]=ResAdviserUpgradeElementErrorMessage;
		this.messages[1604]=ResSelectLuckErrorMessage;
		this.messages[681]=ResLegionFlushExchangeItemMessageErrorMessage;
		this.messages[451]=ResSoulBoyLingUpgradeMessage;
		this.messages[105]=ResReduceLevelMessage;
		this.messages[1598]=ResSelectLoveHeroMessage;
		this.messages[1247]=ResGuildMemberRemoveMessage;
		this.messages[414]=ResKejuAnswerExaminationErrorMessage;
		this.messages[306]=ResYuanZhengTakePrizeErrorMessage;
		this.messages[244]=ResTakeCBTPrizeErrorMessage;
		this.messages[538]=ResMarriageSuccessMessage;
		this.messages[1328]=ResLegionBattleGetLegalKingGuildMessage;
		this.messages[156]=ResReplaceXiLianPetErrorMessage;
		this.messages[1654]=ResWeekendXuYuanGetErrorMessage;
		this.messages[685]=ResSoulBoyDrugItemMessage;
		this.messages[1520]=ResWxRechargeErrorMessage;
		this.messages[1105]=ResQuanFuBossBuyTimeMessage;
		this.messages[225]=ResInitYeWaiBossMessage;
		this.messages[1300]=ResTaskGuildSquareTakePrizeMessage;
		this.messages[773]=ResLegionHireMessageMessage;
		this.messages[229]=ResReceiveYeWaiBossDungeonPrizeErrorMessage;
		this.messages[1015]=ResUpdateHuoDongNumMessage;
		this.messages[85]=ResLockMijiErrorMessage;
		this.messages[1670]=ResQinWangTeGongMessage;
		this.messages[581]=ResWorldBossDetailMessage;
		this.messages[1127]=ResHandBookUpStarErrorMessage;
		this.messages[1109]=ResQuanFuBossGetInfoErrorMessage;
		this.messages[1072]=ResGarrisonTakeWeekRewardErrorMessage;
		this.messages[135]=ResChallengeShiMenErrorMessage;
		this.messages[1390]=ResQunYingHuiGetFightInfoErrorMessage;
		this.messages[1508]=ResRecommendTaskRewardMessage;
		this.messages[714]=ResUpdateRechargeMessage;
		this.messages[1380]=ResAuctionUpperMessage;
		this.messages[458]=ResSoulBoyTaletUpgradeMessage;
		this.messages[348]=ResEscortRobbedMessage;
		this.messages[650]=ResLegionOtherIntoSquareMessageMessage;
		this.messages[506]=ResWorldBossMoveErrorMessage;
		this.messages[1430]=ResMysteriousShopMessage;
		this.messages[106]=ResReduceLevelErrorMessage;
		this.messages[1550]=ResGoldDoubleActErrorMessage;
		this.messages[1546]=ResFuLingGetInfoErrorMessage;
		this.messages[1335]=ResLegionBattlePayRebornMessage;
		this.messages[1506]=ResRecommendTaskIntegralRewardErrorMessage;
		this.messages[1400]=ResTuanGouTakePrizeErrorMessage;
		this.messages[478]=ResQunYingHuiBetErrorMessage;
		this.messages[1363]=ResUpgradeCommonSkillLevelErrorMessage;
		this.messages[1551]=ResGoldDoubleActUpdateMessage;
		this.messages[270]=ResGetRankInfoErrorMessage;
		this.messages[1272]=ResTeamInitMessage;
		this.messages[1232]=ResGuildExitErrorMessage;
		this.messages[744]=ResGetYaoQianRewardAdditionallyMessage;
		this.messages[1486]=ResEquipSuitActiveErrorMessage;
		this.messages[1549]=ResGoldDoubleActMessage;
		this.messages[567]=ResMarriageRdivorceMessage;
		this.messages[1190]=ResUpgradePetSkillMessage;
		this.messages[1187]=ResNineHeavyDeadMessage;
		this.messages[1439]=ResFirePetMessage;
		this.messages[36]=ResCommandMessage;
		this.messages[284]=ResArenaGetRankInfoMessage;
		this.messages[336]=ResStartEscortMessage;
		this.messages[1288]=ResPVPFightOverUnlockErrorMessage;
		this.messages[1336]=ResLegionBattlePayRebornErrorMessage;
		this.messages[1311]=ResSceneUpdatePositionMessage;
		this.messages[1417]=ResFitGemUpgradeMessage;
		this.messages[676]=ResInvestmengUpdateTaskMessageErrorMessage;
		this.messages[294]=ResYuanZhengGetInfoErrorMessage;
		this.messages[1216]=ResGuildChangeNameMessage;
		this.messages[1397]=ResTuanGouGetInfoErrorMessage;
		this.messages[1341]=ResLegionBattleIntegralRewardMessage;
		this.messages[51]=ResZhuanShengMessage;
		this.messages[1108]=ResQuanFuBossGetInfoMessage;
		this.messages[326]=ResReceiveOfficialYesterdayRewardMessage;
		this.messages[1664]=ResRechargeTurntableMessage;
		this.messages[1576]=ResGetTimeInfoErrorMessage;
		this.messages[1153]=ResFitUpdateSkillMessage;
		this.messages[159]=ResUpgradePetLevelErrorMessage;
		this.messages[1359]=ResLegionBattleUpdateThroneRankMessage;
		this.messages[215]=ResUpdateQuanMinBossTimesMessage;
		this.messages[1238]=ResGuildInviteMessage;
		this.messages[757]=ResUseCardMessage;
		this.messages[1346]=ResLegionBattleColdMessage;
		this.messages[1399]=ResTuanGouTakePrizeMessage;
		this.messages[330]=ResFlushEscortLvMessage;
		this.messages[514]=ResWorldBossAttackResultMessage;
		this.messages[401]=ResChibiBuyQueueErrorMessage;
		this.messages[1208]=ResGuildApplyReplyErrorMessage;
		this.messages[1228]=ResGuildDismissMessage;
		this.messages[471]=ResQunYingHuiSignUpMessage;
		this.messages[512]=ResWorldBossAttackErrorMessage;
		this.messages[741]=ResGetFuLiRewardMessage;
		this.messages[87]=ResSetMijiMessage;
		this.messages[891]=ResGetWarTokenRewardMessage;
		this.messages[635]=ResLegionSkillUpgradeMessageMessage;
		this.messages[540]=ResMarriageGetTeammateSkinMessage;
		this.messages[1076]=ResGarrisonUpgradeErrorMessage;
		this.messages[728]=ResGetXiYouMingGeMessage;
		this.messages[1460]=ResUpdateVipFreeSkipRoundMessage;
		this.messages[300]=ResYuanZhengResetErrorMessage;
		this.messages[428]=ResTeamDuplicateRoomCloseFullErrorMessage;
		this.messages[1615]=ResTowerFightErrorMessage;
		this.messages[291]=ResYuanZhengChallengeErrorMessage;
		this.messages[1151]=ResFitUpdateEquipLockMessage;
		this.messages[119]=ResChangeGuanQiaDungeonIDErrorMessage;
		this.messages[777]=ResChatZhuangBiErrorMessage;
		this.messages[189]=ResUpdateAttributeGoodsMessage;
		this.messages[730]=ResLiemingMessage;
		this.messages[1332]=ResLegionBattleLeaveMessage;
		this.messages[366]=ResNineHeavyPlayerJoinMessage;
		this.messages[1002]=ResYuanZhengTakeSkillErrorMessage;
		this.messages[686]=ResSoulBoyDrugItemErrorMessage;
		this.messages[279]=ResArenaChallengeErrorMessage;
		this.messages[1365]=ResTeamSkipMessage;
		this.messages[1514]=ResGetVideoFightDataMessage;
		this.messages[1645]=ResZhunDianErrorMessage;
		this.messages[532]=ResMarriageProposeMessage;
		this.messages[1517]=ResGetWorldBossInfoErrorMessage;
		this.messages[1653]=ResWeekendXuYuanGetMessage;
		this.messages[1392]=ResRankUpdateActivitiesMessage;
		this.messages[1229]=ResGuildDismissErrorMessage;
		this.messages[546]=ResMarriageWeddingInvitationMessage;
		this.messages[368]=ResNineHeavyPlayerUpstairsMessage;
		this.messages[1276]=ResTeamMemberAddMessage;
		this.messages[1632]=ResBuyHuntTreasureMessage;
		this.messages[21]=ResUpdateValueMessage;
		this.messages[561]=ResMarriagePromoteHouseReceiveMessage;
		this.messages[1659]=ResTongShuaiJinJianMessage;
		this.messages[343]=ResEscortRobberyMessage;
		this.messages[565]=ResMarriageRenovationHouseErrorMessage;
		this.messages[745]=ResGetYaoQianRewardAdditionallyErrorMessage;
		this.messages[146]=ResTakeShiMenTaskMessage;
		this.messages[511]=ResWorldBossAttackMessage;
		this.messages[633]=ResLegionGuardUpgradeMessageErrorMessage;
		this.messages[1197]=ResFightPositionAddMessage;
		this.messages[503]=ResWorldBossOtherJoinMessage;
		this.messages[1580]=ResLimitWuJiangHuntActErrorMessage;
		this.messages[1079]=ResGarrisonWorshipErrorMessage;
		this.messages[1575]=ResGetTimeInfoMessage;
		this.messages[895]=ResBuyWarTokenLevelMessage;
		this.messages[971]=ResWorldBossAttackBattleDataMessage;
		this.messages[437]=ResTeamDuplicateGetFirstClearanceErrorMessage;
		this.messages[1358]=ResTeamMemberPositionUpdateMessage;
		this.messages[1637]=ResXuYuanErrorMessage;
		this.messages[1620]=ResSendGuildExitTimeMessage;
		this.messages[632]=ResLegionGuardUpgradeMessageMessage;
		this.messages[1471]=ResQuanMinBossLeaveMessage;
		this.messages[234]=ResGetLLBTInfoMessage;
	}

	__class(MessagePool,'net.MessagePool');
	var __proto=MessagePool.prototype;
	__proto.message=function(id){
		return this.messages[id]==null ? null :new this.messages [id];
	}

	return MessagePool;
})()


/**Created by FreeMarker. DO NOT EDIT!!! */
//class net.MessageVersion
var MessageVersion=(function(){
	function MessageVersion(){}
	__class(MessageVersion,'net.MessageVersion');
	MessageVersion.VERSION="2fd8b2a801e5242c0b4c955f460a1547";
	return MessageVersion;
})()


/**Created by FreeMarker. DO NOT EDIT!!! */
//class net.HandlerPool
var HandlerPool=(function(){
	function HandlerPool(){
		this.handlers={};
		this.handlers[1]=ResKickHandler;
		this.handlers[1142]=ResFitSetParticipantErrorHandler;
		this.handlers[1403]=ResGeneralUpgradeJueWuHandler;
		this.handlers[1359]=ResLegionBattleUpdateThroneRankHandler;
		this.handlers[93]=ResUpgradeSkillErrorHandler;
		this.handlers[891]=ResGetWarTokenRewardHandler;
		this.handlers[237]=ResGetXYCMInfoHandler;
		this.handlers[572]=ResAuctionContendHandler;
		this.handlers[1179]=ResUpdateSkinErrorHandler;
		this.handlers[1619]=ResNotifyArenaOpenHandler;
		this.handlers[341]=ResReceiveEscortRewardErrorHandler;
		this.handlers[1211]=ResGuildChangeAutoAgreeApplyErrorHandler;
		this.handlers[622]=ResLegionGuardRewardMessageHandler;
		this.handlers[1001]=ResYuanZhengTakeSkillHandler;
		this.handlers[695]=ResHuntMsgHandler;
		this.handlers[1151]=ResFitUpdateEquipLockHandler;
		this.handlers[1413]=ResGeneralUpgradeWeaponErrorHandler;
		this.handlers[276]=ResArenaBuyTimesErrorHandler;
		this.handlers[689]=ResChatHandler;
		this.handlers[1580]=ResLimitWuJiangHuntActErrorHandler;
		this.handlers[414]=ResKejuAnswerExaminationErrorHandler;
		this.handlers[1539]=ResEquipFuLingHandler;
		this.handlers[368]=ResNineHeavyPlayerUpstairsHandler;
		this.handlers[1159]=ResFitUpgradeWeaponErrorHandler;
		this.handlers[1575]=ResGetTimeInfoHandler;
		this.handlers[1112]=ResEmptyGetBattleRecordHandler;
		this.handlers[1617]=ResselectTowerHandler;
		this.handlers[431]=ResTeamDuplicateRoomStartFightErrorHandler;
		this.handlers[1439]=ResFirePetHandler;
		this.handlers[733]=ResUpdateLieMingLevelHandler;
		this.handlers[543]=ResMarriageFlowersHandler;
		this.handlers[215]=ResUpdateQuanMinBossTimesHandler;
		this.handlers[407]=ResChibiBuyTodayErrorHandler;
		this.handlers[1044]=ResGarrisonTakeRewardHandler;
		this.handlers[505]=ResWorldBossMoveHandler;
		this.handlers[714]=ResUpdateRechargeHandler;
		this.handlers[428]=ResTeamDuplicateRoomCloseFullErrorHandler;
		this.handlers[503]=ResWorldBossOtherJoinHandler;
		this.handlers[1426]=ResUpdateAllShopGoodsBuyTimesHandler;
		this.handlers[1150]=ResFitUpdateArtHandler;
		this.handlers[162]=ResUpgradePetStarErrorHandler;
		this.handlers[509]=ResWorldBossLeaveErrorHandler;
		this.handlers[434]=ResTeamDuplicateRoomRewardErrorHandler;
		this.handlers[1002]=ResYuanZhengTakeSkillErrorHandler;
		this.handlers[1529]=ResZhiJianShareSucErrorHandler;
		this.handlers[193]=ResTameWildPetErrorHandler;
		this.handlers[1282]=ResKingWarFightGetWorshipInfoHandler;
		this.handlers[1629]=ResTreasureStarUpHandler;
		this.handlers[153]=ResChangePetNameErrorHandler;
		this.handlers[780]=ResChatKanZhuangBiErrorHandler;
		this.handlers[788]=ResKejuExaminationRankHandler;
		this.handlers[366]=ResNineHeavyPlayerJoinHandler;
		this.handlers[1207]=ResGuildApplyReplyHandler;
		this.handlers[1642]=ResGetBaoWuRestTimesErrorHandler;
		this.handlers[1555]=ResUpdateSpecialActListHandler;
		this.handlers[1636]=ResXuYuanHandler;
		this.handlers[1054]=ResGarrisonSetGuardHandler;
		this.handlers[167]=ResActivePetGroupHandler;
		this.handlers[152]=ResChangePetNameHandler;
		this.handlers[1377]=ResAuctionAttentionErrorHandler;
		this.handlers[1503]=ResRecommendIntegralUpdateHandler;
		this.handlers[1328]=ResLegionBattleGetLegalKingGuildHandler;
		this.handlers[430]=ResTeamDuplicateRoomStartFightHandler;
		this.handlers[1052]=ResGarrisonUpdateGarrisonCountHandler;
		this.handlers[1512]=ResTeamMarryLeaveHandler;
		this.handlers[1480]=ResEquipMakingStoneErrorHandler;
		this.handlers[1139]=ResFitSetEquipGemErrorHandler;
		this.handlers[678]=ResInvestmengTaskRewardMessageHandler;
		this.handlers[355]=ResFlushEscortDayEndHandler;
		this.handlers[423]=ResTeamDuplicateRoomLeaveHandler;
		this.handlers[263]=ResReplaceXiLianFaQiHandler;
		this.handlers[98]=ResReplaceZhanwenHandler;
		this.handlers[462]=ResSoulBoyDestinyErrorHandler;
		this.handlers[1620]=ResSendGuildExitTimeHandler;
		this.handlers[220]=ResBuyQuanMinBossTimesHandler;
		this.handlers[848]=ResGeneralSurmountErrorHandler;
		this.handlers[1528]=ResZhiJianShareSucHandler;
		this.handlers[442]=ResSoulBoyActivationHandler;
		this.handlers[1681]=ResGetIdeaUpKfQQHandler;
		this.handlers[1083]=ResUpdateEscortHandler;
		this.handlers[718]=ResLogin37ErrorHandler;
		this.handlers[1469]=ResQuanMinBossJoinHandler;
		this.handlers[1181]=ResGetHuntInfoHandler;
		this.handlers[401]=ResChibiBuyQueueErrorHandler;
		this.handlers[886]=ResWorldBossChangeStateHandler;
		this.handlers[1632]=ResBuyHuntTreasureHandler;
		this.handlers[1390]=ResQunYingHuiGetFightInfoErrorHandler;
		this.handlers[1667]=ResMeiWuHuntHandler;
		this.handlers[1603]=ResSelectLuckHandler;
		this.handlers[296]=ResYuanZhengReliveHandler;
		this.handlers[1173]=ResWorldBossPlayerDeadHandler;
		this.handlers[1152]=ResFitUpdateMasterHandler;
		this.handlers[794]=ResLookPlayerErrorHandler;
		this.handlers[1014]=ResZhiZhunBossGetInfoHandler;
		this.handlers[1276]=ResTeamMemberAddHandler;
		this.handlers[1358]=ResTeamMemberPositionUpdateHandler;
		this.handlers[864]=ResTotemUpgradeHandler;
		this.handlers[41]=ResUpdateGameSystemStatusHandler;
		this.handlers[1106]=ResQuanFuBossBuyTimeErrorHandler;
		this.handlers[1201]=ResFightPositionRemoveErrorHandler;
		this.handlers[951]=ResEquipIllusionHandler;
		this.handlers[952]=ResEquipIllusionErrorHandler;
		this.handlers[1558]=ResZhiJianFollowSucErrorHandler;
		this.handlers[770]=ResGetVipRewardErrorHandler;
		this.handlers[172]=ResCommonUpgradeHandler;
		this.handlers[758]=ResUseCardErrorHandler;
		this.handlers[878]=ResTeamDuplicateUpdateHandler;
		this.handlers[734]=ResUpdateLieMingLevelErrorHandler;
		this.handlers[1665]=ResRechargeTurntableErrorHandler;
		this.handlers[973]=ResPutOnGodClothesHandler;
		this.handlers[1249]=ResGuildUpdatePositionHandler;
		this.handlers[1133]=ResEscortRevengeRecordErrorHandler;
		this.handlers[1387]=ResGarrisonGetDataErrorHandler;
		this.handlers[1099]=ResEmptyCityPayColdHandler;
		this.handlers[200]=ResDisposeHandler;
		this.handlers[1088]=ResEmptyGetDataHandler;
		this.handlers[1677]=ResGetLeginMemberInfoErrorHandler;
		this.handlers[1294]=ResTaskPingDingAnBangPayErrorHandler;
		this.handlers[665]=ResLegionUpdateMoneyMessageHandler;
		this.handlers[1651]=ResGetJunTuanInfoErrorHandler;
		this.handlers[294]=ResYuanZhengGetInfoErrorHandler;
		this.handlers[421]=ResTeamDuplicateRoomOtherJoinHandler;
		this.handlers[723]=ResAdvancedRewardHandler;
		this.handlers[1156]=ResFitUpgradePositionErrorHandler;
		this.handlers[1216]=ResGuildChangeNameHandler;
		this.handlers[1105]=ResQuanFuBossBuyTimeHandler;
		this.handlers[15]=ResEquipPacketAddCapacityErrorHandler;
		this.handlers[1499]=ResMarriagePataOtherFightSkipHandler;
		this.handlers[752]=ResYaoQianErrorHandler;
		this.handlers[799]=ResAdviserActiveHandler;
		this.handlers[1352]=ResLegionBattleUpdateBossRankHandler;
		this.handlers[1261]=ResTeamChangeFightPowerHandler;
		this.handlers[413]=ResKejuAnswerExaminationHandler;
		this.handlers[865]=ResTotemUpgradeErrorHandler;
		this.handlers[1611]=ResEnterTowerHandler;
		this.handlers[1369]=ResLegionBattleUpdateRecordsHandler;
		this.handlers[1486]=ResEquipSuitActiveErrorHandler;
		this.handlers[225]=ResInitYeWaiBossHandler;
		this.handlers[508]=ResWorldBossLeaveHandler;
		this.handlers[690]=ResMarriageUpdateIntimateHandler;
		this.handlers[398]=ResChibiFinishTaskErrorHandler;
		this.handlers[974]=ResPutOnGodClothesErrorHandler;
		this.handlers[285]=ResArenaGetRankInfoErrorHandler;
		this.handlers[1428]=ResPlayVideoHandler;
		this.handlers[745]=ResGetYaoQianRewardAdditionallyErrorHandler;
		this.handlers[246]=ResPataFightHandler;
		this.handlers[478]=ResQunYingHuiBetErrorHandler;
		this.handlers[1072]=ResGarrisonTakeWeekRewardErrorHandler;
		this.handlers[79]=ResUpdateLevelHandler;
		this.handlers[299]=ResYuanZhengResetHandler;
		this.handlers[1171]=ResWorldBossAttackPlayerHandler;
		this.handlers[530]=ResMarriageTakeSinglePlayerErrorHandler;
		this.handlers[697]=ResHuntRecordHandler;
		this.handlers[197]=ResDuanZaoUpgradeErrorHandler;
		this.handlers[1076]=ResGarrisonUpgradeErrorHandler;
		this.handlers[1595]=ResAwakePetErrorHandler;
		this.handlers[344]=ResEscortRobberyErrorHandler;
		this.handlers[579]=ResWearSkinErrorHandler;
		this.handlers[861]=ResTotemSurmountHandler;
		this.handlers[1434]=ResHandBookFastUpStarHandler;
		this.handlers[212]=ResUpdateDungeonTodayTimesHandler;
		this.handlers[755]=ResRaceLampHandler;
		this.handlers[176]=ResPutUpgradeEquipErrorHandler;
		this.handlers[155]=ResReplaceXiLianPetHandler;
		this.handlers[1333]=ResLegionBattleLeaveErrorHandler;
		this.handlers[270]=ResGetRankInfoErrorHandler;
		this.handlers[636]=ResLegionSkillUpgradeMessageErrorHandler;
		this.handlers[1135]=ResFitSetEquipHandler;
		this.handlers[1259]=ResTeamApplyReplyErrorHandler;
		this.handlers[288]=ResYuanZhengBuyGoodsErrorHandler;
		this.handlers[526]=ResWorldBossPayRebornErrorHandler;
		this.handlers[264]=ResReplaceXiLianFaQiErrorHandler;
		this.handlers[305]=ResYuanZhengTakePrizeHandler;
		this.handlers[135]=ResChallengeShiMenErrorHandler;
		this.handlers[477]=ResQunYingHuiBetHandler;
		this.handlers[1036]=ResTakeXXHJPrizeErrorHandler;
		this.handlers[624]=ResLegionUpdateShopMessageHandler;
		this.handlers[1607]=ResActTurntableErrorHandler;
		this.handlers[1284]=ResKingWarFightGetWorshipRewardHandler;
		this.handlers[582]=ResSoulBoyAttributeUpdateHandler;
		this.handlers[328]=ResResetOfficialHandler;
		this.handlers[377]=ResNineHeavyPlayerLeaveHandler;
		this.handlers[1339]=ResLegionBattleAttackPlayerErrorHandler;
		this.handlers[7]=ResVersionCheckErrorHandler;
		this.handlers[760]=ResChatHelpHandler;
		this.handlers[681]=ResLegionFlushExchangeItemMessageErrorHandler;
		this.handlers[1247]=ResGuildMemberRemoveHandler;
		this.handlers[1332]=ResLegionBattleLeaveHandler;
		this.handlers[880]=ResTakeActiveGameSystemRewardHandler;
		this.handlers[1360]=ResGuildUpdateLevelHandler;
		this.handlers[1589]=ResUsePetBoxHandler;
		this.handlers[1183]=ResNineHeavyUpdateAppearanceHandler;
		this.handlers[350]=ResEscortRevengeHandler;
		this.handlers[420]=ResTeamDuplicateRoomJoinErrorHandler;
		this.handlers[380]=ResNineHeavyPlayerAttackHandler;
		this.handlers[92]=ResUpgradeSkillHandler;
		this.handlers[346]=ResEscortRobberyRewardHandler;
		this.handlers[1270]=ResTeamGetAllHandler;
		this.handlers[1172]=ResWorldBossAttackPlayerErrorHandler;
		this.handlers[1185]=ResGetRechargeInfoHandler;
		this.handlers[138]=ResChangeShiMenStarErrorHandler;
		this.handlers[356]=ResFlushActivitiesHandler;
		this.handlers[639]=ResLegionExchangeItemMessageHandler;
		this.handlers[278]=ResArenaChallengeHandler;
		this.handlers[1365]=ResTeamSkipHandler;
		this.handlers[338]=ResFinishEscortHandler;
		this.handlers[493]=ResKingWarFightRewardHandler;
		this.handlers[1231]=ResGuildExitHandler;
		this.handlers[235]=ResGetLLBTInfoErrorHandler;
		this.handlers[1344]=ResLegionBattleAttackMonsterHandler;
		this.handlers[210]=ResDisposeEquipErrorHandler;
		this.handlers[796]=ResLoginForTypeHandler;
		this.handlers[1124]=ResHandBookDecomposeErrorHandler;
		this.handlers[518]=ResWorldBossUpdateRankHandler;
		this.handlers[1264]=ResTeamCreateHandler;
		this.handlers[287]=ResYuanZhengBuyGoodsHandler;
		this.handlers[1657]=ResWeekendXuYuanSelectErrorHandler;
		this.handlers[112]=ResChallengeGuanQiaHandler;
		this.handlers[36]=ResCommandHandler;
		this.handlers[47]=ResReadMailHandler;
		this.handlers[1456]=ResFastOnHookRewardErrorHandler;
		this.handlers[858]=ResTotemActiveHandler;
		this.handlers[1309]=ResTaskGuildSquareResetErrorHandler;
		this.handlers[1488]=ResEscortRobberyBackHandler;
		this.handlers[58]=ResShopBuyHandler;
		this.handlers[88]=ResSetMijiErrorHandler;
		this.handlers[1641]=ResGetBaoWuRestTimesHandler;
		this.handlers[1057]=ResUpdateNameHandler;
		this.handlers[1661]=ResArmyForHelpHandler;
		this.handlers[1048]=ResGarrisonUpdateTargetHandler;
		this.handlers[885]=ResCommonIllusionErrorHandler;
		this.handlers[1362]=ResUpgradeCommonSkillLevelHandler;
		this.handlers[1187]=ResNineHeavyDeadHandler;
		this.handlers[1191]=ResUpgradePetSkillErrorHandler;
		this.handlers[468]=ResSoulBoyXilianHandler;
		this.handlers[1155]=ResFitUpgradePositionHandler;
		this.handlers[664]=ResLegionLvUpdateMessageHandler;
		this.handlers[449]=ResSoulBoyDrugErrorHandler;
		this.handlers[1576]=ResGetTimeInfoErrorHandler;
		this.handlers[790]=ResKillEscortTimeHandler;
		this.handlers[417]=ResTeamDuplicateRoomForIDErrorHandler;
		this.handlers[984]=ResUpdateRobotHandler;
		this.handlers[727]=ResUpdateJueWeiLevelErrorHandler;
		this.handlers[1432]=ResRefreshMystersiousShopErrorHandler;
		this.handlers[1338]=ResLegionBattleAttackPlayerHandler;
		this.handlers[403]=ResChibiRefreshTaskHandler;
		this.handlers[685]=ResSoulBoyDrugItemHandler;
		this.handlers[1341]=ResLegionBattleIntegralRewardHandler;
		this.handlers[1222]=ResGuildChangePositionHandler;
		this.handlers[49]=ResRemoveMailHandler;
		this.handlers[1517]=ResGetWorldBossInfoErrorHandler;
		this.handlers[1279]=ResKingWarGetExtPrizeHandler;
		this.handlers[619]=ResLegionUpdateGuardMessageHandler;
		this.handlers[436]=ResTeamDuplicateGetFirstClearanceHandler;
		this.handlers[1417]=ResFitGemUpgradeHandler;
		this.handlers[1514]=ResGetVideoFightDataHandler;
		this.handlers[1524]=ResGuanQiaInvestmentGetRewardMessageErrorHandler;
		this.handlers[238]=ResGetXYCMInfoErrorHandler;
		this.handlers[416]=ResTeamDuplicateRoomForIDHandler;
		this.handlers[1250]=ResGuildValueUpdateHandler;
		this.handlers[1415]=ResAuctionStatusChangeHandler;
		this.handlers[1615]=ResTowerFightErrorHandler;
		this.handlers[1136]=ResFitSetEquipErrorHandler;
		this.handlers[1175]=ResFitSetSkillHandler;
		this.handlers[1141]=ResFitSetParticipantHandler;
		this.handlers[1182]=ResGetHuntInfoErrorHandler;
		this.handlers[107]=ResUpdateAttributeHandler;
		this.handlers[75]=ResUpdateShopGoodsBuyTimesHandler;
		this.handlers[241]=ResGetYCTTInfoErrorHandler;
		this.handlers[554]=ResSoulBoyXilianTranslateHandler;
		this.handlers[1599]=ResSelectLoveHeroErrorHandler;
		this.handlers[336]=ResStartEscortHandler;
		this.handlers[724]=ResAdvancedRewardErrorHandler;
		this.handlers[1138]=ResFitSetEquipGemHandler;
		this.handlers[196]=ResDuanZaoUpgradeHandler;
		this.handlers[243]=ResTakeCBTPrizeHandler;
		this.handlers[1437]=ResNineHeavyFightResultHandler;
		this.handlers[1618]=ResselectTowerErrorHandler;
		this.handlers[217]=ResReceiveQuanMinBossDungeonPrizeHandler;
		this.handlers[134]=ResChallengeShiMenHandler;
		this.handlers[544]=ResMarriageFlowersErrorHandler;
		this.handlers[1549]=ResGoldDoubleActHandler;
		this.handlers[234]=ResGetLLBTInfoHandler;
		this.handlers[533]=ResMarriageProposeErrorHandler;
		this.handlers[84]=ResLockMijiHandler;
		this.handlers[272]=ResRankMoBaiHandler;
		this.handlers[140]=ResGetShiMenInfoHandler;
		this.handlers[201]=ResDisposeErrorHandler;
		this.handlers[1120]=ResHandBookActivateHandler;
		this.handlers[1118]=ResEmptyCityOccupiedHandler;
		this.handlers[720]=ResRechargeHandler;
		this.handlers[1626]=ResTreasurePyHandler;
		this.handlers[1531]=ResWxIOSAuthorizeDataHandler;
		this.handlers[1042]=ResGarrisonFindTargetErrorHandler;
		this.handlers[269]=ResGetRankInfoHandler;
		this.handlers[1148]=ResFitSynthesisErrorHandler;
		this.handlers[164]=ResXiLianPetHandler;
		this.handlers[511]=ResWorldBossAttackHandler;
		this.handlers[800]=ResAdviserActiveErrorHandler;
		this.handlers[1068]=ResGarrisonRevengeHandler;
		this.handlers[802]=ResAdviserSurmountHandler;
		this.handlers[56]=ResCreateViceHeroErrorHandler;
		this.handlers[1644]=ResZhunDianHandler;
		this.handlers[1460]=ResUpdateVipFreeSkipRoundHandler;
		this.handlers[686]=ResSoulBoyDrugItemErrorHandler;
		this.handlers[1679]=ResTeamCreateCDHandler;
		this.handlers[1121]=ResHandBookActivateErrorHandler;
		this.handlers[1520]=ResWxRechargeErrorHandler;
		this.handlers[340]=ResReceiveEscortRewardHandler;
		this.handlers[480]=ResTeamDuplicateRoomKickErrorHandler;
		this.handlers[150]=ResActivePetErrorHandler;
		this.handlers[1113]=ResEmptyGetBattleRecordErrorHandler;
		this.handlers[679]=ResInvestmengTaskRewardMessageErrorHandler;
		this.handlers[452]=ResSoulBoyLingUpgradeErrorHandler;
		this.handlers[11]=ResCreateMainHeroHandler;
		this.handlers[578]=ResWearSkinHandler;
		this.handlers[471]=ResQunYingHuiSignUpHandler;
		this.handlers[4]=ResLoginLocalErrorHandler;
		this.handlers[1510]=ResRecommendTaskUpdateHandler;
		this.handlers[779]=ResChatKanZhuangBiHandler;
		this.handlers[1147]=ResFitSynthesisHandler;
		this.handlers[717]=ResLogin37Handler;
		this.handlers[971]=ResWorldBossAttackBattleDataHandler;
		this.handlers[663]=ResVipUpdateHandler;
		this.handlers[1080]=ResUpdateHeroAttributeGoodsHandler;
		this.handlers[546]=ResMarriageWeddingInvitationHandler;
		this.handlers[884]=ResCommonIllusionHandler;
		this.handlers[198]=ResShowOfflinePrizeHandler;
		this.handlers[1039]=ResCommonSynthesisErrorHandler;
		this.handlers[672]=ResInvestmengBuyMessageHandler;
		this.handlers[649]=ResLegionIntoSquareMessageErrorHandler;
		this.handlers[1409]=ResGeneralUpgradeStarHandler;
		this.handlers[1598]=ResSelectLoveHeroHandler;
		this.handlers[354]=ResEscortRevengeRewardErrorHandler;
		this.handlers[1176]=ResFitSetSkillErrorHandler;
		this.handlers[326]=ResReceiveOfficialYesterdayRewardHandler;
		this.handlers[1073]=ResGarrisonUpdateRewardHandler;
		this.handlers[1316]=ResSceneMoveErrorHandler;
		this.handlers[541]=ResMarriageGetTeammateSkinErrorHandler;
		this.handlers[1293]=ResTaskPingDingAnBangPayHandler;
		this.handlers[188]=ResUpgradeHeroSkillErrorHandler;
		this.handlers[1436]=ResPVPFightStateChangeHandler;
		this.handlers[726]=ResUpdateJueWeiLevelHandler;
		this.handlers[1397]=ResTuanGouGetInfoErrorHandler;
		this.handlers[555]=ResSoulBoyXilianTranslateErrorHandler;
		this.handlers[1464]=ResUpgradeSkinStarHandler;
		this.handlers[386]=ResNineHeavyPlayerRankHandler;
		this.handlers[48]=ResReadMailErrorHandler;
		this.handlers[1393]=ResRemoveShopHandler;
		this.handlers[1055]=ResGarrisonSetGuardErrorHandler;
		this.handlers[1373]=ResKejuExitHandler;
		this.handlers[1577]=ResActScoreUpdateHandler;
		this.handlers[1063]=ResGarrisonGerRankErrorHandler;
		this.handlers[1493]=ResMarriagePataInviteHandler;
		this.handlers[699]=ResHuntStartHandler;
		this.handlers[805]=ResAdviserUpgradeHandler;
		this.handlers[1501]=ResGetMarryPataInfoHandler;
		this.handlers[1363]=ResUpgradeCommonSkillLevelErrorHandler;
		this.handlers[1109]=ResQuanFuBossGetInfoErrorHandler;
		this.handlers[466]=ResSoulBoySynthesisErrorHandler;
		this.handlers[454]=ResSoulBoyHunUpgradeHandler;
		this.handlers[224]=ResClickQuanMinBossDungeonErrorHandler;
		this.handlers[1035]=ResTakeXXHJPrizeHandler;
		this.handlers[561]=ResMarriagePromoteHouseReceiveHandler;
		this.handlers[37]=ResCommandErrorHandler;
		this.handlers[149]=ResActivePetHandler;
		this.handlers[565]=ResMarriageRenovationHouseErrorHandler;
		this.handlers[1126]=ResHandBookUpStarHandler;
		this.handlers[1435]=ResNineHeavyUpdateOhterIntegralHandler;
		this.handlers[853]=ResGodClothesOperationHandler;
		this.handlers[1627]=ResTreasurePyErrorHandler;
		this.handlers[536]=ResMarriageOperationProposeHandler;
		this.handlers[1310]=ResSceneInitHandler;
		this.handlers[581]=ResWorldBossDetailHandler;
		this.handlers[635]=ResLegionSkillUpgradeMessageHandler;
		this.handlers[773]=ResLegionHireMessageHandler;
		this.handlers[1476]=ResEquipMakingHandler;
		this.handlers[751]=ResYaoQianHandler;
		this.handlers[761]=ResChatHelpErrorHandler;
		this.handlers[844]=ResGeneralActiveHandler;
		this.handlers[1502]=ResGetMarryPataInfoErrorHandler$1;
		this.handlers[110]=ResReceiveDungeonPrizeErrorHandler;
		this.handlers[1300]=ResTaskGuildSquareTakePrizeHandler;
		this.handlers[648]=ResLegionIntoSquareMessageHandler;
		this.handlers[744]=ResGetYaoQianRewardAdditionallyHandler;
		this.handlers[1659]=ResTongShuaiJinJianHandler;
		this.handlers[455]=ResSoulBoyHunUpgradeErrorHandler;
		this.handlers[1268]=ResTeamExitErrorHandler;
		this.handlers[1078]=ResGarrisonWorshipHandler;
		this.handlers[1127]=ResHandBookUpStarErrorHandler;
		this.handlers[519]=ResWorldBossFlushBoxHandler;
		this.handlers[1391]=ResPataUpdateStateHandler;
		this.handlers[9]=ResHeartBeatHandler;
		this.handlers[397]=ResChibiFinishTaskHandler;
		this.handlers[59]=ResShopBuyErrorHandler;
		this.handlers[1248]=ResGuildMemberValueUpdateHandler;
		this.handlers[1394]=ResUpdateShopReturnHandler;
		this.handlers[1601]=ResSendGoodLuckHandler;
		this.handlers[567]=ResMarriageRdivorceHandler;
		this.handlers[655]=ResLegionOutSquareMessageErrorHandler;
		this.handlers[1345]=ResLegionBattleAttackMonsterErrorHandler;
		this.handlers[347]=ResEscortRobberyRewardErrorHandler;
		this.handlers[1256]=ResTeamApplyErrorHandler;
		this.handlers[1313]=ResSceneRemoveHandler;
		this.handlers[1228]=ResGuildDismissHandler;
		this.handlers[1262]=ResTeamChangeFightPowerErrorHandler;
		this.handlers[143]=ResTakeShiMenRoundPrizeHandler;
		this.handlers[1483]=ResEquipPromoteErrorHandler;
		this.handlers[1123]=ResHandBookDecomposeHandler;
		this.handlers[1461]=ResFirstDayEndLoginHandler;
		this.handlers[754]=ResLevelUpErrorHandler;
		this.handlers[1167]=ResTakeFitPrizeHandler;
		this.handlers[1425]=ResLikeVideoErrorHandler;
		this.handlers[1244]=ResGuildKickHandler;
		this.handlers[1452]=ResYuanZhengUpdateFightSettingHandler;
		this.handlers[494]=ResKingWarFightRewardErrorHandler;
		this.handlers[875]=ResChatNeedHelpHandler;
		this.handlers[1533]=ResEquipZhuWenHandler;
		this.handlers[527]=ResSoulBoySkillUpgradeHandler;
		this.handlers[501]=ResWorldBossJoinHandler;
		this.handlers[400]=ResChibiBuyQueueHandler;
		this.handlers[293]=ResYuanZhengGetInfoHandler;
		this.handlers[1129]=ResArenaGetFightRecordHandler;
		this.handlers[1536]=ResGetZhuWenInfoHandler;
		this.handlers[1384]=ResGarrisonBuyTimesErrorHandler;
		this.handlers[682]=ResUpdateExchangeGoodsHandler;
		this.handlers[1557]=ResZhiJianFollowSucHandler;
		this.handlers[1523]=ResGuanQiaInvestmentGetRewardMessageHandler;
		this.handlers[1298]=ResTaskUpdateHandler;
		this.handlers[1082]=ResGetAdvancedInfoHandler;
		this.handlers[1271]=ResTeamGetAllErrorHandler;
		this.handlers[1165]=ResGetPFITInfoErrorHandler;
		this.handlers[850]=ResGeneralUpgradeHandler;
		this.handlers[1400]=ResTuanGouTakePrizeErrorHandler;
		this.handlers[1376]=ResAuctionAttentionHandler;
		this.handlers[949]=ResUpGradeEquipErrorHandler;
		this.handlers[1097]=ResEmptyUpdatePlayerHandler;
		this.handlers[1038]=ResCommonSynthesisHandler;
		this.handlers[675]=ResInvestmengUpdateTaskMessageHandler;
		this.handlers[1311]=ResSceneUpdatePositionHandler;
		this.handlers[1442]=ResOtherPlayerFightTeamHandler;
		this.handlers[392]=ResChibiStartTaskHandler;
		this.handlers[1303]=ResTaskGuildSquarePayHandler;
		this.handlers[21]=ResUpdateValueHandler;
		this.handlers[348]=ResEscortRobbedHandler;
		this.handlers[1440]=ResFirePetErrorHandler;
		this.handlers[1645]=ResZhunDianErrorHandler;
		this.handlers[1674]=ResSelectQingWangRewardErrorHandler;
		this.handlers[1115]=ResNineHeavyReliveErrorHandler;
		this.handlers[573]=ResAuctionContendErrorHandler;
		this.handlers[1670]=ResQinWangTeGongHandler;
		this.handlers[116]=ResReceiveGuanQiaChapterPrizeErrorHandler;
		this.handlers[552]=ResSoulBoyXilianReplaceErrorHandler;
		this.handlers[1322]=ResLegionBattleAttackDoorErrorHandler;
		this.handlers[147]=ResTakeShiMenTaskErrorHandler;
		this.handlers[253]=ResTakeYCTTPrizeErrorHandler;
		this.handlers[105]=ResReduceLevelHandler;
		this.handlers[989]=ResSendNoticeHandler;
		this.handlers[433]=ResTeamDuplicateRoomRewardHandler;
		this.handlers[1255]=ResTeamApplyHandler;
		this.handlers[1386]=ResGarrisonGetDataHandler;
		this.handlers[1550]=ResGoldDoubleActErrorHandler;
		this.handlers[1330]=ResLegionBattleUpdateSceneCountHandler;
		this.handlers[549]=ResMarriageGiftErrorHandler;
		this.handlers[60]=ResUpdateShopInfoHandler;
		this.handlers[419]=ResTeamDuplicateRoomJoinHandler;
		this.handlers[1225]=ResGuildCreateHandler;
		this.handlers[1554]=ResSuperSupplyActErrorHandler;
		this.handlers[1169]=ResRemoveRedEnvelopesHandler;
		this.handlers[1396]=ResTuanGouGetInfoHandler;
		this.handlers[985]=ResUpdateFightPowerHandler;
		this.handlers[1066]=ResGarrisonGetOverLoadErrorHandler;
		this.handlers[791]=ResKillEscortTimeErrorHandler;
		this.handlers[1188]=ResUpdateCaiLiaoDungeonTimeHandler;
		this.handlers[387]=ResNineHeavyPlayerRankErrorHandler;
		this.handlers[895]=ResBuyWarTokenLevelHandler;
		this.handlers[700]=ResHuntStartErrorHandler;
		this.handlers[763]=ResChatHelpRewardHandler;
		this.handlers[1482]=ResEquipPromoteHandler;
		this.handlers[1545]=ResFuLingGetInfoHandler;
		this.handlers[1378]=ResAuctionAttentionNotifyHandler;
		this.handlers[1213]=ResGuildChangeFightPowerHandler;
		this.handlers[1351]=ResLegionBattleGetStateHandler;
		this.handlers[769]=ResGetVipRewardHandler;
		this.handlers[1095]=ResEmptyCityAttackErrorHandler;
		this.handlers[484]=ResTeamDuplicateUpdateAssistHandler;
		this.handlers[499]=ResKingWarGetRankHandler;
		this.handlers[576]=ResActivateSkinErrorHandler;
		this.handlers[381]=ResNineHeavyPlayerAttackErrorHandler;
		this.handlers[701]=ResHuntUpdateLuckCountHandler;
		this.handlers[337]=ResStartEscortErrorHandler;
		this.handlers[211]=ResDayEndHandler;
		this.handlers[551]=ResSoulBoyXilianReplaceHandler;
		this.handlers[1027]=ResAdviserUpgradeWakeUpErrorHandler;
		this.handlers[1392]=ResRankUpdateActivitiesHandler;
		this.handlers[311]=ResSettingHandler;
		this.handlers[190]=ResUpdatePetAttributeHandler;
		this.handlers[741]=ResGetFuLiRewardHandler;
		this.handlers[738]=ResRedEnvelopesErrorHandler;
		this.handlers[1297]=ResTaskFinishErrorHandler;
		this.handlers[766]=ResReceiveAllDungeonPrizeHandler;
		this.handlers[882]=ResUpgradeOfficialActivityHandler;
		this.handlers[279]=ResArenaChallengeErrorHandler;
		this.handlers[777]=ResChatZhuangBiErrorHandler;
		this.handlers[1412]=ResGeneralUpgradeWeaponHandler;
		this.handlers[1306]=ResTaskRemoveHandler;
		this.handlers[540]=ResMarriageGetTeammateSkinHandler;
		this.handlers[1380]=ResAuctionUpperHandler;
		this.handlers[14]=ResEquipPacketAddCapacityHandler;
		this.handlers[1621]=ResQunYingHuiNotifyHandler;
		this.handlers[1678]=ResLeginUpdateMessageHandler;
		this.handlers[1158]=ResFitUpgradeWeaponHandler;
		this.handlers[379]=ResNineHeavyPlayerMoveHandler;
		this.handlers[1018]=ResAdviserUpgradeTalentErrorHandler;
		this.handlers[364]=ResNineHeavyMonsterFlushHandler;
		this.handlers[102]=ResUpgradeZhanwenHandler;
		this.handlers[1238]=ResGuildInviteHandler;
		this.handlers[324]=ResReceiveOfficialBoxErrorHandler;
		this.handlers[1232]=ResGuildExitErrorHandler;
		this.handlers[1683]=ResGetAttributeInfoHandler;
		this.handlers[255]=ResUpdateXuanNvLingZhuangHandler;
		this.handlers[1065]=ResGarrisonGetOverLoadHandler;
		this.handlers[254]=ResUpdateXuanNvAttributeHandler;
		this.handlers[40]=ResActiveGameSystemErrorHandler;
		this.handlers[461]=ResSoulBoyDestinyHandler;
		this.handlers[1466]=ResUpdateXuanNvOverTimeHandler;
		this.handlers[231]=ResGetCBTInfoHandler;
		this.handlers[502]=ResWorldBossJoinErrorHandler;
		this.handlers[45]=ResCollectMailErrorHandler;
		this.handlers[119]=ResChangeGuanQiaDungeonIDErrorHandler;
		this.handlers[650]=ResLegionOtherIntoSquareMessageHandler;
		this.handlers[1023]=ResAdviserUpgradeElementHandler;
		this.handlers[783]=ResChangeBossOwnerErrorHandler;
		this.handlers[26]=ResUseGoodsHandler;
		this.handlers[646]=ResLegionSignRewardMessageErrorHandler;
		this.handlers[1100]=ResEmptyCityPayColdErrorHandler;
		this.handlers[1410]=ResGeneralUpgradeStarErrorHandler;
		this.handlers[1317]=ResSceneUpdateDeadHandler;
		this.handlers[881]=ResTakeActiveGameSystemRewardErrorHandler;
		this.handlers[1458]=ResFastOnHookRewardInfoHandler;
		this.handlers[1162]=ResKingWarFightRecordErrorHandler;
		this.handlers[159]=ResUpgradePetLevelErrorHandler;
		this.handlers[1637]=ResXuYuanErrorHandler;
		this.handlers[459]=ResSoulBoyTaletUpgradeErrorHandler;
		this.handlers[1465]=ResUpgradeSkinStarErrorHandler;
		this.handlers[99]=ResReplaceZhanwenErrorHandler;
		this.handlers[1242]=ResGuildInviteReplyErrorHandler;
		this.handlers[384]=ResNineHeavyChangeStateHandler;
		this.handlers[439]=ResTeamDuplicateSweepAwayHandler;
		this.handlers[1045]=ResGarrisonTakeRewardErrorHandler;
		this.handlers[1583]=ResGetCommonWarTokenRewardErrorHandler;
		this.handlers[687]=ResNineHeavyPlayerAttackResultHandler;
		this.handlers[1058]=ResUpdateNameErrorHandler;
		this.handlers[109]=ResReceiveDungeonPrizeHandler;
		this.handlers[1654]=ResWeekendXuYuanGetErrorHandler;
		this.handlers[851]=ResGeneralUpgradeErrorHandler;
		this.handlers[645]=ResLegionSignRewardMessageHandler;
		this.handlers[1094]=ResEmptyCityAttackHandler;
		this.handlers[1277]=ResTeamMemberRemoveHandler;
		this.handlers[512]=ResWorldBossAttackErrorHandler;
		this.handlers[1638]=ResXuYuanStatusHandler;
		this.handlers[1288]=ResPVPFightOverUnlockErrorHandler;
		this.handlers[1086]=ResEmptyUpdateStateHandler;
		this.handlers[1342]=ResLegionBattleIntegralRewardErrorHandler;
		this.handlers[1280]=ResKingWarGetExtPrizeErrorHandler;
		this.handlers[490]=ResKingWarStartFightHandler;
		this.handlers[735]=ResUpdateLieMingLevelSucessHandler;
		this.handlers[267]=ResDuiHuanErrorHandler;
		this.handlers[1236]=ResGuildInitHandler;
		this.handlers[1485]=ResEquipSuitActiveHandler;
		this.handlers[488]=ResKingWarUpdateHandler;
		this.handlers[1451]=ResOnHookRewardInfoHandler;
		this.handlers[1312]=ResSceneAddHandler;
		this.handlers[218]=ResReceiveQuanMinBossDungeonPrizeErrorHandler;
		this.handlers[1348]=ResLegionBattleAttackThroneHandler;
		this.handlers[187]=ResUpgradeHeroSkillHandler;
		this.handlers[165]=ResXiLianPetErrorHandler;
		this.handlers[1547]=ResGoldBasinfulActUpdateHandler;
		this.handlers[389]=ResNineHeavyIntegralRewardHandler;
		this.handlers[82]=ResExchangeMijiErrorHandler;
		this.handlers[1473]=ResQuanMinBossMoveHandler;
		this.handlers[465]=ResSoulBoySynthesisHandler;
		this.handlers[1383]=ResGarrisonBuyTimesHandler;
		this.handlers[1556]=ResUpdateServerOpenTimeHandler;
		this.handlers[443]=ResSoulBoyActivationErrorHandler;
		this.handlers[1186]=ResGlobalUpdateAppearanceHandler;
		this.handlers[472]=ResQunYingHuiSignUpErrorHandler;
		this.handlers[55]=ResCreateViceHeroHandler;
		this.handlers[1424]=ResLikeVideoHandler;
		this.handlers[1374]=ResKejuExitErrorHandler;
		this.handlers[291]=ResYuanZhengChallengeErrorHandler;
		this.handlers[739]=ResUpdateRedEnvelopesHandler;
		this.handlers[1446]=ResFightPositionExchangeErrorHandler;
		this.handlers[1508]=ResRecommendTaskRewardHandler;
		this.handlers[290]=ResYuanZhengChallengeHandler;
		this.handlers[1662]=ResGodGeneraThisLifeHandler;
		this.handlers[1030]=ResBuyXXHJChallengeTimeErrorHandler;
		this.handlers[424]=ResTeamDuplicateRoomLeaveErrorHandler;
		this.handlers[859]=ResTotemActiveErrorHandler;
		this.handlers[1149]=ResFitUnclockHandler;
		this.handlers[1204]=ResGuildApplyHandler;
		this.handlers[1033]=ResGetXXHJInfoErrorHandler;
		this.handlers[1220]=ResGuildChangeNoticeErrorHandler;
		this.handlers[676]=ResInvestmengUpdateTaskMessageErrorHandler;
		this.handlers[1202]=ResGuildAddEventHandler;
		this.handlers[517]=ResWorldBossPlayerRebornHandler;
		this.handlers[1336]=ResLegionBattlePayRebornErrorHandler;
		this.handlers[1494]=ResMarriagePataInviteErrorHandler;
		this.handlers[137]=ResChangeShiMenStarHandler;
		this.handlers[331]=ResFlushEscortLvErrorHandler;
		this.handlers[1050]=ResGarrisonChallengeTargetHandler;
		this.handlers[643]=ResLegionSignMessageErrorHandler;
		this.handlers[496]=ResKingWarBuyCountHandler;
		this.handlers[1305]=ResTaskCleanHandler;
		this.handlers[487]=ResJingMaiUpgradeErrorHandler;
		this.handlers[1062]=ResGarrisonGerRankHandler;
		this.handlers[516]=ResWorldBossRebornHandler;
		this.handlers[1335]=ResLegionBattlePayRebornHandler;
		this.handlers[728]=ResGetXiYouMingGeHandler;
		this.handlers[1579]=ResLimitWuJiangHuntActHandler;
		this.handlers[856]=ResSaveLastQuenchingAttrHandler;
		this.handlers[715]=ResUpdateExchangeCountHandler;
		this.handlers[523]=ResWorldBossBoxRemoveHandler;
		this.handlers[1021]=ResAdviserUpgradeDestinyErrorHandler;
		this.handlers[367]=ResNineHeavyPlayerJoinErrorHandler;
		this.handlers[486]=ResJingMaiUpgradeHandler;
		this.handlers[1590]=ResUsePetBoxErrorHandler;
		this.handlers[482]=ResTeamDuplicateZhuluBoxHandler;
		this.handlers[3]=ResLoginLocalHandler;
		this.handlers[491]=ResKingWarStartFightErrorHandler;
		this.handlers[229]=ResReceiveYeWaiBossDungeonPrizeErrorHandler;
		this.handlers[1371]=ResKejuExaminationRankErrorHandler;
		this.handlers[1418]=ResFitGemUpgradeErrorHandler;
		this.handlers[113]=ResChallengeGuanQiaErrorHandler;
		this.handlers[1319]=ResLegionBattleUpdateMinionRankHandler;
		this.handlers[437]=ResTeamDuplicateGetFirstClearanceErrorHandler;
		this.handlers[1274]=ResTeamKickHandler;
		this.handlers[1614]=ResTowerFightHandler;
		this.handlers[767]=ResReceiveAllDungeonPrizeErrorHandler;
		this.handlers[448]=ResSoulBoyDrugHandler;
		this.handlers[1246]=ResGuildMemberAddHandler;
		this.handlers[1214]=ResGuildChangeFightPowerErrorHandler;
		this.handlers[1354]=ResSceneChangeHandler;
		this.handlers[1407]=ResGeneralUpgradeYuanMaiErrorHandler;
		this.handlers[1325]=ResLegionBattleHireHandler;
		this.handlers[319]=ResUpgradeOfficialLvHandler;
		this.handlers[575]=ResActivateSkinHandler;
		this.handlers[847]=ResGeneralSurmountHandler;
		this.handlers[30]=ResPutOnEquipErrorHandler;
		this.handlers[456]=ResNineHeavyGameOverHandler;
		this.handlers[568]=ResMarriageRdivorceErrorHandler;
		this.handlers[1656]=ResWeekendXuYuanSelectHandler;
		this.handlers[1329]=ResLegionBattleUpdateThroneHandler;
		this.handlers[633]=ResLegionGuardUpgradeMessageErrorHandler;
		this.handlers[1668]=ResMeiWuHuntErrorHandler;
		this.handlers[797]=ResLoginForTypeErrorHandler;
		this.handlers[146]=ResTakeShiMenTaskHandler;
		this.handlers[257]=ResXuanNvFeiShengQiangHuaHandler;
		this.handlers[1356]=ResLegionBattleUpdateScorePrizeHandler;
		this.handlers[244]=ResTakeCBTPrizeErrorHandler;
		this.handlers[662]=ResLegionUpdateTeamDuplicateMessageHandler;
		this.handlers[1198]=ResFightPositionAddErrorHandler;
		this.handlers[1226]=ResGuildCreateErrorHandler;
		this.handlers[333]=ResFlushEscortTargetHandler;
		this.handlers[1210]=ResGuildChangeAutoAgreeApplyHandler;
		this.handlers[1096]=ResEmptyUpdateCityHandler;
		this.handlers[1315]=ResSceneMoveHandler;
		this.handlers[1071]=ResGarrisonTakeWeekRewardHandler;
		this.handlers[1208]=ResGuildApplyReplyErrorHandler;
		this.handlers[1505]=ResRecommendTaskIntegralRewardHandler;
		this.handlers[1110]=ResUpdateCostGoldHandler;
		this.handlers[1241]=ResGuildInviteReplyHandler;
		this.handlers[100]=ResUpdateZhanwenLengthHandler;
		this.handlers[1032]=ResGetXXHJInfoHandler;
		this.handlers[537]=ResMarriageOperationProposeErrorHandler;
		this.handlers[1624]=ResTreasureActiveErrorHandler;
		this.handlers[27]=ResUseGoodsErrorHandler;
		this.handlers[1108]=ResQuanFuBossGetInfoHandler;
		this.handlers[1608]=ResActTurntableTimesUpdateHandler;
		this.handlers[1623]=ResTreasureActiveHandler;
		this.handlers[394]=ResChibiUpdateHandler;
		this.handlers[1346]=ResLegionBattleColdHandler;
		this.handlers[1684]=ResGetAttributeInfoErrorHandler;
		this.handlers[44]=ResCollectMailHandler;
		this.handlers[395]=ResChibiUpdateTodayHandler;
		this.handlers[1164]=ResGetPFITInfoHandler;
		this.handlers[247]=ResPataFightErrorHandler;
		this.handlers[1178]=ResUpdateSkinHandler;
		this.handlers[1024]=ResAdviserUpgradeElementErrorHandler;
		this.handlers[320]=ResUpgradeOfficialLvErrorHandler;
		this.handlers[458]=ResSoulBoyTaletUpgradeHandler;
		this.handlers[793]=ResLookPlayerHandler;
		this.handlers[1497]=ResMarriagePataInviteUpdateErrorHandler;
		this.handlers[1161]=ResKingWarFightRecordHandler;
		this.handlers[1308]=ResTaskGuildSquareResetHandler;
		this.handlers[1401]=ResUpgradeUpdateCritHandler;
		this.handlers[1153]=ResFitUpdateSkillHandler;
		this.handlers[87]=ResSetMijiHandler;
		this.handlers[904]=ResCommonWakeUpHandler;
		this.handlers[1075]=ResGarrisonUpgradeHandler;
		this.handlers[1004]=ResYuanZhengRefreshSkillHandler;
		this.handlers[1650]=ResGetJunTuanInfoHandler;
		this.handlers[1239]=ResGuildInviteErrorHandler;
		this.handlers[620]=ResLegionUpdateGuardTaskMessageHandler;
		this.handlers[1653]=ResWeekendXuYuanGetHandler;
		this.handlers[1584]=ResUpdateCommonWarTokenHandler;
		this.handlers[297]=ResYuanZhengReliveErrorHandler;
		this.handlers[862]=ResTotemSurmountErrorHandler;
		this.handlers[1404]=ResGeneralUpgradeJueWuErrorHandler;
		this.handlers[999]=ResFightTestHandler;
		this.handlers[514]=ResWorldBossAttackResultHandler;
		this.handlers[221]=ResBuyQuanMinBossTimesErrorHandler;
		this.handlers[1193]=ResAdviserUpgradeElementQuickHandler;
		this.handlers[1496]=ResMarriagePataInviteUpdateHandler;
		this.handlers[1272]=ResTeamInitHandler;
		this.handlers[558]=ResMarriagePromoteHouseLvErrorHandler;
		this.handlers[1349]=ResLegionBattleAttackThroneErrorHandler;
		this.handlers[1591]=ResUpdateXuanNvSkillHandler;
		this.handlers[1521]=ResGuanQiaInvestmentBuyBestMessageHandler;
		this.handlers[42]=ResAddMailHandler;
		this.handlers[258]=ResXuanNvFeiShengQiangHuaErrorHandler;
		this.handlers[640]=ResLegionExchangeItemMessageErrorHandler;
		this.handlers[284]=ResArenaGetRankInfoHandler;
		this.handlers[1217]=ResGuildChangeNameErrorHandler;
		this.handlers[213]=ResInitQuanMinBossHandler;
		this.handlers[1604]=ResSelectLuckErrorHandler;
		this.handlers[1606]=ResActTurntableHandler;
		this.handlers[637]=ResLegionUpdateExchangeMessageHandler;
		this.handlers[1168]=ResTakeFitPrizeErrorHandler;
		this.handlers[51]=ResZhuanShengHandler;
		this.handlers[534]=ResMarriageUpdateProposeHandler;
		this.handlers[275]=ResArenaBuyTimesHandler;
		this.handlers[474]=ResQunYingHuiSignUpRecordHandler;
		this.handlers[393]=ResChibiStartTaskErrorHandler;
		this.handlers[1301]=ResTaskGuildSquareTakePrizeErrorHandler;
		this.handlers[334]=ResFlushEscortTargetErrorHandler;
		this.handlers[1190]=ResUpgradePetSkillHandler;
		this.handlers[52]=ResZhuanShengErrorHandler;
		this.handlers[654]=ResLegionOutSquareMessageHandler;
		this.handlers[469]=ResSoulBoyXilianErrorHandler;
		this.handlers[997]=ResNineHeavyPayRebornErrorHandler;
		this.handlers[406]=ResChibiBuyTodayHandler;
		this.handlers[351]=ResEscortRevengeErrorHandler;
		this.handlers[806]=ResAdviserUpgradeErrorHandler;
		this.handlers[1445]=ResFightPositionExchangeHandler;
		this.handlers[497]=ResKingWarBuyCountErrorHandler;
		this.handlers[343]=ResEscortRobberyHandler;
		this.handlers[1234]=ResGuildGetAllHandler;
		this.handlers[1594]=ResAwakePetHandler;
		this.handlers[1304]=ResTaskGuildSquarePayErrorHandler;
		this.handlers[1132]=ResEscortRevengeRecordHandler;
		this.handlers[529]=ResMarriageTakeSinglePlayerHandler;
		this.handlers[1581]=ResUpdateGMStateHandler;
		this.handlers[1534]=ResEquipZhuWenErrorHandler;
		this.handlers[1546]=ResFuLingGetInfoErrorHandler;
		this.handlers[226]=ResUpdateYeWaiBossHandler;
		this.handlers[1020]=ResAdviserUpgradeDestinyHandler;
		this.handlers[557]=ResMarriagePromoteHouseLvHandler;
		this.handlers[1296]=ResTaskFinishHandler;
		this.handlers[749]=ResUpdateWelfareHandler;
		this.handlers[260]=ResXiLianFaQiHandler;
		this.handlers[1540]=ResEquipFuLingErrorHandler;
		this.handlers[1029]=ResBuyXXHJChallengeTimeHandler;
		this.handlers[232]=ResGetCBTInfoErrorHandler;
		this.handlers[410]=ResKejuNowExaminationErrorHandler;
		this.handlers[1219]=ResGuildChangeNoticeHandler;
		this.handlers[896]=ResBuyWarTokenLevelErrorHandler;
		this.handlers[189]=ResUpdateAttributeGoodsHandler;
		this.handlers[1443]=ResOtherPlayerFightTeamErrorHandler;
		this.handlers[1321]=ResLegionBattleAttackDoorHandler;
		this.handlers[425]=ResTeamDuplicateRoomDissolutionHandler;
		this.handlers[89]=ResUpdateMijiUsableGridHandler;
		this.handlers[214]=ResUpdateQuanMinBossHandler;
		this.handlers[1671]=ResQinWangTeGongErrorHandler;
		this.handlers[876]=ResChatNeedHelpErrorHandler;
		this.handlers[1079]=ResGarrisonWorshipErrorHandler;
		this.handlers[562]=ResMarriagePromoteHouseReceiveErrorHandler;
		this.handlers[1265]=ResTeamCreateErrorHandler;
		this.handlers[39]=ResActiveGameSystemHandler;
		this.handlers[1197]=ResFightPositionAddHandler;
		this.handlers[1089]=ResEmptyGetDataErrorHandler;
		this.handlers[252]=ResTakeYCTTPrizeHandler;
		this.handlers[1041]=ResGarrisonFindTargetHandler;
		this.handlers[273]=ResRankMoBaiErrorHandler;
		this.handlers[1275]=ResTeamKickErrorHandler;
		this.handlers[158]=ResUpgradePetLevelHandler;
		this.handlers[559]=ResMarriageReceiveUpdateHandler;
		this.handlers[1506]=ResRecommendTaskIntegralRewardErrorHandler;
		this.handlers[173]=ResCommonUpgradeErrorHandler;
		this.handlers[1085]=ResMarriageUpdateHandler;
		this.handlers[1422]=ResGetVideosHandler;
		this.handlers[306]=ResYuanZhengTakePrizeErrorHandler;
		this.handlers[282]=ResArenaGetInfoErrorHandler;
		this.handlers[1381]=ResAuctionUpperErrorHandler;
		this.handlers[1474]=ResQuanMinBossOtherJoinHandler;
		this.handlers[323]=ResReceiveOfficialBoxHandler;
		this.handlers[463]=ResNineHeavyUpdateIntegralHandler;
		this.handlers[1194]=ResAdviserUpgradeElementQuickErrorHandler;
		this.handlers[1326]=ResLegionBattleHireErrorHandler;
		this.handlers[548]=ResMarriageGiftHandler;
		this.handlers[390]=ResNineHeavyIntegralRewardErrorHandler;
		this.handlers[785]=ResupdateVipLevelHandler;
		this.handlers[1258]=ResTeamApplyReplyHandler;
		this.handlers[1516]=ResGetWorldBossInfoHandler;
		this.handlers[854]=ResGodClothesOperationErrorHandler;
		this.handlers[1130]=ResArenaGetFightRecordErrorHandler;
		this.handlers[1389]=ResQunYingHuiGetFightInfoHandler;
		this.handlers[103]=ResUpgradeZhanwenErrorHandler;
		this.handlers[144]=ResTakeShiMenRoundPrizeErrorHandler;
		this.handlers[1612]=ResEnterTowerErrorHandler;
		this.handlers[803]=ResAdviserSurmountErrorHandler;
		this.handlers[642]=ResLegionSignMessageHandler;
		this.handlers[1462]=ResBuyWarTokenSucessHandler;
		this.handlers[483]=ResTeamDuplicateZhuluBoxErrorHandler;
		this.handlers[757]=ResUseCardHandler;
		this.handlers[223]=ResClickQuanMinBossDungeonHandler;
		this.handlers[524]=ResWorldBossBoxRemoveErrorHandler;
		this.handlers[730]=ResLiemingHandler;
		this.handlers[1630]=ResTreasureStarUpErrorHandler;
		this.handlers[1051]=ResGarrisonChallengeTargetErrorHandler;
		this.handlers[209]=ResDisposeEquipHandler;
		this.handlers[353]=ResEscortRevengeRewardHandler;
		this.handlers[409]=ResKejuNowExaminationHandler;
		this.handlers[161]=ResUpgradePetStarHandler;
		this.handlers[737]=ResRedEnvelopesHandler;
		this.handlers[1370]=ResChatErrorHandler;
		this.handlers[1355]=ResSceneChangeErrorHandler;
		this.handlers[404]=ResChibiRefreshTaskErrorHandler;
		this.handlers[1479]=ResEquipMakingStoneHandler;
		this.handlers[623]=ResLegionGuardRewardMessageErrorHandler;
		this.handlers[118]=ResChangeGuanQiaDungeonIDHandler;
		this.handlers[1660]=ResTongShuaiJinJianErrorHandler;
		this.handlers[29]=ResPutOnEquipHandler;
		this.handlers[1245]=ResGuildKickErrorHandler;
		this.handlers[85]=ResLockMijiErrorHandler;
		this.handlers[570]=ResAuctionMonitorHandler;
		this.handlers[1026]=ResAdviserUpgradeWakeUpHandler;
		this.handlers[1223]=ResGuildChangePositionErrorHandler;
		this.handlers[893]=ResUpdateWarTokenHandler;
		this.handlers[892]=ResGetWarTokenRewardErrorHandler;
		this.handlers[1205]=ResGuildApplyErrorHandler;
		this.handlers[538]=ResMarriageSuccessHandler;
		this.handlers[515]=ResWorldBossAttackResultErrorHandler;
		this.handlers[764]=ResChatHelpRewardErrorHandler;
		this.handlers[1633]=ResBuyHuntTreasureErrorHandler;
		this.handlers[1592]=ResGetLuckRewardInfoHandler;
		this.handlers[1471]=ResQuanMinBossLeaveHandler;
		this.handlers[1519]=ResWxRechargeHandler;
		this.handlers[506]=ResWorldBossMoveErrorHandler;
		this.handlers[240]=ResGetYCTTInfoHandler;
		this.handlers[115]=ResReceiveGuanQiaChapterPrizeHandler;
		this.handlers[721]=ResRechargeErrorHandler;
		this.handlers[1525]=ResGuanQiaInvestmentUpdateMessageHandler;
		this.handlers[1477]=ResEquipMakingErrorHandler;
		this.handlers[1414]=ResAuctionRemovedHandler;
		this.handlers[1449]=ResOnHookRewardErrorHandler;
		this.handlers[742]=ResGetFuLiRewardErrorHandler;
		this.handlers[1676]=ResGetLeginMemberInfoHandler;
		this.handlers[1285]=ResKingWarFightGetWorshipRewardErrorHandler;
		this.handlers[1287]=ResPVPFightOverUnlockHandler;
		this.handlers[1490]=ResUpdateNewJueWeiLevelHandler;
		this.handlers[194]=ResUpdateWildPetHandler;
		this.handlers[266]=ResDuiHuanHandler;
		this.handlers[1509]=ResRecommendTaskRewardErrorHandler;
		this.handlers[192]=ResTameWildPetHandler;
		this.handlers[1069]=ResGarrisonRevengeErrorHandler;
		this.handlers[12]=ResCreateMainHeroErrorHandler;
		this.handlers[440]=ResTeamDuplicateSweepAwayErrorHandler;
		this.handlers[1267]=ResTeamExitHandler;
		this.handlers[300]=ResYuanZhengResetErrorHandler;
		this.handlers[20]=ResUpdateItemInPacketHandler;
		this.handlers[330]=ResFlushEscortLvHandler;
		this.handlers[81]=ResExchangeMijiHandler;
		this.handlers[1664]=ResRechargeTurntableHandler;
		this.handlers[1235]=ResGuildGetAllErrorHandler;
		this.handlers[632]=ResLegionGuardUpgradeMessageHandler;
		this.handlers[16]=ResRemoveItemInPacketHandler;
		this.handlers[1553]=ResSuperSupplyActHandler;
		this.handlers[53]=ResUpdateZhuanShengExpHandler;
		this.handlers[106]=ResReduceLevelErrorHandler;
		this.handlers[774]=ResLegionHireMessageErrorHandler;
		this.handlers[261]=ResXiLianFaQiErrorHandler;
		this.handlers[1200]=ResFightPositionRemoveHandler;
		this.handlers[1323]=ResLegionBattleGameOverHandler;
		this.handlers[673]=ResInvestmengBuyMessageErrorHandler;
		this.handlers[1673]=ResSelectQingWangRewardHandler;
		this.handlers[168]=ResActivePetGroupErrorHandler;
		this.handlers[776]=ResChatZhuangBiHandler;
		this.handlers[1455]=ResFastOnHookRewardHandler;
		this.handlers[281]=ResArenaGetInfoHandler;
		this.handlers[1430]=ResMysteriousShopHandler;
		this.handlers[564]=ResMarriageRenovationHouseHandler;
		this.handlers[1017]=ResAdviserUpgradeTalentHandler;
		this.handlers[156]=ResReplaceXiLianPetErrorHandler;
		this.handlers[731]=ResLiemingErrorHandler;
		this.handlers[1229]=ResGuildDismissErrorHandler;
		this.handlers[228]=ResReceiveYeWaiBossDungeonPrizeHandler;
		this.handlers[1551]=ResGoldDoubleActUpdateHandler;
		this.handlers[1357]=ResLegionBattleGetLegalKingGuildErrorHandler;
		this.handlers[545]=ResMarriageReceiveFlowersHandler;
		this.handlers[327]=ResReceiveOfficialYesterdayRewardErrorHandler;
		this.handlers[1399]=ResTuanGouTakePrizeHandler;
		this.handlers[374]=ResNineHeavyOtherPlayerJoinHandler;
		this.handlers[782]=ResChangeBossOwnerHandler;
		this.handlers[1046]=ResGarrisonUpdateRevengesHandler;
		this.handlers[1537]=ResGetZhuWenInfoErrorHandler;
		this.handlers[1406]=ResGeneralUpgradeYuanMaiHandler;
		this.handlers[948]=ResUpGradeEquipHandler;
		this.handlers[1491]=ResUpdateNewJueWeiLevelErrorHandler;
		this.handlers[532]=ResMarriageProposeHandler;
		this.handlers[383]=ResNineHeavyPlayerAttackResultErrorHandler;
		this.handlers[451]=ResSoulBoyLingUpgradeHandler;
		this.handlers[1015]=ResUpdateHuoDongNumHandler;
		this.handlers[1448]=ResOnHookRewardHandler;
		this.handlers[1005]=ResYuanZhengRefreshSkillErrorHandler;
		this.handlers[905]=ResCommonWakeUpErrorHandler;
		this.handlers[845]=ResGeneralActiveErrorHandler;
		this.handlers[175]=ResPutUpgradeEquipHandler;
		this.handlers[427]=ResTeamDuplicateRoomCloseFullHandler;
		this.handlers[1047]=ResGarrisonUpdateDoorHandler;
		this.handlers[6]=ResVersionCheckHandler;
	}

	__class(HandlerPool,'net.HandlerPool');
	var __proto=HandlerPool.prototype;
	__proto.handler=function(id){
		return this.handlers[id]==null ? null :new this.handlers [id];
	}

	return HandlerPool;
})()


//class net.EnumHandler
var EnumHandler=(function(){
	function EnumHandler(){}
	__class(EnumHandler,'net.EnumHandler');
	EnumHandler.ACTIVITY_HANDLER="ACTIVITY_HANDLER";
	EnumHandler.ACTIVITYS_HANDLER="ACTIVITYS_HANDLER";
	EnumHandler.UpdateGMStateHandler="UpdateGMStateHandler";
	EnumHandler.SendGoodLuckHandler="StartXiangRuiHandler";
	EnumHandler.SelectLuckHandler="SelectLuckHandler";
	EnumHandler.SelectLuckErrorHandler="SelectLuckErrorHandler";
	EnumHandler.AdvancedRewardError_HANDLER="AdvancedRewardError_HANDLER";
	EnumHandler.AdvancedReward_HANDLER="AdvancedReward_HANDLER";
	EnumHandler.AdvancedRewardInfo_HANDLER="AdvancedRewardInfo_HANDLER";
	EnumHandler.AdviserActiveErrorHandler="AdviserActiveErrorHandler";
	EnumHandler.AdviserActiveHandler="AdviserActiveHandler";
	EnumHandler.AdviserSurmountErrorHandler="AdviserSurmountErrorHandler";
	EnumHandler.AdviserSurmountHandler="AdviserSurmountHandler";
	EnumHandler.AdviserUpgradeDestinyErrorHandler="AdviserUpgradeDestinyErrorHandler";
	EnumHandler.AdviserUpgradeDestinyHandler="AdviserUpgradeDestinyHandler";
	EnumHandler.AdviserUpgradeElementErrorHandler="AdviserUpgradeElementErrorHandler";
	EnumHandler.AdviserUpgradeElementHandler="AdviserUpgradeElementHandler";
	EnumHandler.AdviserUpgradeElementQuickErrorHandler="AdviserUpgradeElementQuickErrorHandler";
	EnumHandler.AdviserUpgradeElementQuickHandler="AdviserUpgradeElementQuickHandler";
	EnumHandler.AdviserUpgradeErrorHandler="AdviserUpgradeErrorHandler";
	EnumHandler.AdviserUpgradeHandler="AdviserUpgradeHandler";
	EnumHandler.AdviserUpgradeTalentErrorHandler="AdviserUpgradeTalentErrorHandler";
	EnumHandler.AdviserUpgradeTalentHandler="ResAdviserUpgradeTalentHandler";
	EnumHandler.AdviserUpgradeWakeUpErrorHandler="AdviserUpgradeWakeUpErrorHandler";
	EnumHandler.AdviserUpgradeWakeUpHandler="AdviserUpgradeWakeUpHandler";
	EnumHandler.GlobalUpdateAppearanceHandler="GlobalUpdateAppearanceHandler";
	EnumHandler.ArenaBuyTimesErrorHandler="ArenaBuyTimesErrorHandler";
	EnumHandler.ArenaBuyTimesHandler="ArenaBuyTimesHandler";
	EnumHandler.ArenaChallengeErrorHandler="ArenaChallengeErrorHandler";
	EnumHandler.ArenaChallengeHandler="ArenaChallengeHandler ";
	EnumHandler.ArenaGetFightRecordErrorHandler="ArenaGetFightRecordErrorHandler";
	EnumHandler.ArenaGetFightRecordHandler="ArenaGetFightRecordHandler ";
	EnumHandler.ArenaGetInfoErrorHandler="ArenaGetInfoErrorHandler";
	EnumHandler.ArenaGetInfoHandler="ArenaGetInfoHandler";
	EnumHandler.ArenaGetRankInfoErrorHandler="ArenaGetRankInfoErrorHandler";
	EnumHandler.ArenaGetRankInfoHandler="ArenaGetRankInfoHandler";
	EnumHandler.AuctionAttentionErrorHandler="AuctionAttentionErrorHandler";
	EnumHandler.AuctionAttentionHandler="AuctionAttentionHandler";
	EnumHandler.AuctionAttentionNotifyHandler="AuctionAttentionNotifyHandler";
	EnumHandler.AuctionContendErrorHandler="AuctionContendErrorHandler";
	EnumHandler.AuctionContendHandler="AuctionContendHandler";
	EnumHandler.AuctionMonitorHandler="AuctionMonitorHandler";
	EnumHandler.AuctionRemovedHandler="AuctionRemovedHandler";
	EnumHandler.AuctionStatusChangeHandler="AuctionStatusChangeHandler";
	EnumHandler.AuctionUpperErrorHandler="AuctionUpperErrorHandler";
	EnumHandler.AuctionUpperHandler="AuctionUpperHandler";
	EnumHandler.UseCardErrorHandler="UseCardErrorHandler";
	EnumHandler.UseCardHandler="UseCardHandler";
	EnumHandler.ChatErrorHandler="ChatErrorHandler";
	EnumHandler.ChatHandler="ChatHandler";
	EnumHandler.ChatHelpErrorHandler="ChatHelpErrorHandler";
	EnumHandler.ChatHelpHandler="ChatHelpHandler";
	EnumHandler.ChatHelpRewardErrorHandler="ChatHelpRewardErrorHandler";
	EnumHandler.ChatHelpRewardHandler="ChatHelpRewardHandler";
	EnumHandler.ChatKanZhuangBiErrorHandler="ChatKanZhuangBiErrorHandler";
	EnumHandler.ChatKanZhuangBiHandler="ChatKanZhuangBiHandler";
	EnumHandler.ChatNeedHelpErrorHandler="ChatNeedHelpErrorHandler";
	EnumHandler.ChatNeedHelpHandler="ChatNeedHelpHandler";
	EnumHandler.ChatZhuangBiErrorHandler="ChatZhuangBiErrorHandler";
	EnumHandler.ChatZhuangBiHandler="ChatZhuangBiHandler";
	EnumHandler.LookPlayerErrorHandler="LookPlayerErrorHandler";
	EnumHandler.LookPlayerHandler="LookPlayerHandler";
	EnumHandler.ChibiBuyQueueErrorHandler="ChibiBuyQueueErrorHandler";
	EnumHandler.ChibiBuyQueueHandler="ChibiBuyQueueHandler";
	EnumHandler.ChibiBuyTodayErrorHandler="ChibiBuyTodayErrorHandler";
	EnumHandler.ChibiBuyTodayHandler="ChibiBuyTodayHandler";
	EnumHandler.ChibiFinishTaskErrorHandler="ChibiFinishTaskErrorHandler";
	EnumHandler.ChibiFinishTaskHandler="ChibiFinishTaskHandler";
	EnumHandler.ChibiRefreshTaskErrorHandler="ChibiRefreshTaskErrorHandler";
	EnumHandler.ChibiRefreshTaskHandler="ChibiRefreshTaskHandler";
	EnumHandler.ChibiStartTaskErrorHandler="ChibiStartTaskErrorHandler";
	EnumHandler.ChibiStartTaskHandler="ChibiStartTaskHandler";
	EnumHandler.ChibiUpdateHandler="ChibiUpdateHandler";
	EnumHandler.ChibiUpdateTodayHandler="ChibiUpdateTodayHandler";
	EnumHandler.DuanZaoUpgradeErrorHandler="DuanZaoUpgradeErrorHandler";
	EnumHandler.DuanZaoUpgradeHandler="DuanZaoUpgradeHandler";
	EnumHandler.GetWorldBossInfoHandler="GetWorldBossInfoHandler";
	EnumHandler.BuyQuanMinBossTimesErrorHandler="BuyQuanMinBossTimesErrorHandler";
	EnumHandler.BuyQuanMinBossTimesHandler="BuyQuanMinBossTimesHandler";
	EnumHandler.ChallengeGuanQiaErrorHandler="ChallengeGuanQiaErrorHandler";
	EnumHandler.ChallengeGuanQiaHandler="ChallengeGuanQiaHandler";
	EnumHandler.ChangeBossOwnerErrorHandler="ChangeBossOwnerErrorHandler";
	EnumHandler.ChangeBossOwnerHandler="ChangeBossOwnerHandler";
	EnumHandler.ChangeGuanQiaDungeonIDErrorHandler="ChangeGuanQiaDungeonIDErrorHandler";
	EnumHandler.ChangeGuanQiaDungeonIDHandler="ChangeGuanQiaDungeonIDHandler";
	EnumHandler.ClickQuanMinBossDungeonErrorHandler="ClickQuanMinBossDungeonErrorHandler";
	EnumHandler.ClickQuanMinBossDungeonHandler="ClickQuanMinBossDungeonHandler";
	EnumHandler.InitQuanMinBossHandler="InitQuanMinBossHandler";
	EnumHandler.InitYeWaiBossHandler="InitYeWaiBossHandler";
	EnumHandler.QuanMinBossJoinHandler="QuanMinBossJoinHandler ";
	EnumHandler.QuanMinBossLeaveHandler="QuanMinBossLeaveHandler";
	EnumHandler.QuanMinBossMoveHandler="QuanMinBossMoveHandler";
	EnumHandler.QuanMinBossOtherJoinHandler="QuanMinBossOtherJoinHandler";
	EnumHandler.ReceiveAllDungeonPrizeErrorHandler="ReceiveAllDungeonPrizeErrorHandler";
	EnumHandler.ReceiveAllDungeonPrizeHandler="ReceiveAllDungeonPrizeHandler";
	EnumHandler.ReceiveDungeonPrizeErrorHandler="ReceiveDungeonPrizeErrorHandler";
	EnumHandler.ReceiveDungeonPrizeHandler="ReceiveDungeonPrizeHandler";
	EnumHandler.ReceiveGuanQiaChapterPrizeErrorHandler="ReceiveGuanQiaChapterPrizeErrorHandler";
	EnumHandler.ReceiveGuanQiaChapterPrizeHandler="ReceiveGuanQiaChapterPrizeHandler";
	EnumHandler.ReceiveQuanMinBossDungeonPrizeErrorHandler="ReceiveQuanMinBossDungeonPrizeErrorHandler";
	EnumHandler.ReceiveQuanMinBossDungeonPrizeHandler="ReceiveQuanMinBossDungeonPrizeHandlerr";
	EnumHandler.ReceiveYeWaiBossDungeonPrizeErrorHandler="ReceiveYeWaiBossDungeonPrizeErrorHandler";
	EnumHandler.ReceiveYeWaiBossDungeonPrizeHandler="ReceiveYeWaiBossDungeonPrizeHandler";
	EnumHandler.UpdateCaiLiaoDungeonTimeHandler="UpdateCaiLiaoDungeonTimeHandler";
	EnumHandler.UpdateDungeonTodayTimesHandler="UpdateDungeonTodayTimesHandler";
	EnumHandler.UpdateQuanMinBossHandler="UpdateQuanMinBossHandler";
	EnumHandler.UpdateQuanMinBossTimesHandler="UpdateQuanMinBossTimesHandler";
	EnumHandler.UpdateYeWaiBossHandler="UpdateYeWaiBossHandler";
	EnumHandler.ZhiZhunBossGetInfoHandler="ZhiZhunBossGetInfoHandler";
	EnumHandler.EmptyCityAttackErrorHandler="EmptyCityAttackErrorHandler";
	EnumHandler.EmptyCityAttackHandler="EmptyCityAttackHandler";
	EnumHandler.EmptyCityOccupiedHandler="EmptyCityOccupiedHandler";
	EnumHandler.EmptyCityPayColdErrorHandler="EmptyCityPayColdErrorHandler";
	EnumHandler.EmptyCityPayColdHandler="EmptyCityPayColdHandler";
	EnumHandler.EmptyGetBattleRecordErrorHandler="EmptyGetBattleRecordErrorHandler";
	EnumHandler.EmptyGetBattleRecordHandler="EmptyGetBattleRecordHandler";
	EnumHandler.EmptyGetDataErrorHandler="EmptyGetDataErrorHandler";
	EnumHandler.EmptyGetDataHandler="EmptyGetDataHandler";
	EnumHandler.EmptyUpdateCityHandler="EmptyUpdateCityHandler";
	EnumHandler.EmptyUpdatePlayerHandler="EmptyUpdatePlayerHandler";
	EnumHandler.EmptyUpdateStateHandler="EmptyUpdateStateHandler";
	EnumHandler.EquipIllusionErrorHandler="EquipIllusionErrorHandler";
	EnumHandler.EquipIllusionHandler="EquipIllusionHandler";
	EnumHandler.EquipMakingErrorHandler="EquipMakingErrorHandler";
	EnumHandler.EquipMakingHandler="EquipMakingHandler";
	EnumHandler.EquipMakingStoneErrorHandler="EquipMakingStoneErrorHandler";
	EnumHandler.EquipMakingStoneHandler="EquipMakingStoneHandler";
	EnumHandler.EquipPromoteErrorMessage="EquipPromoteErrorMessage";
	EnumHandler.EquipPromoteMessage="EquipPromoteMessage";
	EnumHandler.EquipSuitActiveErrorMessage="EquipSuitActiveErrorMessage";
	EnumHandler.EquipSuitActiveMessage="EquipSuitActiveMessage";
	EnumHandler.PutOnEquipErrorHandler="PutOnEquipErrorHandler";
	EnumHandler.PutOnEquipHandler="PutOnEquipHandler";
	EnumHandler.PutUpgradeEquipErrorHandler="PutUpgradeEquipErrorHandler";
	EnumHandler.PutUpgradeEquipHandler="PutUpgradeEquipHandler";
	EnumHandler.UpGradeEquipErrorHandler="UpGradeEquipErrorHandler";
	EnumHandler.UpGradeEquipHandler="UpGradeEquipHandler";
	EnumHandler.EscortRevengeErrorHandler="EscortRevengeErrorHandler";
	EnumHandler.EscortRevengeHandler="EscortRevengeHandler";
	EnumHandler.EscortRevengeRecordErrorHandler="EscortRevengeRecordErrorHandler";
	EnumHandler.EscortRevengeRecordHandler="EscortRevengeRecordHandler";
	EnumHandler.EscortRevengeRewardErrorHandler="EscortRevengeRewardErrorHandler ";
	EnumHandler.EscortRevengeRewardHandler="EscortRevengeRewardHandler ";
	EnumHandler.EscortRobbedHandler="EscortRobbedHandler";
	EnumHandler.EscortRobberyBackHandler="EscortRobberyBackHandler";
	EnumHandler.EscortRobberyErrorHandler="EscortRobberyErrorHandler";
	EnumHandler.EscortRobberyHandler="EscortRobberyHandler";
	EnumHandler.EscortRobberyRewardErrorHandler="EscortRobberyRewardErrorHandler";
	EnumHandler.EscortRobberyRewardHandler="EscortRobberyRewardHandler";
	EnumHandler.FinishEscortHandler="FinishEscortHandler";
	EnumHandler.FlushEscortDayEndHandler="FlushEscortDayEndHandler";
	EnumHandler.FlushEscortLvErrorHandler="FlushEscortLvErrorHandler";
	EnumHandler.FlushEscortLvHandler="FlushEscortLvHandler";
	EnumHandler.FlushEscortTargetErrorHandler="FlushEscortTargetErrorHandler";
	EnumHandler.FlushEscortTargetHandler="FlushEscortTargetHandler";
	EnumHandler.KillEscortTimeErrorHandler="KillEscortTimeErrorHandler";
	EnumHandler.KillEscortTimeHandler="KillEscortTimeHandler";
	EnumHandler.ReceiveEscortRewardErrorHandler="ReceiveEscortRewardErrorHandler ";
	EnumHandler.ReceiveEscortRewardHandler="ReceiveEscortRewardHandler";
	EnumHandler.StartEscortErrorHandler="StartEscortErrorHandler";
	EnumHandler.StartEscortHandler="StartEscortHandler";
	EnumHandler.UpdateEscortHandler="UpdateEscortHandler";
	EnumHandler.KejuAnswerExaminationErrorHandler="KejuAnswerExaminationErrorHandler";
	EnumHandler.KejuAnswerExaminationHandler="KejuAnswerExaminationHandler";
	EnumHandler.KejuExaminationRankErrorHandler="KejuExaminationRankErrorHandler";
	EnumHandler.KejuExaminationRankHandler="KejuExaminationRankHandler";
	EnumHandler.KejuExitErrorHandler="KejuExitErrorHandler";
	EnumHandler.KejuExitHandler="KejuExitHandler";
	EnumHandler.KejuNewExaminationHandler="KejuNewExaminationHandler";
	EnumHandler.KejuNowExaminationErrorHandler="KejuNowExaminationErrorHandler";
	EnumHandler.KejuNowExaminationHandler="KejuNowExaminationHandler";
	EnumHandler.FightPositionAddErrorHandler="FightPositionAddErrorHandler";
	EnumHandler.FightPositionAddHandler="FightPositionAddHandler";
	EnumHandler.FightPositionExchangeErrorHandler="FightPositionExchangeErrorHandler";
	EnumHandler.FightPositionExchangeHandler="FightPositionExchangeHandler";
	EnumHandler.FightPositionRemoveErrorHandler="FightPositionRemoveErrorHandler";
	EnumHandler.FightPositionRemoveHandler="FightPositionRemoveHandler";
	EnumHandler.FightTestHandler="FightTestHandler";
	EnumHandler.OtherPlayerFightTeamErrorHandler="OtherPlayerFightTeamErrorHandler";
	EnumHandler.OtherPlayerFightTeamHandler="OtherPlayerFightTeamHandler";
	EnumHandler.PVPFightOverUnlockErrorHandler="PVPFightOverUnlockErrorHandler";
	EnumHandler.PVPFightOverUnlockHandler="PVPFightOverUnlockHandler";
	EnumHandler.PVPFightStateChangeHandler="PVPFightStateChangeHandler";
	EnumHandler.OtherPlayerAttrInfoHandler="OtherPlayerAttrInfoHandler";
	EnumHandler.RecPlayerAttrInfo="RecPlayerAttrInfo";
	EnumHandler.RecPlayerTeamInfo="RecPlayerTeamInfo";
	EnumHandler.FitGemUpgradeErrorHandler="FitGemUpgradeErrorHandler";
	EnumHandler.FitGemUpgradeHandler="FitGemUpgradeHandler";
	EnumHandler.FitSetEquipErrorHandler="FitSetEquipErrorHandler";
	EnumHandler.FitSetEquipGemErrorHandler="FitSetEquipGemErrorHandler";
	EnumHandler.FitSetEquipGemHandler="FitSetEquipGemHandler";
	EnumHandler.FitSetEquipHandler="FitSetEquipHandler";
	EnumHandler.FitSetParticipantErrorHandler="FitSetParticipantErrorHandler";
	EnumHandler.FitSetParticipantHandler="FitSetParticipantHandler";
	EnumHandler.FitSetSkillErrorHandler="FitSetSkillErrorHandler";
	EnumHandler.FitSetSkillHandler="FitSetSkillHandler";
	EnumHandler.FitSynthesisErrorHandler="FitSynthesisErrorHandler";
	EnumHandler.FitSynthesisHandler="FitSynthesisHandler";
	EnumHandler.FitUnclockHandler="FitUnclockHandler";
	EnumHandler.FitUpdateArtHandler="FitUpdateArtHandler";
	EnumHandler.FitUpdateEquipLockHandler="FitUpdateEquipLockHandler";
	EnumHandler.FitUpdateMasterHandler="FitUpdateMasterHandler";
	EnumHandler.FitUpdateSkillHandler="FitUpdateSkillHandler";
	EnumHandler.FitUpgradePositionErrorHandler="FitUpgradePositionErrorHandler";
	EnumHandler.FitUpgradePositionHandler="FitUpgradePositionHandler";
	EnumHandler.FitUpgradeWeaponErrorHandler="FitUpgradeWeaponErrorHandler";
	EnumHandler.FitUpgradeWeaponHandler="FitUpgradeWeaponHandler";
	EnumHandler.GarrisonBuyTimesErrorHandler="GarrisonBuyTimesErrorHandler";
	EnumHandler.GarrisonBuyTimesHandler="GarrisonBuyTimesHandler";
	EnumHandler.GarrisonChallengeTargetErrorHandler="GarrisonChallengeTargetErrorHandler";
	EnumHandler.GarrisonChallengeTargetHandler="GarrisonChallengeTargetHandler";
	EnumHandler.GarrisonFindTargetErrorHandler="GarrisonFindTargetErrorHandler";
	EnumHandler.GarrisonFindTargetHandler="GarrisonFindTargetHandler";
	EnumHandler.GarrisonGerRankErrorHandler="GarrisonGerRankErrorHandler";
	EnumHandler.GarrisonGerRankHandler="GarrisonGerRankHandler";
	EnumHandler.GarrisonGetDataErrorHandler="GarrisonGetDataErrorHandler";
	EnumHandler.GarrisonGetDataHandler="GarrisonGetDataHandler";
	EnumHandler.GarrisonGetOverLoadErrorHandler="GarrisonGetOverLoadErrorHandler";
	EnumHandler.GarrisonGetOverLoadHandler="GarrisonGetOverLoadHandler";
	EnumHandler.GarrisonRevengeErrorHandler="GarrisonRevengeErrorHandler";
	EnumHandler.GarrisonRevengeHandler="GarrisonRevengeHandler";
	EnumHandler.GarrisonSetGuardErrorHandler="GarrisonSetGuardErrorHandler";
	EnumHandler.GarrisonSetGuardHandler="GarrisonSetGuardHandler";
	EnumHandler.GarrisonTakeRewardErrorHandler="GarrisonTakeRewardErrorHandler";
	EnumHandler.GarrisonTakeRewardHandler="GarrisonTakeRewardHandler";
	EnumHandler.GarrisonTakeWeekRewardErrorHandler="GarrisonTakeWeekRewardErrorHandler";
	EnumHandler.GarrisonTakeWeekRewardHandler="GarrisonTakeWeekRewardHandler";
	EnumHandler.GarrisonUpdateDoorHandler="GarrisonUpdateDoorHandler ";
	EnumHandler.GarrisonUpdateGarrisonCountHandler="GarrisonUpdateGarrisonCountHandler";
	EnumHandler.GarrisonUpdateRevengesHandler="GarrisonUpdateRevengesHandler";
	EnumHandler.GarrisonUpdateRewardHandler="GarrisonUpdateRewardHandler";
	EnumHandler.GarrisonUpdateTargetHandler="GarrisonUpdateTargetHandler";
	EnumHandler.GarrisonUpgradeErrorHandler="GarrisonUpgradeErrorHandler";
	EnumHandler.GarrisonUpgradeHandler="GarrisonUpgradeHandler";
	EnumHandler.GarrisonWorshipErrorHandler="GarrisonWorshipErrorHandler";
	EnumHandler.GarrisonWorshipHandler="GarrisonWorshipHandler";
	EnumHandler.LegionBattleAttackDoorErrorHandler="LegionBattleAttackDoorErrorHandler";
	EnumHandler.LegionBattleAttackDoorHandler="LegionBattleAttackDoorHandler";
	EnumHandler.LegionBattleAttackMonsterErrorHandler="LegionBattleAttackMonsterErrorHandler ";
	EnumHandler.LegionBattleAttackMonsterHandler="LegionBattleAttackMonsterHandler";
	EnumHandler.LegionBattleAttackPlayerErrorHandler="LegionBattleAttackPlayerErrorHandler";
	EnumHandler.LegionBattleAttackPlayerHandler="LegionBattleAttackPlayerHandler";
	EnumHandler.LegionBattleAttackThroneErrorHandler="LegionBattleAttackThroneErrorHandler ";
	EnumHandler.LegionBattleAttackThroneHandler="LegionBattleAttackThroneHandler";
	EnumHandler.LegionBattleColdHandler="LegionBattleColdHandler";
	EnumHandler.LegionBattleGameOverHandler="LegionBattleGameOverHandler";
	EnumHandler.LegionBattleGetLegalKingGuildErrorHandler="LegionBattleGetLegalKingGuildErrorHandler";
	EnumHandler.LegionBattleGetLegalKingGuildHandler="LegionBattleGetLegalKingGuildHandler";
	EnumHandler.LegionBattleGetStateHandler="LegionBattleGetStateHandler";
	EnumHandler.LegionBattleHireErrorHandler="LegionBattleHireErrorHandler";
	EnumHandler.LegionBattleHireHandler="LegionBattleHireHandler";
	EnumHandler.LegionBattleIntegralRewardErrorHandler="LegionBattleIntegralRewardErrorHandler";
	EnumHandler.LegionBattleIntegralRewardHandler="LegionBattleIntegralRewardHandler";
	EnumHandler.LegionBattleLeaveErrorHandler="LegionBattleLeaveErrorHandler";
	EnumHandler.LegionBattleLeaveHandler="LegionBattleLeaveHandler";
	EnumHandler.LegionBattlePayRebornErrorHandler="LegionBattlePayRebornErrorHandler";
	EnumHandler.LegionBattlePayRebornHandler="LegionBattlePayRebornHandler";
	EnumHandler.LegionBattleUpdateBossRankHandler="LegionBattleUpdateBossRankHandler";
	EnumHandler.LegionBattleUpdateMinionRankHandler="LegionBattleUpdateMinionRankHandler";
	EnumHandler.LegionBattleUpdateRecordsHandler="LegionBattleUpdateRecordsHandler";
	EnumHandler.LegionBattleUpdateSceneCountHandler="LegionBattleUpdateSceneCountHandler";
	EnumHandler.LegionBattleUpdateScorePrizeHandler="LegionBattleUpdateScorePrizeHandler ";
	EnumHandler.LegionBattleUpdateThroneHandler="LegionBattleUpdateThroneHandler";
	EnumHandler.LegionBattleUpdateThroneRankHandler="LegionBattleUpdateThroneRankHandler";
	EnumHandler.GeneralActiveErrorHandler="GeneralActiveErrorHandler";
	EnumHandler.GeneralActiveHandler="GeneralActiveHandler";
	EnumHandler.GeneralSurmountErrorHandler="GeneralSurmountErrorHandler";
	EnumHandler.GeneralSurmountHandler="GeneralSurmountHandler";
	EnumHandler.GeneralUpgradeErrorHandler="GeneralUpgradeErrorHandler";
	EnumHandler.GeneralUpgradeHandler="GeneralUpgradeHandler";
	EnumHandler.GeneralUpgradeJueWuErrorHandler="GeneralUpgradeJueWuErrorHandler";
	EnumHandler.GeneralUpgradeJueWuHandler="GeneralUpgradeJueWuHandler";
	EnumHandler.GeneralUpgradeStarErrorHandler="GeneralUpgradeStarErrorHandler";
	EnumHandler.GeneralUpgradeStarHandler="GeneralUpgradeStarHandler";
	EnumHandler.GeneralUpgradeWeaponErrorHandler="GeneralUpgradeWeaponErrorHandler";
	EnumHandler.GeneralUpgradeWeaponHandler="GeneralUpgradeWeaponHandler";
	EnumHandler.GeneralUpgradeYuanMaiErrorHandler="GeneralUpgradeYuanMaiErrorHandler";
	EnumHandler.GeneralUpgradeYuanMaiHandler="GeneralUpgradeYuanMaiHandler";
	EnumHandler.GodClothesOperationErrorHandler="GodClothesOperationErrorHandler";
	EnumHandler.GodClothesOperationHandler="GodClothesOperationHandler";
	EnumHandler.PutOnGodClothesErrorHandler="PutOnGodClothesErrorHandler";
	EnumHandler.PutOnGodClothesHandler="PutOnGodClothesHandler";
	EnumHandler.SaveLastQuenchingAttrHandler="SaveLastQuenchingAttrHandler";
	EnumHandler.DisposeEquipErrorHandler="DisposeEquipErrorHandler";
	EnumHandler.DisposeEquipHandler="DisposeEquipHandler";
	EnumHandler.DisposeErrorHandler="DisposeErrorHandler";
	EnumHandler.DisposeHandler="DisposeHandler";
	EnumHandler.UpdateAttributeGoodsHandler="UpdateAttributeGoodsHandler";
	EnumHandler.UpdateExchangeCountHandler="UpdateExchangeCountHandler";
	EnumHandler.UpdateExchangeGoodsHandler="UpdateExchangeGoodsHandler";
	EnumHandler.UpdateHeroAttributeGoodsHandler="UpdateHeroAttributeGoodsHandler";
	EnumHandler.UseGoodsErrorHandler="UseGoodsErrorHandler";
	EnumHandler.UseGoodsHandler=" UseGoodsHandler";
	EnumHandler.GuildAddEventHandler="GuildAddEventHandler ";
	EnumHandler.GuildApplyErrorHandler="GuildApplyErrorHandler";
	EnumHandler.GuildApplyHandler="GuildApplyHandler";
	EnumHandler.GuildApplyReplyErrorHandler="GuildApplyReplyErrorHandler";
	EnumHandler.GuildApplyReplyHandler="GuildApplyReplyHandler";
	EnumHandler.GuildChangeAutoAgreeApplyErrorHandler="GuildChangeAutoAgreeApplyErrorHandler";
	EnumHandler.GuildChangeAutoAgreeApplyHandler="GuildChangeAutoAgreeApplyHandler";
	EnumHandler.GuildChangeFightPowerErrorHandler="GuildChangeFightPowerErrorHandler";
	EnumHandler.GuildChangeFightPowerHandler="GuildChangeFightPowerHandler";
	EnumHandler.GuildChangeNameErrorHandler="GuildChangeNameErrorHandler";
	EnumHandler.GuildChangeNameHandler="GuildChangeNameHandler";
	EnumHandler.GuildChangeNoticeErrorHandler="GuildChangeNoticeErrorHandler";
	EnumHandler.GuildChangeNoticeHandler="GuildChangeNoticeHandler";
	EnumHandler.GuildChangePositionErrorHandler="GuildChangePositionErrorHandler";
	EnumHandler.GuildChangePositionHandler="GuildChangePositionHandler";
	EnumHandler.GuildCreateErrorHandler="GuildCreateErrorHandler";
	EnumHandler.GuildCreateHandler="GuildCreateHandler";
	EnumHandler.GuildDismissErrorHandler="GuildDismissErrorHandler";
	EnumHandler.GuildDismissHandler="GuildDismissHandler";
	EnumHandler.GuildExitErrorHandler="GuildExitErrorHandler";
	EnumHandler.GuildExitHandler="GuildExitHandler";
	EnumHandler.GuildGetAllErrorHandler="GuildGetAllErrorHandler";
	EnumHandler.GuildGetAllHandler="GuildGetAllHandler";
	EnumHandler.GuildInitHandler="GuildInitHandler";
	EnumHandler.GuildInviteErrorHandler="GuildInviteErrorHandler";
	EnumHandler.GuildInviteHandler="GuildInviteHandler";
	EnumHandler.GuildInviteReplyErrorHandler="GuildInviteReplyErrorHandler";
	EnumHandler.GuildInviteReplyHandler="GuildInviteReplyHandler";
	EnumHandler.GuildKickErrorHandler="GuildKickErrorHandler";
	EnumHandler.GuildKickHandler="GuildKickHandler";
	EnumHandler.GuildMemberAddHandler="GuildMemberAddHandler";
	EnumHandler.GuildMemberRemoveHandler="GuildMemberRemoveHandler";
	EnumHandler.GuildMemberValueUpdateHandler="GuildMemberValueUpdateHandler";
	EnumHandler.GuildUpdateLevelHandler="GuildUpdateLevelHandler";
	EnumHandler.GuildUpdatePositionHandler="GuildUpdatePositionHandler";
	EnumHandler.GuildValueUpdateHandler="GuildValueUpdateHandler";
	EnumHandler.ResSendGuildExitTimeHandler="ResSendGuildExitTimeHandler";
	EnumHandler.LeginUpdateMessageHandler="LeginUpdateMessageHandler";
	EnumHandler.GetLeginMemberInfoHandler="GetLeginMemberInfoHandler";
	EnumHandler.HandBookActivateErrorHandler="HandBookActivateErrorHandler";
	EnumHandler.HandBookActivateHandler="HandBookActivateHandler";
	EnumHandler.HandBookDecomposeErrorHandler="HandBookDecomposeErrorHandler";
	EnumHandler.HandBookDecomposeHandler="HandBookDecomposeHandler";
	EnumHandler.HandBookFastUpStarHandler="HandBookFastUpStarHandler";
	EnumHandler.HandBookUpStarErrorHandler="HandBookUpStarErrorHandler";
	EnumHandler.HandBookUpStarHandler="HandBookUpStarHandler";
	EnumHandler.CreateMainHeroErrorHandler="CreateMainHeroErrorHandler";
	EnumHandler.CreateMainHeroHandler="CreateMainHeroHandler";
	EnumHandler.LevelUpErrorHandler="LevelUpErrorHandler";
	EnumHandler.UpdateAttributeHandler="UpdateAttributeHandler";
	EnumHandler.InvestmengBuyMessageErrorHandler="InvestmengBuyMessageErrorHandler";
	EnumHandler.InvestmengBuyMessageHandler="InvestmengBuyMessageHandler";
	EnumHandler.InvestmengTaskRewardMessageErrorHandler="InvestmengTaskRewardMessageErrorHandler";
	EnumHandler.InvestmengTaskRewardMessageHandler="InvestmengTaskRewardMessageHandler";
	EnumHandler.InvestmengUpdateTaskMessageErrorHandler="InvestmengUpdateTaskMessageErrorHandler";
	EnumHandler.InvestmengUpdateTaskMessageHandler="InvestmengUpdateTaskMessageHandler";
	EnumHandler.JingMaiUpgradeErrorHandler="JingMaiUpgradeErrorHandler";
	EnumHandler.JingMaiUpgradeHandler="JingMaiUpgradeHandler";
	EnumHandler.UpdateJueWeiLevelErrorHandler="UpdateJueWeiLevelErrorHandler";
	EnumHandler.UpdateJueWeiLevelHandler="UpdateJueWeiLevelHandler";
	EnumHandler.UpdateNewJueWeiLevelErrorHandler="UpdateNewJueWeiLevelErrorHandler";
	EnumHandler.UpdateNewJueWeiLevelHandler="UpdateNewJueWeiLevelHandler";
	EnumHandler.KingWarBuyCountErrorHandler="KingWarBuyCountErrorHandler";
	EnumHandler.KingWarBuyCountHandler="KingWarBuyCountHandler";
	EnumHandler.KingWarFightGetWorshipInfoHandler="KingWarFightGetWorshipInfoHandler";
	EnumHandler.KingWarFightGetWorshipRewardErrorHandler="KingWarFightGetWorshipRewardErrorHandler";
	EnumHandler.KingWarFightGetWorshipRewardHandler="KingWarFightGetWorshipRewardHandler";
	EnumHandler.KingWarFightRecordErrorHandler="KingWarFightRecordErrorHandler";
	EnumHandler.KingWarFightRecordHandler="KingWarFightRecordHandler";
	EnumHandler.KingWarFightRewardErrorHandler="KingWarFightRewardErrorHandler";
	EnumHandler.KingWarFightRewardHandler="KingWarFightRewardHandler";
	EnumHandler.KingWarGetExtPrizeErrorHandler="KingWarGetExtPrizeErrorHandler";
	EnumHandler.KingWarGetExtPrizeHandler="KingWarGetExtPrizeHandler";
	EnumHandler.KingWarGetRankHandler="KingWarGetRankHandler";
	EnumHandler.KingWarGetWorshipBeanErrorHandler="KingWarGetWorshipBeanErrorHandler";
	EnumHandler.KingWarGetWorshipBeanHandler="KingWarGetWorshipBeanHandler";
	EnumHandler.KingWarStartFightErrorHandler="KingWarStartFightErrorHandler";
	EnumHandler.KingWarStartFightHandler="KingWarStartFightHandler";
	EnumHandler.KingWarUpdateHandler="KingWarUpdateHandler";
	EnumHandler.KingWarWorshipErrorHandler="KingWarWorshipErrorHandler";
	EnumHandler.KingWarWorshipHandler="KingWarWorshipHandler";
	EnumHandler.LegionExchangeItemMessageErrorHandler="LegionExchangeItemMessageErrorHandler";
	EnumHandler.LegionExchangeItemMessageHandler="LegionExchangeItemMessageHandler";
	EnumHandler.LegionFlushExchangeItemMessageErrorHandler="LegionFlushExchangeItemMessageErrorHandler";
	EnumHandler.LegionGuardRewardMessageErrorHandler="LegionGuardRewardMessageErrorHandler";
	EnumHandler.LegionGuardRewardMessageHandler="LegionGuardRewardMessageHandler";
	EnumHandler.LegionGuardUpgradeMessageErrorHandler="LegionGuardUpgradeMessageErrorHandler";
	EnumHandler.LegionGuardUpgradeMessageHandler="LegionGuardUpgradeMessageHandler";
	EnumHandler.LegionHireMessageErrorHandler="LegionHireMessageErrorHandler";
	EnumHandler.LegionHireMessageHandler="LegionHireMessageHandler";
	EnumHandler.LegionIntoSquareMessageErrorHandler="LegionIntoSquareMessageErrorHandler";
	EnumHandler.LegionIntoSquareMessageHandler="LegionIntoSquareMessageHandler";
	EnumHandler.LegionLvUpdateMessageHandler="LegionLvUpdateMessageHandler";
	EnumHandler.LegionOtherIntoSquareMessageHandler="LegionOtherIntoSquareMessageHandler";
	EnumHandler.LegionOutSquareMessageErrorHandler="LegionOutSquareMessageErrorHandler";
	EnumHandler.LegionOutSquareMessageHandler="LegionOutSquareMessageHandler";
	EnumHandler.LegionSignMessageErrorHandler="LegionSignMessageErrorHandler";
	EnumHandler.LegionSignMessageHandler="LegionSignMessageHandler";
	EnumHandler.LegionSignRewardMessageErrorHandler="LegionSignRewardMessageErrorHandler";
	EnumHandler.LegionSignRewardMessageHandler="LegionSignRewardMessageHandler";
	EnumHandler.LegionSkillUpgradeMessageErrorHandler="LegionSkillUpgradeMessageErrorHandler ";
	EnumHandler.LegionSkillUpgradeMessageHandler="LegionSkillUpgradeMessageHandler";
	EnumHandler.LegionSquardTaskMessageErrorHandler="LegionSquardTaskMessageErrorHandler";
	EnumHandler.LegionSquardTaskMessageHandler="LegionSquardTaskMessageHandler";
	EnumHandler.LegionTaskFinishMessageErrorHandler="LegionTaskFinishMessageErrorHandler";
	EnumHandler.LegionUpdateExchangeMessageHandler="LegionUpdateExchangeMessageHandler";
	EnumHandler.LegionUpdateGuardMessageHandler="LegionUpdateGuardMessageHandler";
	EnumHandler.LegionUpdateGuardTaskMessageHandler="LegionUpdateGuardTaskMessageHandler";
	EnumHandler.LegionUpdateMoneyMessageHandler="LegionUpdateMoneyMessageHandler";
	EnumHandler.LegionUpdateShopMessageHandler="LegionUpdateShopMessageHandler";
	EnumHandler.LegionUpdateSquardTaskMessageHandler="LegionUpdateSquardTaskMessageHandler";
	EnumHandler.LegionUpdateTeamDuplicateMessageHandler="LegionUpdateTeamDuplicateMessageHandler";
	EnumHandler.TeamSkipHandler="TeamSkipHandler";
	EnumHandler.GetXiYouMingGeHandler="GetXiYouMingGeHandler";
	EnumHandler.LiemingErrorHandler="LiemingErrorHandler";
	EnumHandler.LiemingHandler="LiemingHandler";
	EnumHandler.UpdateLieMingLevelErrorHandler="UpdateLieMingLevelErrorHandler";
	EnumHandler.UpdateLieMingLevelHandler="UpdateLieMingLevelHandler";
	EnumHandler.UpdateLieMingLevelSucessHandler="UpdateLieMingLevelSucessHandler";
	EnumHandler.KickHandler="KickHandler";
	EnumHandler.Login37ErrorHandler="Login37ErrorHandler";
	EnumHandler.Login37Handler="Login37Handler";
	EnumHandler.LoginForTypeErrorHandler="LoginForTypeErrorHandler";
	EnumHandler.LoginForTypeHandler="LoginForTypeHandler";
	EnumHandler.LoginLocalErrorHandler="LoginLocalErrorHandler";
	EnumHandler.LoginLocalHandler="LoginLocalHandler";
	EnumHandler.VersionCheckErrorHandler="VersionCheckErrorHandler";
	EnumHandler.VersionCheckHandler="VersionCheckHandler";
	EnumHandler.AddMailHandler="AddMailHandler";
	EnumHandler.CollectMailErrorHandler="CollectMailErrorHandler";
	EnumHandler.CollectMailHandler="CollectMailHandler ";
	EnumHandler.ReadMailErrorHandlerString="ReadMailErrorHandler";
	EnumHandler.ReadMailHandler="ReadMailHandler";
	EnumHandler.RemoveMailHandler="RemoveMailHandler";
	EnumHandler.MarriageFlowersErrorHandler="MarriageFlowersErrorHandler";
	EnumHandler.MarriageFlowersHandler="MarriageFlowersHandler";
	EnumHandler.MarriageGetTeammateSkinErrorHandler="MarriageGetTeammateSkinErrorHandler";
	EnumHandler.MarriageGetTeammateSkinHandler="MarriageGetTeammateSkinHandler";
	EnumHandler.MarriageGiftErrorHandler="MarriageGiftErrorHandler";
	EnumHandler.MarriageGiftHandler="MarriageGiftHandler";
	EnumHandler.MarriageOperationProposeErrorHandler="MarriageOperationProposeErrorHandler";
	EnumHandler.MarriageOperationProposeHandler="MarriageOperationProposeHandler";
	EnumHandler.MarriagePromoteHouseLvErrorHandler="MarriagePromoteHouseLvErrorHandler";
	EnumHandler.MarriagePataInviteErrorHandler="MarriagePataInviteErrorHandler";
	EnumHandler.MarriagePataInviteHandler="MarriagePataInviteHandler";
	EnumHandler.MarriagePataInviteUpdateErrorHandler="MarriagePataInviteUpdateErrorHandler";
	EnumHandler.MarriagePromoteHouseLvHandler="MarriagePromoteHouseLvHandler";
	EnumHandler.MarriagePromoteHouseReceiveErrorHandler="MarriagePromoteHouseReceiveErrorHandler";
	EnumHandler.MarriagePromoteHouseReceiveHandler="MarriagePromoteHouseReceiveHandler";
	EnumHandler.MarriageProposeErrorHandler="MarriageProposeErrorHandler";
	EnumHandler.MarriageProposeHandler="MarriageProposeHandler";
	EnumHandler.MarriageRdivorceErrorHandler="MarriageRdivorceErrorHandler";
	EnumHandler.MarriageRdivorceHandler="MarriageRdivorceHandler";
	EnumHandler.MarriageReceiveFlowersHandler="MarriageReceiveFlowersHandler";
	EnumHandler.MarriageReceiveUpdateHandler="MarriageReceiveUpdateHandler";
	EnumHandler.MarriageRenovationHouseErrorHandler="MarriageRenovationHouseErrorHandler";
	EnumHandler.MarriageRenovationHouseHandler="MarriageRenovationHouseHandler";
	EnumHandler.MarriageSuccessHandler="MarriageSuccessHandler";
	EnumHandler.MarriageTakeSinglePlayerErrorHandler="MarriageTakeSinglePlayerErrorHandler";
	EnumHandler.MarriageTakeSinglePlayerHandler="MarriageTakeSinglePlayerHandler";
	EnumHandler.MarriageUpdateHandler="MarriageUpdateHandler";
	EnumHandler.MarriageUpdateIntimateHandler="MarriageUpdateIntimateHandler";
	EnumHandler.MarriageUpdateProposeHandler="MarriageUpdateProposeHandler";
	EnumHandler.MarriageWeddingInvitationHandler="MarriageWeddingInvitationHandler";
	EnumHandler.MarriageGetMarryPataInfoHandler="MarriageGetMarryPataInfoHandler";
	EnumHandler.CommandErrorHandler="CommandErrorHandler";
	EnumHandler.CommandHandler="CommandHandler";
	EnumHandler.DayEndHandler="DayEndHandler";
	EnumHandler.DuiHuanErrorHandler="DuiHuanErrorHandler";
	EnumHandler.DuiHuanHandler="DuiHuanHandler";
	EnumHandler.FastOnHookRewardErrorHandler="FastOnHookRewardErrorHandler";
	EnumHandler.FastOnHookRewardHandler="FastOnHookRewardHandler";
	EnumHandler.FastOnHookRewardInfoHandler="FastOnHookRewardInfoHandler";
	EnumHandler.FirstDayEndLoginHandler="FirstDayEndLoginHandler";
	EnumHandler.GetRechargeInfoHandler="GetRechargeInfoHandler";
	EnumHandler.HeartBeatHandler="HeartBeatHandler";
	EnumHandler.OnHookRewardErrorHandler="OnHookRewardErrorHandler";
	EnumHandler.OnHookRewardHandler="OnHookRewardHandler";
	EnumHandler.OnHookRewardInfoHandler="OnHookRewardInfoHandler";
	EnumHandler.RechargeErrorHandler="RechargeErrorHandler";
	EnumHandler.RechargeHandler="RechargeHandler";
	EnumHandler.WxIOSAuthorizeDataHandler="WxIOSAuthorizeDataHandler";
	EnumHandler.WxRechargeHandler="WxRechargeHandler";
	EnumHandler.RechargeUpdateHandler="RechargeUpdateHandler";
	EnumHandler.ShowOfflinePrizeHandler="ShowOfflinePrizeHandler";
	EnumHandler.NineHeavyChangeStateHandler="NineHeavyChangeStateHandler";
	EnumHandler.NineHeavyDeadHandler="NineHeavyDeadHandler";
	EnumHandler.NineHeavyFightResultHandler="NineHeavyFightResultHandler";
	EnumHandler.NineHeavyGameOverHandler="NineHeavyGameOverHandler";
	EnumHandler.NineHeavyIntegralRewardErrorHandler="NineHeavyIntegralRewardErrorHandler";
	EnumHandler.NineHeavyIntegralRewardHandler="NineHeavyIntegralRewardHandler";
	EnumHandler.NineHeavyMonsterFlushHandler="NineHeavyMonsterFlushHandler";
	EnumHandler.NineHeavyOtherPlayerJoinHandler="NineHeavyOtherPlayerJoinHandler";
	EnumHandler.NineHeavyPayRebornErrorHandler="NineHeavyPayRebornErrorHandler";
	EnumHandler.NineHeavyPlayerAttackErrorHandler="NineHeavyPlayerAttackErrorHandler";
	EnumHandler.NineHeavyPlayerAttackHandler="NineHeavyPlayerAttackHandler";
	EnumHandler.NineHeavyPlayerAttackResultErrorHandler="NineHeavyPlayerAttackResultErrorHandler";
	EnumHandler.NineHeavyPlayerAttackResultHandler="NineHeavyPlayerAttackResultHandler";
	EnumHandler.NineHeavyPlayerJoinErrorHandler="NineHeavyPlayerJoinErrorHandler";
	EnumHandler.NineHeavyPlayerJoinHandler="NineHeavyPlayerJoinHandler";
	EnumHandler.NineHeavyPlayerLeaveHandler="NineHeavyPlayerLeaveHandler";
	EnumHandler.NineHeavyPlayerMoveHandler="NineHeavyPlayerMoveHandler";
	EnumHandler.NineHeavyPlayerRankErrorHandler="NineHeavyPlayerRankErrorHandler";
	EnumHandler.NineHeavyPlayerRankHandler="NineHeavyPlayerRankHandler";
	EnumHandler.NineHeavyPlayerUpstairsHandler="NineHeavyPlayerUpstairsHandler";
	EnumHandler.NineHeavyReliveErrorHandler="NineHeavyReliveErrorHandler";
	EnumHandler.NineHeavyUpdateAppearanceHandler="NineHeavyUpdateAppearanceHandler";
	EnumHandler.NineHeavyUpdateIntegralHandler="NineHeavyUpdateIntegralHandler";
	EnumHandler.NineHeavyUpdateOhterIntegralHandler="NineHeavyUpdateOhterIntegralHandler";
	EnumHandler.SendNoticeHandler="SendNoticeHandler";
	EnumHandler.ReceiveOfficialBoxErrorHandler="ReceiveOfficialBoxErrorHandler ";
	EnumHandler.ReceiveOfficialBoxHandler="ReceiveOfficialBoxHandler";
	EnumHandler.ReceiveOfficialYesterdayRewardErrorHandler="ReceiveOfficialYesterdayRewardErrorHandler";
	EnumHandler.ReceiveOfficialYesterdayRewardHandler="ReceiveOfficialYesterdayRewardHandler";
	EnumHandler.ResetOfficialHandler="ResetOfficialHandler";
	EnumHandler.UpdateOfficialTaskHandler="UpdateOfficialTaskHandler";
	EnumHandler.UpgradeOfficialActivityHandler="UpgradeOfficialActivityHandler";
	EnumHandler.UpgradeOfficialLvErrorHandler="UpgradeOfficialLvErrorHandler";
	EnumHandler.UpgradeOfficialLvHandler="UpgradeOfficialLvHandler";
	EnumHandler.OperateChangeErrorHandler="OperateChangeErrorHandler";
	EnumHandler.OperateChangeHandler="OperateChangeHandler";
	EnumHandler.OperateChangeRecordHandler="OperateChangeRecordHandler";
	EnumHandler.OperateChangeTaskRewardErrorHandler="OperateChangeTaskRewardErrorHandler";
	EnumHandler.OperateChangeTaskRewardHandler="OperateChangeTaskRewardHandler";
	EnumHandler.OperateTaskRewardErrorHandler="OperateTaskRewardErrorHandler";
	EnumHandler.OperateTaskRewardHandler="OperateTaskRewardHandler";
	EnumHandler.OperateUpdateCritDayHandler="OperateUpdateCritDayHandler";
	EnumHandler.OperateUpdateTaskForOneHandler="OperateUpdateTaskForOneHandler";
	EnumHandler.OperateUpdateTaskHandler="OperateUpdateTaskHandler";
	EnumHandler.EquipPacketAddCapacityErrorHandler="EquipPacketAddCapacityErrorHandler";
	EnumHandler.EquipPacketAddCapacityHandler="EquipPacketAddCapacityHandler";
	EnumHandler.RemoveItemInPacketHandler="RemoveItemInPacketHandler";
	EnumHandler.UpdateItemInPacketHandler="UpdateItemInPacketHandler";
	EnumHandler.UpdatePacketCapacityHandler="UpdatePacketCapacityHandler";
	EnumHandler.UpdatePacketUsePetBoxHandler="UpdatePacketUsePetBoxHandler";
	EnumHandler.BuyXXHJChallengeTimeErrorHandler="BuyXXHJChallengeTimeErrorHandler";
	EnumHandler.BuyXXHJChallengeTimeHandler="BuyXXHJChallengeTimeHandler";
	EnumHandler.GetCBTInfoErrorHandler="GetCBTInfoErrorHandler";
	EnumHandler.GetCBTInfoHandler="GetCBTInfoHandler";
	EnumHandler.GetLLBTInfoErrorHandler="GetLLBTInfoErrorHandler";
	EnumHandler.GetLLBTInfoHandler="GetLLBTInfoHandler";
	EnumHandler.GetPFITInfoErrorHandler="GetPFITInfoErrorHandler";
	EnumHandler.GetPFITInfoHandler="GetPFITInfoHandler";
	EnumHandler.GetXXHJInfoErrorHandler="GetXXHJInfoErrorHandler";
	EnumHandler.GetXXHJInfoHandler="GetXXHJInfoHandler";
	EnumHandler.GetXYCMInfoErrorHandler="GetXYCMInfoErrorHandler";
	EnumHandler.GetXYCMInfoHandler="GetXYCMInfoHandler";
	EnumHandler.GetYCTTInfoErrorHandler="GetYCTTInfoErrorHandler";
	EnumHandler.GetYCTTInfoHandler="GetYCTTInfoHandler";
	EnumHandler.PataFightErrorHandler="PataFightErrorHandler";
	EnumHandler.PataFightHandler="PataFightHandler";
	EnumHandler.PataUpdateStateHandler="PataUpdateStateHandler";
	EnumHandler.TakeCBTPrizeErrorHandler="TakeCBTPrizeErrorHandler";
	EnumHandler.TakeCBTPrizeHandler="TakeCBTPrizeHandler";
	EnumHandler.TakeFitPrizeErrorHandler="TakeFitPrizeErrorHandler";
	EnumHandler.TakeFitPrizeHandler="TakeFitPrizeHandler ";
	EnumHandler.TakeXXHJPrizeErrorHandler="TakeXXHJPrizeErrorHandler";
	EnumHandler.TakeXXHJPrizeHandler="TakeXXHJPrizeHandler";
	EnumHandler.TakeXYCMPrizeErrorHandler="TakeXYCMPrizeErrorHandler";
	EnumHandler.TakeXYCMPrizeHandler="TakeXYCMPrizeHandler";
	EnumHandler.TakeYCTTPrizeErrorHandler="TakeYCTTPrizeErrorHandler";
	EnumHandler.TakeYCTTPrizeHandler="TakeYCTTPrizeHandler";
	EnumHandler.ActivePetErrorHandler="ActivePetErrorHandler";
	EnumHandler.ActivePetGroupErrorHandler="ActivePetGroupErrorHandler";
	EnumHandler.ActivePetGroupHandler="ActivePetGroupHandler";
	EnumHandler.ActivePetHandler="ActivePetHandler";
	EnumHandler.ChangePetNameErrorHandler="ChangePetNameErrorHandler";
	EnumHandler.ChangePetNameHandler="ChangePetNameHandler";
	EnumHandler.FirePetErrorHandler="FirePetErrorHandler";
	EnumHandler.FirePetHandler="FirePetHandler";
	EnumHandler.ReplaceXiLianPetErrorHandler="ReplaceXiLianPetErrorHandler";
	EnumHandler.ReplaceXiLianPetHandler="ReplaceXiLianPetHandler";
	EnumHandler.TameWildPetErrorHandler="TameWildPetErrorHandler";
	EnumHandler.TameWildPetHandler="TameWildPetHandler";
	EnumHandler.UpdatePetAttributeHandler="UpdatePetAttributeHandler";
	EnumHandler.UpdatePetExpHandler="UpdatePetExpHandler";
	EnumHandler.UpdateWildPetHandler="UpdateWildPetHandler";
	EnumHandler.UpgradePetLevelErrorHandler="UpgradePetLevelErrorHandler";
	EnumHandler.UpgradePetLevelHandler="UpgradePetLevelHandler";
	EnumHandler.UpgradePetSkillErrorHandler="UpgradePetSkillErrorHandler";
	EnumHandler.UpgradePetSkillHandler="UpgradePetSkillHandler";
	EnumHandler.UpgradePetStarErrorHandler="UpgradePetStarErrorHandler";
	EnumHandler.UpgradePetStarHandler="UpgradePetStarHandler";
	EnumHandler.ResAwakePetHandler="ResAwakePetHandler";
	EnumHandler.ResAwakePetErrorHandler="ResAwakePetErrorHandler";
	EnumHandler.XiLianPetErrorHandler="XiLianPetErrorHandler";
	EnumHandler.XiLianPetHandler="XiLianPetHandler";
	EnumHandler.QuanFuBossBuyTimeErrorHandler="QuanFuBossBuyTimeErrorHandler";
	EnumHandler.QuanFuBossBuyTimeHandler="QuanFuBossBuyTimeHandler";
	EnumHandler.QuanFuBossGetInfoErrorHandler="QuanFuBossGetInfoErrorHandler";
	EnumHandler.QuanFuBossGetInfoHandler="QuanFuBossGetInfoHandler";
	EnumHandler.BuyQuanFuBossTimeErrorHandler="BuyQuanFuBossTimeErrorHandler";
	EnumHandler.BuyQuanFuBossTimeHandler="BuyQuanFuBossTimeHandler";
	EnumHandler.GetQuanFuBossInfoErrorHandler="GetQuanFuBossInfoErrorHandler";
	EnumHandler.GetQuanFuBossInfoHandler="GetQuanFuBossInfoHandler";
	EnumHandler.QunYingHuiBetErrorHandler="QunYingHuiBetErrorHandler";
	EnumHandler.QunYingHuiBetHandler="QunYingHuiBetHandler";
	EnumHandler.QunYingHuiGetFightInfoErrorHandler="QunYingHuiGetFightInfoErrorHandler";
	EnumHandler.QunYingHuiGetFightInfoHandler="QunYingHuiGetFightInfoHandler";
	EnumHandler.QunYingHuiSignUpErrorHandler="QunYingHuiSignUpErrorHandler";
	EnumHandler.QunYingHuiSignUpHandler="QunYingHuiSignUpHandler";
	EnumHandler.QunYingHuiSignUpRecordErrorHandler="QunYingHuiSignUpRecordErrorHandler";
	EnumHandler.QunYingHuiSignUpRecordHandler="QunYingHuiSignUpRecordHandler";
	EnumHandler.QunYingHuiNotifyHandler="QunYingHuiNotifyHandler";
	EnumHandler.RaceLampHandler="RaceLampHandler";
	EnumHandler.GetRankInfoErrorHandler="GetRankInfoErrorHandler";
	EnumHandler.GetRankInfoHandler="GetRankInfoHandler";
	EnumHandler.RankMoBaiErrorHandler="RankMoBaiErrorHandler";
	EnumHandler.RankMoBaiHandler="RankMoBaiHandler";
	EnumHandler.RankUpdateActivitiesHandler="RankUpdateActivitiesHandler";
	EnumHandler.ResActTurntableErrorHandler="ResActTurntableErrorHandler ";
	EnumHandler.ResActTurntableHandler="ResActTurntableHandler";
	EnumHandler.ResActTurntableTimesUpdateHandler="ResActTurntableTimesUpdateHandler ";
	EnumHandler.ResActDianJiangTurntableUpdateHandler="ResActDianJiangTurntableUpdateHandler";
	EnumHandler.RedEnvelopesErrorHandler="RedEnvelopesErrorHandler";
	EnumHandler.RedEnvelopesHandler="RedEnvelopesHandler";
	EnumHandler.RemoveRedEnvelopesHandler="RemoveRedEnvelopesHandler";
	EnumHandler.UpdateRedEnvelopesHandler="UpdateRedEnvelopesHandler";
	EnumHandler.SceneAddHandler="SceneAddHandler";
	EnumHandler.SceneChangeErrorHandler="SceneChangeErrorHandler";
	EnumHandler.SceneChangeHandler="SceneChangeHandler";
	EnumHandler.SceneInitHandler="SceneInitHandler";
	EnumHandler.SceneMoveErrorHandler="SceneMoveErrorHandler";
	EnumHandler.SceneMoveHandler="SceneMoveHandler";
	EnumHandler.SceneRemoveHandler="SceneRemoveHandler";
	EnumHandler.SceneUpdateDeadHandler="SceneUpdateDeadHandler";
	EnumHandler.SceneUpdatePositionHandler="SceneUpdatePositionHandler";
	EnumHandler.SettingHandler="SettingHandler";
	EnumHandler.ChallengeShiMenErrorHandler="ChallengeShiMenErrorHandler";
	EnumHandler.ChallengeShiMenHandler="ChallengeShiMenHandler";
	EnumHandler.ChangeShiMenStarErrorHandler="ChangeShiMenStarErrorHandler";
	EnumHandler.ChangeShiMenStarHandler="ChangeShiMenStarHandler";
	EnumHandler.GetShiMenInfoHandler="GetShiMenInfoHandler";
	EnumHandler.TakeShiMenRoundPrizeErrorHandler="TakeShiMenRoundPrizeErrorHandler";
	EnumHandler.TakeShiMenRoundPrizeHandler="TakeShiMenRoundPrizeHandler";
	EnumHandler.TakeShiMenTaskErrorHandler="TakeShiMenTaskErrorHandler";
	EnumHandler.TakeShiMenTaskHandler="TakeShiMenTaskHandler";
	EnumHandler.MysteriousShopHandler="MysteriousShopHandler";
	EnumHandler.RefreshMystersiousShopErrorHandler="RefreshMystersiousShopErrorHandler";
	EnumHandler.RemoveShopHandler="RemoveShopHandler";
	EnumHandler.ShopBuyErrorHandler="ShopBuyErrorHandler";
	EnumHandler.ShopBuyHandler="ShopBuyHandler";
	EnumHandler.UpdateAllShopGoodsBuyTimesHandler="UpdateAllShopGoodsBuyTimesHandler";
	EnumHandler.UpdateShopGoodsBuyTimesHandler="UpdateShopGoodsBuyTimesHandler";
	EnumHandler.UpdateShopInfoHandler="UpdateShopInfoHandler";
	EnumHandler.UpdateShopReturnHandler="UpdateShopReturnHandler";
	EnumHandler.UpgradeHeroSkillErrorHandler="UpgradeHeroSkillErrorHandler";
	EnumHandler.UpgradeHeroSkillHandler="UpgradeHeroSkillHandler";
	EnumHandler.UpgradeSkillErrorHandler="UpgradeSkillErrorHandler";
	EnumHandler.UpgradeSkillHandler="UpgradeSkillHandler";
	EnumHandler.ActivateSkinErrorHandler="ActivateSkinErrorHandler";
	EnumHandler.ActivateSkinHandler="ActivateSkinHandler";
	EnumHandler.UpdateSkinErrorHandler="UpdateSkinErrorHandler";
	EnumHandler.UpdateSkinHandler="UpdateSkinHandler";
	EnumHandler.UpgradeSkinStarErrorHandler="UpgradeSkinStarErrorHandler";
	EnumHandler.UpgradeSkinStarHandler="UpgradeSkinStarHandler";
	EnumHandler.WearSkinErrorHandler="WearSkinErrorHandler";
	EnumHandler.WearSkinHandler="WearSkinHandler";
	EnumHandler.SoulBoyActivationErrorHandler="SoulBoyActivationErrorHandler";
	EnumHandler.SoulBoyActivationHandler="SoulBoyActivationHandler";
	EnumHandler.SoulBoyAttributeUpdateHandler="SoulBoyAttributeUpdateHandler";
	EnumHandler.SoulBoyDestinyErrorHandler="SoulBoyDestinyErrorHandler";
	EnumHandler.SoulBoyDestinyHandler="SoulBoyDestinyHandler";
	EnumHandler.SoulBoyDrugErrorHandler="SoulBoyDrugErrorHandler";
	EnumHandler.SoulBoyDrugHandler="SoulBoyDrugHandler";
	EnumHandler.SoulBoyDrugItemErrorHandler="SoulBoyDrugItemErrorHandler";
	EnumHandler.SoulBoyDrugItemHandler="SoulBoyDrugItemHandler";
	EnumHandler.SoulBoyHunUpgradeErrorHandler="SoulBoyHunUpgradeErrorHandler";
	EnumHandler.SoulBoyHunUpgradeHandler="SoulBoyHunUpgradeHandler";
	EnumHandler.SoulBoyLingUpgradeErrorHandler="SoulBoyLingUpgradeErrorHandler";
	EnumHandler.SoulBoyLingUpgradeHandler="SoulBoyLingUpgradeHandler";
	EnumHandler.SoulBoySkillUpgradeHandler="SoulBoySkillUpgradeHandler";
	EnumHandler.SoulBoySynthesisErrorHandler="SoulBoySynthesisErrorHandler";
	EnumHandler.SoulBoySynthesisHandler="SoulBoySynthesisHandler";
	EnumHandler.SoulBoyTaletUpgradeErrorHandler="SoulBoyTaletUpgradeErrorHandler";
	EnumHandler.SoulBoyTaletUpgradeHandler="SoulBoyTaletUpgradeHandler";
	EnumHandler.SoulBoyXilianErrorHandler="SoulBoyXilianErrorHandler";
	EnumHandler.SoulBoyXilianHandler="SoulBoyXilianHandler";
	EnumHandler.SoulBoyXilianReplaceErrorMessage="SoulBoyXilianReplaceErrorMessage";
	EnumHandler.SoulBoyXilianReplaceHandler="SoulBoyXilianReplaceHandler";
	EnumHandler.SoulBoyXilianTranslateErrorHandler="SoulBoyXilianTranslateErrorHandler";
	EnumHandler.SoulBoyXilianTranslateHandler="SoulBoyXilianTranslateHandler";
	EnumHandler.FinishAchiTaskErrorHandler="FinishAchiTaskErrorHandler";
	EnumHandler.FinishAchiTaskHandler="FinishAchiTaskHandler";
	EnumHandler.FinishChapterTaskErrorHandler="FinishChapterTaskErrorHandler";
	EnumHandler.FinishChapterTaskHandler="FinishChapterTaskHandler";
	EnumHandler.FinishPingdingTaskErrorHandler="FinishPingdingTaskErrorHandler";
	EnumHandler.FinishPingdingTaskHandler="FinishPingdingTaskHandler";
	EnumHandler.FinishTimeLimitTaskErrorHandler="FinishTimeLimitTaskErrorHandler";
	EnumHandler.FinishTimeLimitTaskHandler="FinishTimeLimitTaskHandler";
	EnumHandler.ResetPingdingTaskHandler="ResetPingdingTaskHandler";
	EnumHandler.TaskCleanHandler="TaskCleanHandler";
	EnumHandler.TaskFinishErrorHandler="TaskFinishErrorHandler";
	EnumHandler.TaskFinishHandler="TaskFinishHandler";
	EnumHandler.TaskGuildSquarePayErrorHandler="TaskGuildSquarePayErrorHandler";
	EnumHandler.TaskGuildSquarePayHandler="TaskGuildSquarePayHandler";
	EnumHandler.TaskGuildSquareResetErrorHandler="TaskGuildSquareResetErrorHandler";
	EnumHandler.TaskGuildSquareResetHandler="TaskGuildSquareResetHandler";
	EnumHandler.TaskGuildSquareTakePrizeErrorHandler="TaskGuildSquareTakePrizeErrorHandler";
	EnumHandler.TaskGuildSquareTakePrizeHandler="TaskGuildSquareTakePrizeHandler";
	EnumHandler.TaskPingDingAnBangPayErrorHandler="TaskPingDingAnBangPayErrorHandler";
	EnumHandler.TaskPingDingAnBangPayHandler="TaskPingDingAnBangPayHandler";
	EnumHandler.TaskRemoveHandler="TaskRemoveHandler";
	EnumHandler.TaskUpdateHandler="TaskUpdateHandler";
	EnumHandler.UpdateAchiTaskHandler="UpdateAchiTaskHandler";
	EnumHandler.UpdateChapterTaskHandler="UpdateChapterTaskHandler";
	EnumHandler.UpdateDailyTaskHandler="UpdateDailyTaskHandler";
	EnumHandler.UpdatePingdingTaskHandler="UpdatePingdingTaskHandler";
	EnumHandler.UpdateTimeLimitTaskHandler="UpdateTimeLimitTaskHandler";
	EnumHandler.UpdateTimeLimitTaskRoundHandler="UpdateTimeLimitTaskRoundHandler";
	EnumHandler.TeamApplyErrorHandler="TeamApplyErrorHandler";
	EnumHandler.TeamApplyHandler="TeamApplyHandler";
	EnumHandler.TeamApplyReplyErrorHandler="TeamApplyReplyErrorHandler";
	EnumHandler.TeamApplyReplyHandler="TeamApplyReplyHandler";
	EnumHandler.TeamChangeFightPowerErrorHandler="TeamChangeFightPowerErrorHandler";
	EnumHandler.TeamChangeFightPowerHandler="TeamChangeFightPowerHandler";
	EnumHandler.TeamCreateErrorHandler="TeamCreateErrorHandler";
	EnumHandler.TeamCreateHandler="TeamCreateHandler";
	EnumHandler.TeamExitErrorHandler="TeamExitErrorHandler";
	EnumHandler.TeamExitHandler="TeamExitHandler";
	EnumHandler.TeamGetAllErrorHandler="TeamGetAllErrorHandler";
	EnumHandler.TeamGetAllHandler="TeamGetAllHandler";
	EnumHandler.TeamInitHandler="TeamInitHandler";
	EnumHandler.TeamKickErrorHandler="TeamKickErrorHandler";
	EnumHandler.TeamKickHandler="TeamKickHandler";
	EnumHandler.TeamMemberAddHandler="TeamMemberAddHandler";
	EnumHandler.TeamMemberPositionUpdateHandler="TeamMemberPositionUpdateHandler";
	EnumHandler.TeamMemberRemoveHandler="TeamMemberRemoveHandler";
	EnumHandler.TeamMarryLeaveHandler="TeamMarryLeaveHandler";
	EnumHandler.TeamCreateCDHandler="TeamCreateCDHandler";
	EnumHandler.TeamDuplicateGetFirstClearanceErrorHandler="TeamDuplicateGetFirstClearanceErrorHandler";
	EnumHandler.TeamDuplicateGetFirstClearanceHandler="TeamDuplicateGetFirstClearanceHandler";
	EnumHandler.TeamDuplicateRoomCloseFullErrorHandler="TeamDuplicateRoomCloseFullErrorHandler";
	EnumHandler.TeamDuplicateRoomCloseFullHandler="TeamDuplicateRoomCloseFullHandler";
	EnumHandler.TeamDuplicateRoomDissolutionHandler="TeamDuplicateRoomDissolutionHandler";
	EnumHandler.TeamDuplicateRoomForIDErrorHandler="TeamDuplicateRoomForIDErrorHandler";
	EnumHandler.TeamDuplicateRoomForIDHandler="TeamDuplicateRoomForIDHandler";
	EnumHandler.TeamDuplicateRoomJoinErrorHandler="TeamDuplicateRoomJoinErrorHandler";
	EnumHandler.TeamDuplicateRoomJoinHandler="TeamDuplicateRoomJoinHandler";
	EnumHandler.TeamDuplicateRoomKickErrorHandler="TeamDuplicateRoomKickErrorHandler";
	EnumHandler.TeamDuplicateRoomLeaveErrorHandler="TeamDuplicateRoomLeaveErrorHandler";
	EnumHandler.TeamDuplicateRoomLeaveHandler="TeamDuplicateRoomLeaveHandler";
	EnumHandler.TeamDuplicateRoomOtherJoinHandler="TeamDuplicateRoomOtherJoinHandler";
	EnumHandler.TeamDuplicateRoomRewardErrorHandler="TeamDuplicateRoomRewardErrorHandler";
	EnumHandler.TeamDuplicateRoomRewardHandler="TeamDuplicateRoomRewardHandler";
	EnumHandler.TeamDuplicateRoomStartFightErrorHandler="TeamDuplicateRoomStartFightErrorHandler";
	EnumHandler.TeamDuplicateRoomStartFightHandler="TeamDuplicateRoomStartFightHandler";
	EnumHandler.TeamDuplicateSweepAwayErrorHandler="TeamDuplicateSweepAwayErrorHandler";
	EnumHandler.TeamDuplicateSweepAwayHandler="TeamDuplicateSweepAwayHandler";
	EnumHandler.TeamDuplicateUpdateAssistHandler="TeamDuplicateUpdateAssistHandler";
	EnumHandler.TeamDuplicateUpdateHandler="TeamDuplicateUpdateHandler";
	EnumHandler.TeamDuplicateZhuluBoxErrorHandler="TeamDuplicateZhuluBoxErrorHandler";
	EnumHandler.TeamDuplicateZhuluBoxHandler="TeamDuplicateZhuluBoxHandler";
	EnumHandler.GetHuntInfoErrorHandler="GetHuntInfoErrorHandler";
	EnumHandler.GetHuntInfoHandler="GetHuntInfoHandler";
	EnumHandler.HuntMsgHandler="HuntMsgHandler";
	EnumHandler.HuntRecordHandler="HuntRecordHandler";
	EnumHandler.HuntStartErrorHandler="HuntStartErrorHandler";
	EnumHandler.HuntStartHandler="HuntStartHandler";
	EnumHandler.HuntUpdateLuckCountHandler="HuntUpdateLuckCountHandler";
	EnumHandler.HuntMsgGetTimeHandler="HuntMsgGetTimeHandler";
	EnumHandler.XunBaoLuckHandler="XunBaoLuckHandler";
	EnumHandler.XunBaoGetLuckRewardInfoHandler="XunBaoGetLuckRewardInfoHandler";
	EnumHandler.ResSelectLoveHeroHandler="ResSelectLoveHeroHandler";
	EnumHandler.ResGetBaoWuRestTimesMsgHandler="ResGetBaoWuRestTimesMsgHandler";
	EnumHandler.TotemActiveErrorHandler="TotemActiveErrorHandler";
	EnumHandler.TotemActiveHandler="TotemActiveHandler";
	EnumHandler.TotemSurmountErrorHandler="TotemSurmountErrorHandler";
	EnumHandler.TotemSurmountHandler="TotemSurmountHandler";
	EnumHandler.TotemUpgradeErrorHandler="TotemUpgradeErrorHandler";
	EnumHandler.TotemUpgradeHandler="TotemUpgradeHandler";
	EnumHandler.TuanGouGetInfoErrorHandler="TuanGouGetInfoErrorHandler";
	EnumHandler.TuanGouGetInfoHandler="TuanGouGetInfoHandler";
	EnumHandler.TuanGouTakePrizeErrorHandler="TuanGouTakePrizeErrorHandler";
	EnumHandler.TuanGouTakePrizeHandler="TuanGouTakePrizeHandler";
	EnumHandler.CommonIllusionErrorHandler="CommonIllusionErrorHandler";
	EnumHandler.CommonIllusionHandler="CommonIllusionHandler";
	EnumHandler.CommonSynthesisErrorHandler="CommonSynthesisErrorHandler";
	EnumHandler.CommonSynthesisHandler="CommonSynthesisHandler";
	EnumHandler.CommonUpgradeErrorHandler="CommonUpgradeErrorHandler";
	EnumHandler.CommonUpgradeHandler="CommonUpgradeHandler";
	EnumHandler.CommonWakeUpErrorHandler="CommonWakeUpErrorHandler";
	EnumHandler.CommonWakeUpHandler="CommonWakeUpHandler";
	EnumHandler.UpgradeCommonSkillLevelErrorHandler="UpgradeCommonSkillLevelErrorHandler";
	EnumHandler.UpgradeCommonSkillLevelHandler="UpgradeCommonSkillLevelHandler";
	EnumHandler.UpgradeUpdateCritHandler="UpgradeUpdateCritHandler";
	EnumHandler.UpgradeAllErrorHandler="UpgradeAllErrorHandler";
	EnumHandler.UpgradeAllHandler="UpgradeAllHandler";
	EnumHandler.ActiveGameSystemErrorHandler="ActiveGameSystemErrorHandler";
	EnumHandler.ActiveGameSystemHandler="ActiveGameSystemHandler";
	EnumHandler.TakeActiveGameSystemRewardErrorHandler="TakeActiveGameSystemRewardErrorHandler";
	EnumHandler.TakeActiveGameSystemRewardHandler="TakeActiveGameSystemRewardHandler";
	EnumHandler.UpdateCostGoldHandler="UpdateCostGoldHandler";
	EnumHandler.UpdateFightPowerHandler="UpdateFightPowerHandler";
	EnumHandler.UpdateGameSystemStatusHandler="UpdateGameSystemStatusHandler";
	EnumHandler.UpdateLevelHandler="UpdateLevelHandler";
	EnumHandler.UpdateNameErrorHandler="UpdateNameErrorHandler";
	EnumHandler.UpdateNameHandler="UpdateNameHandler";
	EnumHandler.UpdateRobotHandler="UpdateRobotHandler";
	EnumHandler.UpdateValueHandler="UpdateValueHandler";
	EnumHandler.GetVideoFightDataHandler="GetVideoFightDataHandler";
	EnumHandler.GetVideosHandler="GetVideosHandler";
	EnumHandler.LikeVideoErrorHandler="LikeVideoErrorHandler";
	EnumHandler.LikeVideoHandler="LikeVideoHandler";
	EnumHandler.PlayVideoHandler="PlayVideoHandler";
	EnumHandler.GetVipRewardErrorHandler="GetVipRewardErrorHandler";
	EnumHandler.GetVipRewardHandler="GetVipRewardHandler";
	EnumHandler.UpdateRechargeHandler="UpdateRechargeHandler";
	EnumHandler.UpdateVipFreeSkipRoundHandler="UpdateVipFreeSkipRoundHandler";
	EnumHandler.updateVipLevelHandler="updateVipLevelHandler";
	EnumHandler.VipUpdateHandler="VipUpdateHandler";
	EnumHandler.BuyWarTokenLevelErrorHandler="BuyWarTokenLevelErrorHandler";
	EnumHandler.BuyWarTokenLevelHandler="BuyWarTokenLevelHandler";
	EnumHandler.BuyWarTokenSucessHandler="BuyWarTokenSucessHandler";
	EnumHandler.GetWarTokenRewardErrorHandler="GetWarTokenRewardErrorHandler";
	EnumHandler.GetWarTokenRewardHandler="GetWarTokenRewardHandler";
	EnumHandler.GetWarTokenTaskRewardErrorHandler="GetWarTokenTaskRewardErrorHandler";
	EnumHandler.GetWarTokenTaskRewardHandler="GetWarTokenTaskRewardHandler";
	EnumHandler.UpdateWarTokenHandler="UpdateWarTokenHandler";
	EnumHandler.UpdateWarTokenTaskForOneHandler="UpdateWarTokenTaskForOneHandler";
	EnumHandler.UpdateWarTokenTaskHandler="UpdateWarTokenTaskHandler";
	EnumHandler.GetFuLiRewardErrorHandler="GetFuLiRewardErrorHandler";
	EnumHandler.GetFuLiRewardHandler="GetFuLiRewardHandler";
	EnumHandler.GetYaoQianRewardAdditionallyErrorHandler="GetYaoQianRewardAdditionallyErrorHandler";
	EnumHandler.GetYaoQianRewardAdditionallyHandler="GetYaoQianRewardAdditionallyHandler";
	EnumHandler.UpdateWelfareHandler="UpdateWelfareHandler";
	EnumHandler.YaoQianErrorHandler="YaoQianErrorHandler";
	EnumHandler.YaoQianHandler="YaoQianHandler";
	EnumHandler.YaoQianShuRequestErrorHandler="YaoQianShuRequestErrorHandler";
	EnumHandler.YaoQianShuRequestHandler="YaoQianShuRequestHandler";
	EnumHandler.WorldBossAttackBattleDataHandler="WorldBossAttackBattleDataHandler";
	EnumHandler.WorldBossAttackErrorHandler="WorldBossAttackErrorHandler";
	EnumHandler.WorldBossAttackHandler="WorldBossAttackHandler";
	EnumHandler.WorldBossAttackPlayerErrorHandler="WorldBossAttackPlayerErrorHandler";
	EnumHandler.WorldBossAttackPlayerHandler="WorldBossAttackPlayerHandler";
	EnumHandler.WorldBossAttackResultErrorHandler="WorldBossAttackResultErrorHandler";
	EnumHandler.WorldBossAttackResultHandler="WorldBossAttackResultHandler";
	EnumHandler.WorldBossBoxRemoveErrorHandler="WorldBossBoxRemoveErrorHandler";
	EnumHandler.WorldBossBoxRemoveHandler="WorldBossBoxRemoveHandler";
	EnumHandler.WorldBossChangeStateHandler="WorldBossChangeStateHandler";
	EnumHandler.WorldBossDetailHandler="WorldBossDetailHandler";
	EnumHandler.WorldBossFlushBoxHandler="WorldBossFlushBoxHandler";
	EnumHandler.WorldBossJoinErrorHandler="WorldBossJoinErrorHandler";
	EnumHandler.WorldBossJoinHandler="WorldBossJoinHandler";
	EnumHandler.WorldBossPayRebornErrorHandler="WorldBossPayRebornErrorHandler";
	EnumHandler.WorldBossPlayerDeadHandler="WorldBossPlayerDeadHandler";
	EnumHandler.WorldBossMoveErrorHandler="WorldBossMoveErrorHandler";
	EnumHandler.WorldBossMoveHandler="WorldBossMoveHandler";
	EnumHandler.WorldBossOtherJoinHandler="WorldBossOtherJoinHandler";
	EnumHandler.WorldBossLeaveErrorHandler="WorldBossLeaveErrorHandler";
	EnumHandler.WorldBossLeaveHandler="WorldBossLeaveHandler";
	EnumHandler.WorldBossPlayerRebornHandler="WorldBossPlayerRebornHandler";
	EnumHandler.WorldBossRebornHandler="WorldBossRebornHandler";
	EnumHandler.WorldBossUpdateRankHandler="WorldBossUpdateRankHandler";
	EnumHandler.ReplaceXiLianFaQiErrorHandler="ReplaceXiLianFaQiErrorHandler";
	EnumHandler.ReplaceXiLianFaQiHandler="ReplaceXiLianFaQiHandler";
	EnumHandler.UpdateXuanNvAttributeHandler="UpdateXuanNvAttributeHandler";
	EnumHandler.UpdateXuanNvLingZhuangHandler="UpdateXuanNvLingZhuangHandler";
	EnumHandler.UpdateXuanNvOverTimeHandler="UpdateXuanNvOverTimeHandler";
	EnumHandler.XiLianFaQiErrorHandler="XiLianFaQiErrorHandler";
	EnumHandler.XiLianFaQiHandler="XiLianFaQiHandler";
	EnumHandler.XuanNvFeiShengQiangHuaErrorHandler="XuanNvFeiShengQiangHuaErrorHandler";
	EnumHandler.XuanNvFeiShengQiangHuaHandler="XuanNvFeiShengQiangHuaHandler";
	EnumHandler.UpdateXuanNvSkillHandler="UpdateXuanNvSkillHandler";
	EnumHandler.YuanZhengBuyGoodsErrorHandler="YuanZhengBuyGoodsErrorHandler";
	EnumHandler.YuanZhengBuyGoodsHandler="YuanZhengBuyGoodsHandler";
	EnumHandler.YuanZhengChallengeErrorHandler="YuanZhengChallengeErrorHandler";
	EnumHandler.YuanZhengChallengeHandler="YuanZhengChallengeHandler";
	EnumHandler.YuanZhengGetInfoErrorHandler="YuanZhengGetInfoErrorHandler";
	EnumHandler.YuanZhengGetInfoHandler="YuanZhengGetInfoHandler";
	EnumHandler.YuanZhengRefreshBuffErrorHandler="YuanZhengRefreshBuffErrorHandler";
	EnumHandler.YuanZhengRefreshBuffHandler="YuanZhengRefreshBuffHandler";
	EnumHandler.YuanZhengRefreshSkillErrorHandler="YuanZhengRefreshSkillErrorHandler";
	EnumHandler.YuanZhengRefreshSkillHandler="YuanZhengRefreshSkillHandler";
	EnumHandler.YuanZhengReliveErrorHandler="YuanZhengReliveErrorHandler";
	EnumHandler.YuanZhengReliveHandler="YuanZhengReliveHandler";
	EnumHandler.YuanZhengResetErrorHandler="YuanZhengResetErrorHandler";
	EnumHandler.YuanZhengResetHandler="YuanZhengResetHandler";
	EnumHandler.YuanZhengTakeBuffErrorHandler="YuanZhengTakeBuffErrorHandler";
	EnumHandler.YuanZhengTakeBuffHandler="YuanZhengTakeBuffHandler";
	EnumHandler.YuanZhengTakePrizeErrorHandler="YuanZhengTakePrizeErrorHandler";
	EnumHandler.YuanZhengTakePrizeHandler="YuanZhengTakePrizeHandler";
	EnumHandler.YuanZhengTakeSkillErrorHandler="YuanZhengTakeSkillErrorHandler";
	EnumHandler.YuanZhengTakeSkillHandler="YuanZhengTakeSkillHandler";
	EnumHandler.YuanZhengUpdateFightSettingHandler="YuanZhengUpdateFightSettingHandler";
	EnumHandler.ActScoreUpdateHandler="ActScoreUpdateHandler";
	EnumHandler.UpdateCommonWarTokenHandler="UpdateCommonWarTokenHandler";
	EnumHandler.ReplaceZhanwenErrorHandler="ReplaceZhanwenErrorHandler";
	EnumHandler.ReplaceZhanwenHandler="ReplaceZhanwenHandler";
	EnumHandler.UpdateZhanwenLengthHandler="UpdateZhanwenLengthHandler";
	EnumHandler.UpgradeZhanwenErrorHandler="UpgradeZhanwenErrorHandler";
	EnumHandler.UpgradeZhanwenHandler="UpgradeZhanwenHandler";
	EnumHandler.RecommendTaskIntegralRewardErrorHandler="RecommendTaskIntegralRewardErrorHandler";
	EnumHandler.RecommendTaskIntegralRewardHandler="RecommendTaskIntegralRewardHandler";
	EnumHandler.RecommendTaskRewardErrorHandler="RecommendTaskRewardErrorHandler";
	EnumHandler.RecommendTaskRewardHandler="RecommendTaskRewardHandler";
	EnumHandler.RecommendTaskUpdateHandler="RecommendTaskUpdateHandler";
	EnumHandler.ReduceLevelErrorHandler="ReduceLevelErrorHandler";
	EnumHandler.ReduceLevelHandler="ReduceLevelHandler";
	EnumHandler.UpdateZhuanShengExpHandler="UpdateZhuanShengExpHandler";
	EnumHandler.ZhuanShengErrorHandler="ZhuanShengErrorHandler";
	EnumHandler.ZhuanShengHandler="ZhuanShengHandler";
	EnumHandler.ResZhiJianFollowSucHandler="ResZhiJianFollowSucHandler";
	EnumHandler.ResZhiJianFollowSucErrorHandler="ResZhiJianFollowSucErrorHandler";
	EnumHandler.ResZhiJianShareSucHandler="ResZhiJianShareSucHandler";
	EnumHandler.ResZhiJianShareSucErrorHandler="ResZhiJianShareSucErrorHandler";
	EnumHandler.ResUpdateSpecialActListHandler="ResUpdateSpecialActListHandler";
	EnumHandler.ResGoldDoubleActUpdateHandler="ResGoldDoubleActUpdateHandler";
	EnumHandler.ResGoldDoubleActHandler="ResGoldDoubleActHandler";
	EnumHandler.ResGoldDoubleActErrorHandler="ResGoldDoubleActErrorHandler";
	EnumHandler.ResGoldBasinfulActUpdateHandler="ResGoldBasinfulActUpdateHandler";
	EnumHandler.ResSuperSupplyActHandler="ResSuperSupplyActHandler";
	EnumHandler.ResSuperSupplyActErrorHandler="ResSuperSupplyActErrorHandler";
	EnumHandler.ResGetIdeaUpKfQQHandler="ResGetIdeaUpKfQQHandler";
	EnumHandler.TrialTowerHandler="TrialTowerHandler";
	EnumHandler.TrialTowerSelectHandler="TrialTowerSelectHandler";
	EnumHandler.TowerFightResultHandler="TowerFightResultHandler";
	EnumHandler.TowerFightResultErrorHandler="TowerFightResultErrorHandler";
	EnumHandler.ResTreasureActiveHandler="ResTreasureActiveHandler";
	EnumHandler.ResTreasureActiveErrorHandler="ResTreasureActiveErrorHandler";
	EnumHandler.ResTreasurePyHandler="ResTreasurePyHandler";
	EnumHandler.ResTreasurePyErrorHandler="ResTreasurePyErrorHandler";
	EnumHandler.ResTreasureStarUpHandler="ResTreasureStarUpHandler";
	EnumHandler.ResTreasureStarUpErrorHandler="ResTreasureStarUpErrorHandler";
	EnumHandler.WeekendPrayHandler="WeekendPrayHandler";
	EnumHandler.recPrayGiftHandler="recPrayGiftHandler";
	EnumHandler.WeekendPrayErrorHandler="WeekendPrayErrorHandler";
	EnumHandler.BuyHuntTreasureErrorHandler="BuyHuntTreasureErrorHandler";
	EnumHandler.BuyHuntTreasureHandler="BuyHuntTreasureHandler";
	EnumHandler.JunTuanRankInfoHandler="JunTuanRankInfoHandler";
	EnumHandler.XuYuanErrorHandler="XuYuanErrorHandler";
	EnumHandler.XuYuanHandler="XuYuanHandler";
	EnumHandler.XuYuanStatusHandler="XuYuanStatusHandler";
	EnumHandler.GetJunTuanInfoErrorHandler="GetJunTuanInfoErrorHandler";
	EnumHandler.GetJunTuanInfoHandler="GetJunTuanInfoHandler";
	EnumHandler.ZhunDianHandler="ZhunDianHandler";
	EnumHandler.ZhunDianErrorHandler="ZhunDianErrorHandler";
	EnumHandler.ResTongShuaiJinJianError="ResTongShuaiJinJianError";
	EnumHandler.ResRechargeTurntableHandler="ResRechargeTurntableHandler";
	EnumHandler.ResRechargeTurntableErrorHandler="ResRechargeTurntableErrorHandler";
	EnumHandler.ResMeiWuHunt="ResMeiWuHunt";
	EnumHandler.ResMeiWuHuntError="ResMeiWuHuntError";
	EnumHandler.ResQinWangTeGong="ResQinWangTeGong";
	EnumHandler.ResQinWangTeGongError="ResQinWangTeGongError";
	EnumHandler.ResSelectQingWangReward="ResSelectQingWangReward";
	EnumHandler.ResSelectQingWangRewardError="ResSelectQingWangRewardError";
	EnumHandler.ResGodGeneraThisLifeHandler="ResGodGeneraThisLifeHandler";
	return EnumHandler;
})()


//class net.Message extends engine.base.data.Bean
var Message=(function(_super){
	function Message(){
		Message.__super.call(this);;
	}

	__class(Message,'net.Message',_super);
	var __proto=Message.prototype;
	__proto.getId=function(){
		return 0;
	}

	return Message;
})(Bean)


//class net.handler.card.ResUseCardErrorHandler extends net.MNetHandler
var ResUseCardErrorHandler=(function(_super){
	function ResUseCardErrorHandler(){
		ResUseCardErrorHandler.__super.call(this);;
	}

	__class(ResUseCardErrorHandler,'net.handler.card.ResUseCardErrorHandler',_super);
	var __proto=ResUseCardErrorHandler.prototype;
	// 使用激活码
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UseCardErrorHandler",msg);
	}

	return ResUseCardErrorHandler;
})(MNetHandler)


//class net.handler.zhuansheng.ResZhuanShengHandler extends net.MNetHandler
var ResZhuanShengHandler=(function(_super){
	function ResZhuanShengHandler(){
		ResZhuanShengHandler.__super.call(this);;
	}

	__class(ResZhuanShengHandler,'net.handler.zhuansheng.ResZhuanShengHandler',_super);
	var __proto=ResZhuanShengHandler.prototype;
	// 转生
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ZhuanShengHandler",msg);
	}

	return ResZhuanShengHandler;
})(MNetHandler)


//class net.handler.equip.ResPutOnEquipHandler extends net.MNetHandler
var ResPutOnEquipHandler=(function(_super){
	function ResPutOnEquipHandler(){
		ResPutOnEquipHandler.__super.call(this);;
	}

	__class(ResPutOnEquipHandler,'net.handler.equip.ResPutOnEquipHandler',_super);
	var __proto=ResPutOnEquipHandler.prototype;
	// 穿戴装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutOnEquipHandler",msg);
	}

	return ResPutOnEquipHandler;
})(MNetHandler)


//class net.handler.escort.ResFlushEscortDayEndHandler extends net.MNetHandler
var ResFlushEscortDayEndHandler=(function(_super){
	function ResFlushEscortDayEndHandler(){
		ResFlushEscortDayEndHandler.__super.call(this);;
	}

	__class(ResFlushEscortDayEndHandler,'net.handler.escort.ResFlushEscortDayEndHandler',_super);
	var __proto=ResFlushEscortDayEndHandler.prototype;
	// 每日结束 重置镖车
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FlushEscortDayEndHandler" ,msg);
	}

	return ResFlushEscortDayEndHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionAttentionHandler extends net.MNetHandler
var ResAuctionAttentionHandler=(function(_super){
	function ResAuctionAttentionHandler(){
		ResAuctionAttentionHandler.__super.call(this);;
	}

	__class(ResAuctionAttentionHandler,'net.handler.auction.ResAuctionAttentionHandler',_super);
	var __proto=ResAuctionAttentionHandler.prototype;
	// 关注/取消关注拍卖行物品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionAttentionHandler",msg);
	}

	return ResAuctionAttentionHandler;
})(MNetHandler)


//class net.handler.gongCe.ResQinWangTeGongErrorHandler extends net.MNetHandler
var ResQinWangTeGongErrorHandler=(function(_super){
	function ResQinWangTeGongErrorHandler(){
		ResQinWangTeGongErrorHandler.__super.call(this);;
	}

	__class(ResQinWangTeGongErrorHandler,'net.handler.gongCe.ResQinWangTeGongErrorHandler',_super);
	var __proto=ResQinWangTeGongErrorHandler.prototype;
	// 勤王特供
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResQinWangTeGongError",msg);
	}

	return ResQinWangTeGongErrorHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeJueWuErrorHandler extends net.MNetHandler
var ResGeneralUpgradeJueWuErrorHandler=(function(_super){
	function ResGeneralUpgradeJueWuErrorHandler(){
		ResGeneralUpgradeJueWuErrorHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeJueWuErrorHandler,'net.handler.general.ResGeneralUpgradeJueWuErrorHandler',_super);
	var __proto=ResGeneralUpgradeJueWuErrorHandler.prototype;
	// 蛮将升级觉悟
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeJueWuErrorHandler" ,msg);
	}

	return ResGeneralUpgradeJueWuErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*天天返利
*/
//class net.message.welfare.TianTianFanLi extends engine.base.data.Bean
var TianTianFanLi=(function(_super){
	function TianTianFanLi(){
		TianTianFanLi.__super.call(this);
		this._rechargeDay=[];
		this._rewareded=[];
	}

	__class(TianTianFanLi,'net.message.welfare.TianTianFanLi',_super);
	var __proto=TianTianFanLi.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rechargeDay.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rechargeDay.length;++i_am_tmp_i){
			this._rechargeDay[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._rewareded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewareded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewareded[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rechargeDay=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rechargeDay[i_am_tmp_i]=this.readBeanInList(_buf,RechargeDay);
		}
		size52413035=this.readInt(_buf);
		this._rewareded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewareded[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**充值天数 */
	/**充值天数 */
	__getset(0,__proto,'rechargeDay',function(){
		return this._rechargeDay;
		},function(value){
		this._rechargeDay=value;
	});

	/**已经领取过的 */
	/**已经领取过的 */
	__getset(0,__proto,'rewareded',function(){
		return this._rewareded;
		},function(value){
		this._rewareded=value;
	});

	return TianTianFanLi;
})(Bean)


//class net.handler.gb.ResLegionBattleGameOverHandler extends net.MNetHandler
var ResLegionBattleGameOverHandler=(function(_super){
	function ResLegionBattleGameOverHandler(){
		ResLegionBattleGameOverHandler.__super.call(this);;
	}

	__class(ResLegionBattleGameOverHandler,'net.handler.gb.ResLegionBattleGameOverHandler',_super);
	var __proto=ResLegionBattleGameOverHandler.prototype;
	// 军团战结束
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleGameOverHandler" ,msg);
	}

	return ResLegionBattleGameOverHandler;
})(MNetHandler)


//class net.handler.shimen.ResChangeShiMenStarErrorHandler extends net.MNetHandler
var ResChangeShiMenStarErrorHandler=(function(_super){
	function ResChangeShiMenStarErrorHandler(){
		ResChangeShiMenStarErrorHandler.__super.call(this);;
	}

	__class(ResChangeShiMenStarErrorHandler,'net.handler.shimen.ResChangeShiMenStarErrorHandler',_super);
	var __proto=ResChangeShiMenStarErrorHandler.prototype;
	// 修改师门星级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeShiMenStarErrorHandler",msg.error);
	}

	return ResChangeShiMenStarErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*道具
*/
//class net.message.goods.DisposeGoodsBean extends engine.base.data.Bean
var DisposeGoodsBean=(function(_super){
	function DisposeGoodsBean(){
		/**位置 */
		this._index=0;
		/**配置ID */
		this._configID=0;
		/**数量 */
		this._num=0;
		/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
		this._type=0;
		DisposeGoodsBean.__super.call(this);
	}

	__class(DisposeGoodsBean,'net.message.goods.DisposeGoodsBean',_super);
	var __proto=DisposeGoodsBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._configID);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._configID=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**位置 */
	/**位置 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return DisposeGoodsBean;
})(Bean)


//class net.handler.kingwar.ResKingWarUpdateHandler extends net.MNetHandler
var ResKingWarUpdateHandler=(function(_super){
	function ResKingWarUpdateHandler(){
		ResKingWarUpdateHandler.__super.call(this);;
	}

	__class(ResKingWarUpdateHandler,'net.handler.kingwar.ResKingWarUpdateHandler',_super);
	var __proto=ResKingWarUpdateHandler.prototype;
	// 更新王者争霸对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarUpdateHandler",msg);
	}

	return ResKingWarUpdateHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomStartFightHandler extends net.MNetHandler
var ResTeamDuplicateRoomStartFightHandler=(function(_super){
	function ResTeamDuplicateRoomStartFightHandler(){
		ResTeamDuplicateRoomStartFightHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomStartFightHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomStartFightHandler',_super);
	var __proto=ResTeamDuplicateRoomStartFightHandler.prototype;
	// 开始副本
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomStartFightHandler",msg);
	}

	return ResTeamDuplicateRoomStartFightHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*技能
*/
//class net.message.skill.SkillBean extends engine.base.data.Bean
var SkillBean=(function(_super){
	function SkillBean(){
		/**id */
		this._id=0;
		/**等级 */
		this._level=0;
		SkillBean.__super.call(this);
	}

	__class(SkillBean,'net.message.skill.SkillBean',_super);
	var __proto=SkillBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._level=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	return SkillBean;
})(Bean)


//class net.handler.garrison.ResGarrisonGerRankErrorHandler extends net.MNetHandler
var ResGarrisonGerRankErrorHandler=(function(_super){
	function ResGarrisonGerRankErrorHandler(){
		ResGarrisonGerRankErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonGerRankErrorHandler,'net.handler.garrison.ResGarrisonGerRankErrorHandler',_super);
	var __proto=ResGarrisonGerRankErrorHandler.prototype;
	// 获取巡城排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGerRankErrorHandler" ,msg);
	}

	return ResGarrisonGerRankErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关卡投资计划
*/
//class net.message.investment.GuanQiaInvestmentBean extends engine.base.data.Bean
var GuanQiaInvestmentBean=(function(_super){
	function GuanQiaInvestmentBean(){
		/**是否购买高级奖励 */
		this._isBuyBest=false;
		GuanQiaInvestmentBean.__super.call(this);
		this._normalRewarded=[];
		this._bestRewarded=[];
	}

	__class(GuanQiaInvestmentBean,'net.message.investment.GuanQiaInvestmentBean',_super);
	var __proto=GuanQiaInvestmentBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._normalRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._normalRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._normalRewarded[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._bestRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bestRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._bestRewarded[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._isBuyBest);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._normalRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._normalRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._bestRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bestRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		this._isBuyBest=this.readBoolean(_buf);
	}

	/**已经领取的普通奖励 */
	/**已经领取的普通奖励 */
	__getset(0,__proto,'normalRewarded',function(){
		return this._normalRewarded;
		},function(value){
		this._normalRewarded=value;
	});

	/**已经领取的高级奖励 */
	/**已经领取的高级奖励 */
	__getset(0,__proto,'bestRewarded',function(){
		return this._bestRewarded;
		},function(value){
		this._bestRewarded=value;
	});

	/**是否购买高级奖励 */
	/**是否购买高级奖励 */
	__getset(0,__proto,'isBuyBest',function(){
		return this._isBuyBest;
		},function(value){
		this._isBuyBest=value;
	});

	return GuanQiaInvestmentBean;
})(Bean)


//class net.handler.emptycity.ResEmptyCityAttackErrorHandler extends net.MNetHandler
var ResEmptyCityAttackErrorHandler=(function(_super){
	function ResEmptyCityAttackErrorHandler(){
		ResEmptyCityAttackErrorHandler.__super.call(this);;
	}

	__class(ResEmptyCityAttackErrorHandler,'net.handler.emptycity.ResEmptyCityAttackErrorHandler',_super);
	var __proto=ResEmptyCityAttackErrorHandler.prototype;
	// 攻击城市
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyCityAttackErrorHandler",msg);
	}

	return ResEmptyCityAttackErrorHandler;
})(MNetHandler)


//class net.handler.wartoken.ResGetWarTokenRewardHandler extends net.MNetHandler
var ResGetWarTokenRewardHandler=(function(_super){
	function ResGetWarTokenRewardHandler(){
		ResGetWarTokenRewardHandler.__super.call(this);;
	}

	__class(ResGetWarTokenRewardHandler,'net.handler.wartoken.ResGetWarTokenRewardHandler',_super);
	var __proto=ResGetWarTokenRewardHandler.prototype;
	// 领取三国令等级奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetWarTokenRewardHandler",msg);
	}

	return ResGetWarTokenRewardHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonIllusionHandler extends net.MNetHandler
var ResCommonIllusionHandler=(function(_super){
	function ResCommonIllusionHandler(){
		ResCommonIllusionHandler.__super.call(this);;
	}

	__class(ResCommonIllusionHandler,'net.handler.upgrade.ResCommonIllusionHandler',_super);
	var __proto=ResCommonIllusionHandler.prototype;
	// 通用进阶
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonIllusionHandler",msg);
	}

	return ResCommonIllusionHandler;
})(MNetHandler)


//class net.handler.equip.ResGetZhuWenInfoHandler extends net.MNetHandler
var ResGetZhuWenInfoHandler=(function(_super){
	function ResGetZhuWenInfoHandler(){
		ResGetZhuWenInfoHandler.__super.call(this);;
	}

	__class(ResGetZhuWenInfoHandler,'net.handler.equip.ResGetZhuWenInfoHandler',_super);
	var __proto=ResGetZhuWenInfoHandler.prototype;
	// 铸纹信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetZhuWenInfoHandler;
})(MNetHandler)


//class net.handler.misc.ResZhiJianFollowSucHandler extends net.MNetHandler
var ResZhiJianFollowSucHandler=(function(_super){
	function ResZhiJianFollowSucHandler(){
		ResZhiJianFollowSucHandler.__super.call(this);;
	}

	__class(ResZhiJianFollowSucHandler,'net.handler.misc.ResZhiJianFollowSucHandler',_super);
	var __proto=ResZhiJianFollowSucHandler.prototype;
	// 通知服务端指尖玩家已关注公众号
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResZhiJianFollowSucHandler",msg);
	}

	return ResZhiJianFollowSucHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军师对象
*/
//class net.message.adviser.AdvisersBean extends engine.base.data.Bean
var AdvisersBean=(function(_super){
	function AdvisersBean(){
		/**天赋等级 */
		this._talent=0;
		/**觉醒等级 */
		this._wakeUplv=0;
		AdvisersBean.__super.call(this);
		this._advisers=[];
		this._elements=[];
	}

	__class(AdvisersBean,'net.message.adviser.AdvisersBean',_super);
	var __proto=AdvisersBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._advisers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._advisers.length;++i_am_tmp_i){
			this._advisers[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._talent);
		this.writeInt(_buf,this._wakeUplv);
		this.writeInt(_buf,this._elements.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._elements.length;++i_am_tmp_i){
			this._elements[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._advisers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._advisers[i_am_tmp_i]=this.readBeanInList(_buf,AdviserBean);
		}
		this._talent=this.readInt(_buf);
		this._wakeUplv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._elements=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._elements[i_am_tmp_i]=this.readBeanInList(_buf,AdviserElementBean);
		}
	}

	/**觉醒等级 */
	/**觉醒等级 */
	__getset(0,__proto,'wakeUplv',function(){
		return this._wakeUplv;
		},function(value){
		this._wakeUplv=value;
	});

	/**军师 */
	/**军师 */
	__getset(0,__proto,'advisers',function(){
		return this._advisers;
		},function(value){
		this._advisers=value;
	});

	/**天赋等级 */
	/**天赋等级 */
	__getset(0,__proto,'talent',function(){
		return this._talent;
		},function(value){
		this._talent=value;
	});

	/**元素 */
	/**元素 */
	__getset(0,__proto,'elements',function(){
		return this._elements;
		},function(value){
		this._elements=value;
	});

	return AdvisersBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*巡城排名对象
*/
//class net.message.garrison.GarrisonRankBean extends engine.base.data.Bean
var GarrisonRankBean=(function(_super){
	function GarrisonRankBean(){
		/**积分 */
		this._integral=0;
		/**名字 */
		this._name=null;
		GarrisonRankBean.__super.call(this);
	}

	__class(GarrisonRankBean,'net.message.garrison.GarrisonRankBean',_super);
	var __proto=GarrisonRankBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._integral);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._integral=this.readInt(_buf);
		this._name=this.readString(_buf);
	}

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return GarrisonRankBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*九重天排名对象 下标就是名次
*/
//class net.message.nineHeavy.NineHeavyIntegralRankBean extends engine.base.data.Bean
var NineHeavyIntegralRankBean=(function(_super){
	function NineHeavyIntegralRankBean(){
		/**ID */
		this._Uid=null;
		/**对象位置 */
		this._name=null;
		/**积分 */
		this._integral=0;
		/**服务器序号 */
		this._sno=0;
		NineHeavyIntegralRankBean.__super.call(this);
	}

	__class(NineHeavyIntegralRankBean,'net.message.nineHeavy.NineHeavyIntegralRankBean',_super);
	var __proto=NineHeavyIntegralRankBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._Uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._integral);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._Uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._integral=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'Uid',function(){
		return this._Uid;
		},function(value){
		this._Uid=value;
	});

	/**对象位置 */
	/**对象位置 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return NineHeavyIntegralRankBean;
})(Bean)


//class net.handler.marriage.ResMarriageUpdateHandler extends net.MNetHandler
var ResMarriageUpdateHandler=(function(_super){
	function ResMarriageUpdateHandler(){
		ResMarriageUpdateHandler.__super.call(this);;
	}

	__class(ResMarriageUpdateHandler,'net.handler.marriage.ResMarriageUpdateHandler',_super);
	var __proto=ResMarriageUpdateHandler.prototype;
	// 更新结婚对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageUpdateHandler",msg.marriageBean);
	}

	return ResMarriageUpdateHandler;
})(MNetHandler)


//class net.handler.shimen.ResChallengeShiMenHandler extends net.MNetHandler
var ResChallengeShiMenHandler=(function(_super){
	function ResChallengeShiMenHandler(){
		ResChallengeShiMenHandler.__super.call(this);;
	}

	__class(ResChallengeShiMenHandler,'net.handler.shimen.ResChallengeShiMenHandler',_super);
	var __proto=ResChallengeShiMenHandler.prototype;
	// 挑战师门任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChallengeShiMenHandler",msg);
	}

	return ResChallengeShiMenHandler;
})(MNetHandler)


//class net.handler.goods.ResDisposeHandler extends net.MNetHandler
var ResDisposeHandler=(function(_super){
	function ResDisposeHandler(){
		ResDisposeHandler.__super.call(this);;
	}

	__class(ResDisposeHandler,'net.handler.goods.ResDisposeHandler',_super);
	var __proto=ResDisposeHandler.prototype;
	// 分解道具
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DisposeHandler" ,msg);
	}

	return ResDisposeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玲珑宝塔层信息
*/
//class net.message.pata.LLBTLayerBean extends engine.base.data.Bean
var LLBTLayerBean=(function(_super){
	function LLBTLayerBean(){
		/**层 */
		this._layer=0;
		/**奖励 */
		this._prize=null;
		/***/
		this._monsterID=0;
		/**是否已领奖 */
		this._prized=false;
		LLBTLayerBean.__super.call(this);
	}

	__class(LLBTLayerBean,'net.message.pata.LLBTLayerBean',_super);
	var __proto=LLBTLayerBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeString(_buf,this._prize);
		this.writeInt(_buf,this._monsterID);
		this.writeBoolean(_buf,this._prized);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._prize=this.readString(_buf);
		this._monsterID=this.readInt(_buf);
		this._prized=this.readBoolean(_buf);
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/***/
	/***/
	__getset(0,__proto,'monsterID',function(){
		return this._monsterID;
		},function(value){
		this._monsterID=value;
	});

	/**是否已领奖 */
	/**是否已领奖 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	return LLBTLayerBean;
})(Bean)


//class net.handler.escort.ResKillEscortTimeErrorHandler extends net.MNetHandler
var ResKillEscortTimeErrorHandler=(function(_super){
	function ResKillEscortTimeErrorHandler(){
		ResKillEscortTimeErrorHandler.__super.call(this);;
	}

	__class(ResKillEscortTimeErrorHandler,'net.handler.escort.ResKillEscortTimeErrorHandler',_super);
	var __proto=ResKillEscortTimeErrorHandler.prototype;
	// 秒杀押运时间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KillEscortTimeErrorHandler" ,msg);
	}

	return ResKillEscortTimeErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerAttackHandler extends net.MNetHandler
var ResNineHeavyPlayerAttackHandler=(function(_super){
	function ResNineHeavyPlayerAttackHandler(){
		ResNineHeavyPlayerAttackHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerAttackHandler,'net.handler.nineHeavy.ResNineHeavyPlayerAttackHandler',_super);
	var __proto=ResNineHeavyPlayerAttackHandler.prototype;
	// 玩家攻击
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerAttackHandler",msg);
	}

	return ResNineHeavyPlayerAttackHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗对象-英雄
*/
//class net.message.fight.FightHeroBean extends engine.base.data.Bean
var FightHeroBean=(function(_super){
	function FightHeroBean(){
		/**对象唯一id */
		this._uid=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**名字 */
		this._name=null;
		/**血量 */
		this._hp=null;
		/**血量上限 */
		this._hpMax=null;
		/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		/**结束血量 */
		this._ehp=null;
		/**等级 */
		this._level=0;
		/**服务器序号 */
		this._sno=0;
		FightHeroBean.__super.call(this);
		this._view=[];
	}

	__class(FightHeroBean,'net.message.fight.FightHeroBean',_super);
	var __proto=FightHeroBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._uid);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._view.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._view.length;++i_am_tmp_i){
			this.writeInt(_buf,this._view[i_am_tmp_i]);
		}
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._hpMax);
		this.writeInt(_buf,this._position);
		this.writeLong(_buf,this._ehp);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._view=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._view[i_am_tmp_i]=this.readInt(_buf);
		}
		this._name=this.readString(_buf);
		this._hp=this.readLong(_buf);
		this._hpMax=this.readLong(_buf);
		this._position=this.readInt(_buf);
		this._ehp=this.readLong(_buf);
		this._level=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**血量 */
	/**血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**对象唯一id */
	/**对象唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**其他外观信息，后面你们自己对 */
	/**其他外观信息，后面你们自己对 */
	__getset(0,__proto,'view',function(){
		return this._view;
		},function(value){
		this._view=value;
	});

	/**结束血量 */
	/**结束血量 */
	__getset(0,__proto,'ehp',function(){
		return this._ehp;
		},function(value){
		this._ehp=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'hpMax',function(){
		return this._hpMax;
		},function(value){
		this._hpMax=value;
	});

	/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return FightHeroBean;
})(Bean)


//class net.handler.soulboy.ResSoulBoyDrugErrorHandler extends net.MNetHandler
var ResSoulBoyDrugErrorHandler=(function(_super){
	function ResSoulBoyDrugErrorHandler(){
		ResSoulBoyDrugErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyDrugErrorHandler,'net.handler.soulboy.ResSoulBoyDrugErrorHandler',_super);
	var __proto=ResSoulBoyDrugErrorHandler.prototype;
	// 灵童嗑药
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyDrugErrorHandler",msg);
	}

	return ResSoulBoyDrugErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*寻宝记录
*/
//class net.message.textureHunt.HuntRecordBean extends engine.base.data.Bean
var HuntRecordBean=(function(_super){
	function HuntRecordBean(){
		/**寻宝人 */
		this._name=null;
		/**寻宝道具 */
		this._item=null;
		HuntRecordBean.__super.call(this);
	}

	__class(HuntRecordBean,'net.message.textureHunt.HuntRecordBean',_super);
	var __proto=HuntRecordBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeBean(_buf,this._item);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._item=this.readBean(_buf,ItemBean);
	}

	/**寻宝道具 */
	/**寻宝道具 */
	__getset(0,__proto,'item',function(){
		return this._item;
		},function(value){
		this._item=value;
	});

	/**寻宝人 */
	/**寻宝人 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return HuntRecordBean;
})(Bean)


//class net.handler.yuanzheng.ResYuanZhengBuyGoodsErrorHandler extends net.MNetHandler
var ResYuanZhengBuyGoodsErrorHandler=(function(_super){
	function ResYuanZhengBuyGoodsErrorHandler(){
		ResYuanZhengBuyGoodsErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengBuyGoodsErrorHandler,'net.handler.yuanzheng.ResYuanZhengBuyGoodsErrorHandler',_super);
	var __proto=ResYuanZhengBuyGoodsErrorHandler.prototype;
	// 远征购买物品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengBuyGoodsErrorHandler",msg);
	}

	return ResYuanZhengBuyGoodsErrorHandler;
})(MNetHandler)


//class net.handler.fight.ResFightPositionExchangeHandler extends net.MNetHandler
var ResFightPositionExchangeHandler=(function(_super){
	function ResFightPositionExchangeHandler(){
		ResFightPositionExchangeHandler.__super.call(this);;
	}

	__class(ResFightPositionExchangeHandler,'net.handler.fight.ResFightPositionExchangeHandler',_super);
	var __proto=ResFightPositionExchangeHandler.prototype;
	// 上阵位置替换
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionExchangeHandler" ,msg);
	}

	return ResFightPositionExchangeHandler;
})(MNetHandler)


//class net.handler.legion.ResLeginUpdateMessageHandler extends net.MNetHandler
var ResLeginUpdateMessageHandler=(function(_super){
	function ResLeginUpdateMessageHandler(){
		ResLeginUpdateMessageHandler.__super.call(this);;
	}

	__class(ResLeginUpdateMessageHandler,'net.handler.legion.ResLeginUpdateMessageHandler',_super);
	var __proto=ResLeginUpdateMessageHandler.prototype;
	// 通知帮会成员信息变更
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResLeginUpdateMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗位置数据
*/
//class net.message.fight.FightPositionBean extends engine.base.data.Bean
var FightPositionBean=(function(_super){
	function FightPositionBean(){
		/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		FightPositionBean.__super.call(this);
		this._objects=[];
	}

	__class(FightPositionBean,'net.message.fight.FightPositionBean',_super);
	var __proto=FightPositionBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._position);
		this.writeInt(_buf,this._objects.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._objects.length;++i_am_tmp_i){
			this._objects[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._position=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._objects=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._objects[i_am_tmp_i]=this.readBeanInList(_buf,FightObjectInPositionBean);
		}
	}

	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**战斗对象 */
	/**战斗对象 */
	__getset(0,__proto,'objects',function(){
		return this._objects;
		},function(value){
		this._objects=value;
	});

	return FightPositionBean;
})(Bean)


//class net.handler.gongCe.ResZhunDianHandler extends net.MNetHandler
var ResZhunDianHandler=(function(_super){
	function ResZhunDianHandler(){
		ResZhunDianHandler.__super.call(this);;
	}

	__class(ResZhunDianHandler,'net.handler.gongCe.ResZhunDianHandler',_super);
	var __proto=ResZhunDianHandler.prototype;
	// 准点登陆
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ZhunDianHandler",msg);
	}

	return ResZhunDianHandler;
})(MNetHandler)


//class net.handler.towerFight.ResTowerFightErrorHandler extends net.MNetHandler
var ResTowerFightErrorHandler=(function(_super){
	function ResTowerFightErrorHandler(){
		ResTowerFightErrorHandler.__super.call(this);;
	}

	__class(ResTowerFightErrorHandler,'net.handler.towerFight.ResTowerFightErrorHandler',_super);
	var __proto=ResTowerFightErrorHandler.prototype;
	// 挑战试炼之塔
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TowerFightResultErrorHandler",msg);
	}

	return ResTowerFightErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyDrugHandler extends net.MNetHandler
var ResSoulBoyDrugHandler=(function(_super){
	function ResSoulBoyDrugHandler(){
		ResSoulBoyDrugHandler.__super.call(this);;
	}

	__class(ResSoulBoyDrugHandler,'net.handler.soulboy.ResSoulBoyDrugHandler',_super);
	var __proto=ResSoulBoyDrugHandler.prototype;
	// 灵童嗑药
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyDrugHandler",msg);
	}

	return ResSoulBoyDrugHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiBuyQueueErrorHandler extends net.MNetHandler
var ResChibiBuyQueueErrorHandler=(function(_super){
	function ResChibiBuyQueueErrorHandler(){
		ResChibiBuyQueueErrorHandler.__super.call(this);;
	}

	__class(ResChibiBuyQueueErrorHandler,'net.handler.chibi.ResChibiBuyQueueErrorHandler',_super);
	var __proto=ResChibiBuyQueueErrorHandler.prototype;
	// 购买赤壁任务队列
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiBuyQueueErrorHandler",msg);
	}

	return ResChibiBuyQueueErrorHandler;
})(MNetHandler)


//class net.handler.treasure.ResTreasureStarUpHandler extends net.MNetHandler
var ResTreasureStarUpHandler=(function(_super){
	function ResTreasureStarUpHandler(){
		ResTreasureStarUpHandler.__super.call(this);;
	}

	__class(ResTreasureStarUpHandler,'net.handler.treasure.ResTreasureStarUpHandler',_super);
	var __proto=ResTreasureStarUpHandler.prototype;
	// 宝物升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasureStarUpHandler",msg);
	}

	return ResTreasureStarUpHandler;
})(MNetHandler)


//class net.handler.skin.ResUpgradeSkinStarErrorHandler extends net.MNetHandler
var ResUpgradeSkinStarErrorHandler=(function(_super){
	function ResUpgradeSkinStarErrorHandler(){
		ResUpgradeSkinStarErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeSkinStarErrorHandler,'net.handler.skin.ResUpgradeSkinStarErrorHandler',_super);
	var __proto=ResUpgradeSkinStarErrorHandler.prototype;
	// 时装升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeSkinStarErrorHandler",msg);
	}

	return ResUpgradeSkinStarErrorHandler;
})(MNetHandler)


//class net.handler.packet.ResUsePetBoxHandler extends net.MNetHandler
var ResUsePetBoxHandler=(function(_super){
	function ResUsePetBoxHandler(){
		ResUsePetBoxHandler.__super.call(this);;
	}

	__class(ResUsePetBoxHandler,'net.handler.packet.ResUsePetBoxHandler',_super);
	var __proto=ResUsePetBoxHandler.prototype;
	// 使用武将盒子
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdatePacketUsePetBoxHandler",msg);
	}

	return ResUsePetBoxHandler;
})(MNetHandler)


//class net.handler.wartoken.ResGetWarTokenRewardErrorHandler extends net.MNetHandler
var ResGetWarTokenRewardErrorHandler=(function(_super){
	function ResGetWarTokenRewardErrorHandler(){
		ResGetWarTokenRewardErrorHandler.__super.call(this);;
	}

	__class(ResGetWarTokenRewardErrorHandler,'net.handler.wartoken.ResGetWarTokenRewardErrorHandler',_super);
	var __proto=ResGetWarTokenRewardErrorHandler.prototype;
	// 领取三国令等级奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetWarTokenRewardErrorHandler",msg);
	}

	return ResGetWarTokenRewardErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResFirePetHandler extends net.MNetHandler
var ResFirePetHandler=(function(_super){
	function ResFirePetHandler(){
		ResFirePetHandler.__super.call(this);;
	}

	__class(ResFirePetHandler,'net.handler.pet.ResFirePetHandler',_super);
	var __proto=ResFirePetHandler.prototype;
	// 革职宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FirePetHandler",msg);
	}

	return ResFirePetHandler;
})(MNetHandler)


//class net.handler.pet.ResAwakePetHandler extends net.MNetHandler
var ResAwakePetHandler=(function(_super){
	function ResAwakePetHandler(){
		ResAwakePetHandler.__super.call(this);;
	}

	__class(ResAwakePetHandler,'net.handler.pet.ResAwakePetHandler',_super);
	var __proto=ResAwakePetHandler.prototype;
	// 宠物觉醒
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResAwakePetHandler",msg);
	}

	return ResAwakePetHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*月卡
*/
//class net.message.welfare.YueKa extends engine.base.data.Bean
var YueKa=(function(_super){
	function YueKa(){
		/**是否有周卡 */
		this._hasWeekCard=false;
		/**是否月卡 */
		this._isYueKa=false;
		/**是否终生卡 */
		this._isZhongShengKa=false;
		/**有效时间 */
		this._effectiveTime=null;
		/**周卡截止时间，毫秒时间戳 */
		this._weekCardEndTime=null;
		YueKa.__super.call(this);
	}

	__class(YueKa,'net.message.welfare.YueKa',_super);
	var __proto=YueKa.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._hasWeekCard);
		this.writeBoolean(_buf,this._isYueKa);
		this.writeBoolean(_buf,this._isZhongShengKa);
		this.writeLong(_buf,this._effectiveTime);
		this.writeLong(_buf,this._weekCardEndTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._hasWeekCard=this.readBoolean(_buf);
		this._isYueKa=this.readBoolean(_buf);
		this._isZhongShengKa=this.readBoolean(_buf);
		this._effectiveTime=this.readLong(_buf);
		this._weekCardEndTime=this.readLong(_buf);
	}

	/**周卡截止时间，毫秒时间戳 */
	/**周卡截止时间，毫秒时间戳 */
	__getset(0,__proto,'weekCardEndTime',function(){
		return this._weekCardEndTime;
		},function(value){
		this._weekCardEndTime=value;
	});

	/**是否有周卡 */
	/**是否有周卡 */
	__getset(0,__proto,'hasWeekCard',function(){
		return this._hasWeekCard;
		},function(value){
		this._hasWeekCard=value;
	});

	/**是否月卡 */
	/**是否月卡 */
	__getset(0,__proto,'isYueKa',function(){
		return this._isYueKa;
		},function(value){
		this._isYueKa=value;
	});

	/**是否终生卡 */
	/**是否终生卡 */
	__getset(0,__proto,'isZhongShengKa',function(){
		return this._isZhongShengKa;
		},function(value){
		this._isZhongShengKa=value;
	});

	/**有效时间 */
	/**有效时间 */
	__getset(0,__proto,'effectiveTime',function(){
		return this._effectiveTime;
		},function(value){
		this._effectiveTime=value;
	});

	return YueKa;
})(Bean)


//class net.handler.todayrecommend.ResRecommendTaskUpdateHandler extends net.MNetHandler
var ResRecommendTaskUpdateHandler=(function(_super){
	function ResRecommendTaskUpdateHandler(){
		ResRecommendTaskUpdateHandler.__super.call(this);;
	}

	__class(ResRecommendTaskUpdateHandler,'net.handler.todayrecommend.ResRecommendTaskUpdateHandler',_super);
	var __proto=ResRecommendTaskUpdateHandler.prototype;
	// 更新任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RecommendTaskUpdateHandler",msg);
	}

	return ResRecommendTaskUpdateHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossPlayerRebornHandler extends net.MNetHandler
var ResWorldBossPlayerRebornHandler=(function(_super){
	function ResWorldBossPlayerRebornHandler(){
		ResWorldBossPlayerRebornHandler.__super.call(this);;
	}

	__class(ResWorldBossPlayerRebornHandler,'net.handler.worldboss.ResWorldBossPlayerRebornHandler',_super);
	var __proto=ResWorldBossPlayerRebornHandler.prototype;
	// 通知BOSS重生
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossPlayerRebornHandler",msg);
	}

	return ResWorldBossPlayerRebornHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionOtherIntoSquareMessageHandler extends net.MNetHandler
var ResLegionOtherIntoSquareMessageHandler=(function(_super){
	function ResLegionOtherIntoSquareMessageHandler(){
		ResLegionOtherIntoSquareMessageHandler.__super.call(this);;
	}

	__class(ResLegionOtherIntoSquareMessageHandler,'net.handler.legion.ResLegionOtherIntoSquareMessageHandler',_super);
	var __proto=ResLegionOtherIntoSquareMessageHandler.prototype;
	// 其他玩家进入广场
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionOtherIntoSquareMessageHandler" ,msg);
	}

	return ResLegionOtherIntoSquareMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍成员简要信息
*/
//class net.message.team.TeamMemberBriefBean extends engine.base.data.Bean
var TeamMemberBriefBean=(function(_super){
	function TeamMemberBriefBean(){
		/**名字 */
		this._name=null;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**等级 */
		this._level=0;
		/**最大血量 */
		this._maxHp=null;
		/**当前血量 */
		this._currHp=null;
		/**当前场景[1:小怪场景][2:BOSS场景][3:玉玺场景] */
		this._sceneType=0;
		TeamMemberBriefBean.__super.call(this);
	}

	__class(TeamMemberBriefBean,'net.message.team.TeamMemberBriefBean',_super);
	var __proto=TeamMemberBriefBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._maxHp);
		this.writeLong(_buf,this._currHp);
		this.writeInt(_buf,this._sceneType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._maxHp=this.readLong(_buf);
		this._currHp=this.readLong(_buf);
		this._sceneType=this.readInt(_buf);
	}

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**当前血量 */
	/**当前血量 */
	__getset(0,__proto,'currHp',function(){
		return this._currHp;
		},function(value){
		this._currHp=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	/**当前场景[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	/**当前场景[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	__getset(0,__proto,'sceneType',function(){
		return this._sceneType;
		},function(value){
		this._sceneType=value;
	});

	return TeamMemberBriefBean;
})(Bean)


//class net.handler.miji.ResLockMijiErrorHandler extends net.MNetHandler
var ResLockMijiErrorHandler=(function(_super){
	function ResLockMijiErrorHandler(){
		ResLockMijiErrorHandler.__super.call(this);;
	}

	__class(ResLockMijiErrorHandler,'net.handler.miji.ResLockMijiErrorHandler',_super);
	var __proto=ResLockMijiErrorHandler.prototype;
	// 加锁/解锁秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResLockMijiErrorHandler;
})(MNetHandler)


//class net.handler.investment.ResGuanQiaInvestmentGetRewardMessageErrorHandler extends net.MNetHandler
var ResGuanQiaInvestmentGetRewardMessageErrorHandler=(function(_super){
	function ResGuanQiaInvestmentGetRewardMessageErrorHandler(){
		ResGuanQiaInvestmentGetRewardMessageErrorHandler.__super.call(this);;
	}

	__class(ResGuanQiaInvestmentGetRewardMessageErrorHandler,'net.handler.investment.ResGuanQiaInvestmentGetRewardMessageErrorHandler',_super);
	var __proto=ResGuanQiaInvestmentGetRewardMessageErrorHandler.prototype;
	// 关卡投资计划领奖
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGuanQiaInvestmentGetRewardMessageErrorHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralSurmountHandler extends net.MNetHandler
var ResGeneralSurmountHandler=(function(_super){
	function ResGeneralSurmountHandler(){
		ResGeneralSurmountHandler.__super.call(this);;
	}

	__class(ResGeneralSurmountHandler,'net.handler.general.ResGeneralSurmountHandler',_super);
	var __proto=ResGeneralSurmountHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralSurmountHandler" ,msg);
	}

	return ResGeneralSurmountHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerJoinHandler extends net.MNetHandler
var ResNineHeavyPlayerJoinHandler=(function(_super){
	function ResNineHeavyPlayerJoinHandler(){
		ResNineHeavyPlayerJoinHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerJoinHandler,'net.handler.nineHeavy.ResNineHeavyPlayerJoinHandler',_super);
	var __proto=ResNineHeavyPlayerJoinHandler.prototype;
	// 请求进入九重天活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerJoinHandler",msg);
	}

	return ResNineHeavyPlayerJoinHandler;
})(MNetHandler)


//class net.handler.task.ResTaskGuildSquarePayHandler extends net.MNetHandler
var ResTaskGuildSquarePayHandler=(function(_super){
	function ResTaskGuildSquarePayHandler(){
		ResTaskGuildSquarePayHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquarePayHandler,'net.handler.task.ResTaskGuildSquarePayHandler',_super);
	var __proto=ResTaskGuildSquarePayHandler.prototype;
	// 付费完成军团广场任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquarePayHandler",msg);
	}

	return ResTaskGuildSquarePayHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeFightPowerHandler extends net.MNetHandler
var ResGuildChangeFightPowerHandler=(function(_super){
	function ResGuildChangeFightPowerHandler(){
		ResGuildChangeFightPowerHandler.__super.call(this);;
	}

	__class(ResGuildChangeFightPowerHandler,'net.handler.guild.ResGuildChangeFightPowerHandler',_super);
	var __proto=ResGuildChangeFightPowerHandler.prototype;
	// 帮会修改战力条件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeFightPowerHandler",msg);
	}

	return ResGuildChangeFightPowerHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*塔信息
*/
//class net.message.towerFight.TowerInfo extends engine.base.data.Bean
var TowerInfo=(function(_super){
	function TowerInfo(){
		/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
		this._type=0;
		/**当前通关的塔层数 */
		this._lower=0;
		/**是否开启 1=开启中 0=未开启 */
		this._isOpen=0;
		TowerInfo.__super.call(this);
	}

	__class(TowerInfo,'net.message.towerFight.TowerInfo',_super);
	var __proto=TowerInfo.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lower);
		this.writeInt(_buf,this._isOpen);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._lower=this.readInt(_buf);
		this._isOpen=this.readInt(_buf);
	}

	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**当前通关的塔层数 */
	/**当前通关的塔层数 */
	__getset(0,__proto,'lower',function(){
		return this._lower;
		},function(value){
		this._lower=value;
	});

	/**是否开启 1=开启中 0=未开启 */
	/**是否开启 1=开启中 0=未开启 */
	__getset(0,__proto,'isOpen',function(){
		return this._isOpen;
		},function(value){
		this._isOpen=value;
	});

	return TowerInfo;
})(Bean)


//class net.handler.scene.ResSceneRemoveHandler extends net.MNetHandler
var ResSceneRemoveHandler=(function(_super){
	function ResSceneRemoveHandler(){
		ResSceneRemoveHandler.__super.call(this);;
	}

	__class(ResSceneRemoveHandler,'net.handler.scene.ResSceneRemoveHandler',_super);
	var __proto=ResSceneRemoveHandler.prototype;
	// 移除场景对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneRemoveHandler",msg);
	}

	return ResSceneRemoveHandler;
})(MNetHandler)


//class net.handler.rank.ResRankMoBaiErrorHandler extends net.MNetHandler
var ResRankMoBaiErrorHandler=(function(_super){
	function ResRankMoBaiErrorHandler(){
		ResRankMoBaiErrorHandler.__super.call(this);;
	}

	__class(ResRankMoBaiErrorHandler,'net.handler.rank.ResRankMoBaiErrorHandler',_super);
	var __proto=ResRankMoBaiErrorHandler.prototype;
	// 膜拜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RankMoBaiErrorHandler",msg.error);
	}

	return ResRankMoBaiErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeFitPrizeErrorHandler extends net.MNetHandler
var ResTakeFitPrizeErrorHandler=(function(_super){
	function ResTakeFitPrizeErrorHandler(){
		ResTakeFitPrizeErrorHandler.__super.call(this);;
	}

	__class(ResTakeFitPrizeErrorHandler,'net.handler.pata.ResTakeFitPrizeErrorHandler',_super);
	var __proto=ResTakeFitPrizeErrorHandler.prototype;
	// 领取合体奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeFitPrizeErrorHandler",msg);
	}

	return ResTakeFitPrizeErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResHeartBeatHandler extends net.MNetHandler
var ResHeartBeatHandler=(function(_super){
	function ResHeartBeatHandler(){
		ResHeartBeatHandler.__super.call(this);;
	}

	__class(ResHeartBeatHandler,'net.handler.misc.ResHeartBeatHandler',_super);
	var __proto=ResHeartBeatHandler.prototype;
	// 心跳
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HeartBeatHandler",[msg.stime,msg.ctime]);
	}

	return ResHeartBeatHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpdateRewardHandler extends net.MNetHandler
var ResGarrisonUpdateRewardHandler=(function(_super){
	function ResGarrisonUpdateRewardHandler(){
		ResGarrisonUpdateRewardHandler.__super.call(this);;
	}

	__class(ResGarrisonUpdateRewardHandler,'net.handler.garrison.ResGarrisonUpdateRewardHandler',_super);
	var __proto=ResGarrisonUpdateRewardHandler.prototype;
	// 更新领奖权
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpdateRewardHandler" ,msg);
	}

	return ResGarrisonUpdateRewardHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightRewardHandler extends net.MNetHandler
var ResKingWarFightRewardHandler=(function(_super){
	function ResKingWarFightRewardHandler(){
		ResKingWarFightRewardHandler.__super.call(this);;
	}

	__class(ResKingWarFightRewardHandler,'net.handler.kingwar.ResKingWarFightRewardHandler',_super);
	var __proto=ResKingWarFightRewardHandler.prototype;
	// 王者争霸请求战斗结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightRewardHandler",msg);
	}

	return ResKingWarFightRewardHandler;
})(MNetHandler)


//class net.handler.todayrecommend.ResRecommendTaskIntegralRewardErrorHandler extends net.MNetHandler
var ResRecommendTaskIntegralRewardErrorHandler=(function(_super){
	function ResRecommendTaskIntegralRewardErrorHandler(){
		ResRecommendTaskIntegralRewardErrorHandler.__super.call(this);;
	}

	__class(ResRecommendTaskIntegralRewardErrorHandler,'net.handler.todayrecommend.ResRecommendTaskIntegralRewardErrorHandler',_super);
	var __proto=ResRecommendTaskIntegralRewardErrorHandler.prototype;
	// 领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RecommendTaskIntegralRewardErrorHandler",msg);
	}

	return ResRecommendTaskIntegralRewardErrorHandler;
})(MNetHandler)


//class net.handler.mail.ResAddMailHandler extends net.MNetHandler
var ResAddMailHandler=(function(_super){
	function ResAddMailHandler(){
		ResAddMailHandler.__super.call(this);;
	}

	__class(ResAddMailHandler,'net.handler.mail.ResAddMailHandler',_super);
	var __proto=ResAddMailHandler.prototype;
	// 添加邮件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AddMailHandler",msg);
	}

	return ResAddMailHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体宝石对象
*/
//class net.message.fit.FitGemBean extends engine.base.data.Bean
var FitGemBean=(function(_super){
	function FitGemBean(){
		/**类型[1:][2:][3:][4:][5:] */
		this._type=0;
		/**道具ID */
		this._id=0;
		/**道具等级 */
		this._lv=0;
		FitGemBean.__super.call(this);
	}

	__class(FitGemBean,'net.message.fit.FitGemBean',_super);
	var __proto=FitGemBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	/**类型[1:][2:][3:][4:][5:] */
	/**类型[1:][2:][3:][4:][5:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**道具等级 */
	/**道具等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return FitGemBean;
})(Bean)


//class net.handler.equip.ResEquipSuitActiveHandler extends net.MNetHandler
var ResEquipSuitActiveHandler=(function(_super){
	function ResEquipSuitActiveHandler(){
		ResEquipSuitActiveHandler.__super.call(this);;
	}

	__class(ResEquipSuitActiveHandler,'net.handler.equip.ResEquipSuitActiveHandler',_super);
	var __proto=ResEquipSuitActiveHandler.prototype;
	// 打造装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipSuitActiveMessage",msg);
	}

	return ResEquipSuitActiveHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionSignRewardMessageHandler extends net.MNetHandler
var ResLegionSignRewardMessageHandler=(function(_super){
	function ResLegionSignRewardMessageHandler(){
		ResLegionSignRewardMessageHandler.__super.call(this);;
	}

	__class(ResLegionSignRewardMessageHandler,'net.handler.legion.ResLegionSignRewardMessageHandler',_super);
	var __proto=ResLegionSignRewardMessageHandler.prototype;
	// 签到
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSignRewardMessageHandler",msg);
	}

	return ResLegionSignRewardMessageHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightRecordErrorHandler extends net.MNetHandler
var ResKingWarFightRecordErrorHandler=(function(_super){
	function ResKingWarFightRecordErrorHandler(){
		ResKingWarFightRecordErrorHandler.__super.call(this);;
	}

	__class(ResKingWarFightRecordErrorHandler,'net.handler.kingwar.ResKingWarFightRecordErrorHandler',_super);
	var __proto=ResKingWarFightRecordErrorHandler.prototype;
	// 王者争霸战斗记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightRecordErrorHandler",msg);
	}

	return ResKingWarFightRecordErrorHandler;
})(MNetHandler)


//class net.handler.card.ResUseCardHandler extends net.MNetHandler
var ResUseCardHandler=(function(_super){
	function ResUseCardHandler(){
		ResUseCardHandler.__super.call(this);;
	}

	__class(ResUseCardHandler,'net.handler.card.ResUseCardHandler',_super);
	var __proto=ResUseCardHandler.prototype;
	// 使用激活码
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UseCardHandler",msg);
	}

	return ResUseCardHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerRankHandler extends net.MNetHandler
var ResNineHeavyPlayerRankHandler=(function(_super){
	function ResNineHeavyPlayerRankHandler(){
		ResNineHeavyPlayerRankHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerRankHandler,'net.handler.nineHeavy.ResNineHeavyPlayerRankHandler',_super);
	var __proto=ResNineHeavyPlayerRankHandler.prototype;
	// 请求排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerRankHandler",msg);
	}

	return ResNineHeavyPlayerRankHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateRobotHandler extends net.MNetHandler
var ResUpdateRobotHandler=(function(_super){
	function ResUpdateRobotHandler(){
		ResUpdateRobotHandler.__super.call(this);;
	}

	__class(ResUpdateRobotHandler,'net.handler.user.ResUpdateRobotHandler',_super);
	var __proto=ResUpdateRobotHandler.prototype;
	// 更新场景里的机器人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateRobotHandler",msg);
	}

	return ResUpdateRobotHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildApplyErrorHandler extends net.MNetHandler
var ResGuildApplyErrorHandler=(function(_super){
	function ResGuildApplyErrorHandler(){
		ResGuildApplyErrorHandler.__super.call(this);;
	}

	__class(ResGuildApplyErrorHandler,'net.handler.guild.ResGuildApplyErrorHandler',_super);
	var __proto=ResGuildApplyErrorHandler.prototype;
	// 申请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildApplyErrorHandler",msg);
	}

	return ResGuildApplyErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionSignMessageErrorHandler extends net.MNetHandler
var ResLegionSignMessageErrorHandler=(function(_super){
	function ResLegionSignMessageErrorHandler(){
		ResLegionSignMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionSignMessageErrorHandler,'net.handler.legion.ResLegionSignMessageErrorHandler',_super);
	var __proto=ResLegionSignMessageErrorHandler.prototype;
	// 签到
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSignMessageErrorHandler" ,msg);
	}

	return ResLegionSignMessageErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossLeaveErrorHandler extends net.MNetHandler
var ResWorldBossLeaveErrorHandler=(function(_super){
	function ResWorldBossLeaveErrorHandler(){
		ResWorldBossLeaveErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossLeaveErrorHandler,'net.handler.worldboss.ResWorldBossLeaveErrorHandler',_super);
	var __proto=ResWorldBossLeaveErrorHandler.prototype;
	// 玩家离开
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossLeaveErrorHandler",msg);
	}

	return ResWorldBossLeaveErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossFlushBoxHandler extends net.MNetHandler
var ResWorldBossFlushBoxHandler=(function(_super){
	function ResWorldBossFlushBoxHandler(){
		ResWorldBossFlushBoxHandler.__super.call(this);;
	}

	__class(ResWorldBossFlushBoxHandler,'net.handler.worldboss.ResWorldBossFlushBoxHandler',_super);
	var __proto=ResWorldBossFlushBoxHandler.prototype;
	// boss破盾刷新宝箱
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossFlushBoxHandler",msg);
	}

	return ResWorldBossFlushBoxHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyUpdateStateHandler extends net.MNetHandler
var ResEmptyUpdateStateHandler=(function(_super){
	function ResEmptyUpdateStateHandler(){
		ResEmptyUpdateStateHandler.__super.call(this);;
	}

	__class(ResEmptyUpdateStateHandler,'net.handler.emptycity.ResEmptyUpdateStateHandler',_super);
	var __proto=ResEmptyUpdateStateHandler.prototype;
	// 更新空城计活动状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyUpdateStateHandler",msg);
	}

	return ResEmptyUpdateStateHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackHandler extends net.MNetHandler
var ResWorldBossAttackHandler=(function(_super){
	function ResWorldBossAttackHandler(){
		ResWorldBossAttackHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackHandler,'net.handler.worldboss.ResWorldBossAttackHandler',_super);
	var __proto=ResWorldBossAttackHandler.prototype;
	// 玩家攻击BOSS
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackHandler",msg);
	}

	return ResWorldBossAttackHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派事件
*/
//class net.message.guild.GuildEventBean extends engine.base.data.Bean
var GuildEventBean=(function(_super){
	function GuildEventBean(){
		/**时间 */
		this._time=null;
		/**类型[1:添加][2:退出][3:被踢][4:庆功] */
		this._type=0;
		/**名字 */
		this._name=null;
		GuildEventBean.__super.call(this);
	}

	__class(GuildEventBean,'net.message.guild.GuildEventBean',_super);
	var __proto=GuildEventBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._type);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._name=this.readString(_buf);
	}

	/**时间 */
	/**时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**类型[1:添加][2:退出][3:被踢][4:庆功] */
	/**类型[1:添加][2:退出][3:被踢][4:庆功] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return GuildEventBean;
})(Bean)


//class net.handler.goods.ResUpdateHeroAttributeGoodsHandler extends net.MNetHandler
var ResUpdateHeroAttributeGoodsHandler=(function(_super){
	function ResUpdateHeroAttributeGoodsHandler(){
		ResUpdateHeroAttributeGoodsHandler.__super.call(this);;
	}

	__class(ResUpdateHeroAttributeGoodsHandler,'net.handler.goods.ResUpdateHeroAttributeGoodsHandler',_super);
	var __proto=ResUpdateHeroAttributeGoodsHandler.prototype;
	// 更新英雄属性道具使用数量
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateHeroAttributeGoodsHandler",msg);
	}

	return ResUpdateHeroAttributeGoodsHandler;
})(MNetHandler)


//class net.handler.pata.ResGetMarryPataInfoHandler extends net.MNetHandler
var ResGetMarryPataInfoHandler=(function(_super){
	function ResGetMarryPataInfoHandler(){
		ResGetMarryPataInfoHandler.__super.call(this);;
	}

	__class(ResGetMarryPataInfoHandler,'net.handler.pata.ResGetMarryPataInfoHandler',_super);
	var __proto=ResGetMarryPataInfoHandler.prototype;
	// 获取结婚爬塔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageGetMarryPataInfoHandler",msg);
	}

	return ResGetMarryPataInfoHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildInviteErrorHandler extends net.MNetHandler
var ResGuildInviteErrorHandler=(function(_super){
	function ResGuildInviteErrorHandler(){
		ResGuildInviteErrorHandler.__super.call(this);;
	}

	__class(ResGuildInviteErrorHandler,'net.handler.guild.ResGuildInviteErrorHandler',_super);
	var __proto=ResGuildInviteErrorHandler.prototype;
	// 邀请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildInviteErrorHandler",msg);
	}

	return ResGuildInviteErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会战斗对象
*/
//class net.message.qunyinghui.QunYingHuiFightBean extends engine.base.data.Bean
var QunYingHuiFightBean=(function(_super){
	function QunYingHuiFightBean(){
		/**战斗ID */
		this._fightID=0;
		/**战斗者1 */
		this._fighter1=null;
		/**战斗者2 */
		this._fighter2=null;
		/**是否已压注 */
		this._bet=false;
		QunYingHuiFightBean.__super.call(this);
	}

	__class(QunYingHuiFightBean,'net.message.qunyinghui.QunYingHuiFightBean',_super);
	var __proto=QunYingHuiFightBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightID);
		this.writeBean(_buf,this._fighter1);
		this.writeBean(_buf,this._fighter2);
		this.writeBoolean(_buf,this._bet);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightID=this.readInt(_buf);
		this._fighter1=this.readBean(_buf,QunYingHuiFighterBean);
		this._fighter2=this.readBean(_buf,QunYingHuiFighterBean);
		this._bet=this.readBoolean(_buf);
	}

	/**是否已压注 */
	/**是否已压注 */
	__getset(0,__proto,'bet',function(){
		return this._bet;
		},function(value){
		this._bet=value;
	});

	/**战斗ID */
	/**战斗ID */
	__getset(0,__proto,'fightID',function(){
		return this._fightID;
		},function(value){
		this._fightID=value;
	});

	/**战斗者1 */
	/**战斗者1 */
	__getset(0,__proto,'fighter1',function(){
		return this._fighter1;
		},function(value){
		this._fighter1=value;
	});

	/**战斗者2 */
	/**战斗者2 */
	__getset(0,__proto,'fighter2',function(){
		return this._fighter2;
		},function(value){
		this._fighter2=value;
	});

	return QunYingHuiFightBean;
})(Bean)


//class net.handler.garrison.ResGarrisonChallengeTargetHandler extends net.MNetHandler
var ResGarrisonChallengeTargetHandler=(function(_super){
	function ResGarrisonChallengeTargetHandler(){
		ResGarrisonChallengeTargetHandler.__super.call(this);;
	}

	__class(ResGarrisonChallengeTargetHandler,'net.handler.garrison.ResGarrisonChallengeTargetHandler',_super);
	var __proto=ResGarrisonChallengeTargetHandler.prototype;
	// 挑战目标
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonChallengeTargetHandler" ,msg);
	}

	return ResGarrisonChallengeTargetHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeWeaponHandler extends net.MNetHandler
var ResGeneralUpgradeWeaponHandler=(function(_super){
	function ResGeneralUpgradeWeaponHandler(){
		ResGeneralUpgradeWeaponHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeWeaponHandler,'net.handler.general.ResGeneralUpgradeWeaponHandler',_super);
	var __proto=ResGeneralUpgradeWeaponHandler.prototype;
	// 蛮器升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeWeaponHandler" ,msg);
	}

	return ResGeneralUpgradeWeaponHandler;
})(MNetHandler)


//class net.handler.shop.ResRemoveShopHandler extends net.MNetHandler
var ResRemoveShopHandler=(function(_super){
	function ResRemoveShopHandler(){
		ResRemoveShopHandler.__super.call(this);;
	}

	__class(ResRemoveShopHandler,'net.handler.shop.ResRemoveShopHandler',_super);
	var __proto=ResRemoveShopHandler.prototype;
	// 移除商店
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RemoveShopHandler",[msg.type,msg.tabType]);
	}

	return ResRemoveShopHandler;
})(MNetHandler)


//class net.handler.team.ResTeamExitErrorHandler extends net.MNetHandler
var ResTeamExitErrorHandler=(function(_super){
	function ResTeamExitErrorHandler(){
		ResTeamExitErrorHandler.__super.call(this);;
	}

	__class(ResTeamExitErrorHandler,'net.handler.team.ResTeamExitErrorHandler',_super);
	var __proto=ResTeamExitErrorHandler.prototype;
	// 退出队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamExitErrorHandler",msg);
	}

	return ResTeamExitErrorHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemSurmountErrorHandler extends net.MNetHandler
var ResTotemSurmountErrorHandler=(function(_super){
	function ResTotemSurmountErrorHandler(){
		ResTotemSurmountErrorHandler.__super.call(this);;
	}

	__class(ResTotemSurmountErrorHandler,'net.handler.totem.ResTotemSurmountErrorHandler',_super);
	var __proto=ResTotemSurmountErrorHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemSurmountErrorHandler",msg.error);
	}

	return ResTotemSurmountErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobberyRewardHandler extends net.MNetHandler
var ResEscortRobberyRewardHandler=(function(_super){
	function ResEscortRobberyRewardHandler(){
		ResEscortRobberyRewardHandler.__super.call(this);;
	}

	__class(ResEscortRobberyRewardHandler,'net.handler.escort.ResEscortRobberyRewardHandler',_super);
	var __proto=ResEscortRobberyRewardHandler.prototype;
	// 请求劫镖奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRobberyRewardHandler",msg);
	}

	return ResEscortRobberyRewardHandler;
})(MNetHandler)


//class net.handler.misc.ResZhiJianFollowSucErrorHandler extends net.MNetHandler
var ResZhiJianFollowSucErrorHandler=(function(_super){
	function ResZhiJianFollowSucErrorHandler(){
		ResZhiJianFollowSucErrorHandler.__super.call(this);;
	}

	__class(ResZhiJianFollowSucErrorHandler,'net.handler.misc.ResZhiJianFollowSucErrorHandler',_super);
	var __proto=ResZhiJianFollowSucErrorHandler.prototype;
	// 通知服务端指尖玩家已关注公众号
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResZhiJianFollowSucErrorHandler",msg);
	}

	return ResZhiJianFollowSucErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResGetLLBTInfoHandler extends net.MNetHandler
var ResGetLLBTInfoHandler=(function(_super){
	function ResGetLLBTInfoHandler(){
		ResGetLLBTInfoHandler.__super.call(this);;
	}

	__class(ResGetLLBTInfoHandler,'net.handler.pata.ResGetLLBTInfoHandler',_super);
	var __proto=ResGetLLBTInfoHandler.prototype;
	// 获取玲珑宝塔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetLLBTInfoHandler",msg);
	}

	return ResGetLLBTInfoHandler;
})(MNetHandler)


//class net.handler.misc.ResCommandErrorHandler extends net.MNetHandler
var ResCommandErrorHandler=(function(_super){
	function ResCommandErrorHandler(){
		ResCommandErrorHandler.__super.call(this);;
	}

	__class(ResCommandErrorHandler,'net.handler.misc.ResCommandErrorHandler',_super);
	var __proto=ResCommandErrorHandler.prototype;
	// 指令
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResCommandErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildKickErrorHandler extends net.MNetHandler
var ResGuildKickErrorHandler=(function(_super){
	function ResGuildKickErrorHandler(){
		ResGuildKickErrorHandler.__super.call(this);;
	}

	__class(ResGuildKickErrorHandler,'net.handler.guild.ResGuildKickErrorHandler',_super);
	var __proto=ResGuildKickErrorHandler.prototype;
	// 军团踢人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildKickErrorHandler",msg);
	}

	return ResGuildKickErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerLeaveHandler extends net.MNetHandler
var ResNineHeavyPlayerLeaveHandler=(function(_super){
	function ResNineHeavyPlayerLeaveHandler(){
		ResNineHeavyPlayerLeaveHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerLeaveHandler,'net.handler.nineHeavy.ResNineHeavyPlayerLeaveHandler',_super);
	var __proto=ResNineHeavyPlayerLeaveHandler.prototype;
	// 玩家退出九重天
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerLeaveHandler",msg);
	}

	return ResNineHeavyPlayerLeaveHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetRankInfoHandler extends net.MNetHandler
var ResArenaGetRankInfoHandler=(function(_super){
	function ResArenaGetRankInfoHandler(){
		ResArenaGetRankInfoHandler.__super.call(this);;
	}

	__class(ResArenaGetRankInfoHandler,'net.handler.arena.ResArenaGetRankInfoHandler',_super);
	var __proto=ResArenaGetRankInfoHandler.prototype;
	// 获取竞技场排名信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetRankInfoHandler",msg);
	}

	return ResArenaGetRankInfoHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetRankInfoErrorHandler extends net.MNetHandler
var ResArenaGetRankInfoErrorHandler=(function(_super){
	function ResArenaGetRankInfoErrorHandler(){
		ResArenaGetRankInfoErrorHandler.__super.call(this);;
	}

	__class(ResArenaGetRankInfoErrorHandler,'net.handler.arena.ResArenaGetRankInfoErrorHandler',_super);
	var __proto=ResArenaGetRankInfoErrorHandler.prototype;
	// 获取竞技场排名信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetRankInfoErrorHandler",msg.error);
	}

	return ResArenaGetRankInfoErrorHandler;
})(MNetHandler)


//class net.handler.shop.ResMysteriousShopHandler extends net.MNetHandler
var ResMysteriousShopHandler=(function(_super){
	function ResMysteriousShopHandler(){
		ResMysteriousShopHandler.__super.call(this);;
	}

	__class(ResMysteriousShopHandler,'net.handler.shop.ResMysteriousShopHandler',_super);
	var __proto=ResMysteriousShopHandler.prototype;
	// 神秘商店
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MysteriousShopHandler",msg);
	}

	return ResMysteriousShopHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeRewardHandler extends net.MNetHandler
var ResEscortRevengeRewardHandler=(function(_super){
	function ResEscortRevengeRewardHandler(){
		ResEscortRevengeRewardHandler.__super.call(this);;
	}

	__class(ResEscortRevengeRewardHandler,'net.handler.escort.ResEscortRevengeRewardHandler',_super);
	var __proto=ResEscortRevengeRewardHandler.prototype;
	// 请求复仇的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRevengeRewardHandler ",msg);
	}

	return ResEscortRevengeRewardHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*媚坞信息
*/
//class net.message.gongCe.MeiWuBean extends engine.base.data.Bean
var MeiWuBean=(function(_super){
	function MeiWuBean(){
		/**玩家所在的层数 */
		this._lawyer=0;
		/**是否开出至宝 */
		this._isGetTheBest=false;
		MeiWuBean.__super.call(this);
		this._list=[];
	}

	__class(MeiWuBean,'net.message.gongCe.MeiWuBean',_super);
	var __proto=MeiWuBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lawyer);
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
		this.writeBoolean(_buf,this._isGetTheBest);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lawyer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,MeiWuItemBean);
		}
		this._isGetTheBest=this.readBoolean(_buf);
	}

	/**玩家已开的宝箱 */
	/**玩家已开的宝箱 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	/**玩家所在的层数 */
	/**玩家所在的层数 */
	__getset(0,__proto,'lawyer',function(){
		return this._lawyer;
		},function(value){
		this._lawyer=value;
	});

	/**是否开出至宝 */
	/**是否开出至宝 */
	__getset(0,__proto,'isGetTheBest',function(){
		return this._isGetTheBest;
		},function(value){
		this._isGetTheBest=value;
	});

	return MeiWuBean;
})(Bean)


//class net.handler.scene.ResSceneAddHandler extends net.MNetHandler
var ResSceneAddHandler=(function(_super){
	function ResSceneAddHandler(){
		ResSceneAddHandler.__super.call(this);;
	}

	__class(ResSceneAddHandler,'net.handler.scene.ResSceneAddHandler',_super);
	var __proto=ResSceneAddHandler.prototype;
	// 添加场景对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneAddHandler",msg);
	}

	return ResSceneAddHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*野外boss副本
*/
//class net.message.dungeon.YeWaiBossDungeonBean extends engine.base.data.Bean
var YeWaiBossDungeonBean=(function(_super){
	function YeWaiBossDungeonBean(){
		/**副本ID */
		this._id=0;
		/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
		this._hp=null;
		/**逃跑时间 */
		this._taopaoTime=0;
		/**下次刷新时间 */
		this._xiaciTime=0;
		/**归属者名字 */
		this._ownerName=null;
		/**归属者性别 */
		this._ownerGender=0;
		/**归属者职业 */
		this._ownerProfession=0;
		/**是否逃跑 */
		this._isTaopao=0;
		/**最大血量 */
		this._maxHp=null;
		/**消耗的道具ID */
		this._costItem=0;
		/**消耗的道具数量 */
		this._costNum=0;
		YeWaiBossDungeonBean.__super.call(this);
		this._users=[];
	}

	__class(YeWaiBossDungeonBean,'net.message.dungeon.YeWaiBossDungeonBean',_super);
	var __proto=YeWaiBossDungeonBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._hp);
		this.writeInt(_buf,this._taopaoTime);
		this.writeInt(_buf,this._xiaciTime);
		this.writeString(_buf,this._ownerName);
		this.writeInt(_buf,this._ownerGender);
		this.writeInt(_buf,this._ownerProfession);
		this.writeInt(_buf,this._isTaopao);
		this.writeLong(_buf,this._maxHp);
		this.writeInt(_buf,this._costItem);
		this.writeInt(_buf,this._costNum);
		this.writeInt(_buf,this._users.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._users.length;++i_am_tmp_i){
			this.writeLong(_buf,this._users[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._taopaoTime=this.readInt(_buf);
		this._xiaciTime=this.readInt(_buf);
		this._ownerName=this.readString(_buf);
		this._ownerGender=this.readInt(_buf);
		this._ownerProfession=this.readInt(_buf);
		this._isTaopao=this.readInt(_buf);
		this._maxHp=this.readLong(_buf);
		this._costItem=this.readInt(_buf);
		this._costNum=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._users=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._users[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否逃跑 */
	/**是否逃跑 */
	__getset(0,__proto,'isTaopao',function(){
		return this._isTaopao;
		},function(value){
		this._isTaopao=value;
	});

	/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
	/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**下次刷新时间 */
	/**下次刷新时间 */
	__getset(0,__proto,'xiaciTime',function(){
		return this._xiaciTime;
		},function(value){
		this._xiaciTime=value;
	});

	/**逃跑时间 */
	/**逃跑时间 */
	__getset(0,__proto,'taopaoTime',function(){
		return this._taopaoTime;
		},function(value){
		this._taopaoTime=value;
	});

	/**归属者名字 */
	/**归属者名字 */
	__getset(0,__proto,'ownerName',function(){
		return this._ownerName;
		},function(value){
		this._ownerName=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	/**归属者性别 */
	/**归属者性别 */
	__getset(0,__proto,'ownerGender',function(){
		return this._ownerGender;
		},function(value){
		this._ownerGender=value;
	});

	/**归属者职业 */
	/**归属者职业 */
	__getset(0,__proto,'ownerProfession',function(){
		return this._ownerProfession;
		},function(value){
		this._ownerProfession=value;
	});

	/**消耗的道具ID */
	/**消耗的道具ID */
	__getset(0,__proto,'costItem',function(){
		return this._costItem;
		},function(value){
		this._costItem=value;
	});

	/**消耗的道具数量 */
	/**消耗的道具数量 */
	__getset(0,__proto,'costNum',function(){
		return this._costNum;
		},function(value){
		this._costNum=value;
	});

	/**消耗的道具数量 */
	/**消耗的道具数量 */
	__getset(0,__proto,'users',function(){
		return this._users;
		},function(value){
		this._users=value;
	});

	return YeWaiBossDungeonBean;
})(Bean)


//class net.handler.wartoken.ResUpdateCommonWarTokenHandler extends net.MNetHandler
var ResUpdateCommonWarTokenHandler=(function(_super){
	function ResUpdateCommonWarTokenHandler(){
		ResUpdateCommonWarTokenHandler.__super.call(this);;
	}

	__class(ResUpdateCommonWarTokenHandler,'net.handler.wartoken.ResUpdateCommonWarTokenHandler',_super);
	var __proto=ResUpdateCommonWarTokenHandler.prototype;
	// 通用战令活动更新
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateCommonWarTokenHandler",msg);
	}

	return ResUpdateCommonWarTokenHandler;
})(MNetHandler)


//class net.handler.duanzao.ResDuanZaoUpgradeHandler extends net.MNetHandler
var ResDuanZaoUpgradeHandler=(function(_super){
	function ResDuanZaoUpgradeHandler(){
		ResDuanZaoUpgradeHandler.__super.call(this);;
	}

	__class(ResDuanZaoUpgradeHandler,'net.handler.duanzao.ResDuanZaoUpgradeHandler',_super);
	var __proto=ResDuanZaoUpgradeHandler.prototype;
	// 锻造升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DuanZaoUpgradeHandler",msg);
	}

	return ResDuanZaoUpgradeHandler;
})(MNetHandler)


//class net.handler.welfare.ResGetFuLiRewardErrorHandler extends net.MNetHandler
var ResGetFuLiRewardErrorHandler=(function(_super){
	function ResGetFuLiRewardErrorHandler(){
		ResGetFuLiRewardErrorHandler.__super.call(this);;
	}

	__class(ResGetFuLiRewardErrorHandler,'net.handler.welfare.ResGetFuLiRewardErrorHandler',_super);
	var __proto=ResGetFuLiRewardErrorHandler.prototype;
	// 领取福利奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetFuLiRewardErrorHandler",msg);
	}

	return ResGetFuLiRewardErrorHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengRefreshSkillErrorHandler extends net.MNetHandler
var ResYuanZhengRefreshSkillErrorHandler=(function(_super){
	function ResYuanZhengRefreshSkillErrorHandler(){
		ResYuanZhengRefreshSkillErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengRefreshSkillErrorHandler,'net.handler.yuanzheng.ResYuanZhengRefreshSkillErrorHandler',_super);
	var __proto=ResYuanZhengRefreshSkillErrorHandler.prototype;
	// 远征刷新技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengRefreshSkillErrorHandler",msg);
	}

	return ResYuanZhengRefreshSkillErrorHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeErrorHandler extends net.MNetHandler
var ResAdviserUpgradeErrorHandler=(function(_super){
	function ResAdviserUpgradeErrorHandler(){
		ResAdviserUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeErrorHandler,'net.handler.adviser.ResAdviserUpgradeErrorHandler',_super);
	var __proto=ResAdviserUpgradeErrorHandler.prototype;
	// 升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeErrorHandler",msg.error);
	}

	return ResAdviserUpgradeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*空城计所有者对象
*/
//class net.message.emptycity.EmptyCityOwnerBean extends engine.base.data.Bean
var EmptyCityOwnerBean=(function(_super){
	function EmptyCityOwnerBean(){
		/**id */
		this._uid=null;
		/**等级 */
		this._lv=0;
		/**名字 */
		this._name=null;
		/**战斗力 */
		this._fightPower=null;
		/**性别 */
		this._gender=0;
		/**职业 */
		this._personal=0;
		/**剩余奖励时间 */
		this._rewardTime=0;
		/**剩余血量百分比 */
		this._residualProportion=0;
		/**服务器序号 */
		this._sno=0;
		EmptyCityOwnerBean.__super.call(this);
	}

	__class(EmptyCityOwnerBean,'net.message.emptycity.EmptyCityOwnerBean',_super);
	var __proto=EmptyCityOwnerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._lv);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._personal);
		this.writeInt(_buf,this._rewardTime);
		this.writeInt(_buf,this._residualProportion);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._lv=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._gender=this.readInt(_buf);
		this._personal=this.readInt(_buf);
		this._rewardTime=this.readInt(_buf);
		this._residualProportion=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'personal',function(){
		return this._personal;
		},function(value){
		this._personal=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**剩余血量百分比 */
	/**剩余血量百分比 */
	__getset(0,__proto,'residualProportion',function(){
		return this._residualProportion;
		},function(value){
		this._residualProportion=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**剩余奖励时间 */
	/**剩余奖励时间 */
	__getset(0,__proto,'rewardTime',function(){
		return this._rewardTime;
		},function(value){
		this._rewardTime=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return EmptyCityOwnerBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玲珑宝塔层信息
*/
//class net.message.pata.XXHJFristPrize extends engine.base.data.Bean
var XXHJFristPrize=(function(_super){
	function XXHJFristPrize(){
		/**层 */
		this._layer=0;
		/**奖励 */
		this._prize=null;
		/**是否领取 */
		this._prized=false;
		XXHJFristPrize.__super.call(this);
	}

	__class(XXHJFristPrize,'net.message.pata.XXHJFristPrize',_super);
	var __proto=XXHJFristPrize.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeString(_buf,this._prize);
		this.writeBoolean(_buf,this._prized);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._prize=this.readString(_buf);
		this._prized=this.readBoolean(_buf);
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**是否领取 */
	/**是否领取 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	return XXHJFristPrize;
})(Bean)


//class net.handler.skin.ResUpdateSkinErrorHandler extends net.MNetHandler
var ResUpdateSkinErrorHandler=(function(_super){
	function ResUpdateSkinErrorHandler(){
		ResUpdateSkinErrorHandler.__super.call(this);;
	}

	__class(ResUpdateSkinErrorHandler,'net.handler.skin.ResUpdateSkinErrorHandler',_super);
	var __proto=ResUpdateSkinErrorHandler.prototype;
	// 更新时装
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUpdateSkinErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeXXHJPrizeHandler extends net.MNetHandler
var ResTakeXXHJPrizeHandler=(function(_super){
	function ResTakeXXHJPrizeHandler(){
		ResTakeXXHJPrizeHandler.__super.call(this);;
	}

	__class(ResTakeXXHJPrizeHandler,'net.handler.pata.ResTakeXXHJPrizeHandler',_super);
	var __proto=ResTakeXXHJPrizeHandler.prototype;
	// 领取星宿幻境奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeXXHJPrizeHandler",msg);
	}

	return ResTakeXXHJPrizeHandler;
})(MNetHandler)


//class net.handler.pata.ResPataUpdateStateHandler extends net.MNetHandler
var ResPataUpdateStateHandler=(function(_super){
	function ResPataUpdateStateHandler(){
		ResPataUpdateStateHandler.__super.call(this);;
	}

	__class(ResPataUpdateStateHandler,'net.handler.pata.ResPataUpdateStateHandler',_super);
	var __proto=ResPataUpdateStateHandler.prototype;
	// 更新状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PataUpdateStateHandler",msg.invisibleTypes);
	}

	return ResPataUpdateStateHandler;
})(MNetHandler)


//class net.handler.skill.ResUpgradeHeroSkillErrorHandler extends net.MNetHandler
var ResUpgradeHeroSkillErrorHandler=(function(_super){
	function ResUpgradeHeroSkillErrorHandler(){
		ResUpgradeHeroSkillErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeHeroSkillErrorHandler,'net.handler.skill.ResUpgradeHeroSkillErrorHandler',_super);
	var __proto=ResUpgradeHeroSkillErrorHandler.prototype;
	// 升级英雄技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeHeroSkillErrorHandler",msg);
	}

	return ResUpgradeHeroSkillErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyLingUpgradeHandler extends net.MNetHandler
var ResSoulBoyLingUpgradeHandler=(function(_super){
	function ResSoulBoyLingUpgradeHandler(){
		ResSoulBoyLingUpgradeHandler.__super.call(this);;
	}

	__class(ResSoulBoyLingUpgradeHandler,'net.handler.soulboy.ResSoulBoyLingUpgradeHandler',_super);
	var __proto=ResSoulBoyLingUpgradeHandler.prototype;
	// 升级或者激活御灵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyLingUpgradeHandler",msg);
	}

	return ResSoulBoyLingUpgradeHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePromoteHouseReceiveHandler extends net.MNetHandler
var ResMarriagePromoteHouseReceiveHandler=(function(_super){
	function ResMarriagePromoteHouseReceiveHandler(){
		ResMarriagePromoteHouseReceiveHandler.__super.call(this);;
	}

	__class(ResMarriagePromoteHouseReceiveHandler,'net.handler.marriage.ResMarriagePromoteHouseReceiveHandler',_super);
	var __proto=ResMarriagePromoteHouseReceiveHandler.prototype;
	// 升阶房子的进度领取
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePromoteHouseReceiveHandler",msg);
	}

	return ResMarriagePromoteHouseReceiveHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeErrorHandler extends net.MNetHandler
var ResGeneralUpgradeErrorHandler=(function(_super){
	function ResGeneralUpgradeErrorHandler(){
		ResGeneralUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeErrorHandler,'net.handler.general.ResGeneralUpgradeErrorHandler',_super);
	var __proto=ResGeneralUpgradeErrorHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeErrorHandler" ,msg);
	}

	return ResGeneralUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleLeaveHandler extends net.MNetHandler
var ResLegionBattleLeaveHandler=(function(_super){
	function ResLegionBattleLeaveHandler(){
		ResLegionBattleLeaveHandler.__super.call(this);;
	}

	__class(ResLegionBattleLeaveHandler,'net.handler.gb.ResLegionBattleLeaveHandler',_super);
	var __proto=ResLegionBattleLeaveHandler.prototype;
	// 请求攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleLeaveHandler" ,msg);
	}

	return ResLegionBattleLeaveHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonChallengeTargetErrorHandler extends net.MNetHandler
var ResGarrisonChallengeTargetErrorHandler=(function(_super){
	function ResGarrisonChallengeTargetErrorHandler(){
		ResGarrisonChallengeTargetErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonChallengeTargetErrorHandler,'net.handler.garrison.ResGarrisonChallengeTargetErrorHandler',_super);
	var __proto=ResGarrisonChallengeTargetErrorHandler.prototype;
	// 挑战目标
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonChallengeTargetErrorHandler" ,msg);
	}

	return ResGarrisonChallengeTargetErrorHandler;
})(MNetHandler)


//class net.handler.vip.ResGetVipRewardHandler extends net.MNetHandler
var ResGetVipRewardHandler=(function(_super){
	function ResGetVipRewardHandler(){
		ResGetVipRewardHandler.__super.call(this);;
	}

	__class(ResGetVipRewardHandler,'net.handler.vip.ResGetVipRewardHandler',_super);
	var __proto=ResGetVipRewardHandler.prototype;
	// 领取VIP礼包
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetVipRewardHandler",msg);
	}

	return ResGetVipRewardHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勇闯天庭层信息
*/
//class net.message.pata.YCTTLayerBean extends engine.base.data.Bean
var YCTTLayerBean=(function(_super){
	function YCTTLayerBean(){
		/**层 */
		this._layer=0;
		/**战斗信息 */
		this._monster=0;
		YCTTLayerBean.__super.call(this);
	}

	__class(YCTTLayerBean,'net.message.pata.YCTTLayerBean',_super);
	var __proto=YCTTLayerBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._monster);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._monster=this.readInt(_buf);
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**战斗信息 */
	/**战斗信息 */
	__getset(0,__proto,'monster',function(){
		return this._monster;
		},function(value){
		this._monster=value;
	});

	return YCTTLayerBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*官位
*/
//class net.message.official.OfficialBean extends engine.base.data.Bean
var OfficialBean=(function(_super){
	function OfficialBean(){
		/**官位等级 */
		this._lv=0;
		/**当前积累经验（经验不自动升级） */
		this._exp=0;
		/**今日的活跃度 */
		this._activity=0;
		/**总的活跃度 */
		this._totalActivity=0;
		OfficialBean.__super.call(this);
		this._treasure=[];
		this._expRetrieve=[];
		this._lilianRetrieve=[];
	}

	__class(OfficialBean,'net.message.official.OfficialBean',_super);
	var __proto=OfficialBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._exp);
		this.writeInt(_buf,this._activity);
		this.writeInt(_buf,this._totalActivity);
		this.writeInt(_buf,this._treasure.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._treasure.length;++i_am_tmp_i){
			this.writeInt(_buf,this._treasure[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._expRetrieve.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._expRetrieve.length;++i_am_tmp_i){
			this._expRetrieve[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._lilianRetrieve.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lilianRetrieve.length;++i_am_tmp_i){
			this._lilianRetrieve[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readInt(_buf);
		this._activity=this.readInt(_buf);
		this._totalActivity=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._treasure=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._treasure[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._expRetrieve=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._expRetrieve[i_am_tmp_i]=this.readBeanInList(_buf,OfficialRetrieveBean);
		}
		size52413035=this.readInt(_buf);
		this._lilianRetrieve=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lilianRetrieve[i_am_tmp_i]=this.readBeanInList(_buf,OfficialRetrieveBean);
		}
	}

	/**官位等级 */
	/**官位等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前积累经验（经验不自动升级） */
	/**当前积累经验（经验不自动升级） */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**昨日的经验找回 */
	/**昨日的经验找回 */
	__getset(0,__proto,'expRetrieve',function(){
		return this._expRetrieve;
		},function(value){
		this._expRetrieve=value;
	});

	/**当前已经领取的宝箱（只记录已经领取的宝箱） */
	/**当前已经领取的宝箱（只记录已经领取的宝箱） */
	__getset(0,__proto,'treasure',function(){
		return this._treasure;
		},function(value){
		this._treasure=value;
	});

	/**总的活跃度 */
	/**总的活跃度 */
	__getset(0,__proto,'totalActivity',function(){
		return this._totalActivity;
		},function(value){
		this._totalActivity=value;
	});

	/**今日的活跃度 */
	/**今日的活跃度 */
	__getset(0,__proto,'activity',function(){
		return this._activity;
		},function(value){
		this._activity=value;
	});

	/**昨日的历练找回 */
	/**昨日的历练找回 */
	__getset(0,__proto,'lilianRetrieve',function(){
		return this._lilianRetrieve;
		},function(value){
		this._lilianRetrieve=value;
	});

	return OfficialBean;
})(Bean)


//class net.handler.escort.ResStartEscortErrorHandler extends net.MNetHandler
var ResStartEscortErrorHandler=(function(_super){
	function ResStartEscortErrorHandler(){
		ResStartEscortErrorHandler.__super.call(this);;
	}

	__class(ResStartEscortErrorHandler,'net.handler.escort.ResStartEscortErrorHandler',_super);
	var __proto=ResStartEscortErrorHandler.prototype;
	// 开始押运
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("StartEscortErrorHandler" ,msg);
	}

	return ResStartEscortErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomLeaveErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomLeaveErrorHandler=(function(_super){
	function ResTeamDuplicateRoomLeaveErrorHandler(){
		ResTeamDuplicateRoomLeaveErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomLeaveErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomLeaveErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomLeaveErrorHandler.prototype;
	// 离开房间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomLeaveErrorHandler",msg);
	}

	return ResTeamDuplicateRoomLeaveErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResQuanMinBossJoinHandler extends net.MNetHandler
var ResQuanMinBossJoinHandler=(function(_super){
	function ResQuanMinBossJoinHandler(){
		ResQuanMinBossJoinHandler.__super.call(this);;
	}

	__class(ResQuanMinBossJoinHandler,'net.handler.dungeon.ResQuanMinBossJoinHandler',_super);
	var __proto=ResQuanMinBossJoinHandler.prototype;
	// 请求进入全民BOSS
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanMinBossJoinHandler ",msg);
	}

	return ResQuanMinBossJoinHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightGetWorshipInfoHandler extends net.MNetHandler
var ResKingWarFightGetWorshipInfoHandler=(function(_super){
	function ResKingWarFightGetWorshipInfoHandler(){
		ResKingWarFightGetWorshipInfoHandler.__super.call(this);;
	}

	__class(ResKingWarFightGetWorshipInfoHandler,'net.handler.kingwar.ResKingWarFightGetWorshipInfoHandler',_super);
	var __proto=ResKingWarFightGetWorshipInfoHandler.prototype;
	// 王者争霸请求膜拜对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightGetWorshipInfoHandler",msg);
	}

	return ResKingWarFightGetWorshipInfoHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackBattleDataHandler extends net.MNetHandler
var ResWorldBossAttackBattleDataHandler=(function(_super){
	function ResWorldBossAttackBattleDataHandler(){
		ResWorldBossAttackBattleDataHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackBattleDataHandler,'net.handler.worldboss.ResWorldBossAttackBattleDataHandler',_super);
	var __proto=ResWorldBossAttackBattleDataHandler.prototype;
	// 玩家攻击世界BOSS的数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackBattleDataHandler",msg.data);
	}

	return ResWorldBossAttackBattleDataHandler;
})(MNetHandler)


//class net.handler.activities.ResLimitWuJiangHuntActErrorHandler extends net.MNetHandler
var ResLimitWuJiangHuntActErrorHandler=(function(_super){
	function ResLimitWuJiangHuntActErrorHandler(){
		ResLimitWuJiangHuntActErrorHandler.__super.call(this);;
	}

	__class(ResLimitWuJiangHuntActErrorHandler,'net.handler.activities.ResLimitWuJiangHuntActErrorHandler',_super);
	var __proto=ResLimitWuJiangHuntActErrorHandler.prototype;
	// 限定武将活动
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResLimitWuJiangHuntActErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战报
*/
//class net.message.fight.FightBean extends engine.base.data.Bean
var FightBean=(function(_super){
	function FightBean(){
		/**战报唯一id */
		this._uid=0;
		/**战报时间 */
		this._time=0;
		/**可战斗回合上限 */
		this._roundMax=0;
		/**第几回合之后可跳过 */
		this._skipRound=0;
		/**攻方是否胜利 */
		this._win=false;
		/**进攻方队伍 */
		this._team1=null;
		/**防守方队伍 */
		this._team2=null;
		FightBean.__super.call(this);
		this._skillUse=[];
		this._buffAdd=[];
		this._buffRemove=[];
		this._buffTrigger=[];
		this._npcChuzhan=[];
		this._hpChange=[];
		this._orderBeans=[];
	}

	__class(FightBean,'net.message.fight.FightBean',_super);
	var __proto=FightBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._uid);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._roundMax);
		this.writeInt(_buf,this._skipRound);
		this.writeBoolean(_buf,this._win);
		this.writeBean(_buf,this._team1);
		this.writeBean(_buf,this._team2);
		this.writeInt(_buf,this._skillUse.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skillUse.length;++i_am_tmp_i){
			this._skillUse[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._buffAdd.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._buffAdd.length;++i_am_tmp_i){
			this._buffAdd[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._buffRemove.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._buffRemove.length;++i_am_tmp_i){
			this._buffRemove[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._buffTrigger.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._buffTrigger.length;++i_am_tmp_i){
			this._buffTrigger[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._npcChuzhan.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._npcChuzhan.length;++i_am_tmp_i){
			this._npcChuzhan[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._hpChange.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._hpChange.length;++i_am_tmp_i){
			this._hpChange[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._orderBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._orderBeans.length;++i_am_tmp_i){
			this._orderBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readInt(_buf);
		this._time=this.readInt(_buf);
		this._roundMax=this.readInt(_buf);
		this._skipRound=this.readInt(_buf);
		this._win=this.readBoolean(_buf);
		this._team1=this.readBean(_buf,FightTeamBean);
		this._team2=this.readBean(_buf,FightTeamBean);
		size52413035=this.readInt(_buf);
		this._skillUse=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skillUse[i_am_tmp_i]=this.readBeanInList(_buf,FightSkillUseBean);
		}
		size52413035=this.readInt(_buf);
		this._buffAdd=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._buffAdd[i_am_tmp_i]=this.readBeanInList(_buf,FightBuffAddBean);
		}
		size52413035=this.readInt(_buf);
		this._buffRemove=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._buffRemove[i_am_tmp_i]=this.readBeanInList(_buf,FightBuffRemoveBean);
		}
		size52413035=this.readInt(_buf);
		this._buffTrigger=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._buffTrigger[i_am_tmp_i]=this.readBeanInList(_buf,FightBuffTriggerBean);
		}
		size52413035=this.readInt(_buf);
		this._npcChuzhan=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._npcChuzhan[i_am_tmp_i]=this.readBeanInList(_buf,FightNpcChuzhanBean);
		}
		size52413035=this.readInt(_buf);
		this._hpChange=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._hpChange[i_am_tmp_i]=this.readBeanInList(_buf,FightHpChangeBean);
		}
		size52413035=this.readInt(_buf);
		this._orderBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._orderBeans[i_am_tmp_i]=this.readBeanInList(_buf,FightOrderBean);
		}
	}

	/**战报唯一id */
	/**战报唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**战报时间 */
	/**战报时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**可战斗回合上限 */
	/**可战斗回合上限 */
	__getset(0,__proto,'roundMax',function(){
		return this._roundMax;
		},function(value){
		this._roundMax=value;
	});

	/**防守方队伍 */
	/**防守方队伍 */
	__getset(0,__proto,'team2',function(){
		return this._team2;
		},function(value){
		this._team2=value;
	});

	/**第几回合之后可跳过 */
	/**第几回合之后可跳过 */
	__getset(0,__proto,'skipRound',function(){
		return this._skipRound;
		},function(value){
		this._skipRound=value;
	});

	/**日志:技能使用 */
	/**日志:技能使用 */
	__getset(0,__proto,'skillUse',function(){
		return this._skillUse;
		},function(value){
		this._skillUse=value;
	});

	/**攻方是否胜利 */
	/**攻方是否胜利 */
	__getset(0,__proto,'win',function(){
		return this._win;
		},function(value){
		this._win=value;
	});

	/**日志:buff添加 */
	/**日志:buff添加 */
	__getset(0,__proto,'buffAdd',function(){
		return this._buffAdd;
		},function(value){
		this._buffAdd=value;
	});

	/**进攻方队伍 */
	/**进攻方队伍 */
	__getset(0,__proto,'team1',function(){
		return this._team1;
		},function(value){
		this._team1=value;
	});

	/**日志:buff移除 */
	/**日志:buff移除 */
	__getset(0,__proto,'buffRemove',function(){
		return this._buffRemove;
		},function(value){
		this._buffRemove=value;
	});

	/**日志:buff触发 */
	/**日志:buff触发 */
	__getset(0,__proto,'buffTrigger',function(){
		return this._buffTrigger;
		},function(value){
		this._buffTrigger=value;
	});

	/**日志:npc出战 */
	/**日志:npc出战 */
	__getset(0,__proto,'npcChuzhan',function(){
		return this._npcChuzhan;
		},function(value){
		this._npcChuzhan=value;
	});

	/**日志:血量变更 */
	/**日志:血量变更 */
	__getset(0,__proto,'hpChange',function(){
		return this._hpChange;
		},function(value){
		this._hpChange=value;
	});

	/**出手顺序 */
	/**出手顺序 */
	__getset(0,__proto,'orderBeans',function(){
		return this._orderBeans;
		},function(value){
		this._orderBeans=value;
	});

	return FightBean;
})(Bean)


//class net.handler.marriage.ResMarriageGetTeammateSkinErrorHandler extends net.MNetHandler
var ResMarriageGetTeammateSkinErrorHandler=(function(_super){
	function ResMarriageGetTeammateSkinErrorHandler(){
		ResMarriageGetTeammateSkinErrorHandler.__super.call(this);;
	}

	__class(ResMarriageGetTeammateSkinErrorHandler,'net.handler.marriage.ResMarriageGetTeammateSkinErrorHandler',_super);
	var __proto=ResMarriageGetTeammateSkinErrorHandler.prototype;
	// 拉取伴侣外形//未结婚的状态由此获取
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageGetTeammateSkinErrorHandler",msg);
	}

	return ResMarriageGetTeammateSkinErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiUpdateTodayHandler extends net.MNetHandler
var ResChibiUpdateTodayHandler=(function(_super){
	function ResChibiUpdateTodayHandler(){
		ResChibiUpdateTodayHandler.__super.call(this);;
	}

	__class(ResChibiUpdateTodayHandler,'net.handler.chibi.ResChibiUpdateTodayHandler',_super);
	var __proto=ResChibiUpdateTodayHandler.prototype;
	// 更新赤壁今日可以进行任务的次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiUpdateTodayHandler",msg);
	}

	return ResChibiUpdateTodayHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionSignRewardMessageErrorHandler extends net.MNetHandler
var ResLegionSignRewardMessageErrorHandler=(function(_super){
	function ResLegionSignRewardMessageErrorHandler(){
		ResLegionSignRewardMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionSignRewardMessageErrorHandler,'net.handler.legion.ResLegionSignRewardMessageErrorHandler',_super);
	var __proto=ResLegionSignRewardMessageErrorHandler.prototype;
	// 签到
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSignRewardMessageErrorHandler",msg);
	}

	return ResLegionSignRewardMessageErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePataOtherFightSkipHandler extends net.MNetHandler
var ResMarriagePataOtherFightSkipHandler=(function(_super){
	function ResMarriagePataOtherFightSkipHandler(){
		ResMarriagePataOtherFightSkipHandler.__super.call(this);;
	}

	__class(ResMarriagePataOtherFightSkipHandler,'net.handler.marriage.ResMarriagePataOtherFightSkipHandler',_super);
	var __proto=ResMarriagePataOtherFightSkipHandler.prototype;
	// 爬塔邀请
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResMarriagePataOtherFightSkipHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleIntegralRewardErrorHandler extends net.MNetHandler
var ResLegionBattleIntegralRewardErrorHandler=(function(_super){
	function ResLegionBattleIntegralRewardErrorHandler(){
		ResLegionBattleIntegralRewardErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleIntegralRewardErrorHandler,'net.handler.gb.ResLegionBattleIntegralRewardErrorHandler',_super);
	var __proto=ResLegionBattleIntegralRewardErrorHandler.prototype;
	// 请求领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleIntegralRewardErrorHandler" ,msg);
	}

	return ResLegionBattleIntegralRewardErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResInitQuanMinBossHandler extends net.MNetHandler
var ResInitQuanMinBossHandler=(function(_super){
	function ResInitQuanMinBossHandler(){
		ResInitQuanMinBossHandler.__super.call(this);;
	}

	__class(ResInitQuanMinBossHandler,'net.handler.dungeon.ResInitQuanMinBossHandler',_super);
	var __proto=ResInitQuanMinBossHandler.prototype;
	// 初始化全民boss副本信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InitQuanMinBossHandler",msg.dungeons);
	}

	return ResInitQuanMinBossHandler;
})(MNetHandler)


//class net.handler.examination.ResKejuAnswerExaminationErrorHandler extends net.MNetHandler
var ResKejuAnswerExaminationErrorHandler=(function(_super){
	function ResKejuAnswerExaminationErrorHandler(){
		ResKejuAnswerExaminationErrorHandler.__super.call(this);;
	}

	__class(ResKejuAnswerExaminationErrorHandler,'net.handler.examination.ResKejuAnswerExaminationErrorHandler',_super);
	var __proto=ResKejuAnswerExaminationErrorHandler.prototype;
	// 回答问题
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResKejuAnswerExaminationErrorHandler;
})(MNetHandler)


//class net.handler.shop.ResUpdateShopGoodsBuyTimesHandler extends net.MNetHandler
var ResUpdateShopGoodsBuyTimesHandler=(function(_super){
	function ResUpdateShopGoodsBuyTimesHandler(){
		ResUpdateShopGoodsBuyTimesHandler.__super.call(this);;
	}

	__class(ResUpdateShopGoodsBuyTimesHandler,'net.handler.shop.ResUpdateShopGoodsBuyTimesHandler',_super);
	var __proto=ResUpdateShopGoodsBuyTimesHandler.prototype;
	// 更新道具商店商品购买次数限制
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateShopGoodsBuyTimesHandler",msg);
	}

	return ResUpdateShopGoodsBuyTimesHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonBuyTimesErrorHandler extends net.MNetHandler
var ResGarrisonBuyTimesErrorHandler=(function(_super){
	function ResGarrisonBuyTimesErrorHandler(){
		ResGarrisonBuyTimesErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonBuyTimesErrorHandler,'net.handler.garrison.ResGarrisonBuyTimesErrorHandler',_super);
	var __proto=ResGarrisonBuyTimesErrorHandler.prototype;
	// 购买次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonBuyTimesErrorHandler" ,msg);
	}

	return ResGarrisonBuyTimesErrorHandler;
})(MNetHandler)


//class net.handler.goods.ResUpdateExchangeGoodsHandler extends net.MNetHandler
var ResUpdateExchangeGoodsHandler=(function(_super){
	function ResUpdateExchangeGoodsHandler(){
		ResUpdateExchangeGoodsHandler.__super.call(this);;
	}

	__class(ResUpdateExchangeGoodsHandler,'net.handler.goods.ResUpdateExchangeGoodsHandler',_super);
	var __proto=ResUpdateExchangeGoodsHandler.prototype;
	// 反馈兑换道具使用成功
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateExchangeGoodsHandler",msg);
	}

	return ResUpdateExchangeGoodsHandler;
})(MNetHandler)


//class net.handler.todayrecommend.ResRecommendTaskRewardErrorHandler extends net.MNetHandler
var ResRecommendTaskRewardErrorHandler=(function(_super){
	function ResRecommendTaskRewardErrorHandler(){
		ResRecommendTaskRewardErrorHandler.__super.call(this);;
	}

	__class(ResRecommendTaskRewardErrorHandler,'net.handler.todayrecommend.ResRecommendTaskRewardErrorHandler',_super);
	var __proto=ResRecommendTaskRewardErrorHandler.prototype;
	// 领取任务奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RecommendTaskRewardErrorHandler",msg);
	}

	return ResRecommendTaskRewardErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarBuyCountErrorHandler extends net.MNetHandler
var ResKingWarBuyCountErrorHandler=(function(_super){
	function ResKingWarBuyCountErrorHandler(){
		ResKingWarBuyCountErrorHandler.__super.call(this);;
	}

	__class(ResKingWarBuyCountErrorHandler,'net.handler.kingwar.ResKingWarBuyCountErrorHandler',_super);
	var __proto=ResKingWarBuyCountErrorHandler.prototype;
	// 王者争霸购买战斗次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarBuyCountErrorHandler",msg);
	}

	return ResKingWarBuyCountErrorHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengBuyMessageHandler extends net.MNetHandler
var ResInvestmengBuyMessageHandler=(function(_super){
	function ResInvestmengBuyMessageHandler(){
		ResInvestmengBuyMessageHandler.__super.call(this);;
	}

	__class(ResInvestmengBuyMessageHandler,'net.handler.investment.ResInvestmengBuyMessageHandler',_super);
	var __proto=ResInvestmengBuyMessageHandler.prototype;
	// 请求购买投资计划
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengBuyMessageHandler",msg);
	}

	return ResInvestmengBuyMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体技能
*/
//class net.message.fit.FitSkillBean extends engine.base.data.Bean
var FitSkillBean=(function(_super){
	function FitSkillBean(){
		/**合体技能类型[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
		this._skillType=0;
		/**技能id */
		this._skillId=0;
		/**品质 */
		this._quality=0;
		FitSkillBean.__super.call(this);
	}

	__class(FitSkillBean,'net.message.fit.FitSkillBean',_super);
	var __proto=FitSkillBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skillType);
		this.writeInt(_buf,this._skillId);
		this.writeInt(_buf,this._quality);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skillType=this.readInt(_buf);
		this._skillId=this.readInt(_buf);
		this._quality=this.readInt(_buf);
	}

	/**品质 */
	/**品质 */
	__getset(0,__proto,'quality',function(){
		return this._quality;
		},function(value){
		this._quality=value;
	});

	/**合体技能类型[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	/**合体技能类型[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	__getset(0,__proto,'skillType',function(){
		return this._skillType;
		},function(value){
		this._skillType=value;
	});

	/**技能id */
	/**技能id */
	__getset(0,__proto,'skillId',function(){
		return this._skillId;
		},function(value){
		this._skillId=value;
	});

	return FitSkillBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体对象
*/
//class net.message.fit.FitBean extends engine.base.data.Bean
var FitBean=(function(_super){
	function FitBean(){
		/**类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**主魂位置，为空表示未设置主魂，也就是未合体[1:][2:][3:][4:] */
		this._main=0;
		/**品质 */
		this._quality=0;
		/**特殊被动技能 */
		this._qualityPassive=null;
		/**战争艺术 */
		this._art=0;
		/**武器 */
		this._weapon=0;
		/**锻造大师 */
		this._master=0;
		FitBean.__super.call(this);
		this._participant=[];
		this._equipBeans=[];
		this._suits=[];
	}

	__class(FitBean,'net.message.fit.FitBean',_super);
	var __proto=FitBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._main);
		this.writeInt(_buf,this._participant.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._participant.length;++i_am_tmp_i){
			this._participant[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._quality);
		this.writeBean(_buf,this._qualityPassive);
		this.writeInt(_buf,this._equipBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equipBeans.length;++i_am_tmp_i){
			this._equipBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._art);
		this.writeInt(_buf,this._weapon);
		this.writeInt(_buf,this._master);
		this.writeInt(_buf,this._suits.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._suits.length;++i_am_tmp_i){
			this.writeInt(_buf,this._suits[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._main=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._participant=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._participant[i_am_tmp_i]=this.readBeanInList(_buf,FitSetParticipantBean);
		}
		this._quality=this.readInt(_buf);
		this._qualityPassive=this.readBean(_buf,SkillBean);
		size52413035=this.readInt(_buf);
		this._equipBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equipBeans[i_am_tmp_i]=this.readBeanInList(_buf,FitEquipBean);
		}
		this._art=this.readInt(_buf);
		this._weapon=this.readInt(_buf);
		this._master=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._suits=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._suits[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**主魂位置，为空表示未设置主魂，也就是未合体[1:][2:][3:][4:] */
	/**主魂位置，为空表示未设置主魂，也就是未合体[1:][2:][3:][4:] */
	__getset(0,__proto,'main',function(){
		return this._main;
		},function(value){
		this._main=value;
	});

	/**品质 */
	/**品质 */
	__getset(0,__proto,'quality',function(){
		return this._quality;
		},function(value){
		this._quality=value;
	});

	/**合体的参与者 */
	/**合体的参与者 */
	__getset(0,__proto,'participant',function(){
		return this._participant;
		},function(value){
		this._participant=value;
	});

	/**特殊被动技能 */
	/**特殊被动技能 */
	__getset(0,__proto,'qualityPassive',function(){
		return this._qualityPassive;
		},function(value){
		this._qualityPassive=value;
	});

	/**锻造大师 */
	/**锻造大师 */
	__getset(0,__proto,'master',function(){
		return this._master;
		},function(value){
		this._master=value;
	});

	/**战争艺术 */
	/**战争艺术 */
	__getset(0,__proto,'art',function(){
		return this._art;
		},function(value){
		this._art=value;
	});

	/**装备 */
	/**装备 */
	__getset(0,__proto,'equipBeans',function(){
		return this._equipBeans;
		},function(value){
		this._equipBeans=value;
	});

	/**武器 */
	/**武器 */
	__getset(0,__proto,'weapon',function(){
		return this._weapon;
		},function(value){
		this._weapon=value;
	});

	/**套装 */
	/**套装 */
	__getset(0,__proto,'suits',function(){
		return this._suits;
		},function(value){
		this._suits=value;
	});

	return FitBean;
})(Bean)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomForIDErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomForIDErrorHandler=(function(_super){
	function ResTeamDuplicateRoomForIDErrorHandler(){
		ResTeamDuplicateRoomForIDErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomForIDErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomForIDErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomForIDErrorHandler.prototype;
	// 玩家通过ID获得房间列表
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomForIDErrorHandler",msg);
	}

	return ResTeamDuplicateRoomForIDErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoySkillUpgradeHandler extends net.MNetHandler
var ResSoulBoySkillUpgradeHandler=(function(_super){
	function ResSoulBoySkillUpgradeHandler(){
		ResSoulBoySkillUpgradeHandler.__super.call(this);;
	}

	__class(ResSoulBoySkillUpgradeHandler,'net.handler.soulboy.ResSoulBoySkillUpgradeHandler',_super);
	var __proto=ResSoulBoySkillUpgradeHandler.prototype;
	// 更新技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoySkillUpgradeHandler",msg);
	}

	return ResSoulBoySkillUpgradeHandler;
})(MNetHandler)


//class net.handler.vip.ResUpdateVipFreeSkipRoundHandler extends net.MNetHandler
var ResUpdateVipFreeSkipRoundHandler=(function(_super){
	function ResUpdateVipFreeSkipRoundHandler(){
		ResUpdateVipFreeSkipRoundHandler.__super.call(this);;
	}

	__class(ResUpdateVipFreeSkipRoundHandler,'net.handler.vip.ResUpdateVipFreeSkipRoundHandler',_super);
	var __proto=ResUpdateVipFreeSkipRoundHandler.prototype;
	// 更新累计重置额度
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateVipFreeSkipRoundHandler",msg);
	}

	return ResUpdateVipFreeSkipRoundHandler;
})(MNetHandler)


//class net.handler.mail.ResRemoveMailHandler extends net.MNetHandler
var ResRemoveMailHandler=(function(_super){
	function ResRemoveMailHandler(){
		ResRemoveMailHandler.__super.call(this);;
	}

	__class(ResRemoveMailHandler,'net.handler.mail.ResRemoveMailHandler',_super);
	var __proto=ResRemoveMailHandler.prototype;
	// 删除邮件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RemoveMailHandler",msg);
	}

	return ResRemoveMailHandler;
})(MNetHandler)


//class net.handler.pata.ResGetCBTInfoHandler extends net.MNetHandler
var ResGetCBTInfoHandler=(function(_super){
	function ResGetCBTInfoHandler(){
		ResGetCBTInfoHandler.__super.call(this);;
	}

	__class(ResGetCBTInfoHandler,'net.handler.pata.ResGetCBTInfoHandler',_super);
	var __proto=ResGetCBTInfoHandler.prototype;
	// 获取藏宝图信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetCBTInfoHandler",msg);
	}

	return ResGetCBTInfoHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipPromoteHandler extends net.MNetHandler
var ResEquipPromoteHandler=(function(_super){
	function ResEquipPromoteHandler(){
		ResEquipPromoteHandler.__super.call(this);;
	}

	__class(ResEquipPromoteHandler,'net.handler.equip.ResEquipPromoteHandler',_super);
	var __proto=ResEquipPromoteHandler.prototype;
	// 装备升品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipPromoteMessage",msg);
	}

	return ResEquipPromoteHandler;
})(MNetHandler)


//class net.handler.juewei.ResUpdateNewJueWeiLevelHandler extends net.MNetHandler
var ResUpdateNewJueWeiLevelHandler=(function(_super){
	function ResUpdateNewJueWeiLevelHandler(){
		ResUpdateNewJueWeiLevelHandler.__super.call(this);;
	}

	__class(ResUpdateNewJueWeiLevelHandler,'net.handler.juewei.ResUpdateNewJueWeiLevelHandler',_super);
	var __proto=ResUpdateNewJueWeiLevelHandler.prototype;
	// 更新爵位等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateNewJueWeiLevelHandler",msg);
	}

	return ResUpdateNewJueWeiLevelHandler;
})(MNetHandler)


//class net.handler.login.ResVersionCheckHandler extends net.MNetHandler
var ResVersionCheckHandler=(function(_super){
	function ResVersionCheckHandler(){
		ResVersionCheckHandler.__super.call(this);;
	}

	__class(ResVersionCheckHandler,'net.handler.login.ResVersionCheckHandler',_super);
	var __proto=ResVersionCheckHandler.prototype;
	// 版本验证
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("VersionCheckHandler",msg);
	}

	return ResVersionCheckHandler;
})(MNetHandler)


//class net.handler.welfare.ResYaoQianHandler extends net.MNetHandler
var ResYaoQianHandler=(function(_super){
	function ResYaoQianHandler(){
		ResYaoQianHandler.__super.call(this);;
	}

	__class(ResYaoQianHandler,'net.handler.welfare.ResYaoQianHandler',_super);
	var __proto=ResYaoQianHandler.prototype;
	// 摇钱树
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YaoQianHandler",msg);
	}

	return ResYaoQianHandler;
})(MNetHandler)


//class net.handler.mail.ResCollectMailHandler extends net.MNetHandler
var ResCollectMailHandler=(function(_super){
	function ResCollectMailHandler(){
		ResCollectMailHandler.__super.call(this);;
	}

	__class(ResCollectMailHandler,'net.handler.mail.ResCollectMailHandler',_super);
	var __proto=ResCollectMailHandler.prototype;
	// 收取邮件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CollectMailHandler ",msg);
	}

	return ResCollectMailHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionIntoSquareMessageErrorHandler extends net.MNetHandler
var ResLegionIntoSquareMessageErrorHandler=(function(_super){
	function ResLegionIntoSquareMessageErrorHandler(){
		ResLegionIntoSquareMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionIntoSquareMessageErrorHandler,'net.handler.legion.ResLegionIntoSquareMessageErrorHandler',_super);
	var __proto=ResLegionIntoSquareMessageErrorHandler.prototype;
	// 请求进入广场
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionIntoSquareMessageErrorHandler" ,msg);
	}

	return ResLegionIntoSquareMessageErrorHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonWakeUpErrorHandler extends net.MNetHandler
var ResCommonWakeUpErrorHandler=(function(_super){
	function ResCommonWakeUpErrorHandler(){
		ResCommonWakeUpErrorHandler.__super.call(this);;
	}

	__class(ResCommonWakeUpErrorHandler,'net.handler.upgrade.ResCommonWakeUpErrorHandler',_super);
	var __proto=ResCommonWakeUpErrorHandler.prototype;
	// 通用觉醒
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResCommonWakeUpErrorHandler;
})(MNetHandler)


//class net.handler.official.ResReceiveOfficialBoxErrorHandler extends net.MNetHandler
var ResReceiveOfficialBoxErrorHandler=(function(_super){
	function ResReceiveOfficialBoxErrorHandler(){
		ResReceiveOfficialBoxErrorHandler.__super.call(this);;
	}

	__class(ResReceiveOfficialBoxErrorHandler,'net.handler.official.ResReceiveOfficialBoxErrorHandler',_super);
	var __proto=ResReceiveOfficialBoxErrorHandler.prototype;
	// 领取官位活跃度宝箱
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveOfficialBoxErrorHandler ",msg);
	}

	return ResReceiveOfficialBoxErrorHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUnclockHandler extends net.MNetHandler
var ResFitUnclockHandler=(function(_super){
	function ResFitUnclockHandler(){
		ResFitUnclockHandler.__super.call(this);;
	}

	__class(ResFitUnclockHandler,'net.handler.fit.ResFitUnclockHandler',_super);
	var __proto=ResFitUnclockHandler.prototype;
	// 更新合体对象技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUnclockHandler" ,msg);
	}

	return ResFitUnclockHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖用户对象
*/
//class net.message.auction.AuctionPlayerBean extends engine.base.data.Bean
var AuctionPlayerBean=(function(_super){
	function AuctionPlayerBean(){
		/**UID */
		this._uid=null;
		/**剩余额度 */
		this._quota=0;
		AuctionPlayerBean.__super.call(this);
		this._record=[];
		this._participating=[];
	}

	__class(AuctionPlayerBean,'net.message.auction.AuctionPlayerBean',_super);
	var __proto=AuctionPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._quota);
		this.writeInt(_buf,this._record.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._record.length;++i_am_tmp_i){
			this._record[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._participating.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._participating.length;++i_am_tmp_i){
			this._participating[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._quota=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._record=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._record[i_am_tmp_i]=this.readBeanInList(_buf,AuctionRecordBean);
		}
		size52413035=this.readInt(_buf);
		this._participating=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._participating[i_am_tmp_i]=this.readBeanInList(_buf,AuctionBean);
		}
	}

	/**UID */
	/**UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**剩余额度 */
	/**剩余额度 */
	__getset(0,__proto,'quota',function(){
		return this._quota;
		},function(value){
		this._quota=value;
	});

	/**记录 */
	/**记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	/**正在参与的竞拍 */
	/**正在参与的竞拍 */
	__getset(0,__proto,'participating',function(){
		return this._participating;
		},function(value){
		this._participating=value;
	});

	return AuctionPlayerBean;
})(Bean)


//class net.handler.welfare.ResGetYaoQianRewardAdditionallyErrorHandler extends net.MNetHandler
var ResGetYaoQianRewardAdditionallyErrorHandler=(function(_super){
	function ResGetYaoQianRewardAdditionallyErrorHandler(){
		ResGetYaoQianRewardAdditionallyErrorHandler.__super.call(this);;
	}

	__class(ResGetYaoQianRewardAdditionallyErrorHandler,'net.handler.welfare.ResGetYaoQianRewardAdditionallyErrorHandler',_super);
	var __proto=ResGetYaoQianRewardAdditionallyErrorHandler.prototype;
	// 摇钱树额外奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetYaoQianRewardAdditionallyErrorHandler",msg);
	}

	return ResGetYaoQianRewardAdditionallyErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpdateRevengesHandler extends net.MNetHandler
var ResGarrisonUpdateRevengesHandler=(function(_super){
	function ResGarrisonUpdateRevengesHandler(){
		ResGarrisonUpdateRevengesHandler.__super.call(this);;
	}

	__class(ResGarrisonUpdateRevengesHandler,'net.handler.garrison.ResGarrisonUpdateRevengesHandler',_super);
	var __proto=ResGarrisonUpdateRevengesHandler.prototype;
	// 更新复仇对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpdateRevengesHandler" ,msg);
	}

	return ResGarrisonUpdateRevengesHandler;
})(MNetHandler)


//class net.handler.pet.ResUpgradePetSkillErrorHandler extends net.MNetHandler
var ResUpgradePetSkillErrorHandler=(function(_super){
	function ResUpgradePetSkillErrorHandler(){
		ResUpgradePetSkillErrorHandler.__super.call(this);;
	}

	__class(ResUpgradePetSkillErrorHandler,'net.handler.pet.ResUpgradePetSkillErrorHandler',_super);
	var __proto=ResUpgradePetSkillErrorHandler.prototype;
	// 升级宠物技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetSkillErrorHandler",msg.error);
	}

	return ResUpgradePetSkillErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightRecordHandler extends net.MNetHandler
var ResKingWarFightRecordHandler=(function(_super){
	function ResKingWarFightRecordHandler(){
		ResKingWarFightRecordHandler.__super.call(this);;
	}

	__class(ResKingWarFightRecordHandler,'net.handler.kingwar.ResKingWarFightRecordHandler',_super);
	var __proto=ResKingWarFightRecordHandler.prototype;
	// 王者争霸战斗记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightRecordHandler",msg);
	}

	return ResKingWarFightRecordHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiBetErrorHandler extends net.MNetHandler
var ResQunYingHuiBetErrorHandler=(function(_super){
	function ResQunYingHuiBetErrorHandler(){
		ResQunYingHuiBetErrorHandler.__super.call(this);;
	}

	__class(ResQunYingHuiBetErrorHandler,'net.handler.qunyinghui.ResQunYingHuiBetErrorHandler',_super);
	var __proto=ResQunYingHuiBetErrorHandler.prototype;
	// 群英会下注
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiBetErrorHandler",msg);
	}

	return ResQunYingHuiBetErrorHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengTakeSkillHandler extends net.MNetHandler
var ResYuanZhengTakeSkillHandler=(function(_super){
	function ResYuanZhengTakeSkillHandler(){
		ResYuanZhengTakeSkillHandler.__super.call(this);;
	}

	__class(ResYuanZhengTakeSkillHandler,'net.handler.yuanzheng.ResYuanZhengTakeSkillHandler',_super);
	var __proto=ResYuanZhengTakeSkillHandler.prototype;
	// 远征领取技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengTakeSkillHandler",msg);
	}

	return ResYuanZhengTakeSkillHandler;
})(MNetHandler)


//class net.handler.welfare.ResGetFuLiRewardHandler extends net.MNetHandler
var ResGetFuLiRewardHandler=(function(_super){
	function ResGetFuLiRewardHandler(){
		ResGetFuLiRewardHandler.__super.call(this);;
	}

	__class(ResGetFuLiRewardHandler,'net.handler.welfare.ResGetFuLiRewardHandler',_super);
	var __proto=ResGetFuLiRewardHandler.prototype;
	// 领取福利奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetFuLiRewardHandler",msg);
	}

	return ResGetFuLiRewardHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionRemovedHandler extends net.MNetHandler
var ResAuctionRemovedHandler=(function(_super){
	function ResAuctionRemovedHandler(){
		ResAuctionRemovedHandler.__super.call(this);;
	}

	__class(ResAuctionRemovedHandler,'net.handler.auction.ResAuctionRemovedHandler',_super);
	var __proto=ResAuctionRemovedHandler.prototype;
	// 拍卖行物品下架
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionRemovedHandler");
	}

	return ResAuctionRemovedHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResHuntRecordHandler extends net.MNetHandler
var ResHuntRecordHandler=(function(_super){
	function ResHuntRecordHandler(){
		ResHuntRecordHandler.__super.call(this);;
	}

	__class(ResHuntRecordHandler,'net.handler.textureHunt.ResHuntRecordHandler',_super);
	var __proto=ResHuntRecordHandler.prototype;
	// 请求寻宝记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntRecordHandler",msg);
	}

	return ResHuntRecordHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团排名信息
*/
//class net.message.gongCe.JunTuanRankInfo extends engine.base.data.Bean
var JunTuanRankInfo=(function(_super){
	function JunTuanRankInfo(){
		/**排名 */
		this._index=0;
		/**军团名 */
		this._name=null;
		/**总战力 */
		this._fightPower=null;
		/**军团长名字 */
		this._GuildMasterName=null;
		JunTuanRankInfo.__super.call(this);
	}

	__class(JunTuanRankInfo,'net.message.gongCe.JunTuanRankInfo',_super);
	var __proto=JunTuanRankInfo.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._fightPower);
		this.writeString(_buf,this._GuildMasterName);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._GuildMasterName=this.readString(_buf);
	}

	/**排名 */
	/**排名 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**军团名 */
	/**军团名 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**总战力 */
	/**总战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**军团长名字 */
	/**军团长名字 */
	__getset(0,__proto,'GuildMasterName',function(){
		return this._GuildMasterName;
		},function(value){
		this._GuildMasterName=value;
	});

	return JunTuanRankInfo;
})(Bean)


//class net.handler.worldboss.ResWorldBossAttackResultErrorHandler extends net.MNetHandler
var ResWorldBossAttackResultErrorHandler=(function(_super){
	function ResWorldBossAttackResultErrorHandler(){
		ResWorldBossAttackResultErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackResultErrorHandler,'net.handler.worldboss.ResWorldBossAttackResultErrorHandler',_super);
	var __proto=ResWorldBossAttackResultErrorHandler.prototype;
	// 玩家攻击BOSS的结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackResultErrorHandler",msg);
	}

	return ResWorldBossAttackResultErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResMeiWuHuntHandler extends net.MNetHandler
var ResMeiWuHuntHandler=(function(_super){
	function ResMeiWuHuntHandler(){
		ResMeiWuHuntHandler.__super.call(this);;
	}

	__class(ResMeiWuHuntHandler,'net.handler.gongCe.ResMeiWuHuntHandler',_super);
	var __proto=ResMeiWuHuntHandler.prototype;
	// 媚坞寻宝
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResMeiWuHunt",msg);
	}

	return ResMeiWuHuntHandler;
})(MNetHandler)


//class net.handler.gongCe.ResTongShuaiJinJianHandler extends net.MNetHandler
var ResTongShuaiJinJianHandler=(function(_super){
	function ResTongShuaiJinJianHandler(){
		ResTongShuaiJinJianHandler.__super.call(this);;
	}

	__class(ResTongShuaiJinJianHandler,'net.handler.gongCe.ResTongShuaiJinJianHandler',_super);
	var __proto=ResTongShuaiJinJianHandler.prototype;
	// 兑换主公
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResTongShuaiJinJianHandler;
})(MNetHandler)


//class net.handler.team.ResTeamApplyHandler extends net.MNetHandler
var ResTeamApplyHandler=(function(_super){
	function ResTeamApplyHandler(){
		ResTeamApplyHandler.__super.call(this);;
	}

	__class(ResTeamApplyHandler,'net.handler.team.ResTeamApplyHandler',_super);
	var __proto=ResTeamApplyHandler.prototype;
	// 申请加入队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamApplyHandler",msg);
	}

	return ResTeamApplyHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateSweepAwayHandler extends net.MNetHandler
var ResTeamDuplicateSweepAwayHandler=(function(_super){
	function ResTeamDuplicateSweepAwayHandler(){
		ResTeamDuplicateSweepAwayHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateSweepAwayHandler,'net.handler.teamDuplicate.ResTeamDuplicateSweepAwayHandler',_super);
	var __proto=ResTeamDuplicateSweepAwayHandler.prototype;
	// 请求扫荡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateSweepAwayHandler",msg);
	}

	return ResTeamDuplicateSweepAwayHandler;
})(MNetHandler)


//class net.handler.dungeon.ResBuyQuanMinBossTimesErrorHandler extends net.MNetHandler
var ResBuyQuanMinBossTimesErrorHandler=(function(_super){
	function ResBuyQuanMinBossTimesErrorHandler(){
		ResBuyQuanMinBossTimesErrorHandler.__super.call(this);;
	}

	__class(ResBuyQuanMinBossTimesErrorHandler,'net.handler.dungeon.ResBuyQuanMinBossTimesErrorHandler',_super);
	var __proto=ResBuyQuanMinBossTimesErrorHandler.prototype;
	// 购买全民boss挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyQuanMinBossTimesErrorHandler",msg.error);
	}

	return ResBuyQuanMinBossTimesErrorHandler;
})(MNetHandler)


//class net.handler.tuangou.ResTuanGouGetInfoErrorHandler extends net.MNetHandler
var ResTuanGouGetInfoErrorHandler=(function(_super){
	function ResTuanGouGetInfoErrorHandler(){
		ResTuanGouGetInfoErrorHandler.__super.call(this);;
	}

	__class(ResTuanGouGetInfoErrorHandler,'net.handler.tuangou.ResTuanGouGetInfoErrorHandler',_super);
	var __proto=ResTuanGouGetInfoErrorHandler.prototype;
	// 获取团购信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TuanGouGetInfoErrorHandler",msg);
	}

	return ResTuanGouGetInfoErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会战斗者对象(简要)
*/
//class net.message.qunyinghui.QunYingHuiFighterBriefBean extends engine.base.data.Bean
var QunYingHuiFighterBriefBean=(function(_super){
	function QunYingHuiFighterBriefBean(){
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**名字 */
		this._name=null;
		/**唯一ID */
		this._uid=null;
		/**服务器 */
		this._server=0;
		/**玩家等级 */
		this._level=0;
		/**服务器序号 */
		this._sno=0;
		QunYingHuiFighterBriefBean.__super.call(this);
	}

	__class(QunYingHuiFighterBriefBean,'net.message.qunyinghui.QunYingHuiFighterBriefBean',_super);
	var __proto=QunYingHuiFighterBriefBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._server);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._uid=this.readLong(_buf);
		this._server=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**玩家等级 */
	/**玩家等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**服务器 */
	/**服务器 */
	__getset(0,__proto,'server',function(){
		return this._server;
		},function(value){
		this._server=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return QunYingHuiFighterBriefBean;
})(Bean)


//class net.handler.gb.ResLegionBattleAttackDoorErrorHandler extends net.MNetHandler
var ResLegionBattleAttackDoorErrorHandler=(function(_super){
	function ResLegionBattleAttackDoorErrorHandler(){
		ResLegionBattleAttackDoorErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackDoorErrorHandler,'net.handler.gb.ResLegionBattleAttackDoorErrorHandler',_super);
	var __proto=ResLegionBattleAttackDoorErrorHandler.prototype;
	// 请求攻击城门
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackDoorErrorHandler" ,msg);
	}

	return ResLegionBattleAttackDoorErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*邮件
*/
//class net.message.mail.MailBean extends engine.base.data.Bean
var MailBean=(function(_super){
	function MailBean(){
		/**邮件ID */
		this._mailID=0;
		/**邮件标题 */
		this._title=null;
		/**邮件内容 */
		this._content=null;
		/**邮件发送时间,unix时间戳(毫秒)*/
		this._time=null;
		/**是否已读 */
		this._haveRead=false;
		/**是否已领取 */
		this._collected=false;
		MailBean.__super.call(this);
		this._items=[];
	}

	__class(MailBean,'net.message.mail.MailBean',_super);
	var __proto=MailBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
		this.writeString(_buf,this._title);
		this.writeString(_buf,this._content);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
		this.writeBoolean(_buf,this._haveRead);
		this.writeBoolean(_buf,this._collected);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
		this._title=this.readString(_buf);
		this._content=this.readString(_buf);
		this._time=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._haveRead=this.readBoolean(_buf);
		this._collected=this.readBoolean(_buf);
	}

	/**邮件ID */
	/**邮件ID */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	/**邮件标题 */
	/**邮件标题 */
	__getset(0,__proto,'title',function(){
		return this._title;
		},function(value){
		this._title=value;
	});

	/**邮件内容 */
	/**邮件内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	/**邮件发送时间,unix时间戳(毫秒)*/
	/**邮件发送时间,unix时间戳(毫秒)*/
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**是否已读 */
	/**是否已读 */
	__getset(0,__proto,'haveRead',function(){
		return this._haveRead;
		},function(value){
		this._haveRead=value;
	});

	/**道具列表 */
	/**道具列表 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	/**是否已领取 */
	/**是否已领取 */
	__getset(0,__proto,'collected',function(){
		return this._collected;
		},function(value){
		this._collected=value;
	});

	return MailBean;
})(Bean)


//class net.handler.zhuansheng.ResReduceLevelHandler extends net.MNetHandler
var ResReduceLevelHandler=(function(_super){
	function ResReduceLevelHandler(){
		ResReduceLevelHandler.__super.call(this);;
	}

	__class(ResReduceLevelHandler,'net.handler.zhuansheng.ResReduceLevelHandler',_super);
	var __proto=ResReduceLevelHandler.prototype;
	// 降低等级(增加修为)
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResReduceLevelHandler;
})(MNetHandler)


//class net.handler.team.ResTeamMemberAddHandler extends net.MNetHandler
var ResTeamMemberAddHandler=(function(_super){
	function ResTeamMemberAddHandler(){
		ResTeamMemberAddHandler.__super.call(this);;
	}

	__class(ResTeamMemberAddHandler,'net.handler.team.ResTeamMemberAddHandler',_super);
	var __proto=ResTeamMemberAddHandler.prototype;
	// 队伍添加成员
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamMemberAddHandler",msg);
	}

	return ResTeamMemberAddHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageProposeErrorHandler extends net.MNetHandler
var ResMarriageProposeErrorHandler=(function(_super){
	function ResMarriageProposeErrorHandler(){
		ResMarriageProposeErrorHandler.__super.call(this);;
	}

	__class(ResMarriageProposeErrorHandler,'net.handler.marriage.ResMarriageProposeErrorHandler',_super);
	var __proto=ResMarriageProposeErrorHandler.prototype;
	// 请求求婚
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageProposeErrorHandler",msg);
	}

	return ResMarriageProposeErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResUpgradePetLevelHandler extends net.MNetHandler
var ResUpgradePetLevelHandler=(function(_super){
	function ResUpgradePetLevelHandler(){
		ResUpgradePetLevelHandler.__super.call(this);;
	}

	__class(ResUpgradePetLevelHandler,'net.handler.pet.ResUpgradePetLevelHandler',_super);
	var __proto=ResUpgradePetLevelHandler.prototype;
	// 宠物升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetLevelHandler",msg);
	}

	return ResUpgradePetLevelHandler;
})(MNetHandler)


//class net.handler.activities.ResWeekendXuYuanGetErrorHandler extends net.MNetHandler
var ResWeekendXuYuanGetErrorHandler=(function(_super){
	function ResWeekendXuYuanGetErrorHandler(){
		ResWeekendXuYuanGetErrorHandler.__super.call(this);;
	}

	__class(ResWeekendXuYuanGetErrorHandler,'net.handler.activities.ResWeekendXuYuanGetErrorHandler',_super);
	var __proto=ResWeekendXuYuanGetErrorHandler.prototype;
	// 周末许愿领取
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WeekendPrayErrorHandler" ,msg);
	}

	return ResWeekendXuYuanGetErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomKickErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomKickErrorHandler=(function(_super){
	function ResTeamDuplicateRoomKickErrorHandler(){
		ResTeamDuplicateRoomKickErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomKickErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomKickErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomKickErrorHandler.prototype;
	// 踢出玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomKickErrorHandler",msg);
	}

	return ResTeamDuplicateRoomKickErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeHandler extends net.MNetHandler
var ResEscortRevengeHandler=(function(_super){
	function ResEscortRevengeHandler(){
		ResEscortRevengeHandler.__super.call(this);;
	}

	__class(ResEscortRevengeHandler,'net.handler.escort.ResEscortRevengeHandler',_super);
	var __proto=ResEscortRevengeHandler.prototype;
	// 请求复仇
	__proto.action=function(){}
	return ResEscortRevengeHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonTakeWeekRewardHandler extends net.MNetHandler
var ResGarrisonTakeWeekRewardHandler=(function(_super){
	function ResGarrisonTakeWeekRewardHandler(){
		ResGarrisonTakeWeekRewardHandler.__super.call(this);;
	}

	__class(ResGarrisonTakeWeekRewardHandler,'net.handler.garrison.ResGarrisonTakeWeekRewardHandler',_super);
	var __proto=ResGarrisonTakeWeekRewardHandler.prototype;
	// 收取周奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonTakeWeekRewardHandler" ,msg);
	}

	return ResGarrisonTakeWeekRewardHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossPlayerDeadHandler extends net.MNetHandler
var ResWorldBossPlayerDeadHandler=(function(_super){
	function ResWorldBossPlayerDeadHandler(){
		ResWorldBossPlayerDeadHandler.__super.call(this);;
	}

	__class(ResWorldBossPlayerDeadHandler,'net.handler.worldboss.ResWorldBossPlayerDeadHandler',_super);
	var __proto=ResWorldBossPlayerDeadHandler.prototype;
	// 通知玩家死亡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossPlayerDeadHandler",msg);
	}

	return ResWorldBossPlayerDeadHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionHireMessageHandler extends net.MNetHandler
var ResLegionHireMessageHandler=(function(_super){
	function ResLegionHireMessageHandler(){
		ResLegionHireMessageHandler.__super.call(this);;
	}

	__class(ResLegionHireMessageHandler,'net.handler.legion.ResLegionHireMessageHandler',_super);
	var __proto=ResLegionHireMessageHandler.prototype;
	// 请求公开招募
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionHireMessageHandler" ,msg);
	}

	return ResLegionHireMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战令
*/
//class net.message.wartoken.WarTokenBean extends engine.base.data.Bean
var WarTokenBean=(function(_super){
	function WarTokenBean(){
		/**当前等级 */
		this._level=0;
		/**当前经验 */
		this._exp=null;
		/**剩余时间 */
		this._remainTime=null;
		/**是否传奇贴 */
		this._isChuanqiTie=0;
		/**当前轮次 */
		this._rounds=0;
		WarTokenBean.__super.call(this);
		this._normalRewarded=[];
		this._chuanqiRewarded=[];
	}

	__class(WarTokenBean,'net.message.wartoken.WarTokenBean',_super);
	var __proto=WarTokenBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeLong(_buf,this._remainTime);
		this.writeInt(_buf,this._normalRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._normalRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._normalRewarded[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._chuanqiRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._chuanqiRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._chuanqiRewarded[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._isChuanqiTie);
		this.writeInt(_buf,this._rounds);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._remainTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._normalRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._normalRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._chuanqiRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._chuanqiRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		this._isChuanqiTie=this.readInt(_buf);
		this._rounds=this.readInt(_buf);
	}

	/**当前等级 */
	/**当前等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**当前轮次 */
	/**当前轮次 */
	__getset(0,__proto,'rounds',function(){
		return this._rounds;
		},function(value){
		this._rounds=value;
	});

	/**当前经验 */
	/**当前经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**已经领取的普通奖励 */
	/**已经领取的普通奖励 */
	__getset(0,__proto,'normalRewarded',function(){
		return this._normalRewarded;
		},function(value){
		this._normalRewarded=value;
	});

	/**剩余时间 */
	/**剩余时间 */
	__getset(0,__proto,'remainTime',function(){
		return this._remainTime;
		},function(value){
		this._remainTime=value;
	});

	/**是否传奇贴 */
	/**是否传奇贴 */
	__getset(0,__proto,'isChuanqiTie',function(){
		return this._isChuanqiTie;
		},function(value){
		this._isChuanqiTie=value;
	});

	/**已经领取的传奇奖励 */
	/**已经领取的传奇奖励 */
	__getset(0,__proto,'chuanqiRewarded',function(){
		return this._chuanqiRewarded;
		},function(value){
		this._chuanqiRewarded=value;
	});

	return WarTokenBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyDeadHandler extends net.MNetHandler
var ResNineHeavyDeadHandler=(function(_super){
	function ResNineHeavyDeadHandler(){
		ResNineHeavyDeadHandler.__super.call(this);;
	}

	__class(ResNineHeavyDeadHandler,'net.handler.nineHeavy.ResNineHeavyDeadHandler',_super);
	var __proto=ResNineHeavyDeadHandler.prototype;
	// 玩家移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyDeadHandler",msg);
	}

	return ResNineHeavyDeadHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*竞技场英雄
*/
//class net.message.arena.ArenaHeroBean extends engine.base.data.Bean
var ArenaHeroBean=(function(_super){
	function ArenaHeroBean(){
		/**英雄ID */
		this._id=0;
		/**武器 */
		this._weapon=0;
		/**当前血量 */
		this._hp=null;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**翅膀 */
		this._wing=0;
		/**神兵 */
		this._shenbing=0;
		/**坐骑 */
		this._horse=0;
		/**唯一ID */
		this._uuid=0;
		ArenaHeroBean.__super.call(this);
		this._attributes=[];
		this._skills=[];
		this._skinIdList=[];
	}

	__class(ArenaHeroBean,'net.message.arena.ArenaHeroBean',_super);
	var __proto=ArenaHeroBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._weapon);
		this.writeLong(_buf,this._hp);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._wing);
		this.writeInt(_buf,this._shenbing);
		this.writeInt(_buf,this._horse);
		this.writeInt(_buf,this._uuid);
		this.writeInt(_buf,this._skinIdList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinIdList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinIdList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._weapon=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._profession=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._wing=this.readInt(_buf);
		this._shenbing=this.readInt(_buf);
		this._horse=this.readInt(_buf);
		this._uuid=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinIdList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinIdList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**武器 */
	/**武器 */
	__getset(0,__proto,'weapon',function(){
		return this._weapon;
		},function(value){
		this._weapon=value;
	});

	/**当前血量 */
	/**当前血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**属性列表 */
	/**属性列表 */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	/**翅膀 */
	/**翅膀 */
	__getset(0,__proto,'wing',function(){
		return this._wing;
		},function(value){
		this._wing=value;
	});

	/**神兵 */
	/**神兵 */
	__getset(0,__proto,'shenbing',function(){
		return this._shenbing;
		},function(value){
		this._shenbing=value;
	});

	/**坐骑 */
	/**坐骑 */
	__getset(0,__proto,'horse',function(){
		return this._horse;
		},function(value){
		this._horse=value;
	});

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uuid',function(){
		return this._uuid;
		},function(value){
		this._uuid=value;
	});

	/**各部位时装id */
	/**各部位时装id */
	__getset(0,__proto,'skinIdList',function(){
		return this._skinIdList;
		},function(value){
		this._skinIdList=value;
	});

	return ArenaHeroBean;
})(Bean)


//class net.handler.user.ResTakeActiveGameSystemRewardHandler extends net.MNetHandler
var ResTakeActiveGameSystemRewardHandler=(function(_super){
	function ResTakeActiveGameSystemRewardHandler(){
		ResTakeActiveGameSystemRewardHandler.__super.call(this);;
	}

	__class(ResTakeActiveGameSystemRewardHandler,'net.handler.user.ResTakeActiveGameSystemRewardHandler',_super);
	var __proto=ResTakeActiveGameSystemRewardHandler.prototype;
	// 激活系统
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeActiveGameSystemRewardHandler",msg);
	}

	return ResTakeActiveGameSystemRewardHandler;
})(MNetHandler)


//class net.handler.mail.ResCollectMailErrorHandler extends net.MNetHandler
var ResCollectMailErrorHandler=(function(_super){
	function ResCollectMailErrorHandler(){
		ResCollectMailErrorHandler.__super.call(this);;
	}

	__class(ResCollectMailErrorHandler,'net.handler.mail.ResCollectMailErrorHandler',_super);
	var __proto=ResCollectMailErrorHandler.prototype;
	// 收取邮件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CollectMailErrorHandler",msg);
	}

	return ResCollectMailErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildGetAllErrorHandler extends net.MNetHandler
var ResGuildGetAllErrorHandler=(function(_super){
	function ResGuildGetAllErrorHandler(){
		ResGuildGetAllErrorHandler.__super.call(this);;
	}

	__class(ResGuildGetAllErrorHandler,'net.handler.guild.ResGuildGetAllErrorHandler',_super);
	var __proto=ResGuildGetAllErrorHandler.prototype;
	// 获取所有军团的简要信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildGetAllErrorHandler",msg);
	}

	return ResGuildGetAllErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiUpdateHandler extends net.MNetHandler
var ResChibiUpdateHandler=(function(_super){
	function ResChibiUpdateHandler(){
		ResChibiUpdateHandler.__super.call(this);;
	}

	__class(ResChibiUpdateHandler,'net.handler.chibi.ResChibiUpdateHandler',_super);
	var __proto=ResChibiUpdateHandler.prototype;
	// 更新赤壁
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiUpdateHandler",msg);
	}

	return ResChibiUpdateHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaBuyTimesErrorHandler extends net.MNetHandler
var ResArenaBuyTimesErrorHandler=(function(_super){
	function ResArenaBuyTimesErrorHandler(){
		ResArenaBuyTimesErrorHandler.__super.call(this);;
	}

	__class(ResArenaBuyTimesErrorHandler,'net.handler.arena.ResArenaBuyTimesErrorHandler',_super);
	var __proto=ResArenaBuyTimesErrorHandler.prototype;
	// 购买挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaBuyTimesErrorHandler",msg.error);
	}

	return ResArenaBuyTimesErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageTakeSinglePlayerHandler extends net.MNetHandler
var ResMarriageTakeSinglePlayerHandler=(function(_super){
	function ResMarriageTakeSinglePlayerHandler(){
		ResMarriageTakeSinglePlayerHandler.__super.call(this);;
	}

	__class(ResMarriageTakeSinglePlayerHandler,'net.handler.marriage.ResMarriageTakeSinglePlayerHandler',_super);
	var __proto=ResMarriageTakeSinglePlayerHandler.prototype;
	// 拉取单身的玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageTakeSinglePlayerHandler",msg);
	}

	return ResMarriageTakeSinglePlayerHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetEquipHandler extends net.MNetHandler
var ResFitSetEquipHandler=(function(_super){
	function ResFitSetEquipHandler(){
		ResFitSetEquipHandler.__super.call(this);;
	}

	__class(ResFitSetEquipHandler,'net.handler.fit.ResFitSetEquipHandler',_super);
	var __proto=ResFitSetEquipHandler.prototype;
	// 穿戴合体装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetEquipHandler" ,msg);
	}

	return ResFitSetEquipHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengUpdateFightSettingHandler extends net.MNetHandler
var ResYuanZhengUpdateFightSettingHandler=(function(_super){
	function ResYuanZhengUpdateFightSettingHandler(){
		ResYuanZhengUpdateFightSettingHandler.__super.call(this);;
	}

	__class(ResYuanZhengUpdateFightSettingHandler,'net.handler.yuanzheng.ResYuanZhengUpdateFightSettingHandler',_super);
	var __proto=ResYuanZhengUpdateFightSettingHandler.prototype;
	// 远征更新阵容
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengUpdateFightSettingHandler",msg);
	}

	return ResYuanZhengUpdateFightSettingHandler;
})(MNetHandler)


//class net.handler.zhuansheng.ResZhuanShengErrorHandler extends net.MNetHandler
var ResZhuanShengErrorHandler=(function(_super){
	function ResZhuanShengErrorHandler(){
		ResZhuanShengErrorHandler.__super.call(this);;
	}

	__class(ResZhuanShengErrorHandler,'net.handler.zhuansheng.ResZhuanShengErrorHandler',_super);
	var __proto=ResZhuanShengErrorHandler.prototype;
	// 转生
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ZhuanShengErrorHandler",msg);
	}

	return ResZhuanShengErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveAllDungeonPrizeErrorHandler extends net.MNetHandler
var ResReceiveAllDungeonPrizeErrorHandler=(function(_super){
	function ResReceiveAllDungeonPrizeErrorHandler(){
		ResReceiveAllDungeonPrizeErrorHandler.__super.call(this);;
	}

	__class(ResReceiveAllDungeonPrizeErrorHandler,'net.handler.dungeon.ResReceiveAllDungeonPrizeErrorHandler',_super);
	var __proto=ResReceiveAllDungeonPrizeErrorHandler.prototype;
	// 扫荡副本奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveAllDungeonPrizeErrorHandler",msg.error);
	}

	return ResReceiveAllDungeonPrizeErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeRecordHandler extends net.MNetHandler
var ResEscortRevengeRecordHandler=(function(_super){
	function ResEscortRevengeRecordHandler(){
		ResEscortRevengeRecordHandler.__super.call(this);;
	}

	__class(ResEscortRevengeRecordHandler,'net.handler.escort.ResEscortRevengeRecordHandler',_super);
	var __proto=ResEscortRevengeRecordHandler.prototype;
	// 请求复仇的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRevengeRecordHandler",msg);
	}

	return ResEscortRevengeRecordHandler;
})(MNetHandler)


//class net.handler.misc.ResWxIOSAuthorizeDataHandler extends net.MNetHandler
var ResWxIOSAuthorizeDataHandler=(function(_super){
	function ResWxIOSAuthorizeDataHandler(){
		ResWxIOSAuthorizeDataHandler.__super.call(this);;
	}

	__class(ResWxIOSAuthorizeDataHandler,'net.handler.misc.ResWxIOSAuthorizeDataHandler',_super);
	var __proto=ResWxIOSAuthorizeDataHandler.prototype;
	// 微信IOS获取认证相关参数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WxIOSAuthorizeDataHandler",msg);
	}

	return ResWxIOSAuthorizeDataHandler;
})(MNetHandler)


//class net.handler.video.ResPlayVideoHandler extends net.MNetHandler
var ResPlayVideoHandler=(function(_super){
	function ResPlayVideoHandler(){
		ResPlayVideoHandler.__super.call(this);;
	}

	__class(ResPlayVideoHandler,'net.handler.video.ResPlayVideoHandler',_super);
	var __proto=ResPlayVideoHandler.prototype;
	// 播放录像
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PlayVideoHandler",msg);
	}

	return ResPlayVideoHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildApplyReplyErrorHandler extends net.MNetHandler
var ResGuildApplyReplyErrorHandler=(function(_super){
	function ResGuildApplyReplyErrorHandler(){
		ResGuildApplyReplyErrorHandler.__super.call(this);;
	}

	__class(ResGuildApplyReplyErrorHandler,'net.handler.guild.ResGuildApplyReplyErrorHandler',_super);
	var __proto=ResGuildApplyReplyErrorHandler.prototype;
	// 回应申请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildApplyReplyErrorHandler",msg);
	}

	return ResGuildApplyReplyErrorHandler;
})(MNetHandler)


//class net.handler.treasure.ResTreasurePyErrorHandler extends net.MNetHandler
var ResTreasurePyErrorHandler=(function(_super){
	function ResTreasurePyErrorHandler(){
		ResTreasurePyErrorHandler.__super.call(this);;
	}

	__class(ResTreasurePyErrorHandler,'net.handler.treasure.ResTreasurePyErrorHandler',_super);
	var __proto=ResTreasurePyErrorHandler.prototype;
	// 培养
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasurePyErrorHandler",msg.error);
	}

	return ResTreasurePyErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*单身对象
*/
//class net.message.marriage.SingleBean extends engine.base.data.Bean
var SingleBean=(function(_super){
	function SingleBean(){
		/**ID */
		this._uid=null;
		/**sex */
		this._gender=0;
		/**职业 */
		this._profession=0;
		/**名字 */
		this._name=null;
		/**等级 */
		this._lv=0;
		/**战斗力 */
		this._power=null;
		SingleBean.__super.call(this);
	}

	__class(SingleBean,'net.message.marriage.SingleBean',_super);
	var __proto=SingleBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._lv);
		this.writeLong(_buf,this._power);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._lv=this.readInt(_buf);
		this._power=this.readLong(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**sex */
	/**sex */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'power',function(){
		return this._power;
		},function(value){
		this._power=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return SingleBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*求婚对象
*/
//class net.message.marriage.ProposeBean extends engine.base.data.Bean
var ProposeBean=(function(_super){
	function ProposeBean(){
		/**求婚人 */
		this._uid=null;
		/**求婚人名字 */
		this._name=null;
		/**求婚人性别 */
		this._gender=0;
		/**求婚人职业 */
		this._profession=0;
		/**被求婚人 */
		this._target=null;
		/**被求婚人名字 */
		this._t_name=null;
		/**婚姻等级 */
		this._lv=0;
		/**对方角色 1 丈夫 0 妻子 */
		this._type=0;
		/**超时时间 */
		this._out_time=null;
		ProposeBean.__super.call(this);
	}

	__class(ProposeBean,'net.message.marriage.ProposeBean',_super);
	var __proto=ProposeBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeLong(_buf,this._target);
		this.writeString(_buf,this._t_name);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._out_time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._target=this.readLong(_buf);
		this._t_name=this.readString(_buf);
		this._lv=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._out_time=this.readLong(_buf);
	}

	/**求婚人 */
	/**求婚人 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**对方角色 1 丈夫 0 妻子 */
	/**对方角色 1 丈夫 0 妻子 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**求婚人名字 */
	/**求婚人名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**被求婚人 */
	/**被求婚人 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**求婚人性别 */
	/**求婚人性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**婚姻等级 */
	/**婚姻等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**被求婚人名字 */
	/**被求婚人名字 */
	__getset(0,__proto,'t_name',function(){
		return this._t_name;
		},function(value){
		this._t_name=value;
	});

	/**求婚人职业 */
	/**求婚人职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**超时时间 */
	/**超时时间 */
	__getset(0,__proto,'out_time',function(){
		return this._out_time;
		},function(value){
		this._out_time=value;
	});

	return ProposeBean;
})(Bean)


//class net.handler.pata.ResPataFightHandler extends net.MNetHandler
var ResPataFightHandler=(function(_super){
	function ResPataFightHandler(){
		ResPataFightHandler.__super.call(this);;
	}

	__class(ResPataFightHandler,'net.handler.pata.ResPataFightHandler',_super);
	var __proto=ResPataFightHandler.prototype;
	// 爬塔战斗
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PataFightHandler",msg);
	}

	return ResPataFightHandler;
})(MNetHandler)


//class net.handler.vip.ResVipUpdateHandler extends net.MNetHandler
var ResVipUpdateHandler=(function(_super){
	function ResVipUpdateHandler(){
		ResVipUpdateHandler.__super.call(this);;
	}

	__class(ResVipUpdateHandler,'net.handler.vip.ResVipUpdateHandler',_super);
	var __proto=ResVipUpdateHandler.prototype;
	// 更新VIP
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("VipUpdateHandler",msg);
	}

	return ResVipUpdateHandler;
})(MNetHandler)


//class net.handler.tuangou.ResTuanGouTakePrizeHandler extends net.MNetHandler
var ResTuanGouTakePrizeHandler=(function(_super){
	function ResTuanGouTakePrizeHandler(){
		ResTuanGouTakePrizeHandler.__super.call(this);;
	}

	__class(ResTuanGouTakePrizeHandler,'net.handler.tuangou.ResTuanGouTakePrizeHandler',_super);
	var __proto=ResTuanGouTakePrizeHandler.prototype;
	// 团购领奖
	__proto.action=function(){
		var msg=(this.message);
		var list=[msg.cfgID];
		EventCenter.Event("TuanGouTakePrizeHandler",list);
	}

	return ResTuanGouTakePrizeHandler;
})(MNetHandler)


//class net.handler.hero.ResCreateViceHeroHandler extends net.MNetHandler
var ResCreateViceHeroHandler=(function(_super){
	function ResCreateViceHeroHandler(){
		ResCreateViceHeroHandler.__super.call(this);;
	}

	__class(ResCreateViceHeroHandler,'net.handler.hero.ResCreateViceHeroHandler',_super);
	var __proto=ResCreateViceHeroHandler.prototype;
	// 创建副英雄
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResCreateViceHeroHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用技能
*/
//class net.message.fight.FightSkillUseBean extends engine.base.data.Bean
var FightSkillUseBean=(function(_super){
	function FightSkillUseBean(){
		/**序号 */
		this._index=0;
		/**技能ID */
		this._skillID=0;
		/**目标唯一ID(有可能不存在)*/
		this._dstUID=0;
		FightSkillUseBean.__super.call(this);
		this._srcUIDs=[];
	}

	__class(FightSkillUseBean,'net.message.fight.FightSkillUseBean',_super);
	var __proto=FightSkillUseBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._srcUIDs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._srcUIDs.length;++i_am_tmp_i){
			this.writeInt(_buf,this._srcUIDs[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skillID);
		this.writeInt(_buf,this._dstUID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._srcUIDs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._srcUIDs[i_am_tmp_i]=this.readInt(_buf);
		}
		this._skillID=this.readInt(_buf);
		this._dstUID=this.readInt(_buf);
	}

	/**技能ID */
	/**技能ID */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**目标唯一ID(有可能不存在)*/
	/**目标唯一ID(有可能不存在)*/
	__getset(0,__proto,'dstUID',function(){
		return this._dstUID;
		},function(value){
		this._dstUID=value;
	});

	/**使用者唯一ID */
	/**使用者唯一ID */
	__getset(0,__proto,'srcUIDs',function(){
		return this._srcUIDs;
		},function(value){
		this._srcUIDs=value;
	});

	return FightSkillUseBean;
})(Bean)


//class net.handler.chat.ResChatHelpRewardErrorHandler extends net.MNetHandler
var ResChatHelpRewardErrorHandler=(function(_super){
	function ResChatHelpRewardErrorHandler(){
		ResChatHelpRewardErrorHandler.__super.call(this);;
	}

	__class(ResChatHelpRewardErrorHandler,'net.handler.chat.ResChatHelpRewardErrorHandler',_super);
	var __proto=ResChatHelpRewardErrorHandler.prototype;
	// 帮助关卡的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatHelpRewardErrorHandler",msg.error);
	}

	return ResChatHelpRewardErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomJoinHandler extends net.MNetHandler
var ResTeamDuplicateRoomJoinHandler=(function(_super){
	function ResTeamDuplicateRoomJoinHandler(){
		ResTeamDuplicateRoomJoinHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomJoinHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomJoinHandler',_super);
	var __proto=ResTeamDuplicateRoomJoinHandler.prototype;
	// 加入或者创建房间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomJoinHandler",msg);
	}

	return ResTeamDuplicateRoomJoinHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童对象
*/
//class net.message.soulboy.SoulBoyBean extends engine.base.data.Bean
var SoulBoyBean=(function(_super){
	function SoulBoyBean(){
		/**配置ID */
		this._configID=0;
		/**等级 */
		this._lv=0;
		/**升级进度 */
		this._progress=0;
		/**刷新次数 */
		this._count=0;
		/**天赋 */
		this._talent=null;
		/**属性丹吃药次数 */
		this._drugCount=0;
		SoulBoyBean.__super.call(this);
		this._skill=[];
		this._readySkill=[];
		this._ling=[];
		this._hun=[];
	}

	__class(SoulBoyBean,'net.message.soulboy.SoulBoyBean',_super);
	var __proto=SoulBoyBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configID);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._readySkill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._readySkill.length;++i_am_tmp_i){
			this._readySkill[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._ling.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._ling.length;++i_am_tmp_i){
			this._ling[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._hun.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._hun.length;++i_am_tmp_i){
			this._hun[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._talent);
		this.writeInt(_buf,this._drugCount);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configID=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		size52413035=this.readInt(_buf);
		this._readySkill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._readySkill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._count=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._ling=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._ling[i_am_tmp_i]=this.readBeanInList(_buf,SoulMatch);
		}
		size52413035=this.readInt(_buf);
		this._hun=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._hun[i_am_tmp_i]=this.readBeanInList(_buf,SoulMatchHun);
		}
		this._talent=this.readBean(_buf,SoulBoySkill);
		this._drugCount=this.readInt(_buf);
	}

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**属性丹吃药次数 */
	/**属性丹吃药次数 */
	__getset(0,__proto,'drugCount',function(){
		return this._drugCount;
		},function(value){
		this._drugCount=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	/**升级进度 */
	/**升级进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**刷出的技能 */
	/**刷出的技能 */
	__getset(0,__proto,'readySkill',function(){
		return this._readySkill;
		},function(value){
		this._readySkill=value;
	});

	/**刷新次数 */
	/**刷新次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**御灵 */
	/**御灵 */
	__getset(0,__proto,'ling',function(){
		return this._ling;
		},function(value){
		this._ling=value;
	});

	/**御魂 */
	/**御魂 */
	__getset(0,__proto,'hun',function(){
		return this._hun;
		},function(value){
		this._hun=value;
	});

	/**天赋 */
	/**天赋 */
	__getset(0,__proto,'talent',function(){
		return this._talent;
		},function(value){
		this._talent=value;
	});

	return SoulBoyBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*赤壁对象
*/
//class net.message.chibi.ChibiTaskBean extends engine.base.data.Bean
var ChibiTaskBean=(function(_super){
	function ChibiTaskBean(){
		/**任务ID */
		this._qid=0;
		/**剩余完成时间 */
		this._time=null;
		ChibiTaskBean.__super.call(this);
		this._heroid=[];
	}

	__class(ChibiTaskBean,'net.message.chibi.ChibiTaskBean',_super);
	var __proto=ChibiTaskBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
		this.writeInt(_buf,this._heroid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._heroid.length;++i_am_tmp_i){
			this._heroid[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._heroid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._heroid[i_am_tmp_i]=this.readBeanInList(_buf,ChibiHeroBean);
		}
		this._time=this.readLong(_buf);
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**剩余完成时间 */
	/**剩余完成时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**进行任务的英雄ID */
	/**进行任务的英雄ID */
	__getset(0,__proto,'heroid',function(){
		return this._heroid;
		},function(value){
		this._heroid=value;
	});

	return ChibiTaskBean;
})(Bean)


//class net.handler.fit.ResFitUpgradePositionErrorHandler extends net.MNetHandler
var ResFitUpgradePositionErrorHandler=(function(_super){
	function ResFitUpgradePositionErrorHandler(){
		ResFitUpgradePositionErrorHandler.__super.call(this);;
	}

	__class(ResFitUpgradePositionErrorHandler,'net.handler.fit.ResFitUpgradePositionErrorHandler',_super);
	var __proto=ResFitUpgradePositionErrorHandler.prototype;
	// 升级武器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpgradePositionErrorHandler" ,msg);
	}

	return ResFitUpgradePositionErrorHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiSignUpHandler extends net.MNetHandler
var ResQunYingHuiSignUpHandler=(function(_super){
	function ResQunYingHuiSignUpHandler(){
		ResQunYingHuiSignUpHandler.__super.call(this);;
	}

	__class(ResQunYingHuiSignUpHandler,'net.handler.qunyinghui.ResQunYingHuiSignUpHandler',_super);
	var __proto=ResQunYingHuiSignUpHandler.prototype;
	// 群英会报名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiSignUpHandler",true);
	}

	return ResQunYingHuiSignUpHandler;
})(MNetHandler)


//class net.handler.task.ResTaskFinishHandler extends net.MNetHandler
var ResTaskFinishHandler=(function(_super){
	function ResTaskFinishHandler(){
		ResTaskFinishHandler.__super.call(this);;
	}

	__class(ResTaskFinishHandler,'net.handler.task.ResTaskFinishHandler',_super);
	var __proto=ResTaskFinishHandler.prototype;
	// 完成任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskFinishHandler",msg);
	}

	return ResTaskFinishHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*首通和最少回合
*/
//class net.message.teamDuplicate.TeamDuplicateFirstClearance extends engine.base.data.Bean
var TeamDuplicateFirstClearance=(function(_super){
	function TeamDuplicateFirstClearance(){
		/**首通名字 */
		this._name=null;
		/**首通时间 */
		this._time=null;
		/**首通回合 */
		this._first_round=0;
		/**最少回合名字 */
		this._min_name=null;
		/**最少回合时间 */
		this._min_time=null;
		/**最少回合时间 */
		this._min_round=0;
		TeamDuplicateFirstClearance.__super.call(this);
	}

	__class(TeamDuplicateFirstClearance,'net.message.teamDuplicate.TeamDuplicateFirstClearance',_super);
	var __proto=TeamDuplicateFirstClearance.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._first_round);
		this.writeString(_buf,this._min_name);
		this.writeLong(_buf,this._min_time);
		this.writeInt(_buf,this._min_round);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._time=this.readLong(_buf);
		this._first_round=this.readInt(_buf);
		this._min_name=this.readString(_buf);
		this._min_time=this.readLong(_buf);
		this._min_round=this.readInt(_buf);
	}

	/**首通名字 */
	/**首通名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**首通时间 */
	/**首通时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**首通回合 */
	/**首通回合 */
	__getset(0,__proto,'first_round',function(){
		return this._first_round;
		},function(value){
		this._first_round=value;
	});

	/**最少回合名字 */
	/**最少回合名字 */
	__getset(0,__proto,'min_name',function(){
		return this._min_name;
		},function(value){
		this._min_name=value;
	});

	/**最少回合时间 */
	/**最少回合时间 */
	__getset(0,__proto,'min_time',function(){
		return this._min_time;
		},function(value){
		this._min_time=value;
	});

	/**最少回合时间 */
	/**最少回合时间 */
	__getset(0,__proto,'min_round',function(){
		return this._min_round;
		},function(value){
		this._min_round=value;
	});

	return TeamDuplicateFirstClearance;
})(Bean)


//class net.handler.misc.ResRechargeErrorHandler extends net.MNetHandler
var ResRechargeErrorHandler=(function(_super){
	function ResRechargeErrorHandler(){
		ResRechargeErrorHandler.__super.call(this);;
	}

	__class(ResRechargeErrorHandler,'net.handler.misc.ResRechargeErrorHandler',_super);
	var __proto=ResRechargeErrorHandler.prototype;
	// 充值
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResRechargeErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackPlayerHandler extends net.MNetHandler
var ResWorldBossAttackPlayerHandler=(function(_super){
	function ResWorldBossAttackPlayerHandler(){
		ResWorldBossAttackPlayerHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackPlayerHandler,'net.handler.worldboss.ResWorldBossAttackPlayerHandler',_super);
	var __proto=ResWorldBossAttackPlayerHandler.prototype;
	// 玩家攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackPlayerHandler",msg);
	}

	return ResWorldBossAttackPlayerHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageUpdateIntimateHandler extends net.MNetHandler
var ResMarriageUpdateIntimateHandler=(function(_super){
	function ResMarriageUpdateIntimateHandler(){
		ResMarriageUpdateIntimateHandler.__super.call(this);;
	}

	__class(ResMarriageUpdateIntimateHandler,'net.handler.marriage.ResMarriageUpdateIntimateHandler',_super);
	var __proto=ResMarriageUpdateIntimateHandler.prototype;
	// 通知更新亲密度
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageUpdateIntimateHandler",msg);
	}

	return ResMarriageUpdateIntimateHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildMemberValueUpdateHandler extends net.MNetHandler
var ResGuildMemberValueUpdateHandler=(function(_super){
	function ResGuildMemberValueUpdateHandler(){
		ResGuildMemberValueUpdateHandler.__super.call(this);;
	}

	__class(ResGuildMemberValueUpdateHandler,'net.handler.guild.ResGuildMemberValueUpdateHandler',_super);
	var __proto=ResGuildMemberValueUpdateHandler.prototype;
	// 自身值更新
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildMemberValueUpdateHandler",msg);
	}

	return ResGuildMemberValueUpdateHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageReceiveUpdateHandler extends net.MNetHandler
var ResMarriageReceiveUpdateHandler=(function(_super){
	function ResMarriageReceiveUpdateHandler(){
		ResMarriageReceiveUpdateHandler.__super.call(this);;
	}

	__class(ResMarriageReceiveUpdateHandler,'net.handler.marriage.ResMarriageReceiveUpdateHandler',_super);
	var __proto=ResMarriageReceiveUpdateHandler.prototype;
	// 通知伴侣升阶房子有东西可以免费领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageReceiveUpdateHandler",msg);
	}

	return ResMarriageReceiveUpdateHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图腾列表
*/
//class net.message.totem.TotemsBean extends engine.base.data.Bean
var TotemsBean=(function(_super){
	function TotemsBean(){
		TotemsBean.__super.call(this);
		this._totems=[];
	}

	__class(TotemsBean,'net.message.totem.TotemsBean',_super);
	var __proto=TotemsBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._totems.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._totems.length;++i_am_tmp_i){
			this._totems[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._totems=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._totems[i_am_tmp_i]=this.readBeanInList(_buf,TotemBean);
		}
	}

	/**图腾 */
	/**图腾 */
	__getset(0,__proto,'totems',function(){
		return this._totems;
		},function(value){
		this._totems=value;
	});

	return TotemsBean;
})(Bean)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomJoinErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomJoinErrorHandler=(function(_super){
	function ResTeamDuplicateRoomJoinErrorHandler(){
		ResTeamDuplicateRoomJoinErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomJoinErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomJoinErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomJoinErrorHandler.prototype;
	// 加入或者创建房间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomJoinErrorHandler",msg);
	}

	return ResTeamDuplicateRoomJoinErrorHandler;
})(MNetHandler)


//class net.handler.video.ResGetVideosHandler extends net.MNetHandler
var ResGetVideosHandler=(function(_super){
	function ResGetVideosHandler(){
		ResGetVideosHandler.__super.call(this);;
	}

	__class(ResGetVideosHandler,'net.handler.video.ResGetVideosHandler',_super);
	var __proto=ResGetVideosHandler.prototype;
	// 获取录像
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetVideosHandler",msg);
	}

	return ResGetVideosHandler;
})(MNetHandler)


//class net.handler.redEnvelopes.ResRedEnvelopesErrorHandler extends net.MNetHandler
var ResRedEnvelopesErrorHandler=(function(_super){
	function ResRedEnvelopesErrorHandler(){
		ResRedEnvelopesErrorHandler.__super.call(this);;
	}

	__class(ResRedEnvelopesErrorHandler,'net.handler.redEnvelopes.ResRedEnvelopesErrorHandler',_super);
	var __proto=ResRedEnvelopesErrorHandler.prototype;
	// 抢
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RedEnvelopesErrorHandler",msg);
	}

	return ResRedEnvelopesErrorHandler;
})(MNetHandler)


//class net.handler.shop.ResUpdateShopReturnHandler extends net.MNetHandler
var ResUpdateShopReturnHandler=(function(_super){
	function ResUpdateShopReturnHandler(){
		ResUpdateShopReturnHandler.__super.call(this);;
	}

	__class(ResUpdateShopReturnHandler,'net.handler.shop.ResUpdateShopReturnHandler',_super);
	var __proto=ResUpdateShopReturnHandler.prototype;
	// 商店购买返还信息
	__proto.action=function(){
		var msg=(this.message);
		console.log(msg+"===============================ResUpdateShopReturnMessage");
	}

	return ResUpdateShopReturnHandler;
})(MNetHandler)


//class net.handler.task.ResTaskUpdateHandler extends net.MNetHandler
var ResTaskUpdateHandler=(function(_super){
	function ResTaskUpdateHandler(){
		ResTaskUpdateHandler.__super.call(this);;
	}

	__class(ResTaskUpdateHandler,'net.handler.task.ResTaskUpdateHandler',_super);
	var __proto=ResTaskUpdateHandler.prototype;
	// 更新任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskUpdateHandler",msg);
	}

	return ResTaskUpdateHandler;
})(MNetHandler)


//class net.handler.lieming.ResLiemingHandler extends net.MNetHandler
var ResLiemingHandler=(function(_super){
	function ResLiemingHandler(){
		ResLiemingHandler.__super.call(this);;
	}

	__class(ResLiemingHandler,'net.handler.lieming.ResLiemingHandler',_super);
	var __proto=ResLiemingHandler.prototype;
	// 猎命
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LiemingHandler",msg);
	}

	return ResLiemingHandler;
})(MNetHandler)


//class net.handler.godClothes.ResGodClothesOperationHandler extends net.MNetHandler
var ResGodClothesOperationHandler=(function(_super){
	function ResGodClothesOperationHandler(){
		ResGodClothesOperationHandler.__super.call(this);;
	}

	__class(ResGodClothesOperationHandler,'net.handler.godClothes.ResGodClothesOperationHandler',_super);
	var __proto=ResGodClothesOperationHandler.prototype;
	// 操作神装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GodClothesOperationHandler" ,msg);
	}

	return ResGodClothesOperationHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*属性bean
*/
//class net.message.misc.AttributeBean extends engine.base.data.Bean
var AttributeBean=(function(_super){
	function AttributeBean(){
		/**属性类型[1:生命][2:速度][3:攻击][4:防御][5:命中][6:闪避][7:暴击][8:抗暴][9:魂击][10:抗魂][11:无视防御][12:减免无视防御][13:伤害加深][14:伤害减少][15:伤害加深百分比][16:伤害减少百分比][17:暴伤加成][18:暴伤减免][19:pvp加伤][20:pvp减伤][21:pve加伤][22:pve减伤][23:挂机经验][24:挂机银两][25:挂机经验百分比][26:挂机银两百分比][27:对武将伤害加深][28:对武将伤害减免][29:对红颜伤害加深][30:对红颜伤害减免][31:对军师伤害加深][32:对军师伤害减免][33:对蛮将伤害加深][34:对蛮将伤害减免][35:技能伤害值增加][36:技能伤害比例增加][37:抵抗沉默的几率][38:抵抗眩晕的几率][39:抵抗嘲讽的几率][40:抵抗混乱的几率][41:抵抗封印的几率][42:武将挂机经验加成][43:武将挂机经验加成百分比][44:最终暴击率][45:吸血][46:对蜀国伤害增加][47:对魏国伤害增加][48:对吴国伤害增加][49:对群雄伤害加深][50:对蜀国伤害减免][51:对魏国伤害减免][52:对吴国伤害减免][53:对群雄伤害减免][54:生命百分比加成][55:速度百分比加成][56:攻击百分比加成][57:防御百分比加成][58:对玩家自身全属性万分比增幅][59:对机关全属性万分比增幅][60:对魏国武将全属性万分比增幅][61:对蜀国武将全属性万分比增幅][62:对吴国武将全属性万分比增幅][63:对群雄武将全属性万分比增幅] */
		this._attributeType=0;
		/**属性值 */
		this._value=null;
		AttributeBean.__super.call(this);
	}

	__class(AttributeBean,'net.message.misc.AttributeBean',_super);
	var __proto=AttributeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._attributeType);
		this.writeLong(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._attributeType=this.readInt(_buf);
		this._value=this.readLong(_buf);
	}

	/**属性类型[1:生命][2:速度][3:攻击][4:防御][5:命中][6:闪避][7:暴击][8:抗暴][9:魂击][10:抗魂][11:无视防御][12:减免无视防御][13:伤害加深][14:伤害减少][15:伤害加深百分比][16:伤害减少百分比][17:暴伤加成][18:暴伤减免][19:pvp加伤][20:pvp减伤][21:pve加伤][22:pve减伤][23:挂机经验][24:挂机银两][25:挂机经验百分比][26:挂机银两百分比][27:对武将伤害加深][28:对武将伤害减免][29:对红颜伤害加深][30:对红颜伤害减免][31:对军师伤害加深][32:对军师伤害减免][33:对蛮将伤害加深][34:对蛮将伤害减免][35:技能伤害值增加][36:技能伤害比例增加][37:抵抗沉默的几率][38:抵抗眩晕的几率][39:抵抗嘲讽的几率][40:抵抗混乱的几率][41:抵抗封印的几率][42:武将挂机经验加成][43:武将挂机经验加成百分比][44:最终暴击率][45:吸血][46:对蜀国伤害增加][47:对魏国伤害增加][48:对吴国伤害增加][49:对群雄伤害加深][50:对蜀国伤害减免][51:对魏国伤害减免][52:对吴国伤害减免][53:对群雄伤害减免][54:生命百分比加成][55:速度百分比加成][56:攻击百分比加成][57:防御百分比加成][58:对玩家自身全属性万分比增幅][59:对机关全属性万分比增幅][60:对魏国武将全属性万分比增幅][61:对蜀国武将全属性万分比增幅][62:对吴国武将全属性万分比增幅][63:对群雄武将全属性万分比增幅] */
	/**属性类型[1:生命][2:速度][3:攻击][4:防御][5:命中][6:闪避][7:暴击][8:抗暴][9:魂击][10:抗魂][11:无视防御][12:减免无视防御][13:伤害加深][14:伤害减少][15:伤害加深百分比][16:伤害减少百分比][17:暴伤加成][18:暴伤减免][19:pvp加伤][20:pvp减伤][21:pve加伤][22:pve减伤][23:挂机经验][24:挂机银两][25:挂机经验百分比][26:挂机银两百分比][27:对武将伤害加深][28:对武将伤害减免][29:对红颜伤害加深][30:对红颜伤害减免][31:对军师伤害加深][32:对军师伤害减免][33:对蛮将伤害加深][34:对蛮将伤害减免][35:技能伤害值增加][36:技能伤害比例增加][37:抵抗沉默的几率][38:抵抗眩晕的几率][39:抵抗嘲讽的几率][40:抵抗混乱的几率][41:抵抗封印的几率][42:武将挂机经验加成][43:武将挂机经验加成百分比][44:最终暴击率][45:吸血][46:对蜀国伤害增加][47:对魏国伤害增加][48:对吴国伤害增加][49:对群雄伤害加深][50:对蜀国伤害减免][51:对魏国伤害减免][52:对吴国伤害减免][53:对群雄伤害减免][54:生命百分比加成][55:速度百分比加成][56:攻击百分比加成][57:防御百分比加成][58:对玩家自身全属性万分比增幅][59:对机关全属性万分比增幅][60:对魏国武将全属性万分比增幅][61:对蜀国武将全属性万分比增幅][62:对吴国武将全属性万分比增幅][63:对群雄武将全属性万分比增幅] */
	__getset(0,__proto,'attributeType',function(){
		return this._attributeType;
		},function(value){
		this._attributeType=value;
	});

	/**属性值 */
	/**属性值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return AttributeBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴对象
*/
//class net.message.handbook.HandBookBean extends engine.base.data.Bean
var HandBookBean=(function(_super){
	function HandBookBean(){
		/**id */
		this._configId=0;
		/**星级 */
		this._star=0;
		HandBookBean.__super.call(this);
	}

	__class(HandBookBean,'net.message.handbook.HandBookBean',_super);
	var __proto=HandBookBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	/**星级 */
	/**星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return HandBookBean;
})(Bean)


//class net.handler.shimen.ResChallengeShiMenErrorHandler extends net.MNetHandler
var ResChallengeShiMenErrorHandler=(function(_super){
	function ResChallengeShiMenErrorHandler(){
		ResChallengeShiMenErrorHandler.__super.call(this);;
	}

	__class(ResChallengeShiMenErrorHandler,'net.handler.shimen.ResChallengeShiMenErrorHandler',_super);
	var __proto=ResChallengeShiMenErrorHandler.prototype;
	// 挑战师门任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChallengeShiMenErrorHandler",msg.error);
	}

	return ResChallengeShiMenErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResTameWildPetErrorHandler extends net.MNetHandler
var ResTameWildPetErrorHandler=(function(_super){
	function ResTameWildPetErrorHandler(){
		ResTameWildPetErrorHandler.__super.call(this);;
	}

	__class(ResTameWildPetErrorHandler,'net.handler.pet.ResTameWildPetErrorHandler',_super);
	var __proto=ResTameWildPetErrorHandler.prototype;
	// 捕获宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TameWildPetErrorHandler",msg.error);
	}

	return ResTameWildPetErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResWeekendXuYuanGetHandler extends net.MNetHandler
var ResWeekendXuYuanGetHandler=(function(_super){
	function ResWeekendXuYuanGetHandler(){
		ResWeekendXuYuanGetHandler.__super.call(this);;
	}

	__class(ResWeekendXuYuanGetHandler,'net.handler.activities.ResWeekendXuYuanGetHandler',_super);
	var __proto=ResWeekendXuYuanGetHandler.prototype;
	// 周末许愿领取
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("recPrayGiftHandler" ,msg);
	}

	return ResWeekendXuYuanGetHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyDrugItemErrorHandler extends net.MNetHandler
var ResSoulBoyDrugItemErrorHandler=(function(_super){
	function ResSoulBoyDrugItemErrorHandler(){
		ResSoulBoyDrugItemErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyDrugItemErrorHandler,'net.handler.soulboy.ResSoulBoyDrugItemErrorHandler',_super);
	var __proto=ResSoulBoyDrugItemErrorHandler.prototype;
	// 灵童使用属性丹
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSoulBoyDrugItemErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResStartEscortHandler extends net.MNetHandler
var ResStartEscortHandler=(function(_super){
	function ResStartEscortHandler(){
		ResStartEscortHandler.__super.call(this);;
	}

	__class(ResStartEscortHandler,'net.handler.escort.ResStartEscortHandler',_super);
	var __proto=ResStartEscortHandler.prototype;
	// 开始押运
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("StartEscortHandler" ,msg);
	}

	return ResStartEscortHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengTakePrizeErrorHandler extends net.MNetHandler
var ResYuanZhengTakePrizeErrorHandler=(function(_super){
	function ResYuanZhengTakePrizeErrorHandler(){
		ResYuanZhengTakePrizeErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengTakePrizeErrorHandler,'net.handler.yuanzheng.ResYuanZhengTakePrizeErrorHandler',_super);
	var __proto=ResYuanZhengTakePrizeErrorHandler.prototype;
	// 远征领奖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengTakePrizeErrorHandler",msg);
	}

	return ResYuanZhengTakePrizeErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildCreateErrorHandler extends net.MNetHandler
var ResGuildCreateErrorHandler=(function(_super){
	function ResGuildCreateErrorHandler(){
		ResGuildCreateErrorHandler.__super.call(this);;
	}

	__class(ResGuildCreateErrorHandler,'net.handler.guild.ResGuildCreateErrorHandler',_super);
	var __proto=ResGuildCreateErrorHandler.prototype;
	// 请求创建军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildCreateErrorHandler",msg);
	}

	return ResGuildCreateErrorHandler;
})(MNetHandler)


//class net.handler.welfare.ResGetYaoQianRewardAdditionallyHandler extends net.MNetHandler
var ResGetYaoQianRewardAdditionallyHandler=(function(_super){
	function ResGetYaoQianRewardAdditionallyHandler(){
		ResGetYaoQianRewardAdditionallyHandler.__super.call(this);;
	}

	__class(ResGetYaoQianRewardAdditionallyHandler,'net.handler.welfare.ResGetYaoQianRewardAdditionallyHandler',_super);
	var __proto=ResGetYaoQianRewardAdditionallyHandler.prototype;
	// 摇钱树额外奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetYaoQianRewardAdditionallyHandler",msg);
	}

	return ResGetYaoQianRewardAdditionallyHandler;
})(MNetHandler)


//class net.handler.skin.ResWearSkinHandler extends net.MNetHandler
var ResWearSkinHandler=(function(_super){
	function ResWearSkinHandler(){
		ResWearSkinHandler.__super.call(this);;
	}

	__class(ResWearSkinHandler,'net.handler.skin.ResWearSkinHandler',_super);
	var __proto=ResWearSkinHandler.prototype;
	// 激活时装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WearSkinHandler",msg);
	}

	return ResWearSkinHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossMoveErrorHandler extends net.MNetHandler
var ResWorldBossMoveErrorHandler=(function(_super){
	function ResWorldBossMoveErrorHandler(){
		ResWorldBossMoveErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossMoveErrorHandler,'net.handler.worldboss.ResWorldBossMoveErrorHandler',_super);
	var __proto=ResWorldBossMoveErrorHandler.prototype;
	// 玩家移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossMoveErrorHandler",msg);
	}

	return ResWorldBossMoveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会战斗者对象(详细)
*/
//class net.message.qunyinghui.QunYingHuiFighterDetailBean extends engine.base.data.Bean
var QunYingHuiFighterDetailBean=(function(_super){
	function QunYingHuiFighterDetailBean(){
		/**性别 */
		this._appearance=null;
		/**唯一ID */
		this._uid=null;
		/**等级 */
		this._level=0;
		/**战力 */
		this._fightPower=null;
		QunYingHuiFighterDetailBean.__super.call(this);
	}

	__class(QunYingHuiFighterDetailBean,'net.message.qunyinghui.QunYingHuiFighterDetailBean',_super);
	var __proto=QunYingHuiFighterDetailBean.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._appearance);
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._appearance=this.readBean(_buf,AppearanceBean);
		this._uid=this.readLong(_buf);
		this._level=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
	}

	/**性别 */
	/**性别 */
	__getset(0,__proto,'appearance',function(){
		return this._appearance;
		},function(value){
		this._appearance=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return QunYingHuiFighterDetailBean;
})(Bean)


//class net.handler.guild.ResGetLeginMemberInfoHandler extends net.MNetHandler
var ResGetLeginMemberInfoHandler=(function(_super){
	function ResGetLeginMemberInfoHandler(){
		ResGetLeginMemberInfoHandler.__super.call(this);;
	}

	__class(ResGetLeginMemberInfoHandler,'net.handler.guild.ResGetLeginMemberInfoHandler',_super);
	var __proto=ResGetLeginMemberInfoHandler.prototype;
	// 帮会成员信息刷新
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetLeginMemberInfoHandler;
})(MNetHandler)


//class net.handler.skin.ResActivateSkinErrorHandler extends net.MNetHandler
var ResActivateSkinErrorHandler=(function(_super){
	function ResActivateSkinErrorHandler(){
		ResActivateSkinErrorHandler.__super.call(this);;
	}

	__class(ResActivateSkinErrorHandler,'net.handler.skin.ResActivateSkinErrorHandler',_super);
	var __proto=ResActivateSkinErrorHandler.prototype;
	// 激活时装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivateSkinErrorHandler",msg);
	}

	return ResActivateSkinErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResUpdateServerOpenTimeHandler extends net.MNetHandler
var ResUpdateServerOpenTimeHandler=(function(_super){
	function ResUpdateServerOpenTimeHandler(){
		ResUpdateServerOpenTimeHandler.__super.call(this);;
	}

	__class(ResUpdateServerOpenTimeHandler,'net.handler.misc.ResUpdateServerOpenTimeHandler',_super);
	var __proto=ResUpdateServerOpenTimeHandler.prototype;
	// 更新开服时间
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUpdateServerOpenTimeHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionSkillUpgradeMessageErrorHandler extends net.MNetHandler
var ResLegionSkillUpgradeMessageErrorHandler=(function(_super){
	function ResLegionSkillUpgradeMessageErrorHandler(){
		ResLegionSkillUpgradeMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionSkillUpgradeMessageErrorHandler,'net.handler.legion.ResLegionSkillUpgradeMessageErrorHandler',_super);
	var __proto=ResLegionSkillUpgradeMessageErrorHandler.prototype;
	// 请求升级帮会技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSkillUpgradeMessageErrorHandler ",msg);
	}

	return ResLegionSkillUpgradeMessageErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*等级礼包
*/
//class net.message.welfare.DengJiLiBao extends engine.base.data.Bean
var DengJiLiBao=(function(_super){
	function DengJiLiBao(){
		/**当前等级 */
		this._lv=0;
		DengJiLiBao.__super.call(this);
		this._receivedId=[];
	}

	__class(DengJiLiBao,'net.message.welfare.DengJiLiBao',_super);
	var __proto=DengJiLiBao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._receivedId.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._receivedId.length;++i_am_tmp_i){
			this.writeInt(_buf,this._receivedId[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._receivedId=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._receivedId[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**已领取宝箱id */
	/**已领取宝箱id */
	__getset(0,__proto,'receivedId',function(){
		return this._receivedId;
		},function(value){
		this._receivedId=value;
	});

	/**当前等级 */
	/**当前等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return DengJiLiBao;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派简要信息
*/
//class net.message.guild.GuildBriefBean extends engine.base.data.Bean
var GuildBriefBean=(function(_super){
	function GuildBriefBean(){
		/**帮会ID */
		this._uid=null;
		/**帮会名字 */
		this._name=null;
		/**帮会等级 */
		this._level=0;
		/**帮会人数 */
		this._memberNum=0;
		/**会长名字 */
		this._masterName=null;
		/**会长性别[1:男性][2:女性] */
		this._masterGender=0;
		/**会长职业[1:人][2:魔][3:仙] */
		this._masterProfession=0;
		/**入会战力要求 */
		this._fightPower=null;
		/**是否被改帮会邀请 */
		this._invited=false;
		/**是否申请过该帮会 */
		this._applied=false;
		/**帮会战力 */
		this._totalFightPower=null;
		/**帮会创建时间 */
		this._createTime=null;
		GuildBriefBean.__super.call(this);
	}

	__class(GuildBriefBean,'net.message.guild.GuildBriefBean',_super);
	var __proto=GuildBriefBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._memberNum);
		this.writeString(_buf,this._masterName);
		this.writeInt(_buf,this._masterGender);
		this.writeInt(_buf,this._masterProfession);
		this.writeLong(_buf,this._fightPower);
		this.writeBoolean(_buf,this._invited);
		this.writeBoolean(_buf,this._applied);
		this.writeLong(_buf,this._totalFightPower);
		this.writeLong(_buf,this._createTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
		this._memberNum=this.readInt(_buf);
		this._masterName=this.readString(_buf);
		this._masterGender=this.readInt(_buf);
		this._masterProfession=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._invited=this.readBoolean(_buf);
		this._applied=this.readBoolean(_buf);
		this._totalFightPower=this.readLong(_buf);
		this._createTime=this.readLong(_buf);
	}

	/**帮会等级 */
	/**帮会等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**帮会ID */
	/**帮会ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**帮会名字 */
	/**帮会名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**会长职业[1:人][2:魔][3:仙] */
	/**会长职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'masterProfession',function(){
		return this._masterProfession;
		},function(value){
		this._masterProfession=value;
	});

	/**帮会人数 */
	/**帮会人数 */
	__getset(0,__proto,'memberNum',function(){
		return this._memberNum;
		},function(value){
		this._memberNum=value;
	});

	/**会长名字 */
	/**会长名字 */
	__getset(0,__proto,'masterName',function(){
		return this._masterName;
		},function(value){
		this._masterName=value;
	});

	/**是否申请过该帮会 */
	/**是否申请过该帮会 */
	__getset(0,__proto,'applied',function(){
		return this._applied;
		},function(value){
		this._applied=value;
	});

	/**会长性别[1:男性][2:女性] */
	/**会长性别[1:男性][2:女性] */
	__getset(0,__proto,'masterGender',function(){
		return this._masterGender;
		},function(value){
		this._masterGender=value;
	});

	/**入会战力要求 */
	/**入会战力要求 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**帮会创建时间 */
	/**帮会创建时间 */
	__getset(0,__proto,'createTime',function(){
		return this._createTime;
		},function(value){
		this._createTime=value;
	});

	/**是否被改帮会邀请 */
	/**是否被改帮会邀请 */
	__getset(0,__proto,'invited',function(){
		return this._invited;
		},function(value){
		this._invited=value;
	});

	/**帮会战力 */
	/**帮会战力 */
	__getset(0,__proto,'totalFightPower',function(){
		return this._totalFightPower;
		},function(value){
		this._totalFightPower=value;
	});

	return GuildBriefBean;
})(Bean)


//class net.handler.juewei.ResUpdateNewJueWeiLevelErrorHandler extends net.MNetHandler
var ResUpdateNewJueWeiLevelErrorHandler=(function(_super){
	function ResUpdateNewJueWeiLevelErrorHandler(){
		ResUpdateNewJueWeiLevelErrorHandler.__super.call(this);;
	}

	__class(ResUpdateNewJueWeiLevelErrorHandler,'net.handler.juewei.ResUpdateNewJueWeiLevelErrorHandler',_super);
	var __proto=ResUpdateNewJueWeiLevelErrorHandler.prototype;
	// 更新爵位等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateNewJueWeiLevelErrorHandler",msg);
	}

	return ResUpdateNewJueWeiLevelErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值记录
*/
//class net.message.vip.RechargeRecord extends engine.base.data.Bean
var RechargeRecord=(function(_super){
	function RechargeRecord(){
		/**rmb */
		this._rmb=0;
		/**时间戳（秒） */
		this._time=0;
		RechargeRecord.__super.call(this);
	}

	__class(RechargeRecord,'net.message.vip.RechargeRecord',_super);
	var __proto=RechargeRecord.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rmb);
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rmb=this.readInt(_buf);
		this._time=this.readInt(_buf);
	}

	/**rmb */
	/**rmb */
	__getset(0,__proto,'rmb',function(){
		return this._rmb;
		},function(value){
		this._rmb=value;
	});

	/**时间戳（秒） */
	/**时间戳（秒） */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return RechargeRecord;
})(Bean)


//class net.handler.pata.ResTakeCBTPrizeHandler extends net.MNetHandler
var ResTakeCBTPrizeHandler=(function(_super){
	function ResTakeCBTPrizeHandler(){
		ResTakeCBTPrizeHandler.__super.call(this);;
	}

	__class(ResTakeCBTPrizeHandler,'net.handler.pata.ResTakeCBTPrizeHandler',_super);
	var __proto=ResTakeCBTPrizeHandler.prototype;
	// 领取藏宝图奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeCBTPrizeHandler",msg);
	}

	return ResTakeCBTPrizeHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossPayRebornErrorHandler extends net.MNetHandler
var ResWorldBossPayRebornErrorHandler=(function(_super){
	function ResWorldBossPayRebornErrorHandler(){
		ResWorldBossPayRebornErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossPayRebornErrorHandler,'net.handler.worldboss.ResWorldBossPayRebornErrorHandler',_super);
	var __proto=ResWorldBossPayRebornErrorHandler.prototype;
	// 付款重生
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossPayRebornErrorHandler",msg);
	}

	return ResWorldBossPayRebornErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageSuccessHandler extends net.MNetHandler
var ResMarriageSuccessHandler=(function(_super){
	function ResMarriageSuccessHandler(){
		ResMarriageSuccessHandler.__super.call(this);;
	}

	__class(ResMarriageSuccessHandler,'net.handler.marriage.ResMarriageSuccessHandler',_super);
	var __proto=ResMarriageSuccessHandler.prototype;
	// 通知结婚成功
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageSuccessHandler",msg);
	}

	return ResMarriageSuccessHandler;
})(MNetHandler)


//class net.handler.pet.ResUpdateWildPetHandler extends net.MNetHandler
var ResUpdateWildPetHandler=(function(_super){
	function ResUpdateWildPetHandler(){
		ResUpdateWildPetHandler.__super.call(this);;
	}

	__class(ResUpdateWildPetHandler,'net.handler.pet.ResUpdateWildPetHandler',_super);
	var __proto=ResUpdateWildPetHandler.prototype;
	// 更新可捕获的宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateWildPetHandler",msg.petID);
	}

	return ResUpdateWildPetHandler;
})(MNetHandler)


//class net.handler.official.ResReceiveOfficialYesterdayRewardErrorHandler extends net.MNetHandler
var ResReceiveOfficialYesterdayRewardErrorHandler=(function(_super){
	function ResReceiveOfficialYesterdayRewardErrorHandler(){
		ResReceiveOfficialYesterdayRewardErrorHandler.__super.call(this);;
	}

	__class(ResReceiveOfficialYesterdayRewardErrorHandler,'net.handler.official.ResReceiveOfficialYesterdayRewardErrorHandler',_super);
	var __proto=ResReceiveOfficialYesterdayRewardErrorHandler.prototype;
	// 找回官位昨日奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveOfficialYesterdayRewardErrorHandler",msg);
	}

	return ResReceiveOfficialYesterdayRewardErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResReceiveEscortRewardErrorHandler extends net.MNetHandler
var ResReceiveEscortRewardErrorHandler=(function(_super){
	function ResReceiveEscortRewardErrorHandler(){
		ResReceiveEscortRewardErrorHandler.__super.call(this);;
	}

	__class(ResReceiveEscortRewardErrorHandler,'net.handler.escort.ResReceiveEscortRewardErrorHandler',_super);
	var __proto=ResReceiveEscortRewardErrorHandler.prototype;
	// 领取押运奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveEscortRewardErrorHandler " ,msg);
	}

	return ResReceiveEscortRewardErrorHandler;
})(MNetHandler)


//class net.handler.fight.ResOtherPlayerFightTeamHandler extends net.MNetHandler
var ResOtherPlayerFightTeamHandler=(function(_super){
	function ResOtherPlayerFightTeamHandler(){
		ResOtherPlayerFightTeamHandler.__super.call(this);;
	}

	__class(ResOtherPlayerFightTeamHandler,'net.handler.fight.ResOtherPlayerFightTeamHandler',_super);
	var __proto=ResOtherPlayerFightTeamHandler.prototype;
	// 查看其他玩家信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OtherPlayerFightTeamHandler" ,msg);
	}

	return ResOtherPlayerFightTeamHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*道具对象对象
*/
//class net.message.escort.ItemBean extends engine.base.data.Bean
var ItemBean=(function(_super){
	function ItemBean(){
		/**道具ID */
		this._id=0;
		/**道具数量 */
		this._num=0;
		/**过期时间 */
		this._overtime=null;
		ItemBean.__super.call(this);
	}

	__class(ItemBean,'net.message.escort.ItemBean',_super);
	var __proto=ItemBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
		this.writeLong(_buf,this._overtime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._overtime=this.readLong(_buf);
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**道具数量 */
	/**道具数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**过期时间 */
	/**过期时间 */
	__getset(0,__proto,'overtime',function(){
		return this._overtime;
		},function(value){
		this._overtime=value;
	});

	return ItemBean;
})(Bean)


//class net.handler.textureHunt.ResHuntStartErrorHandler extends net.MNetHandler
var ResHuntStartErrorHandler=(function(_super){
	function ResHuntStartErrorHandler(){
		ResHuntStartErrorHandler.__super.call(this);;
	}

	__class(ResHuntStartErrorHandler,'net.handler.textureHunt.ResHuntStartErrorHandler',_super);
	var __proto=ResHuntStartErrorHandler.prototype;
	// 请求寻宝
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntStartErrorHandler",msg);
	}

	return ResHuntStartErrorHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeElementQuickErrorHandler extends net.MNetHandler
var ResAdviserUpgradeElementQuickErrorHandler=(function(_super){
	function ResAdviserUpgradeElementQuickErrorHandler(){
		ResAdviserUpgradeElementQuickErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeElementQuickErrorHandler,'net.handler.adviser.ResAdviserUpgradeElementQuickErrorHandler',_super);
	var __proto=ResAdviserUpgradeElementQuickErrorHandler.prototype;
	// 一键升级觉醒元素
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeElementQuickErrorHandler",msg.error);
	}

	return ResAdviserUpgradeElementQuickErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildUpdateLevelHandler extends net.MNetHandler
var ResGuildUpdateLevelHandler=(function(_super){
	function ResGuildUpdateLevelHandler(){
		ResGuildUpdateLevelHandler.__super.call(this);;
	}

	__class(ResGuildUpdateLevelHandler,'net.handler.guild.ResGuildUpdateLevelHandler',_super);
	var __proto=ResGuildUpdateLevelHandler.prototype;
	// 更新帮会成等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildUpdateLevelHandler",msg);
	}

	return ResGuildUpdateLevelHandler;
})(MNetHandler)


//class net.handler.skin.ResUpgradeSkinStarHandler extends net.MNetHandler
var ResUpgradeSkinStarHandler=(function(_super){
	function ResUpgradeSkinStarHandler(){
		ResUpgradeSkinStarHandler.__super.call(this);;
	}

	__class(ResUpgradeSkinStarHandler,'net.handler.skin.ResUpgradeSkinStarHandler',_super);
	var __proto=ResUpgradeSkinStarHandler.prototype;
	// 时装升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeSkinStarHandler",msg);
	}

	return ResUpgradeSkinStarHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeElementHandler extends net.MNetHandler
var ResAdviserUpgradeElementHandler=(function(_super){
	function ResAdviserUpgradeElementHandler(){
		ResAdviserUpgradeElementHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeElementHandler,'net.handler.adviser.ResAdviserUpgradeElementHandler',_super);
	var __proto=ResAdviserUpgradeElementHandler.prototype;
	// 升级觉醒元素
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeElementHandler",msg);
	}

	return ResAdviserUpgradeElementHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*福利签到
*/
//class net.message.welfare.FuLiQianDao extends engine.base.data.Bean
var FuLiQianDao=(function(_super){
	function FuLiQianDao(){
		/**已签到天数 */
		this._signDay=0;
		/**上次签到时间 */
		this._lastSignTime=null;
		FuLiQianDao.__super.call(this);
	}

	__class(FuLiQianDao,'net.message.welfare.FuLiQianDao',_super);
	var __proto=FuLiQianDao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._signDay);
		this.writeLong(_buf,this._lastSignTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._signDay=this.readInt(_buf);
		this._lastSignTime=this.readLong(_buf);
	}

	/**已签到天数 */
	/**已签到天数 */
	__getset(0,__proto,'signDay',function(){
		return this._signDay;
		},function(value){
		this._signDay=value;
	});

	/**上次签到时间 */
	/**上次签到时间 */
	__getset(0,__proto,'lastSignTime',function(){
		return this._lastSignTime;
		},function(value){
		this._lastSignTime=value;
	});

	return FuLiQianDao;
})(Bean)


//class net.handler.activities.ResGoldBasinfulActUpdateHandler extends net.MNetHandler
var ResGoldBasinfulActUpdateHandler=(function(_super){
	function ResGoldBasinfulActUpdateHandler(){
		ResGoldBasinfulActUpdateHandler.__super.call(this);;
	}

	__class(ResGoldBasinfulActUpdateHandler,'net.handler.activities.ResGoldBasinfulActUpdateHandler',_super);
	var __proto=ResGoldBasinfulActUpdateHandler.prototype;
	// 刀币满盆活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGoldBasinfulActUpdateHandler",msg);
	}

	return ResGoldBasinfulActUpdateHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomRewardErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomRewardErrorHandler=(function(_super){
	function ResTeamDuplicateRoomRewardErrorHandler(){
		ResTeamDuplicateRoomRewardErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomRewardErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomRewardErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomRewardErrorHandler.prototype;
	// 领取战斗后的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomRewardErrorHandler",msg);
	}

	return ResTeamDuplicateRoomRewardErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖品对象
*/
//class net.message.auction.AuctionBean extends engine.base.data.Bean
var AuctionBean=(function(_super){
	function AuctionBean(){
		/**拍卖单元ID */
		this._uid=null;
		/**道具ID */
		this._itemID=0;
		/**道具数量 */
		this._itemNum=0;
		/**初始价格 */
		this._initial=0;
		/**当前价格 */
		this._current=0;
		/**一口价 */
		this._spike=0;
		/**结束时间 */
		this._time=null;
		/**竞拍者ID */
		this._pid=null;
		/**竞拍者名字 */
		this._name=null;
		/**上架者id，如果是军团拍卖则是军团id */
		this._ownerId=null;
		/**配置ID */
		this._configID=0;
		AuctionBean.__super.call(this);
	}

	__class(AuctionBean,'net.message.auction.AuctionBean',_super);
	var __proto=AuctionBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._itemID);
		this.writeInt(_buf,this._itemNum);
		this.writeInt(_buf,this._initial);
		this.writeInt(_buf,this._current);
		this.writeInt(_buf,this._spike);
		this.writeLong(_buf,this._time);
		this.writeLong(_buf,this._pid);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._ownerId);
		this.writeInt(_buf,this._configID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._itemID=this.readInt(_buf);
		this._itemNum=this.readInt(_buf);
		this._initial=this.readInt(_buf);
		this._current=this.readInt(_buf);
		this._spike=this.readInt(_buf);
		this._time=this.readLong(_buf);
		this._pid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._ownerId=this.readLong(_buf);
		this._configID=this.readInt(_buf);
	}

	/**一口价 */
	/**一口价 */
	__getset(0,__proto,'spike',function(){
		return this._spike;
		},function(value){
		this._spike=value;
	});

	/**拍卖单元ID */
	/**拍卖单元ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**初始价格 */
	/**初始价格 */
	__getset(0,__proto,'initial',function(){
		return this._initial;
		},function(value){
		this._initial=value;
	});

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'itemID',function(){
		return this._itemID;
		},function(value){
		this._itemID=value;
	});

	/**竞拍者名字 */
	/**竞拍者名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**道具数量 */
	/**道具数量 */
	__getset(0,__proto,'itemNum',function(){
		return this._itemNum;
		},function(value){
		this._itemNum=value;
	});

	/**竞拍者ID */
	/**竞拍者ID */
	__getset(0,__proto,'pid',function(){
		return this._pid;
		},function(value){
		this._pid=value;
	});

	/**当前价格 */
	/**当前价格 */
	__getset(0,__proto,'current',function(){
		return this._current;
		},function(value){
		this._current=value;
	});

	/**结束时间 */
	/**结束时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**上架者id，如果是军团拍卖则是军团id */
	/**上架者id，如果是军团拍卖则是军团id */
	__getset(0,__proto,'ownerId',function(){
		return this._ownerId;
		},function(value){
		this._ownerId=value;
	});

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	return AuctionBean;
})(Bean)


//class net.handler.worldboss.ResWorldBossLeaveHandler extends net.MNetHandler
var ResWorldBossLeaveHandler=(function(_super){
	function ResWorldBossLeaveHandler(){
		ResWorldBossLeaveHandler.__super.call(this);;
	}

	__class(ResWorldBossLeaveHandler,'net.handler.worldboss.ResWorldBossLeaveHandler',_super);
	var __proto=ResWorldBossLeaveHandler.prototype;
	// 玩家离开
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossLeaveHandler",msg);
	}

	return ResWorldBossLeaveHandler;
})(MNetHandler)


//class net.handler.misc.ResFirstDayEndLoginHandler extends net.MNetHandler
var ResFirstDayEndLoginHandler=(function(_super){
	function ResFirstDayEndLoginHandler(){
		ResFirstDayEndLoginHandler.__super.call(this);;
	}

	__class(ResFirstDayEndLoginHandler,'net.handler.misc.ResFirstDayEndLoginHandler',_super);
	var __proto=ResFirstDayEndLoginHandler.prototype;
	// 跨天首次登陆
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FirstDayEndLoginHandler",msg);
	}

	return ResFirstDayEndLoginHandler;
})(MNetHandler)


//class net.handler.dungeon.ResUpdateQuanMinBossHandler extends net.MNetHandler
var ResUpdateQuanMinBossHandler=(function(_super){
	function ResUpdateQuanMinBossHandler(){
		ResUpdateQuanMinBossHandler.__super.call(this);;
	}

	__class(ResUpdateQuanMinBossHandler,'net.handler.dungeon.ResUpdateQuanMinBossHandler',_super);
	var __proto=ResUpdateQuanMinBossHandler.prototype;
	// 刷新全民boss副本信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateQuanMinBossHandler",msg.dungeon);
	}

	return ResUpdateQuanMinBossHandler;
})(MNetHandler)


//class net.handler.activities.ResSuperSupplyActHandler extends net.MNetHandler
var ResSuperSupplyActHandler=(function(_super){
	function ResSuperSupplyActHandler(){
		ResSuperSupplyActHandler.__super.call(this);;
	}

	__class(ResSuperSupplyActHandler,'net.handler.activities.ResSuperSupplyActHandler',_super);
	var __proto=ResSuperSupplyActHandler.prototype;
	// 超值补给活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSuperSupplyActHandler",msg);
	}

	return ResSuperSupplyActHandler;
})(MNetHandler)


//class net.handler.gongCe.ResGetJunTuanInfoHandler extends net.MNetHandler
var ResGetJunTuanInfoHandler=(function(_super){
	function ResGetJunTuanInfoHandler(){
		ResGetJunTuanInfoHandler.__super.call(this);;
	}

	__class(ResGetJunTuanInfoHandler,'net.handler.gongCe.ResGetJunTuanInfoHandler',_super);
	var __proto=ResGetJunTuanInfoHandler.prototype;
	// 发送军团战排名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetJunTuanInfoHandler",msg);
	}

	return ResGetJunTuanInfoHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengTakePrizeHandler extends net.MNetHandler
var ResYuanZhengTakePrizeHandler=(function(_super){
	function ResYuanZhengTakePrizeHandler(){
		ResYuanZhengTakePrizeHandler.__super.call(this);;
	}

	__class(ResYuanZhengTakePrizeHandler,'net.handler.yuanzheng.ResYuanZhengTakePrizeHandler',_super);
	var __proto=ResYuanZhengTakePrizeHandler.prototype;
	// 远征领奖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengTakePrizeHandler",msg);
	}

	return ResYuanZhengTakePrizeHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateBossRankHandler extends net.MNetHandler
var ResLegionBattleUpdateBossRankHandler=(function(_super){
	function ResLegionBattleUpdateBossRankHandler(){
		ResLegionBattleUpdateBossRankHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateBossRankHandler,'net.handler.gb.ResLegionBattleUpdateBossRankHandler',_super);
	var __proto=ResLegionBattleUpdateBossRankHandler.prototype;
	// 更新BOSS场景排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateBossRankHandler" ,msg);
	}

	return ResLegionBattleUpdateBossRankHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*聊天对象
*/
//class net.message.chat.ChatBean extends engine.base.data.Bean
var ChatBean=(function(_super){
	function ChatBean(){
		/**发起人ID */
		this._id=null;
		/**发起人名字 */
		this._name=null;
		/**发起人等级 */
		this._level=0;
		/**发起人战力 */
		this._fightPower=null;
		/**发起人职业 */
		this._personal=0;
		/**发起人性别 */
		this._gender=0;
		/**发起人坐骑 */
		this._horse=0;
		/**发起人翅膀 */
		this._wing=0;
		/**发起人皮肤 */
		this._skin=0;
		/**发起人武器 */
		this._wespon=0;
		/**发起人精灵 */
		this._elf=0;
		/**发起人称号 */
		this._chenhao=0;
		/**发起人是否月卡 */
		this._yueka=false;
		/**发起人是否终生卡 */
		this._zhongshengka=false;
		/**聊天类型 0 正常说话 其他见消息配置表 */
		this._type=0;
		/**内容 */
		this._content=null;
		/**频道 */
		this._channel=0;
		/**接收人ID */
		this._target_id=null;
		/**接收人名字 */
		this._target_name=null;
		/**接收人职业 */
		this._target_personal=0;
		/**接收人性别 */
		this._target_gender=0;
		ChatBean.__super.call(this);
		this._values=[];
		this._skinIdList=[];
	}

	__class(ChatBean,'net.message.chat.ChatBean',_super);
	var __proto=ChatBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._id);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._personal);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._horse);
		this.writeInt(_buf,this._wing);
		this.writeInt(_buf,this._skin);
		this.writeInt(_buf,this._wespon);
		this.writeInt(_buf,this._elf);
		this.writeInt(_buf,this._chenhao);
		this.writeBoolean(_buf,this._yueka);
		this.writeBoolean(_buf,this._zhongshengka);
		this.writeInt(_buf,this._type);
		this.writeString(_buf,this._content);
		this.writeInt(_buf,this._values.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._values.length;++i_am_tmp_i){
			this.writeString(_buf,this._values[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._channel);
		this.writeLong(_buf,this._target_id);
		this.writeString(_buf,this._target_name);
		this.writeInt(_buf,this._target_personal);
		this.writeInt(_buf,this._target_gender);
		this.writeInt(_buf,this._skinIdList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinIdList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinIdList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._personal=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._horse=this.readInt(_buf);
		this._wing=this.readInt(_buf);
		this._skin=this.readInt(_buf);
		this._wespon=this.readInt(_buf);
		this._elf=this.readInt(_buf);
		this._chenhao=this.readInt(_buf);
		this._yueka=this.readBoolean(_buf);
		this._zhongshengka=this.readBoolean(_buf);
		this._type=this.readInt(_buf);
		this._content=this.readString(_buf);
		size52413035=this.readInt(_buf);
		this._values=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._values[i_am_tmp_i]=this.readString(_buf);
		}
		this._channel=this.readInt(_buf);
		this._target_id=this.readLong(_buf);
		this._target_name=this.readString(_buf);
		this._target_personal=this.readInt(_buf);
		this._target_gender=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinIdList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinIdList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**发起人皮肤 */
	/**发起人皮肤 */
	__getset(0,__proto,'skin',function(){
		return this._skin;
		},function(value){
		this._skin=value;
	});

	/**发起人性别 */
	/**发起人性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**发起人ID */
	/**发起人ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**发起人精灵 */
	/**发起人精灵 */
	__getset(0,__proto,'elf',function(){
		return this._elf;
		},function(value){
		this._elf=value;
	});

	/**发起人名字 */
	/**发起人名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**发起人坐骑 */
	/**发起人坐骑 */
	__getset(0,__proto,'horse',function(){
		return this._horse;
		},function(value){
		this._horse=value;
	});

	/**聊天类型 0 正常说话 其他见消息配置表 */
	/**聊天类型 0 正常说话 其他见消息配置表 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**发起人职业 */
	/**发起人职业 */
	__getset(0,__proto,'personal',function(){
		return this._personal;
		},function(value){
		this._personal=value;
	});

	/**接收人职业 */
	/**接收人职业 */
	__getset(0,__proto,'target_personal',function(){
		return this._target_personal;
		},function(value){
		this._target_personal=value;
	});

	/**发起人等级 */
	/**发起人等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**发起人翅膀 */
	/**发起人翅膀 */
	__getset(0,__proto,'wing',function(){
		return this._wing;
		},function(value){
		this._wing=value;
	});

	/**发起人战力 */
	/**发起人战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**发起人武器 */
	/**发起人武器 */
	__getset(0,__proto,'wespon',function(){
		return this._wespon;
		},function(value){
		this._wespon=value;
	});

	/**发起人称号 */
	/**发起人称号 */
	__getset(0,__proto,'chenhao',function(){
		return this._chenhao;
		},function(value){
		this._chenhao=value;
	});

	/**发起人是否月卡 */
	/**发起人是否月卡 */
	__getset(0,__proto,'yueka',function(){
		return this._yueka;
		},function(value){
		this._yueka=value;
	});

	/**发起人是否终生卡 */
	/**发起人是否终生卡 */
	__getset(0,__proto,'zhongshengka',function(){
		return this._zhongshengka;
		},function(value){
		this._zhongshengka=value;
	});

	/**内容 */
	/**内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'values',function(){
		return this._values;
		},function(value){
		this._values=value;
	});

	/**频道 */
	/**频道 */
	__getset(0,__proto,'channel',function(){
		return this._channel;
		},function(value){
		this._channel=value;
	});

	/**接收人性别 */
	/**接收人性别 */
	__getset(0,__proto,'target_gender',function(){
		return this._target_gender;
		},function(value){
		this._target_gender=value;
	});

	/**接收人ID */
	/**接收人ID */
	__getset(0,__proto,'target_id',function(){
		return this._target_id;
		},function(value){
		this._target_id=value;
	});

	/**接收人名字 */
	/**接收人名字 */
	__getset(0,__proto,'target_name',function(){
		return this._target_name;
		},function(value){
		this._target_name=value;
	});

	/**发起人各部位时装id */
	/**发起人各部位时装id */
	__getset(0,__proto,'skinIdList',function(){
		return this._skinIdList;
		},function(value){
		this._skinIdList=value;
	});

	return ChatBean;
})(Bean)


//class net.handler.garrison.ResGarrisonTakeRewardErrorHandler extends net.MNetHandler
var ResGarrisonTakeRewardErrorHandler=(function(_super){
	function ResGarrisonTakeRewardErrorHandler(){
		ResGarrisonTakeRewardErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonTakeRewardErrorHandler,'net.handler.garrison.ResGarrisonTakeRewardErrorHandler',_super);
	var __proto=ResGarrisonTakeRewardErrorHandler.prototype;
	// 收取奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonTakeRewardErrorHandler" ,msg);
	}

	return ResGarrisonTakeRewardErrorHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeYuanMaiErrorHandler extends net.MNetHandler
var ResGeneralUpgradeYuanMaiErrorHandler=(function(_super){
	function ResGeneralUpgradeYuanMaiErrorHandler(){
		ResGeneralUpgradeYuanMaiErrorHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeYuanMaiErrorHandler,'net.handler.general.ResGeneralUpgradeYuanMaiErrorHandler',_super);
	var __proto=ResGeneralUpgradeYuanMaiErrorHandler.prototype;
	// 蛮将升级元脉
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeYuanMaiErrorHandler" ,msg);
	}

	return ResGeneralUpgradeYuanMaiErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonWorshipErrorHandler extends net.MNetHandler
var ResGarrisonWorshipErrorHandler=(function(_super){
	function ResGarrisonWorshipErrorHandler(){
		ResGarrisonWorshipErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonWorshipErrorHandler,'net.handler.garrison.ResGarrisonWorshipErrorHandler',_super);
	var __proto=ResGarrisonWorshipErrorHandler.prototype;
	// 膜拜霸主
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonWorshipErrorHandler" ,msg);
	}

	return ResGarrisonWorshipErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResShowOfflinePrizeHandler extends net.MNetHandler
var ResShowOfflinePrizeHandler=(function(_super){
	function ResShowOfflinePrizeHandler(){
		ResShowOfflinePrizeHandler.__super.call(this);;
	}

	__class(ResShowOfflinePrizeHandler,'net.handler.misc.ResShowOfflinePrizeHandler',_super);
	var __proto=ResShowOfflinePrizeHandler.prototype;
	// 展示离线奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ShowOfflinePrizeHandler",msg);
	}

	return ResShowOfflinePrizeHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyHunUpgradeErrorHandler extends net.MNetHandler
var ResSoulBoyHunUpgradeErrorHandler=(function(_super){
	function ResSoulBoyHunUpgradeErrorHandler(){
		ResSoulBoyHunUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyHunUpgradeErrorHandler,'net.handler.soulboy.ResSoulBoyHunUpgradeErrorHandler',_super);
	var __proto=ResSoulBoyHunUpgradeErrorHandler.prototype;
	// 升级或者替换御魂
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyHunUpgradeErrorHandler",msg);
	}

	return ResSoulBoyHunUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackResultHandler extends net.MNetHandler
var ResWorldBossAttackResultHandler=(function(_super){
	function ResWorldBossAttackResultHandler(){
		ResWorldBossAttackResultHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackResultHandler,'net.handler.worldboss.ResWorldBossAttackResultHandler',_super);
	var __proto=ResWorldBossAttackResultHandler.prototype;
	// 玩家攻击BOSS的结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackResultHandler",msg);
	}

	return ResWorldBossAttackResultHandler;
})(MNetHandler)


//class net.handler.video.ResGetVideoFightDataHandler extends net.MNetHandler
var ResGetVideoFightDataHandler=(function(_super){
	function ResGetVideoFightDataHandler(){
		ResGetVideoFightDataHandler.__super.call(this);;
	}

	__class(ResGetVideoFightDataHandler,'net.handler.video.ResGetVideoFightDataHandler',_super);
	var __proto=ResGetVideoFightDataHandler.prototype;
	// 获取录像
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetVideoFightDataHandler",msg);
	}

	return ResGetVideoFightDataHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateValueHandler extends net.MNetHandler
var ResUpdateValueHandler=(function(_super){
	function ResUpdateValueHandler(){
		ResUpdateValueHandler.__super.call(this);;
	}

	__class(ResUpdateValueHandler,'net.handler.user.ResUpdateValueHandler',_super);
	var __proto=ResUpdateValueHandler.prototype;
	// 更新数值
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateValueHandler",msg);
	}

	return ResUpdateValueHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePataInviteUpdateErrorHandler extends net.MNetHandler
var ResMarriagePataInviteUpdateErrorHandler=(function(_super){
	function ResMarriagePataInviteUpdateErrorHandler(){
		ResMarriagePataInviteUpdateErrorHandler.__super.call(this);;
	}

	__class(ResMarriagePataInviteUpdateErrorHandler,'net.handler.marriage.ResMarriagePataInviteUpdateErrorHandler',_super);
	var __proto=ResMarriagePataInviteUpdateErrorHandler.prototype;
	// 爬塔邀请
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePataInviteUpdateErrorHandler",msg);
	}

	return ResMarriagePataInviteUpdateErrorHandler;
})(MNetHandler)


//class net.handler.skill.ResUpgradeSkillHandler extends net.MNetHandler
var ResUpgradeSkillHandler=(function(_super){
	function ResUpgradeSkillHandler(){
		ResUpgradeSkillHandler.__super.call(this);;
	}

	__class(ResUpgradeSkillHandler,'net.handler.skill.ResUpgradeSkillHandler',_super);
	var __proto=ResUpgradeSkillHandler.prototype;
	// 对战斗对象使用技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeSkillHandler",msg.skill);
	}

	return ResUpgradeSkillHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勇闯天庭宝箱信息
*/
//class net.message.pata.YCTTBoxBean extends engine.base.data.Bean
var YCTTBoxBean=(function(_super){
	function YCTTBoxBean(){
		/**层 */
		this._layer=0;
		/**是否已经领奖 */
		this._prized=false;
		/**奖励内容 */
		this._prize=null;
		YCTTBoxBean.__super.call(this);
	}

	__class(YCTTBoxBean,'net.message.pata.YCTTBoxBean',_super);
	var __proto=YCTTBoxBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeBoolean(_buf,this._prized);
		this.writeString(_buf,this._prize);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._prized=this.readBoolean(_buf);
		this._prize=this.readString(_buf);
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**是否已经领奖 */
	/**是否已经领奖 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	/**奖励内容 */
	/**奖励内容 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return YCTTBoxBean;
})(Bean)


//class net.handler.dungeon.ResZhiZhunBossGetInfoHandler extends net.MNetHandler
var ResZhiZhunBossGetInfoHandler=(function(_super){
	function ResZhiZhunBossGetInfoHandler(){
		ResZhiZhunBossGetInfoHandler.__super.call(this);;
	}

	__class(ResZhiZhunBossGetInfoHandler,'net.handler.dungeon.ResZhiZhunBossGetInfoHandler',_super);
	var __proto=ResZhiZhunBossGetInfoHandler.prototype;
	// 获取至尊BOSS的数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ZhiZhunBossGetInfoHandler",msg);
	}

	return ResZhiZhunBossGetInfoHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyXilianReplaceErrorHandler extends net.MNetHandler
var ResSoulBoyXilianReplaceErrorHandler=(function(_super){
	function ResSoulBoyXilianReplaceErrorHandler(){
		ResSoulBoyXilianReplaceErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianReplaceErrorHandler,'net.handler.soulboy.ResSoulBoyXilianReplaceErrorHandler',_super);
	var __proto=ResSoulBoyXilianReplaceErrorHandler.prototype;
	// 灵童洗练技能覆盖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianReplaceErrorMessage",msg);
	}

	return ResSoulBoyXilianReplaceErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*在线礼包
*/
//class net.message.welfare.ZaiXianLiBao extends engine.base.data.Bean
var ZaiXianLiBao=(function(_super){
	function ZaiXianLiBao(){
		/**下一个待领取的礼包id,没有就是-1 */
		this._nextId=0;
		/**当前阶段礼包已在线时间，秒 */
		this._onlineSec=null;
		/**上次清理时间 */
		this._lastUpdateTime=null;
		ZaiXianLiBao.__super.call(this);
	}

	__class(ZaiXianLiBao,'net.message.welfare.ZaiXianLiBao',_super);
	var __proto=ZaiXianLiBao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._nextId);
		this.writeLong(_buf,this._onlineSec);
		this.writeLong(_buf,this._lastUpdateTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._nextId=this.readInt(_buf);
		this._onlineSec=this.readLong(_buf);
		this._lastUpdateTime=this.readLong(_buf);
	}

	/**下一个待领取的礼包id,没有就是-1 */
	/**下一个待领取的礼包id,没有就是-1 */
	__getset(0,__proto,'nextId',function(){
		return this._nextId;
		},function(value){
		this._nextId=value;
	});

	/**当前阶段礼包已在线时间，秒 */
	/**当前阶段礼包已在线时间，秒 */
	__getset(0,__proto,'onlineSec',function(){
		return this._onlineSec;
		},function(value){
		this._onlineSec=value;
	});

	/**上次清理时间 */
	/**上次清理时间 */
	__getset(0,__proto,'lastUpdateTime',function(){
		return this._lastUpdateTime;
		},function(value){
		this._lastUpdateTime=value;
	});

	return ZaiXianLiBao;
})(Bean)


//class net.handler.zhuansheng.ResUpdateZhuanShengExpHandler extends net.MNetHandler
var ResUpdateZhuanShengExpHandler=(function(_super){
	function ResUpdateZhuanShengExpHandler(){
		ResUpdateZhuanShengExpHandler.__super.call(this);;
	}

	__class(ResUpdateZhuanShengExpHandler,'net.handler.zhuansheng.ResUpdateZhuanShengExpHandler',_super);
	var __proto=ResUpdateZhuanShengExpHandler.prototype;
	// 更新转生修为
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateZhuanShengExpHandler",msg);
	}

	return ResUpdateZhuanShengExpHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗位置数据
*/
//class net.message.fight.FightObjectInPositionBean extends engine.base.data.Bean
var FightObjectInPositionBean=(function(_super){
	function FightObjectInPositionBean(){
		/**出战序号,0开始 */
		this._index=0;
		/**战斗对象id */
		this._id=0;
		/**战斗对象id[1:宠物][2:机关][3:英雄][4:宝物] */
		this._type=0;
		FightObjectInPositionBean.__super.call(this);
	}

	__class(FightObjectInPositionBean,'net.message.fight.FightObjectInPositionBean',_super);
	var __proto=FightObjectInPositionBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	/**出战序号,0开始 */
	/**出战序号,0开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**战斗对象id */
	/**战斗对象id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**战斗对象id[1:宠物][2:机关][3:英雄][4:宝物] */
	/**战斗对象id[1:宠物][2:机关][3:英雄][4:宝物] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return FightObjectInPositionBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸对象
*/
//class net.message.kingwar.KingWarBean extends engine.base.data.Bean
var KingWarBean=(function(_super){
	function KingWarBean(){
		/**玩家ID */
		this._uid=null;
		/**玩家名字 */
		this._name=null;
		/**玩家段位 */
		this._gradation=0;
		/**玩家的星级 */
		this._star=0;
		/**战斗力 */
		this._fightPower=null;
		/**服务器序号 */
		this._sno=0;
		KingWarBean.__super.call(this);
		this._records=[];
	}

	__class(KingWarBean,'net.message.kingwar.KingWarBean',_super);
	var __proto=KingWarBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gradation);
		this.writeInt(_buf,this._star);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._records.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._records.length;++i_am_tmp_i){
			this._records[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gradation=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._records=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._records[i_am_tmp_i]=this.readBeanInList(_buf,KingWarFightRecoedBean);
		}
		this._sno=this.readInt(_buf);
	}

	/**战斗回放 */
	/**战斗回放 */
	__getset(0,__proto,'records',function(){
		return this._records;
		},function(value){
		this._records=value;
	});

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**玩家段位 */
	/**玩家段位 */
	__getset(0,__proto,'gradation',function(){
		return this._gradation;
		},function(value){
		this._gradation=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**玩家的星级 */
	/**玩家的星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return KingWarBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗每回合理论出手顺序
*/
//class net.message.fight.FightOrderBean extends engine.base.data.Bean
var FightOrderBean=(function(_super){
	function FightOrderBean(){
		/**回合数 */
		this._round=0;
		FightOrderBean.__super.call(this);
		this._orders=[];
	}

	__class(FightOrderBean,'net.message.fight.FightOrderBean',_super);
	var __proto=FightOrderBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._round);
		this.writeInt(_buf,this._orders.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._orders.length;++i_am_tmp_i){
			this.writeInt(_buf,this._orders[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._round=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._orders=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._orders[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**回合数 */
	/**回合数 */
	__getset(0,__proto,'round',function(){
		return this._round;
		},function(value){
		this._round=value;
	});

	/**出手顺序 */
	/**出手顺序 */
	__getset(0,__proto,'orders',function(){
		return this._orders;
		},function(value){
		this._orders=value;
	});

	return FightOrderBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店商品
*/
//class net.message.shop.ShopBean extends engine.base.data.Bean
var ShopBean=(function(_super){
	function ShopBean(){
		/**商店类型 */
		this._type=0;
		ShopBean.__super.call(this);
		this._tabs=[];
	}

	__class(ShopBean,'net.message.shop.ShopBean',_super);
	var __proto=ShopBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._tabs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._tabs.length;++i_am_tmp_i){
			this._tabs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._tabs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._tabs[i_am_tmp_i]=this.readBeanInList(_buf,ShopTabBean);
		}
	}

	/**分页 */
	/**分页 */
	__getset(0,__proto,'tabs',function(){
		return this._tabs;
		},function(value){
		this._tabs=value;
	});

	/**商店类型 */
	/**商店类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ShopBean;
})(Bean)


//class net.handler.marriage.ResMarriageReceiveFlowersHandler extends net.MNetHandler
var ResMarriageReceiveFlowersHandler=(function(_super){
	function ResMarriageReceiveFlowersHandler(){
		ResMarriageReceiveFlowersHandler.__super.call(this);;
	}

	__class(ResMarriageReceiveFlowersHandler,'net.handler.marriage.ResMarriageReceiveFlowersHandler',_super);
	var __proto=ResMarriageReceiveFlowersHandler.prototype;
	// 通知收到花
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageReceiveFlowersHandler",msg);
	}

	return ResMarriageReceiveFlowersHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonGerRankHandler extends net.MNetHandler
var ResGarrisonGerRankHandler=(function(_super){
	function ResGarrisonGerRankHandler(){
		ResGarrisonGerRankHandler.__super.call(this);;
	}

	__class(ResGarrisonGerRankHandler,'net.handler.garrison.ResGarrisonGerRankHandler',_super);
	var __proto=ResGarrisonGerRankHandler.prototype;
	// 获取巡城排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGerRankErrorHandler" ,msg);
	}

	return ResGarrisonGerRankHandler;
})(MNetHandler)


//class net.handler.welfare.ResUpdateWelfareHandler extends net.MNetHandler
var ResUpdateWelfareHandler=(function(_super){
	function ResUpdateWelfareHandler(){
		ResUpdateWelfareHandler.__super.call(this);;
	}

	__class(ResUpdateWelfareHandler,'net.handler.welfare.ResUpdateWelfareHandler',_super);
	var __proto=ResUpdateWelfareHandler.prototype;
	// 福利大厅更新
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateWelfareHandler",msg);
	}

	return ResUpdateWelfareHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeXXHJPrizeErrorHandler extends net.MNetHandler
var ResTakeXXHJPrizeErrorHandler=(function(_super){
	function ResTakeXXHJPrizeErrorHandler(){
		ResTakeXXHJPrizeErrorHandler.__super.call(this);;
	}

	__class(ResTakeXXHJPrizeErrorHandler,'net.handler.pata.ResTakeXXHJPrizeErrorHandler',_super);
	var __proto=ResTakeXXHJPrizeErrorHandler.prototype;
	// 领取星宿幻境奖励
	__proto.action=function(){}
	return ResTakeXXHJPrizeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*BUFF移除
*/
//class net.message.fight.FightBuffRemoveBean extends engine.base.data.Bean
var FightBuffRemoveBean=(function(_super){
	function FightBuffRemoveBean(){
		/**序号 */
		this._index=0;
		/**对象唯一id */
		this._uid=0;
		/**BUFF */
		this._buffID=null;
		FightBuffRemoveBean.__super.call(this);
	}

	__class(FightBuffRemoveBean,'net.message.fight.FightBuffRemoveBean',_super);
	var __proto=FightBuffRemoveBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._uid);
		this.writeLong(_buf,this._buffID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._uid=this.readInt(_buf);
		this._buffID=this.readLong(_buf);
	}

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**对象唯一id */
	/**对象唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**BUFF */
	/**BUFF */
	__getset(0,__proto,'buffID',function(){
		return this._buffID;
		},function(value){
		this._buffID=value;
	});

	return FightBuffRemoveBean;
})(Bean)


//class net.handler.adviser.ResAdviserUpgradeTalentHandler extends net.MNetHandler
var ResAdviserUpgradeTalentHandler=(function(_super){
	function ResAdviserUpgradeTalentHandler(){
		ResAdviserUpgradeTalentHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeTalentHandler,'net.handler.adviser.ResAdviserUpgradeTalentHandler',_super);
	var __proto=ResAdviserUpgradeTalentHandler.prototype;
	// 升级天赋
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResAdviserUpgradeTalentHandler",msg.lv);
	}

	return ResAdviserUpgradeTalentHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateLevelHandler extends net.MNetHandler
var ResUpdateLevelHandler=(function(_super){
	function ResUpdateLevelHandler(){
		ResUpdateLevelHandler.__super.call(this);;
	}

	__class(ResUpdateLevelHandler,'net.handler.user.ResUpdateLevelHandler',_super);
	var __proto=ResUpdateLevelHandler.prototype;
	// 更新自己英雄等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateLevelHandler",msg);
	}

	return ResUpdateLevelHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*寻宝时间
*/
//class net.message.textureHunt.TimeBean extends engine.base.data.Bean
var TimeBean=(function(_super){
	function TimeBean(){
		/**寻宝类型 */
		this._type=0;
		/**寻宝抵达时间戳 */
		this._time=0;
		TimeBean.__super.call(this);
	}

	__class(TimeBean,'net.message.textureHunt.TimeBean',_super);
	var __proto=TimeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._time=this.readInt(_buf);
	}

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**寻宝抵达时间戳 */
	/**寻宝抵达时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return TimeBean;
})(Bean)


//class net.handler.pet.ResAwakePetErrorHandler extends net.MNetHandler
var ResAwakePetErrorHandler=(function(_super){
	function ResAwakePetErrorHandler(){
		ResAwakePetErrorHandler.__super.call(this);;
	}

	__class(ResAwakePetErrorHandler,'net.handler.pet.ResAwakePetErrorHandler',_super);
	var __proto=ResAwakePetErrorHandler.prototype;
	// 宠物觉醒
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResAwakePetErrorHandler",msg.error);
	}

	return ResAwakePetErrorHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookDecomposeErrorHandler extends net.MNetHandler
var ResHandBookDecomposeErrorHandler=(function(_super){
	function ResHandBookDecomposeErrorHandler(){
		ResHandBookDecomposeErrorHandler.__super.call(this);;
	}

	__class(ResHandBookDecomposeErrorHandler,'net.handler.handbook.ResHandBookDecomposeErrorHandler',_super);
	var __proto=ResHandBookDecomposeErrorHandler.prototype;
	// 图鉴分解
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookDecomposeErrorHandler",msg.error);
	}

	return ResHandBookDecomposeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*藏宝图层信息
*/
//class net.message.pata.CBTLayerBean extends engine.base.data.Bean
var CBTLayerBean=(function(_super){
	function CBTLayerBean(){
		/**层 */
		this._layer=0;
		/**星(0星表示首通奖励未领取)*/
		this._star=0;
		/**首通奖励 */
		this._firstPrize=null;
		/**奖励 */
		this._prize=null;
		/**是否领过奖 */
		this._prized=false;
		/**怪物 */
		this._monster=0;
		CBTLayerBean.__super.call(this);
	}

	__class(CBTLayerBean,'net.message.pata.CBTLayerBean',_super);
	var __proto=CBTLayerBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._star);
		this.writeString(_buf,this._firstPrize);
		this.writeString(_buf,this._prize);
		this.writeBoolean(_buf,this._prized);
		this.writeInt(_buf,this._monster);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._firstPrize=this.readString(_buf);
		this._prize=this.readString(_buf);
		this._prized=this.readBoolean(_buf);
		this._monster=this.readInt(_buf);
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**怪物 */
	/**怪物 */
	__getset(0,__proto,'monster',function(){
		return this._monster;
		},function(value){
		this._monster=value;
	});

	/**是否领过奖 */
	/**是否领过奖 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	/**星(0星表示首通奖励未领取)*/
	/**星(0星表示首通奖励未领取)*/
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**首通奖励 */
	/**首通奖励 */
	__getset(0,__proto,'firstPrize',function(){
		return this._firstPrize;
		},function(value){
		this._firstPrize=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return CBTLayerBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*道具
*/
//class net.message.goods.GoodsIdAndIndexBean extends engine.base.data.Bean
var GoodsIdAndIndexBean=(function(_super){
	function GoodsIdAndIndexBean(){
		/**ID */
		this._id=0;
		/**背包下标 */
		this._index=0;
		GoodsIdAndIndexBean.__super.call(this);
	}

	__class(GoodsIdAndIndexBean,'net.message.goods.GoodsIdAndIndexBean',_super);
	var __proto=GoodsIdAndIndexBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**背包下标 */
	/**背包下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return GoodsIdAndIndexBean;
})(Bean)


//class net.handler.marriage.ResMarriageOperationProposeHandler extends net.MNetHandler
var ResMarriageOperationProposeHandler=(function(_super){
	function ResMarriageOperationProposeHandler(){
		ResMarriageOperationProposeHandler.__super.call(this);;
	}

	__class(ResMarriageOperationProposeHandler,'net.handler.marriage.ResMarriageOperationProposeHandler',_super);
	var __proto=ResMarriageOperationProposeHandler.prototype;
	// 接受或者拒绝求婚
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageOperationProposeHandler",msg);
	}

	return ResMarriageOperationProposeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*霸主对象
*/
//class net.message.garrison.GarrisonOverLoadBean extends engine.base.data.Bean
var GarrisonOverLoadBean=(function(_super){
	function GarrisonOverLoadBean(){
		/**名字 */
		this._name=null;
		/**帮会名字 */
		this._legionName=null;
		/**积分 */
		this._integral=0;
		/**总战力 */
		this._fightPower=null;
		/**外形对象 */
		this._appearance=null;
		/**时间 */
		this._time=null;
		GarrisonOverLoadBean.__super.call(this);
		this._adviserBeans=[];
	}

	__class(GarrisonOverLoadBean,'net.message.garrison.GarrisonOverLoadBean',_super);
	var __proto=GarrisonOverLoadBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeString(_buf,this._legionName);
		this.writeInt(_buf,this._integral);
		this.writeLong(_buf,this._fightPower);
		this.writeBean(_buf,this._appearance);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._adviserBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._adviserBeans.length;++i_am_tmp_i){
			this._adviserBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._legionName=this.readString(_buf);
		this._integral=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._appearance=this.readBean(_buf,AppearanceBean);
		this._time=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._adviserBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._adviserBeans[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonAdviserBean);
		}
	}

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**军师 */
	/**军师 */
	__getset(0,__proto,'adviserBeans',function(){
		return this._adviserBeans;
		},function(value){
		this._adviserBeans=value;
	});

	/**帮会名字 */
	/**帮会名字 */
	__getset(0,__proto,'legionName',function(){
		return this._legionName;
		},function(value){
		this._legionName=value;
	});

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**总战力 */
	/**总战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**外形对象 */
	/**外形对象 */
	__getset(0,__proto,'appearance',function(){
		return this._appearance;
		},function(value){
		this._appearance=value;
	});

	/**时间 */
	/**时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return GarrisonOverLoadBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyReliveErrorHandler extends net.MNetHandler
var ResNineHeavyReliveErrorHandler=(function(_super){
	function ResNineHeavyReliveErrorHandler(){
		ResNineHeavyReliveErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyReliveErrorHandler,'net.handler.nineHeavy.ResNineHeavyReliveErrorHandler',_super);
	var __proto=ResNineHeavyReliveErrorHandler.prototype;
	// 玩家给钱复活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyReliveErrorHandler",msg);
	}

	return ResNineHeavyReliveErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleHireHandler extends net.MNetHandler
var ResLegionBattleHireHandler=(function(_super){
	function ResLegionBattleHireHandler(){
		ResLegionBattleHireHandler.__super.call(this);;
	}

	__class(ResLegionBattleHireHandler,'net.handler.gb.ResLegionBattleHireHandler',_super);
	var __proto=ResLegionBattleHireHandler.prototype;
	// 帮会战组队招募
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleHireHandler" ,msg);
	}

	return ResLegionBattleHireHandler;
})(MNetHandler)


//class net.handler.xuannv.ResXiLianFaQiHandler extends net.MNetHandler
var ResXiLianFaQiHandler=(function(_super){
	function ResXiLianFaQiHandler(){
		ResXiLianFaQiHandler.__super.call(this);;
	}

	__class(ResXiLianFaQiHandler,'net.handler.xuannv.ResXiLianFaQiHandler',_super);
	var __proto=ResXiLianFaQiHandler.prototype;
	// 洗练法器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XiLianFaQiHandler",msg);
	}

	return ResXiLianFaQiHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionGuardRewardMessageHandler extends net.MNetHandler
var ResLegionGuardRewardMessageHandler=(function(_super){
	function ResLegionGuardRewardMessageHandler(){
		ResLegionGuardRewardMessageHandler.__super.call(this);;
	}

	__class(ResLegionGuardRewardMessageHandler,'net.handler.legion.ResLegionGuardRewardMessageHandler',_super);
	var __proto=ResLegionGuardRewardMessageHandler.prototype;
	// 请求获得守护每日奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionGuardRewardMessageHandler" ,msg);
	}

	return ResLegionGuardRewardMessageHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengUpdateTaskMessageHandler extends net.MNetHandler
var ResInvestmengUpdateTaskMessageHandler=(function(_super){
	function ResInvestmengUpdateTaskMessageHandler(){
		ResInvestmengUpdateTaskMessageHandler.__super.call(this);;
	}

	__class(ResInvestmengUpdateTaskMessageHandler,'net.handler.investment.ResInvestmengUpdateTaskMessageHandler',_super);
	var __proto=ResInvestmengUpdateTaskMessageHandler.prototype;
	// 请求领取透支计划奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengUpdateTaskMessageErrorHandler",msg);
	}

	return ResInvestmengUpdateTaskMessageHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetHuntInfoHandler extends net.MNetHandler
var ResGetHuntInfoHandler=(function(_super){
	function ResGetHuntInfoHandler(){
		ResGetHuntInfoHandler.__super.call(this);;
	}

	__class(ResGetHuntInfoHandler,'net.handler.textureHunt.ResGetHuntInfoHandler',_super);
	var __proto=ResGetHuntInfoHandler.prototype;
	// 获取寻宝信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetHuntInfoHandler",msg);
	}

	return ResGetHuntInfoHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageProposeHandler extends net.MNetHandler
var ResMarriageProposeHandler=(function(_super){
	function ResMarriageProposeHandler(){
		ResMarriageProposeHandler.__super.call(this);;
	}

	__class(ResMarriageProposeHandler,'net.handler.marriage.ResMarriageProposeHandler',_super);
	var __proto=ResMarriageProposeHandler.prototype;
	// 请求求婚
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResMarriageProposeHandler;
})(MNetHandler)


//class net.handler.jingmai.ResJingMaiUpgradeErrorHandler extends net.MNetHandler
var ResJingMaiUpgradeErrorHandler=(function(_super){
	function ResJingMaiUpgradeErrorHandler(){
		ResJingMaiUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResJingMaiUpgradeErrorHandler,'net.handler.jingmai.ResJingMaiUpgradeErrorHandler',_super);
	var __proto=ResJingMaiUpgradeErrorHandler.prototype;
	// 升级经脉
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("JingMaiUpgradeErrorHandler",msg);
	}

	return ResJingMaiUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleColdHandler extends net.MNetHandler
var ResLegionBattleColdHandler=(function(_super){
	function ResLegionBattleColdHandler(){
		ResLegionBattleColdHandler.__super.call(this);;
	}

	__class(ResLegionBattleColdHandler,'net.handler.gb.ResLegionBattleColdHandler',_super);
	var __proto=ResLegionBattleColdHandler.prototype;
	// 通知开始冷却
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleColdHandler" ,msg);
	}

	return ResLegionBattleColdHandler;
})(MNetHandler)


//class net.handler.fight.ResFightPositionAddErrorHandler extends net.MNetHandler
var ResFightPositionAddErrorHandler=(function(_super){
	function ResFightPositionAddErrorHandler(){
		ResFightPositionAddErrorHandler.__super.call(this);;
	}

	__class(ResFightPositionAddErrorHandler,'net.handler.fight.ResFightPositionAddErrorHandler',_super);
	var __proto=ResFightPositionAddErrorHandler.prototype;
	// 上阵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionAddErrorHandler" ,msg);
	}

	return ResFightPositionAddErrorHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonIllusionErrorHandler extends net.MNetHandler
var ResCommonIllusionErrorHandler=(function(_super){
	function ResCommonIllusionErrorHandler(){
		ResCommonIllusionErrorHandler.__super.call(this);;
	}

	__class(ResCommonIllusionErrorHandler,'net.handler.upgrade.ResCommonIllusionErrorHandler',_super);
	var __proto=ResCommonIllusionErrorHandler.prototype;
	// 通用进阶
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonIllusionErrorHandler",msg);
	}

	return ResCommonIllusionErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResLookPlayerErrorHandler extends net.MNetHandler
var ResLookPlayerErrorHandler=(function(_super){
	function ResLookPlayerErrorHandler(){
		ResLookPlayerErrorHandler.__super.call(this);;
	}

	__class(ResLookPlayerErrorHandler,'net.handler.chat.ResLookPlayerErrorHandler',_super);
	var __proto=ResLookPlayerErrorHandler.prototype;
	// 查看玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LookPlayerErrorHandler",msg.error);
	}

	return ResLookPlayerErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*录像玩家信息
*/
//class net.message.video.VideoPlayerBean extends engine.base.data.Bean
var VideoPlayerBean=(function(_super){
	function VideoPlayerBean(){
		/**名字 */
		this._name=null;
		/**帮会名 */
		this._guildName=null;
		/**战斗力 */
		this._fightPower=null;
		/**战力全服排名或竞技场排名 */
		this._rank=0;
		VideoPlayerBean.__super.call(this);
		this._fitSkills=[];
	}

	__class(VideoPlayerBean,'net.message.video.VideoPlayerBean',_super);
	var __proto=VideoPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeString(_buf,this._guildName);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._rank);
		this.writeInt(_buf,this._fitSkills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fitSkills.length;++i_am_tmp_i){
			this._fitSkills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._guildName=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._rank=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._fitSkills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fitSkills[i_am_tmp_i]=this.readBeanInList(_buf,FitSkillBean);
		}
	}

	/**合体技能 */
	/**合体技能 */
	__getset(0,__proto,'fitSkills',function(){
		return this._fitSkills;
		},function(value){
		this._fitSkills=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**帮会名 */
	/**帮会名 */
	__getset(0,__proto,'guildName',function(){
		return this._guildName;
		},function(value){
		this._guildName=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**战力全服排名或竞技场排名 */
	/**战力全服排名或竞技场排名 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	return VideoPlayerBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖品对象
*/
//class net.message.auction.AuctionRecordBean extends engine.base.data.Bean
var AuctionRecordBean=(function(_super){
	function AuctionRecordBean(){
		/**道具ID */
		this._itemID=0;
		/**道具数量 */
		this._itemNum=0;
		/**到手家价格 */
		this._cost=0;
		/**-1为一口价，其他为竞价 */
		this._spike=0;
		/**结束时间 */
		this._time=null;
		/**玩家名字 */
		this._name=null;
		AuctionRecordBean.__super.call(this);
	}

	__class(AuctionRecordBean,'net.message.auction.AuctionRecordBean',_super);
	var __proto=AuctionRecordBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemID);
		this.writeInt(_buf,this._itemNum);
		this.writeInt(_buf,this._cost);
		this.writeInt(_buf,this._spike);
		this.writeLong(_buf,this._time);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._itemID=this.readInt(_buf);
		this._itemNum=this.readInt(_buf);
		this._cost=this.readInt(_buf);
		this._spike=this.readInt(_buf);
		this._time=this.readLong(_buf);
		this._name=this.readString(_buf);
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'itemID',function(){
		return this._itemID;
		},function(value){
		this._itemID=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**道具数量 */
	/**道具数量 */
	__getset(0,__proto,'itemNum',function(){
		return this._itemNum;
		},function(value){
		this._itemNum=value;
	});

	/**到手家价格 */
	/**到手家价格 */
	__getset(0,__proto,'cost',function(){
		return this._cost;
		},function(value){
		this._cost=value;
	});

	/**-1为一口价，其他为竞价 */
	/**-1为一口价，其他为竞价 */
	__getset(0,__proto,'spike',function(){
		return this._spike;
		},function(value){
		this._spike=value;
	});

	/**结束时间 */
	/**结束时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return AuctionRecordBean;
})(Bean)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomLeaveHandler extends net.MNetHandler
var ResTeamDuplicateRoomLeaveHandler=(function(_super){
	function ResTeamDuplicateRoomLeaveHandler(){
		ResTeamDuplicateRoomLeaveHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomLeaveHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomLeaveHandler',_super);
	var __proto=ResTeamDuplicateRoomLeaveHandler.prototype;
	// 离开房间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomLeaveHandler",msg);
	}

	return ResTeamDuplicateRoomLeaveHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobbedHandler extends net.MNetHandler
var ResEscortRobbedHandler=(function(_super){
	function ResEscortRobbedHandler(){
		ResEscortRobbedHandler.__super.call(this);;
	}

	__class(ResEscortRobbedHandler,'net.handler.escort.ResEscortRobbedHandler',_super);
	var __proto=ResEscortRobbedHandler.prototype;
	// 通知被劫镖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRobbedHandler",msg);
	}

	return ResEscortRobbedHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetLuckRewardInfoHandler extends net.MNetHandler
var ResGetLuckRewardInfoHandler=(function(_super){
	function ResGetLuckRewardInfoHandler(){
		ResGetLuckRewardInfoHandler.__super.call(this);;
	}

	__class(ResGetLuckRewardInfoHandler,'net.handler.textureHunt.ResGetLuckRewardInfoHandler',_super);
	var __proto=ResGetLuckRewardInfoHandler.prototype;
	// 寻宝幸运值奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XunBaoGetLuckRewardInfoHandler",msg);
	}

	return ResGetLuckRewardInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*世界BOSS排行榜对象
*/
//class net.message.worldboss.WorldBossUserRankBean extends engine.base.data.Bean
var WorldBossUserRankBean=(function(_super){
	function WorldBossUserRankBean(){
		/**玩家ID */
		this._uid=null;
		/**伤害 */
		this._injury=null;
		/**名字 */
		this._name=null;
		/**性别 */
		this._gender=0;
		/**职业 */
		this._profession=0;
		WorldBossUserRankBean.__super.call(this);
	}

	__class(WorldBossUserRankBean,'net.message.worldboss.WorldBossUserRankBean',_super);
	var __proto=WorldBossUserRankBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._injury);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._injury=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'injury',function(){
		return this._injury;
		},function(value){
		this._injury=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	return WorldBossUserRankBean;
})(Bean)


//class net.handler.guild.ResGuildExitHandler extends net.MNetHandler
var ResGuildExitHandler=(function(_super){
	function ResGuildExitHandler(){
		ResGuildExitHandler.__super.call(this);;
	}

	__class(ResGuildExitHandler,'net.handler.guild.ResGuildExitHandler',_super);
	var __proto=ResGuildExitHandler.prototype;
	// 退出军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildExitHandler",msg);
	}

	return ResGuildExitHandler;
})(MNetHandler)


//class net.handler.quanfuboss.ResQuanFuBossGetInfoErrorHandler extends net.MNetHandler
var ResQuanFuBossGetInfoErrorHandler=(function(_super){
	function ResQuanFuBossGetInfoErrorHandler(){
		ResQuanFuBossGetInfoErrorHandler.__super.call(this);;
	}

	__class(ResQuanFuBossGetInfoErrorHandler,'net.handler.quanfuboss.ResQuanFuBossGetInfoErrorHandler',_super);
	var __proto=ResQuanFuBossGetInfoErrorHandler.prototype;
	// 获取全服boss信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanFuBossGetInfoErrorHandler",msg);
	}

	return ResQuanFuBossGetInfoErrorHandler;
})(MNetHandler)


//class net.handler.shop.ResUpdateAllShopGoodsBuyTimesHandler extends net.MNetHandler
var ResUpdateAllShopGoodsBuyTimesHandler=(function(_super){
	function ResUpdateAllShopGoodsBuyTimesHandler(){
		ResUpdateAllShopGoodsBuyTimesHandler.__super.call(this);;
	}

	__class(ResUpdateAllShopGoodsBuyTimesHandler,'net.handler.shop.ResUpdateAllShopGoodsBuyTimesHandler',_super);
	var __proto=ResUpdateAllShopGoodsBuyTimesHandler.prototype;
	// 更新所有道具商店商品购买次数限制
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateAllShopGoodsBuyTimesHandler",msg.list);
	}

	return ResUpdateAllShopGoodsBuyTimesHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiRefreshTaskHandler extends net.MNetHandler
var ResChibiRefreshTaskHandler=(function(_super){
	function ResChibiRefreshTaskHandler(){
		ResChibiRefreshTaskHandler.__super.call(this);;
	}

	__class(ResChibiRefreshTaskHandler,'net.handler.chibi.ResChibiRefreshTaskHandler',_super);
	var __proto=ResChibiRefreshTaskHandler.prototype;
	// 刷新赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiRefreshTaskHandler",msg);
	}

	return ResChibiRefreshTaskHandler;
})(MNetHandler)


//class net.handler.equip.ResFuLingGetInfoErrorHandler extends net.MNetHandler
var ResFuLingGetInfoErrorHandler=(function(_super){
	function ResFuLingGetInfoErrorHandler(){
		ResFuLingGetInfoErrorHandler.__super.call(this);;
	}

	__class(ResFuLingGetInfoErrorHandler,'net.handler.equip.ResFuLingGetInfoErrorHandler',_super);
	var __proto=ResFuLingGetInfoErrorHandler.prototype;
	// 附灵信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResFuLingGetInfoErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResBuyXXHJChallengeTimeHandler extends net.MNetHandler
var ResBuyXXHJChallengeTimeHandler=(function(_super){
	function ResBuyXXHJChallengeTimeHandler(){
		ResBuyXXHJChallengeTimeHandler.__super.call(this);;
	}

	__class(ResBuyXXHJChallengeTimeHandler,'net.handler.pata.ResBuyXXHJChallengeTimeHandler',_super);
	var __proto=ResBuyXXHJChallengeTimeHandler.prototype;
	// 购买星宿幻境挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyXXHJChallengeTimeHandler",msg);
	}

	return ResBuyXXHJChallengeTimeHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateScorePrizeHandler extends net.MNetHandler
var ResLegionBattleUpdateScorePrizeHandler=(function(_super){
	function ResLegionBattleUpdateScorePrizeHandler(){
		ResLegionBattleUpdateScorePrizeHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateScorePrizeHandler,'net.handler.gb.ResLegionBattleUpdateScorePrizeHandler',_super);
	var __proto=ResLegionBattleUpdateScorePrizeHandler.prototype;
	// 更新已经领取的积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateScorePrizeHandler " ,msg);
	}

	return ResLegionBattleUpdateScorePrizeHandler;
})(MNetHandler)


//class net.handler.official.ResReceiveOfficialBoxHandler extends net.MNetHandler
var ResReceiveOfficialBoxHandler=(function(_super){
	function ResReceiveOfficialBoxHandler(){
		ResReceiveOfficialBoxHandler.__super.call(this);;
	}

	__class(ResReceiveOfficialBoxHandler,'net.handler.official.ResReceiveOfficialBoxHandler',_super);
	var __proto=ResReceiveOfficialBoxHandler.prototype;
	// 领取官位活跃度宝箱
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveOfficialBoxHandler",msg);
	}

	return ResReceiveOfficialBoxHandler;
})(MNetHandler)


//class net.handler.activities.ResGoldDoubleActUpdateHandler extends net.MNetHandler
var ResGoldDoubleActUpdateHandler=(function(_super){
	function ResGoldDoubleActUpdateHandler(){
		ResGoldDoubleActUpdateHandler.__super.call(this);;
	}

	__class(ResGoldDoubleActUpdateHandler,'net.handler.activities.ResGoldDoubleActUpdateHandler',_super);
	var __proto=ResGoldDoubleActUpdateHandler.prototype;
	// 刀币翻倍活动同步玩家最后投入刀币的位置
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGoldDoubleActUpdateHandler",msg);
	}

	return ResGoldDoubleActUpdateHandler;
})(MNetHandler)


//class net.handler.vip.ResupdateVipLevelHandler extends net.MNetHandler
var ResupdateVipLevelHandler=(function(_super){
	function ResupdateVipLevelHandler(){
		ResupdateVipLevelHandler.__super.call(this);;
	}

	__class(ResupdateVipLevelHandler,'net.handler.vip.ResupdateVipLevelHandler',_super);
	var __proto=ResupdateVipLevelHandler.prototype;
	// vip升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("updateVipLevelHandler",msg.lv);
	}

	return ResupdateVipLevelHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackThroneHandler extends net.MNetHandler
var ResLegionBattleAttackThroneHandler=(function(_super){
	function ResLegionBattleAttackThroneHandler(){
		ResLegionBattleAttackThroneHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackThroneHandler,'net.handler.gb.ResLegionBattleAttackThroneHandler',_super);
	var __proto=ResLegionBattleAttackThroneHandler.prototype;
	// 请求攻击传国玉玺
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackThroneHandler" ,msg);
	}

	return ResLegionBattleAttackThroneHandler;
})(MNetHandler)


//class net.handler.misc.ResWxRechargeHandler extends net.MNetHandler
var ResWxRechargeHandler=(function(_super){
	function ResWxRechargeHandler(){
		ResWxRechargeHandler.__super.call(this);;
	}

	__class(ResWxRechargeHandler,'net.handler.misc.ResWxRechargeHandler',_super);
	var __proto=ResWxRechargeHandler.prototype;
	// 微信充值
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WxRechargeHandler",msg);
	}

	return ResWxRechargeHandler;
})(MNetHandler)


//class net.handler.equip.ResPutUpgradeEquipErrorHandler extends net.MNetHandler
var ResPutUpgradeEquipErrorHandler=(function(_super){
	function ResPutUpgradeEquipErrorHandler(){
		ResPutUpgradeEquipErrorHandler.__super.call(this);;
	}

	__class(ResPutUpgradeEquipErrorHandler,'net.handler.equip.ResPutUpgradeEquipErrorHandler',_super);
	var __proto=ResPutUpgradeEquipErrorHandler.prototype;
	// 穿戴进阶装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutUpgradeEquipErrorHandler",msg.error);
	}

	return ResPutUpgradeEquipErrorHandler;
})(MNetHandler)


//class net.handler.towerFight.ResEnterTowerHandler extends net.MNetHandler
var ResEnterTowerHandler=(function(_super){
	function ResEnterTowerHandler(){
		ResEnterTowerHandler.__super.call(this);;
	}

	__class(ResEnterTowerHandler,'net.handler.towerFight.ResEnterTowerHandler',_super);
	var __proto=ResEnterTowerHandler.prototype;
	// 进入试炼之塔
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TrialTowerHandler",msg);
	}

	return ResEnterTowerHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengGetInfoErrorHandler extends net.MNetHandler
var ResYuanZhengGetInfoErrorHandler=(function(_super){
	function ResYuanZhengGetInfoErrorHandler(){
		ResYuanZhengGetInfoErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengGetInfoErrorHandler,'net.handler.yuanzheng.ResYuanZhengGetInfoErrorHandler',_super);
	var __proto=ResYuanZhengGetInfoErrorHandler.prototype;
	// 获取远征信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengGetInfoErrorHandler",msg);
	}

	return ResYuanZhengGetInfoErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateGetFirstClearanceErrorHandler extends net.MNetHandler
var ResTeamDuplicateGetFirstClearanceErrorHandler=(function(_super){
	function ResTeamDuplicateGetFirstClearanceErrorHandler(){
		ResTeamDuplicateGetFirstClearanceErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateGetFirstClearanceErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateGetFirstClearanceErrorHandler',_super);
	var __proto=ResTeamDuplicateGetFirstClearanceErrorHandler.prototype;
	// 获取首通和最小回合数记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateGetFirstClearanceErrorHandler",msg);
	}

	return ResTeamDuplicateGetFirstClearanceErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamExitHandler extends net.MNetHandler
var ResTeamExitHandler=(function(_super){
	function ResTeamExitHandler(){
		ResTeamExitHandler.__super.call(this);;
	}

	__class(ResTeamExitHandler,'net.handler.team.ResTeamExitHandler',_super);
	var __proto=ResTeamExitHandler.prototype;
	// 退出队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamExitHandler",msg);
	}

	return ResTeamExitHandler;
})(MNetHandler)


//class net.handler.chat.ResChatKanZhuangBiErrorHandler extends net.MNetHandler
var ResChatKanZhuangBiErrorHandler=(function(_super){
	function ResChatKanZhuangBiErrorHandler(){
		ResChatKanZhuangBiErrorHandler.__super.call(this);;
	}

	__class(ResChatKanZhuangBiErrorHandler,'net.handler.chat.ResChatKanZhuangBiErrorHandler',_super);
	var __proto=ResChatKanZhuangBiErrorHandler.prototype;
	// 看别人装逼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatKanZhuangBiErrorHandler",msg);
	}

	return ResChatKanZhuangBiErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateSceneCountHandler extends net.MNetHandler
var ResLegionBattleUpdateSceneCountHandler=(function(_super){
	function ResLegionBattleUpdateSceneCountHandler(){
		ResLegionBattleUpdateSceneCountHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateSceneCountHandler,'net.handler.gb.ResLegionBattleUpdateSceneCountHandler',_super);
	var __proto=ResLegionBattleUpdateSceneCountHandler.prototype;
	// 更新场景同帮人数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateSceneCountHandler" ,msg);
	}

	return ResLegionBattleUpdateSceneCountHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateUpdateAssistHandler extends net.MNetHandler
var ResTeamDuplicateUpdateAssistHandler=(function(_super){
	function ResTeamDuplicateUpdateAssistHandler(){
		ResTeamDuplicateUpdateAssistHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateUpdateAssistHandler,'net.handler.teamDuplicate.ResTeamDuplicateUpdateAssistHandler',_super);
	var __proto=ResTeamDuplicateUpdateAssistHandler.prototype;
	// 更新逐鹿每日助战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateUpdateAssistHandler",msg);
	}

	return ResTeamDuplicateUpdateAssistHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玉玺占领面板信息
*/
//class net.message.gb.LegionBattleAttackThroneRecord extends engine.base.data.Bean
var LegionBattleAttackThroneRecord=(function(_super){
	function LegionBattleAttackThroneRecord(){
		/**服务器序号 */
		this._sno=0;
		/**进攻者 */
		this._name=null;
		/**伤害 */
		this._damage=null;
		/**时间 */
		this._time=null;
		/**是否胜利 */
		this._isSuccess=false;
		LegionBattleAttackThroneRecord.__super.call(this);
	}

	__class(LegionBattleAttackThroneRecord,'net.message.gb.LegionBattleAttackThroneRecord',_super);
	var __proto=LegionBattleAttackThroneRecord.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._sno);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._damage);
		this.writeLong(_buf,this._time);
		this.writeBoolean(_buf,this._isSuccess);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._sno=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._damage=this.readLong(_buf);
		this._time=this.readLong(_buf);
		this._isSuccess=this.readBoolean(_buf);
	}

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**进攻者 */
	/**进攻者 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**是否胜利 */
	/**是否胜利 */
	__getset(0,__proto,'isSuccess',function(){
		return this._isSuccess;
		},function(value){
		this._isSuccess=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'damage',function(){
		return this._damage;
		},function(value){
		this._damage=value;
	});

	/**时间 */
	/**时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return LegionBattleAttackThroneRecord;
})(Bean)


//class net.handler.chibi.ResChibiRefreshTaskErrorHandler extends net.MNetHandler
var ResChibiRefreshTaskErrorHandler=(function(_super){
	function ResChibiRefreshTaskErrorHandler(){
		ResChibiRefreshTaskErrorHandler.__super.call(this);;
	}

	__class(ResChibiRefreshTaskErrorHandler,'net.handler.chibi.ResChibiRefreshTaskErrorHandler',_super);
	var __proto=ResChibiRefreshTaskErrorHandler.prototype;
	// 刷新赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiRefreshTaskErrorHandler",msg);
	}

	return ResChibiRefreshTaskErrorHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionUpperHandler extends net.MNetHandler
var ResAuctionUpperHandler=(function(_super){
	function ResAuctionUpperHandler(){
		ResAuctionUpperHandler.__super.call(this);;
	}

	__class(ResAuctionUpperHandler,'net.handler.auction.ResAuctionUpperHandler',_super);
	var __proto=ResAuctionUpperHandler.prototype;
	// 上架物品
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResAuctionUpperHandler;
})(MNetHandler)


//class net.handler.fight.ResPVPFightOverUnlockErrorHandler extends net.MNetHandler
var ResPVPFightOverUnlockErrorHandler=(function(_super){
	function ResPVPFightOverUnlockErrorHandler(){
		ResPVPFightOverUnlockErrorHandler.__super.call(this);;
	}

	__class(ResPVPFightOverUnlockErrorHandler,'net.handler.fight.ResPVPFightOverUnlockErrorHandler',_super);
	var __proto=ResPVPFightOverUnlockErrorHandler.prototype;
	// pvp战斗结束请求解锁
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PVPFightOverUnlockErrorHandler" ,msg.error);
	}

	return ResPVPFightOverUnlockErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*竞技场玩家
*/
//class net.message.arena.ArenaUserBean extends engine.base.data.Bean
var ArenaUserBean=(function(_super){
	function ArenaUserBean(){
		/**是否是机器人 */
		this._isRobot=false;
		/**最高排名 */
		this._bestRank=0;
		/**排名 */
		this._rank=0;
		/**id */
		this._uid=null;
		/**账号名 */
		this._userName=null;
		/**服务器 */
		this._server=0;
		ArenaUserBean.__super.call(this);
	}

	__class(ArenaUserBean,'net.message.arena.ArenaUserBean',_super);
	var __proto=ArenaUserBean.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isRobot);
		this.writeInt(_buf,this._bestRank);
		this.writeInt(_buf,this._rank);
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._userName);
		this.writeInt(_buf,this._server);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isRobot=this.readBoolean(_buf);
		this._bestRank=this.readInt(_buf);
		this._rank=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._userName=this.readString(_buf);
		this._server=this.readInt(_buf);
	}

	/**排名 */
	/**排名 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**是否是机器人 */
	/**是否是机器人 */
	__getset(0,__proto,'isRobot',function(){
		return this._isRobot;
		},function(value){
		this._isRobot=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**最高排名 */
	/**最高排名 */
	__getset(0,__proto,'bestRank',function(){
		return this._bestRank;
		},function(value){
		this._bestRank=value;
	});

	/**账号名 */
	/**账号名 */
	__getset(0,__proto,'userName',function(){
		return this._userName;
		},function(value){
		this._userName=value;
	});

	/**服务器 */
	/**服务器 */
	__getset(0,__proto,'server',function(){
		return this._server;
		},function(value){
		this._server=value;
	});

	return ArenaUserBean;
})(Bean)


//class net.handler.guild.ResGuildChangeNameErrorHandler extends net.MNetHandler
var ResGuildChangeNameErrorHandler=(function(_super){
	function ResGuildChangeNameErrorHandler(){
		ResGuildChangeNameErrorHandler.__super.call(this);;
	}

	__class(ResGuildChangeNameErrorHandler,'net.handler.guild.ResGuildChangeNameErrorHandler',_super);
	var __proto=ResGuildChangeNameErrorHandler.prototype;
	// 帮会改名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeNameErrorHandler",msg);
	}

	return ResGuildChangeNameErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionUpdateTeamDuplicateMessageHandler extends net.MNetHandler
var ResLegionUpdateTeamDuplicateMessageHandler=(function(_super){
	function ResLegionUpdateTeamDuplicateMessageHandler(){
		ResLegionUpdateTeamDuplicateMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateTeamDuplicateMessageHandler,'net.handler.legion.ResLegionUpdateTeamDuplicateMessageHandler',_super);
	var __proto=ResLegionUpdateTeamDuplicateMessageHandler.prototype;
	// 通知更新帮会副本次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateTeamDuplicateMessageHandler",msg);
	}

	return ResLegionUpdateTeamDuplicateMessageHandler;
})(MNetHandler)


//class net.handler.escort.ResFlushEscortTargetErrorHandler extends net.MNetHandler
var ResFlushEscortTargetErrorHandler=(function(_super){
	function ResFlushEscortTargetErrorHandler(){
		ResFlushEscortTargetErrorHandler.__super.call(this);;
	}

	__class(ResFlushEscortTargetErrorHandler,'net.handler.escort.ResFlushEscortTargetErrorHandler',_super);
	var __proto=ResFlushEscortTargetErrorHandler.prototype;
	// 刷新正在押镖的人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FlushEscortTargetErrorHandler" ,msg);
	}

	return ResFlushEscortTargetErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePromoteHouseReceiveErrorHandler extends net.MNetHandler
var ResMarriagePromoteHouseReceiveErrorHandler=(function(_super){
	function ResMarriagePromoteHouseReceiveErrorHandler(){
		ResMarriagePromoteHouseReceiveErrorHandler.__super.call(this);;
	}

	__class(ResMarriagePromoteHouseReceiveErrorHandler,'net.handler.marriage.ResMarriagePromoteHouseReceiveErrorHandler',_super);
	var __proto=ResMarriagePromoteHouseReceiveErrorHandler.prototype;
	// 升阶房子的进度领取
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePromoteHouseReceiveErrorHandler",msg);
	}

	return ResMarriagePromoteHouseReceiveErrorHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionContendHandler extends net.MNetHandler
var ResAuctionContendHandler=(function(_super){
	function ResAuctionContendHandler(){
		ResAuctionContendHandler.__super.call(this);;
	}

	__class(ResAuctionContendHandler,'net.handler.auction.ResAuctionContendHandler',_super);
	var __proto=ResAuctionContendHandler.prototype;
	// 参与拍卖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionContendHandler",msg);
	}

	return ResAuctionContendHandler;
})(MNetHandler)


//class net.handler.chat.ResChatErrorHandler extends net.MNetHandler
var ResChatErrorHandler=(function(_super){
	function ResChatErrorHandler(){
		ResChatErrorHandler.__super.call(this);;
	}

	__class(ResChatErrorHandler,'net.handler.chat.ResChatErrorHandler',_super);
	var __proto=ResChatErrorHandler.prototype;
	// 发送聊天信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatErrorHandler",msg);
	}

	return ResChatErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonGetOverLoadHandler extends net.MNetHandler
var ResGarrisonGetOverLoadHandler=(function(_super){
	function ResGarrisonGetOverLoadHandler(){
		ResGarrisonGetOverLoadHandler.__super.call(this);;
	}

	__class(ResGarrisonGetOverLoadHandler,'net.handler.garrison.ResGarrisonGetOverLoadHandler',_super);
	var __proto=ResGarrisonGetOverLoadHandler.prototype;
	// 查看霸主
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGetOverLoadHandler" ,msg);
	}

	return ResGarrisonGetOverLoadHandler;
})(MNetHandler)


//class net.handler.escort.ResFlushEscortTargetHandler extends net.MNetHandler
var ResFlushEscortTargetHandler=(function(_super){
	function ResFlushEscortTargetHandler(){
		ResFlushEscortTargetHandler.__super.call(this);;
	}

	__class(ResFlushEscortTargetHandler,'net.handler.escort.ResFlushEscortTargetHandler',_super);
	var __proto=ResFlushEscortTargetHandler.prototype;
	// 刷新正在押镖的人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FlushEscortTargetHandler" ,msg);
	}

	return ResFlushEscortTargetHandler;
})(MNetHandler)


//class net.handler.pet.ResActivePetErrorHandler extends net.MNetHandler
var ResActivePetErrorHandler=(function(_super){
	function ResActivePetErrorHandler(){
		ResActivePetErrorHandler.__super.call(this);;
	}

	__class(ResActivePetErrorHandler,'net.handler.pet.ResActivePetErrorHandler',_super);
	var __proto=ResActivePetErrorHandler.prototype;
	// 激活宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivePetErrorHandler",msg.error);
	}

	return ResActivePetErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*任务
*/
//class net.message.todayrecommend.RecommendTaskBean extends engine.base.data.Bean
var RecommendTaskBean=(function(_super){
	function RecommendTaskBean(){
		/**id */
		this._id=0;
		/**完成状态 */
		this._finish=0;
		RecommendTaskBean.__super.call(this);
	}

	__class(RecommendTaskBean,'net.message.todayrecommend.RecommendTaskBean',_super);
	var __proto=RecommendTaskBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._finish);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._finish=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**完成状态 */
	/**完成状态 */
	__getset(0,__proto,'finish',function(){
		return this._finish;
		},function(value){
		this._finish=value;
	});

	return RecommendTaskBean;
})(Bean)


//class net.handler.yuanzheng.ResYuanZhengChallengeHandler extends net.MNetHandler
var ResYuanZhengChallengeHandler=(function(_super){
	function ResYuanZhengChallengeHandler(){
		ResYuanZhengChallengeHandler.__super.call(this);;
	}

	__class(ResYuanZhengChallengeHandler,'net.handler.yuanzheng.ResYuanZhengChallengeHandler',_super);
	var __proto=ResYuanZhengChallengeHandler.prototype;
	// 远征挑战
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengChallengeHandler",msg);
	}

	return ResYuanZhengChallengeHandler;
})(MNetHandler)


//class net.handler.goods.ResDisposeEquipErrorHandler extends net.MNetHandler
var ResDisposeEquipErrorHandler=(function(_super){
	function ResDisposeEquipErrorHandler(){
		ResDisposeEquipErrorHandler.__super.call(this);;
	}

	__class(ResDisposeEquipErrorHandler,'net.handler.goods.ResDisposeEquipErrorHandler',_super);
	var __proto=ResDisposeEquipErrorHandler.prototype;
	// 分解装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DisposeEquipErrorHandler" ,msg.error);
	}

	return ResDisposeEquipErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpdateTargetHandler extends net.MNetHandler
var ResGarrisonUpdateTargetHandler=(function(_super){
	function ResGarrisonUpdateTargetHandler(){
		ResGarrisonUpdateTargetHandler.__super.call(this);;
	}

	__class(ResGarrisonUpdateTargetHandler,'net.handler.garrison.ResGarrisonUpdateTargetHandler',_super);
	var __proto=ResGarrisonUpdateTargetHandler.prototype;
	// 更新目标
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpdateTargetHandler" ,msg);
	}

	return ResGarrisonUpdateTargetHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerAttackResultHandler extends net.MNetHandler
var ResNineHeavyPlayerAttackResultHandler=(function(_super){
	function ResNineHeavyPlayerAttackResultHandler(){
		ResNineHeavyPlayerAttackResultHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerAttackResultHandler,'net.handler.nineHeavy.ResNineHeavyPlayerAttackResultHandler',_super);
	var __proto=ResNineHeavyPlayerAttackResultHandler.prototype;
	// 玩家攻击的结果
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResNineHeavyPlayerAttackResultHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomCloseFullErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomCloseFullErrorHandler=(function(_super){
	function ResTeamDuplicateRoomCloseFullErrorHandler(){
		ResTeamDuplicateRoomCloseFullErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomCloseFullErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomCloseFullErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomCloseFullErrorHandler.prototype;
	// 满员自动开战和多少秒后自动 的状态修改
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomCloseFullErrorHandler",msg);
	}

	return ResTeamDuplicateRoomCloseFullErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派信息
*/
//class net.message.guild.GuildBean extends engine.base.data.Bean
var GuildBean=(function(_super){
	function GuildBean(){
		/**帮会ID */
		this._uid=null;
		/**等级 */
		this._level=0;
		/**公告 */
		this._notice=null;
		/**自动同意入帮申请 */
		this._autoAgreeApply=false;
		/**是否可签到 */
		this._sign=false;
		/**入会战力要求 */
		this._fightPower=null;
		/**名字 */
		this._name=null;
		GuildBean.__super.call(this);
		this._inviteeList=[];
		this._applicantList=[];
		this._memberList=[];
		this._events=[];
		this._positionEvents=[];
		this._values=[];
		this._myValues=[];
		this._signBoxes=[];
	}

	__class(GuildBean,'net.message.guild.GuildBean',_super);
	var __proto=GuildBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._inviteeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._inviteeList.length;++i_am_tmp_i){
			this._inviteeList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._applicantList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._applicantList.length;++i_am_tmp_i){
			this._applicantList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._memberList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._memberList.length;++i_am_tmp_i){
			this._memberList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._events.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._events.length;++i_am_tmp_i){
			this._events[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._positionEvents.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._positionEvents.length;++i_am_tmp_i){
			this._positionEvents[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._values.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._values.length;++i_am_tmp_i){
			this.writeInt(_buf,this._values[i_am_tmp_i]);
		}
		this.writeString(_buf,this._notice);
		this.writeBoolean(_buf,this._autoAgreeApply);
		this.writeInt(_buf,this._myValues.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._myValues.length;++i_am_tmp_i){
			this.writeInt(_buf,this._myValues[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._signBoxes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._signBoxes.length;++i_am_tmp_i){
			this.writeInt(_buf,this._signBoxes[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._sign);
		this.writeLong(_buf,this._fightPower);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._level=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._inviteeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._inviteeList[i_am_tmp_i]=this.readBeanInList(_buf,GuildMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._applicantList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._applicantList[i_am_tmp_i]=this.readBeanInList(_buf,GuildMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._memberList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._memberList[i_am_tmp_i]=this.readBeanInList(_buf,GuildMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._events=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._events[i_am_tmp_i]=this.readBeanInList(_buf,GuildEventBean);
		}
		size52413035=this.readInt(_buf);
		this._positionEvents=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._positionEvents[i_am_tmp_i]=this.readBeanInList(_buf,GuildEventPositionBean);
		}
		size52413035=this.readInt(_buf);
		this._values=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._values[i_am_tmp_i]=this.readInt(_buf);
		}
		this._notice=this.readString(_buf);
		this._autoAgreeApply=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._myValues=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._myValues[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._signBoxes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._signBoxes[i_am_tmp_i]=this.readInt(_buf);
		}
		this._sign=this.readBoolean(_buf);
		this._fightPower=this.readLong(_buf);
		this._name=this.readString(_buf);
	}

	/**帮会ID */
	/**帮会ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**申请者列表 */
	/**申请者列表 */
	__getset(0,__proto,'applicantList',function(){
		return this._applicantList;
		},function(value){
		this._applicantList=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**职位变更事件 */
	/**职位变更事件 */
	__getset(0,__proto,'positionEvents',function(){
		return this._positionEvents;
		},function(value){
		this._positionEvents=value;
	});

	/**受邀者列表 */
	/**受邀者列表 */
	__getset(0,__proto,'inviteeList',function(){
		return this._inviteeList;
		},function(value){
		this._inviteeList=value;
	});

	/**值列表,枚举参见GuildValueUpdate */
	/**值列表,枚举参见GuildValueUpdate */
	__getset(0,__proto,'values',function(){
		return this._values;
		},function(value){
		this._values=value;
	});

	/**成员列表 */
	/**成员列表 */
	__getset(0,__proto,'memberList',function(){
		return this._memberList;
		},function(value){
		this._memberList=value;
	});

	/**事件 */
	/**事件 */
	__getset(0,__proto,'events',function(){
		return this._events;
		},function(value){
		this._events=value;
	});

	/**签到领奖列表 */
	/**签到领奖列表 */
	__getset(0,__proto,'signBoxes',function(){
		return this._signBoxes;
		},function(value){
		this._signBoxes=value;
	});

	/**公告 */
	/**公告 */
	__getset(0,__proto,'notice',function(){
		return this._notice;
		},function(value){
		this._notice=value;
	});

	/**自动同意入帮申请 */
	/**自动同意入帮申请 */
	__getset(0,__proto,'autoAgreeApply',function(){
		return this._autoAgreeApply;
		},function(value){
		this._autoAgreeApply=value;
	});

	/**自己的值列表,枚举参见GuildMemberValueUpdate */
	/**自己的值列表,枚举参见GuildMemberValueUpdate */
	__getset(0,__proto,'myValues',function(){
		return this._myValues;
		},function(value){
		this._myValues=value;
	});

	/**是否可签到 */
	/**是否可签到 */
	__getset(0,__proto,'sign',function(){
		return this._sign;
		},function(value){
		this._sign=value;
	});

	/**入会战力要求 */
	/**入会战力要求 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return GuildBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyUpdateOhterIntegralHandler extends net.MNetHandler
var ResNineHeavyUpdateOhterIntegralHandler=(function(_super){
	function ResNineHeavyUpdateOhterIntegralHandler(){
		ResNineHeavyUpdateOhterIntegralHandler.__super.call(this);;
	}

	__class(ResNineHeavyUpdateOhterIntegralHandler,'net.handler.nineHeavy.ResNineHeavyUpdateOhterIntegralHandler',_super);
	var __proto=ResNineHeavyUpdateOhterIntegralHandler.prototype;
	// 积分变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyUpdateOhterIntegralHandler",msg);
	}

	return ResNineHeavyUpdateOhterIntegralHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipMakingStoneHandler extends net.MNetHandler
var ResEquipMakingStoneHandler=(function(_super){
	function ResEquipMakingStoneHandler(){
		ResEquipMakingStoneHandler.__super.call(this);;
	}

	__class(ResEquipMakingStoneHandler,'net.handler.equip.ResEquipMakingStoneHandler',_super);
	var __proto=ResEquipMakingStoneHandler.prototype;
	// 合成装备打造石
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipMakingStoneHandler",msg);
	}

	return ResEquipMakingStoneHandler;
})(MNetHandler)


//class net.handler.dungeon.ResQuanMinBossLeaveHandler extends net.MNetHandler
var ResQuanMinBossLeaveHandler=(function(_super){
	function ResQuanMinBossLeaveHandler(){
		ResQuanMinBossLeaveHandler.__super.call(this);;
	}

	__class(ResQuanMinBossLeaveHandler,'net.handler.dungeon.ResQuanMinBossLeaveHandler',_super);
	var __proto=ResQuanMinBossLeaveHandler.prototype;
	// 玩家离开
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanMinBossLeaveHandler",msg);
	}

	return ResQuanMinBossLeaveHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍成员信息
*/
//class net.message.team.TeamMemberBean extends engine.base.data.Bean
var TeamMemberBean=(function(_super){
	function TeamMemberBean(){
		/**ID */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**职务[1:队长][2:普通成员] */
		this._position=0;
		/**战斗力 */
		this._power=null;
		/**等级 */
		this._level=0;
		TeamMemberBean.__super.call(this);
	}

	__class(TeamMemberBean,'net.message.team.TeamMemberBean',_super);
	var __proto=TeamMemberBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._position);
		this.writeLong(_buf,this._power);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._position=this.readInt(_buf);
		this._power=this.readLong(_buf);
		this._level=this.readInt(_buf);
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'power',function(){
		return this._power;
		},function(value){
		this._power=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**职务[1:队长][2:普通成员] */
	/**职务[1:队长][2:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return TeamMemberBean;
})(Bean)


//class net.handler.adviser.ResAdviserUpgradeTalentErrorHandler extends net.MNetHandler
var ResAdviserUpgradeTalentErrorHandler=(function(_super){
	function ResAdviserUpgradeTalentErrorHandler(){
		ResAdviserUpgradeTalentErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeTalentErrorHandler,'net.handler.adviser.ResAdviserUpgradeTalentErrorHandler',_super);
	var __proto=ResAdviserUpgradeTalentErrorHandler.prototype;
	// 升级天赋
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeTalentErrorHandler",msg.error);
	}

	return ResAdviserUpgradeTalentErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveDungeonPrizeHandler extends net.MNetHandler
var ResReceiveDungeonPrizeHandler=(function(_super){
	function ResReceiveDungeonPrizeHandler(){
		ResReceiveDungeonPrizeHandler.__super.call(this);;
	}

	__class(ResReceiveDungeonPrizeHandler,'net.handler.dungeon.ResReceiveDungeonPrizeHandler',_super);
	var __proto=ResReceiveDungeonPrizeHandler.prototype;
	// 领取副本奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveDungeonPrizeHandler",msg);
	}

	return ResReceiveDungeonPrizeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*机器人
*/
//class net.message.user.RobotUserBean extends engine.base.data.Bean
var RobotUserBean=(function(_super){
	function RobotUserBean(){
		/***/
		this._bean=null;
		/***/
		this._hongyan=0;
		/***/
		this._junshi=0;
		/***/
		this._manjiang=0;
		RobotUserBean.__super.call(this);
		this._pets=[];
	}

	__class(RobotUserBean,'net.message.user.RobotUserBean',_super);
	var __proto=RobotUserBean.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._pets.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pets.length;++i_am_tmp_i){
			this.writeInt(_buf,this._pets[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._hongyan);
		this.writeInt(_buf,this._junshi);
		this.writeInt(_buf,this._manjiang);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,AppearanceBean);
		size52413035=this.readInt(_buf);
		this._pets=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pets[i_am_tmp_i]=this.readInt(_buf);
		}
		this._hongyan=this.readInt(_buf);
		this._junshi=this.readInt(_buf);
		this._manjiang=this.readInt(_buf);
	}

	/***/
	/***/
	__getset(0,__proto,'pets',function(){
		return this._pets;
		},function(value){
		this._pets=value;
	});

	/***/
	/***/
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/***/
	/***/
	__getset(0,__proto,'hongyan',function(){
		return this._hongyan;
		},function(value){
		this._hongyan=value;
	});

	/***/
	/***/
	__getset(0,__proto,'junshi',function(){
		return this._junshi;
		},function(value){
		this._junshi=value;
	});

	/***/
	/***/
	__getset(0,__proto,'manjiang',function(){
		return this._manjiang;
		},function(value){
		this._manjiang=value;
	});

	return RobotUserBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*赤壁对象
*/
//class net.message.chibi.ChibiBean extends engine.base.data.Bean
var ChibiBean=(function(_super){
	function ChibiBean(){
		/**用户UID */
		this._uid=null;
		/**最大可以同时进行的任务 */
		this._count=0;
		/**今日可以进行的任务数 */
		this._today=0;
		/**下次恢复需要的时间 */
		this._time=null;
		/**任务总次数 */
		this._times=0;
		ChibiBean.__super.call(this);
		this._task=[];
		this._onTask=[];
	}

	__class(ChibiBean,'net.message.chibi.ChibiBean',_super);
	var __proto=ChibiBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._today);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._task.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._task.length;++i_am_tmp_i){
			this._task[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._onTask.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._onTask.length;++i_am_tmp_i){
			this._onTask[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._count=this.readInt(_buf);
		this._today=this.readInt(_buf);
		this._time=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._task=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._task[i_am_tmp_i]=this.readBeanInList(_buf,ChibiTaskBean);
		}
		size52413035=this.readInt(_buf);
		this._onTask=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._onTask[i_am_tmp_i]=this.readBeanInList(_buf,ChibiTaskBean);
		}
		this._times=this.readInt(_buf);
	}

	/**任务总次数 */
	/**任务总次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**正在进行的任务 */
	/**正在进行的任务 */
	__getset(0,__proto,'onTask',function(){
		return this._onTask;
		},function(value){
		this._onTask=value;
	});

	/**用户UID */
	/**用户UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**可以接取的任务 */
	/**可以接取的任务 */
	__getset(0,__proto,'task',function(){
		return this._task;
		},function(value){
		this._task=value;
	});

	/**下次恢复需要的时间 */
	/**下次恢复需要的时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**最大可以同时进行的任务 */
	/**最大可以同时进行的任务 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**今日可以进行的任务数 */
	/**今日可以进行的任务数 */
	__getset(0,__proto,'today',function(){
		return this._today;
		},function(value){
		this._today=value;
	});

	return ChibiBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的帮会对象
*/
//class net.message.gb.LegionBattleMinionRankBean extends engine.base.data.Bean
var LegionBattleMinionRankBean=(function(_super){
	function LegionBattleMinionRankBean(){
		/**服务器序号 */
		this._sno=0;
		/**帮派名字 */
		this._name=null;
		/**帮派积分 */
		this._score=0;
		/**进入人数 */
		this._count=0;
		LegionBattleMinionRankBean.__super.call(this);
	}

	__class(LegionBattleMinionRankBean,'net.message.gb.LegionBattleMinionRankBean',_super);
	var __proto=LegionBattleMinionRankBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._sno);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._score);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._sno=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._score=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**帮派积分 */
	/**帮派积分 */
	__getset(0,__proto,'score',function(){
		return this._score;
		},function(value){
		this._score=value;
	});

	/**进入人数 */
	/**进入人数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return LegionBattleMinionRankBean;
})(Bean)


//class net.handler.garrison.ResGarrisonRevengeErrorHandler extends net.MNetHandler
var ResGarrisonRevengeErrorHandler=(function(_super){
	function ResGarrisonRevengeErrorHandler(){
		ResGarrisonRevengeErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonRevengeErrorHandler,'net.handler.garrison.ResGarrisonRevengeErrorHandler',_super);
	var __proto=ResGarrisonRevengeErrorHandler.prototype;
	// 复仇
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonRevengeErrorHandler" ,msg);
	}

	return ResGarrisonRevengeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*参与者
*/
//class net.message.fit.FitSetParticipantBean extends engine.base.data.Bean
var FitSetParticipantBean=(function(_super){
	function FitSetParticipantBean(){
		/**参与者类型[1:][2:][3:][4:] */
		this._type=0;
		/**参与者ID */
		this._id=0;
		FitSetParticipantBean.__super.call(this);
	}

	__class(FitSetParticipantBean,'net.message.fit.FitSetParticipantBean',_super);
	var __proto=FitSetParticipantBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
	}

	/**参与者类型[1:][2:][3:][4:] */
	/**参与者类型[1:][2:][3:][4:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**参与者ID */
	/**参与者ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return FitSetParticipantBean;
})(Bean)


//class net.handler.auction.ResAuctionStatusChangeHandler extends net.MNetHandler
var ResAuctionStatusChangeHandler=(function(_super){
	function ResAuctionStatusChangeHandler(){
		ResAuctionStatusChangeHandler.__super.call(this);;
	}

	__class(ResAuctionStatusChangeHandler,'net.handler.auction.ResAuctionStatusChangeHandler',_super);
	var __proto=ResAuctionStatusChangeHandler.prototype;
	// 拍卖行拍卖品状态变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionRemovedHandler");
	}

	return ResAuctionStatusChangeHandler;
})(MNetHandler)


//class net.handler.arena.ResNotifyArenaOpenHandler extends net.MNetHandler
var ResNotifyArenaOpenHandler=(function(_super){
	function ResNotifyArenaOpenHandler(){
		ResNotifyArenaOpenHandler.__super.call(this);;
	}

	__class(ResNotifyArenaOpenHandler,'net.handler.arena.ResNotifyArenaOpenHandler',_super);
	var __proto=ResNotifyArenaOpenHandler.prototype;
	// 通知竞技场开启/关闭
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResNotifyArenaOpenHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomForIDHandler extends net.MNetHandler
var ResTeamDuplicateRoomForIDHandler=(function(_super){
	function ResTeamDuplicateRoomForIDHandler(){
		ResTeamDuplicateRoomForIDHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomForIDHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomForIDHandler',_super);
	var __proto=ResTeamDuplicateRoomForIDHandler.prototype;
	// 玩家通过ID获得房间列表
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomForIDHandler",msg);
	}

	return ResTeamDuplicateRoomForIDHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionFlushExchangeItemMessageErrorHandler extends net.MNetHandler
var ResLegionFlushExchangeItemMessageErrorHandler=(function(_super){
	function ResLegionFlushExchangeItemMessageErrorHandler(){
		ResLegionFlushExchangeItemMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionFlushExchangeItemMessageErrorHandler,'net.handler.legion.ResLegionFlushExchangeItemMessageErrorHandler',_super);
	var __proto=ResLegionFlushExchangeItemMessageErrorHandler.prototype;
	// 请求付费刷新兑换商品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionFlushExchangeItemMessageErrorHandler",msg);
	}

	return ResLegionFlushExchangeItemMessageErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResGodGeneraThisLifeHandler extends net.MNetHandler
var ResGodGeneraThisLifeHandler=(function(_super){
	function ResGodGeneraThisLifeHandler(){
		ResGodGeneraThisLifeHandler.__super.call(this);;
	}

	__class(ResGodGeneraThisLifeHandler,'net.handler.gongCe.ResGodGeneraThisLifeHandler',_super);
	var __proto=ResGodGeneraThisLifeHandler.prototype;
	// 神将现世
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGodGeneraThisLifeHandler",msg);
	}

	return ResGodGeneraThisLifeHandler;
})(MNetHandler)


//class net.handler.gongCe.ResXuYuanHandler extends net.MNetHandler
var ResXuYuanHandler=(function(_super){
	function ResXuYuanHandler(){
		ResXuYuanHandler.__super.call(this);;
	}

	__class(ResXuYuanHandler,'net.handler.gongCe.ResXuYuanHandler',_super);
	var __proto=ResXuYuanHandler.prototype;
	// 许愿
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XuYuanHandler",msg);
	}

	return ResXuYuanHandler;
})(MNetHandler)


//class net.handler.team.ResTeamMarryLeaveHandler extends net.MNetHandler
var ResTeamMarryLeaveHandler=(function(_super){
	function ResTeamMarryLeaveHandler(){
		ResTeamMarryLeaveHandler.__super.call(this);;
	}

	__class(ResTeamMarryLeaveHandler,'net.handler.team.ResTeamMarryLeaveHandler',_super);
	var __proto=ResTeamMarryLeaveHandler.prototype;
	// 请求离开队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamMarryLeaveHandler",msg);
	}

	return ResTeamMarryLeaveHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateGameSystemStatusHandler extends net.MNetHandler
var ResUpdateGameSystemStatusHandler=(function(_super){
	function ResUpdateGameSystemStatusHandler(){
		ResUpdateGameSystemStatusHandler.__super.call(this);;
	}

	__class(ResUpdateGameSystemStatusHandler,'net.handler.user.ResUpdateGameSystemStatusHandler',_super);
	var __proto=ResUpdateGameSystemStatusHandler.prototype;
	// 更新游戏系统状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateGameSystemStatusHandler",msg);
	}

	return ResUpdateGameSystemStatusHandler;
})(MNetHandler)


//class net.handler.misc.ResGetIdeaUpKfQQHandler extends net.MNetHandler
var ResGetIdeaUpKfQQHandler=(function(_super){
	function ResGetIdeaUpKfQQHandler(){
		ResGetIdeaUpKfQQHandler.__super.call(this);;
	}

	__class(ResGetIdeaUpKfQQHandler,'net.handler.misc.ResGetIdeaUpKfQQHandler',_super);
	var __proto=ResGetIdeaUpKfQQHandler.prototype;
	// 获取你提我改客服QQ
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGetIdeaUpKfQQHandler",msg);
	}

	return ResGetIdeaUpKfQQHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonWorshipHandler extends net.MNetHandler
var ResGarrisonWorshipHandler=(function(_super){
	function ResGarrisonWorshipHandler(){
		ResGarrisonWorshipHandler.__super.call(this);;
	}

	__class(ResGarrisonWorshipHandler,'net.handler.garrison.ResGarrisonWorshipHandler',_super);
	var __proto=ResGarrisonWorshipHandler.prototype;
	// 膜拜霸主
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonWorshipHandler" ,msg);
	}

	return ResGarrisonWorshipHandler;
})(MNetHandler)


//class net.handler.misc.ResDayEndHandler extends net.MNetHandler
var ResDayEndHandler=(function(_super){
	function ResDayEndHandler(){
		ResDayEndHandler.__super.call(this);;
	}

	__class(ResDayEndHandler,'net.handler.misc.ResDayEndHandler',_super);
	var __proto=ResDayEndHandler.prototype;
	// 跨天
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DayEndHandler",null);
	}

	return ResDayEndHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleGetStateHandler extends net.MNetHandler
var ResLegionBattleGetStateHandler=(function(_super){
	function ResLegionBattleGetStateHandler(){
		ResLegionBattleGetStateHandler.__super.call(this);;
	}

	__class(ResLegionBattleGetStateHandler,'net.handler.gb.ResLegionBattleGetStateHandler',_super);
	var __proto=ResLegionBattleGetStateHandler.prototype;
	// 获取帮会活动当前状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleGetStateHandler" ,msg);
	}

	return ResLegionBattleGetStateHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChangeGuanQiaDungeonIDHandler extends net.MNetHandler
var ResChangeGuanQiaDungeonIDHandler=(function(_super){
	function ResChangeGuanQiaDungeonIDHandler(){
		ResChangeGuanQiaDungeonIDHandler.__super.call(this);;
	}

	__class(ResChangeGuanQiaDungeonIDHandler,'net.handler.dungeon.ResChangeGuanQiaDungeonIDHandler',_super);
	var __proto=ResChangeGuanQiaDungeonIDHandler.prototype;
	// 切换当前所在关卡副本ID
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeGuanQiaDungeonIDHandler",msg);
	}

	return ResChangeGuanQiaDungeonIDHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyHunUpgradeHandler extends net.MNetHandler
var ResSoulBoyHunUpgradeHandler=(function(_super){
	function ResSoulBoyHunUpgradeHandler(){
		ResSoulBoyHunUpgradeHandler.__super.call(this);;
	}

	__class(ResSoulBoyHunUpgradeHandler,'net.handler.soulboy.ResSoulBoyHunUpgradeHandler',_super);
	var __proto=ResSoulBoyHunUpgradeHandler.prototype;
	// 升级或者替换御魂
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyHunUpgradeHandler",msg);
	}

	return ResSoulBoyHunUpgradeHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetBaoWuRestTimesErrorHandler extends net.MNetHandler
var ResGetBaoWuRestTimesErrorHandler=(function(_super){
	function ResGetBaoWuRestTimesErrorHandler(){
		ResGetBaoWuRestTimesErrorHandler.__super.call(this);;
	}

	__class(ResGetBaoWuRestTimesErrorHandler,'net.handler.textureHunt.ResGetBaoWuRestTimesErrorHandler',_super);
	var __proto=ResGetBaoWuRestTimesErrorHandler.prototype;
	// 获取珍稀宝物剩余次数信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetBaoWuRestTimesErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionLvUpdateMessageHandler extends net.MNetHandler
var ResLegionLvUpdateMessageHandler=(function(_super){
	function ResLegionLvUpdateMessageHandler(){
		ResLegionLvUpdateMessageHandler.__super.call(this);;
	}

	__class(ResLegionLvUpdateMessageHandler,'net.handler.legion.ResLegionLvUpdateMessageHandler',_super);
	var __proto=ResLegionLvUpdateMessageHandler.prototype;
	// 通知帮会等级或者资金变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionLvUpdateMessageHandler" ,msg);
	}

	return ResLegionLvUpdateMessageHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonFindTargetHandler extends net.MNetHandler
var ResGarrisonFindTargetHandler=(function(_super){
	function ResGarrisonFindTargetHandler(){
		ResGarrisonFindTargetHandler.__super.call(this);;
	}

	__class(ResGarrisonFindTargetHandler,'net.handler.garrison.ResGarrisonFindTargetHandler',_super);
	var __proto=ResGarrisonFindTargetHandler.prototype;
	// 寻找对手
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonFindTargetHandler" ,msg);
	}

	return ResGarrisonFindTargetHandler;
})(MNetHandler)


//class net.handler.pet.ResChangePetNameHandler extends net.MNetHandler
var ResChangePetNameHandler=(function(_super){
	function ResChangePetNameHandler(){
		ResChangePetNameHandler.__super.call(this);;
	}

	__class(ResChangePetNameHandler,'net.handler.pet.ResChangePetNameHandler',_super);
	var __proto=ResChangePetNameHandler.prototype;
	// 修改宠物名字
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangePetNameHandler",msg);
	}

	return ResChangePetNameHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeJueWuHandler extends net.MNetHandler
var ResGeneralUpgradeJueWuHandler=(function(_super){
	function ResGeneralUpgradeJueWuHandler(){
		ResGeneralUpgradeJueWuHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeJueWuHandler,'net.handler.general.ResGeneralUpgradeJueWuHandler',_super);
	var __proto=ResGeneralUpgradeJueWuHandler.prototype;
	// 蛮将升级觉悟
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeJueWuHandler" ,msg.lv);
	}

	return ResGeneralUpgradeJueWuHandler;
})(MNetHandler)


//class net.handler.packet.ResUsePetBoxErrorHandler extends net.MNetHandler
var ResUsePetBoxErrorHandler=(function(_super){
	function ResUsePetBoxErrorHandler(){
		ResUsePetBoxErrorHandler.__super.call(this);;
	}

	__class(ResUsePetBoxErrorHandler,'net.handler.packet.ResUsePetBoxErrorHandler',_super);
	var __proto=ResUsePetBoxErrorHandler.prototype;
	// 使用武将盒子
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUsePetBoxErrorHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemUpgradeHandler extends net.MNetHandler
var ResTotemUpgradeHandler=(function(_super){
	function ResTotemUpgradeHandler(){
		ResTotemUpgradeHandler.__super.call(this);;
	}

	__class(ResTotemUpgradeHandler,'net.handler.totem.ResTotemUpgradeHandler',_super);
	var __proto=ResTotemUpgradeHandler.prototype;
	// 升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemUpgradeHandler",msg);
	}

	return ResTotemUpgradeHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateMinionRankHandler extends net.MNetHandler
var ResLegionBattleUpdateMinionRankHandler=(function(_super){
	function ResLegionBattleUpdateMinionRankHandler(){
		ResLegionBattleUpdateMinionRankHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateMinionRankHandler,'net.handler.gb.ResLegionBattleUpdateMinionRankHandler',_super);
	var __proto=ResLegionBattleUpdateMinionRankHandler.prototype;
	// 更新小怪场景排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateMinionRankHandler" ,msg);
	}

	return ResLegionBattleUpdateMinionRankHandler;
})(MNetHandler)


//class net.handler.activities.ResGoldDoubleActErrorHandler extends net.MNetHandler
var ResGoldDoubleActErrorHandler=(function(_super){
	function ResGoldDoubleActErrorHandler(){
		ResGoldDoubleActErrorHandler.__super.call(this);;
	}

	__class(ResGoldDoubleActErrorHandler,'net.handler.activities.ResGoldDoubleActErrorHandler',_super);
	var __proto=ResGoldDoubleActErrorHandler.prototype;
	// 刀币翻倍活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGoldDoubleActErrorHandler",msg);
	}

	return ResGoldDoubleActErrorHandler;
})(MNetHandler)


//class net.handler.packet.ResRemoveItemInPacketHandler extends net.MNetHandler
var ResRemoveItemInPacketHandler=(function(_super){
	function ResRemoveItemInPacketHandler(){
		ResRemoveItemInPacketHandler.__super.call(this);;
	}

	__class(ResRemoveItemInPacketHandler,'net.handler.packet.ResRemoveItemInPacketHandler',_super);
	var __proto=ResRemoveItemInPacketHandler.prototype;
	// 删除包裹中的道具
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RemoveItemInPacketHandler",msg);
	}

	return ResRemoveItemInPacketHandler;
})(MNetHandler)


//class net.handler.treasure.ResTreasureActiveErrorHandler extends net.MNetHandler
var ResTreasureActiveErrorHandler=(function(_super){
	function ResTreasureActiveErrorHandler(){
		ResTreasureActiveErrorHandler.__super.call(this);;
	}

	__class(ResTreasureActiveErrorHandler,'net.handler.treasure.ResTreasureActiveErrorHandler',_super);
	var __proto=ResTreasureActiveErrorHandler.prototype;
	// 宝物激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasureActiveErrorHandler",msg.error);
	}

	return ResTreasureActiveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*锻造
*/
//class net.message.duanzao.DuanZaoBean extends engine.base.data.Bean
var DuanZaoBean=(function(_super){
	function DuanZaoBean(){
		/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
		this._type=0;
		DuanZaoBean.__super.call(this);
		this._grids=[];
	}

	__class(DuanZaoBean,'net.message.duanzao.DuanZaoBean',_super);
	var __proto=DuanZaoBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._grids.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._grids.length;++i_am_tmp_i){
			this.writeInt(_buf,this._grids[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._grids=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._grids[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
	/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**格子等级 */
	/**格子等级 */
	__getset(0,__proto,'grids',function(){
		return this._grids;
		},function(value){
		this._grids=value;
	});

	return DuanZaoBean;
})(Bean)


//class net.handler.arena.ResArenaBuyTimesHandler extends net.MNetHandler
var ResArenaBuyTimesHandler=(function(_super){
	function ResArenaBuyTimesHandler(){
		ResArenaBuyTimesHandler.__super.call(this);;
	}

	__class(ResArenaBuyTimesHandler,'net.handler.arena.ResArenaBuyTimesHandler',_super);
	var __proto=ResArenaBuyTimesHandler.prototype;
	// 购买挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaBuyTimesHandler",msg);
	}

	return ResArenaBuyTimesHandler;
})(MNetHandler)


//class net.handler.team.ResTeamKickErrorHandler extends net.MNetHandler
var ResTeamKickErrorHandler=(function(_super){
	function ResTeamKickErrorHandler(){
		ResTeamKickErrorHandler.__super.call(this);;
	}

	__class(ResTeamKickErrorHandler,'net.handler.team.ResTeamKickErrorHandler',_super);
	var __proto=ResTeamKickErrorHandler.prototype;
	// 队伍踢人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamKickErrorHandler",msg);
	}

	return ResTeamKickErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpgradeErrorHandler extends net.MNetHandler
var ResGarrisonUpgradeErrorHandler=(function(_super){
	function ResGarrisonUpgradeErrorHandler(){
		ResGarrisonUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonUpgradeErrorHandler,'net.handler.garrison.ResGarrisonUpgradeErrorHandler',_super);
	var __proto=ResGarrisonUpgradeErrorHandler.prototype;
	// 升级城门
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpgradeErrorHandler" ,msg);
	}

	return ResGarrisonUpgradeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*每日签到
*/
//class net.message.welfare.MeiRiQianDao extends engine.base.data.Bean
var MeiRiQianDao=(function(_super){
	function MeiRiQianDao(){
		/**登录天数 */
		this._loginDay=0;
		/**上次登录时间 */
		this._lastLoginTime=null;
		MeiRiQianDao.__super.call(this);
		this._receivedId=[];
	}

	__class(MeiRiQianDao,'net.message.welfare.MeiRiQianDao',_super);
	var __proto=MeiRiQianDao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._loginDay);
		this.writeLong(_buf,this._lastLoginTime);
		this.writeInt(_buf,this._receivedId.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._receivedId.length;++i_am_tmp_i){
			this.writeInt(_buf,this._receivedId[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._loginDay=this.readInt(_buf);
		this._lastLoginTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._receivedId=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._receivedId[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**登录天数 */
	/**登录天数 */
	__getset(0,__proto,'loginDay',function(){
		return this._loginDay;
		},function(value){
		this._loginDay=value;
	});

	/**已领取宝箱id */
	/**已领取宝箱id */
	__getset(0,__proto,'receivedId',function(){
		return this._receivedId;
		},function(value){
		this._receivedId=value;
	});

	/**上次登录时间 */
	/**上次登录时间 */
	__getset(0,__proto,'lastLoginTime',function(){
		return this._lastLoginTime;
		},function(value){
		this._lastLoginTime=value;
	});

	return MeiRiQianDao;
})(Bean)


//class net.handler.vip.ResUpdateRechargeHandler extends net.MNetHandler
var ResUpdateRechargeHandler=(function(_super){
	function ResUpdateRechargeHandler(){
		ResUpdateRechargeHandler.__super.call(this);;
	}

	__class(ResUpdateRechargeHandler,'net.handler.vip.ResUpdateRechargeHandler',_super);
	var __proto=ResUpdateRechargeHandler.prototype;
	// 更新累计重置额度
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateRechargeHandler",msg);
	}

	return ResUpdateRechargeHandler;
})(MNetHandler)


//class net.handler.todayrecommend.ResRecommendTaskIntegralRewardHandler extends net.MNetHandler
var ResRecommendTaskIntegralRewardHandler=(function(_super){
	function ResRecommendTaskIntegralRewardHandler(){
		ResRecommendTaskIntegralRewardHandler.__super.call(this);;
	}

	__class(ResRecommendTaskIntegralRewardHandler,'net.handler.todayrecommend.ResRecommendTaskIntegralRewardHandler',_super);
	var __proto=ResRecommendTaskIntegralRewardHandler.prototype;
	// 领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RecommendTaskIntegralRewardHandler",msg);
	}

	return ResRecommendTaskIntegralRewardHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyAttributeUpdateHandler extends net.MNetHandler
var ResSoulBoyAttributeUpdateHandler=(function(_super){
	function ResSoulBoyAttributeUpdateHandler(){
		ResSoulBoyAttributeUpdateHandler.__super.call(this);;
	}

	__class(ResSoulBoyAttributeUpdateHandler,'net.handler.soulboy.ResSoulBoyAttributeUpdateHandler',_super);
	var __proto=ResSoulBoyAttributeUpdateHandler.prototype;
	// 更新属性
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSoulBoyAttributeUpdateHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpgradeWeaponHandler extends net.MNetHandler
var ResFitUpgradeWeaponHandler=(function(_super){
	function ResFitUpgradeWeaponHandler(){
		ResFitUpgradeWeaponHandler.__super.call(this);;
	}

	__class(ResFitUpgradeWeaponHandler,'net.handler.fit.ResFitUpgradeWeaponHandler',_super);
	var __proto=ResFitUpgradeWeaponHandler.prototype;
	// 升级武器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpgradeWeaponHandler" ,msg);
	}

	return ResFitUpgradeWeaponHandler;
})(MNetHandler)


//class net.handler.pet.ResFirePetErrorHandler extends net.MNetHandler
var ResFirePetErrorHandler=(function(_super){
	function ResFirePetErrorHandler(){
		ResFirePetErrorHandler.__super.call(this);;
	}

	__class(ResFirePetErrorHandler,'net.handler.pet.ResFirePetErrorHandler',_super);
	var __proto=ResFirePetErrorHandler.prototype;
	// 革职宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FirePetErrorHandler",msg);
	}

	return ResFirePetErrorHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneUpdateDeadHandler extends net.MNetHandler
var ResSceneUpdateDeadHandler=(function(_super){
	function ResSceneUpdateDeadHandler(){
		ResSceneUpdateDeadHandler.__super.call(this);;
	}

	__class(ResSceneUpdateDeadHandler,'net.handler.scene.ResSceneUpdateDeadHandler',_super);
	var __proto=ResSceneUpdateDeadHandler.prototype;
	// 更新场景对象死亡状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneUpdateDeadHandler",msg);
	}

	return ResSceneUpdateDeadHandler;
})(MNetHandler)


//class net.handler.dungeon.ResBuyQuanMinBossTimesHandler extends net.MNetHandler
var ResBuyQuanMinBossTimesHandler=(function(_super){
	function ResBuyQuanMinBossTimesHandler(){
		ResBuyQuanMinBossTimesHandler.__super.call(this);;
	}

	__class(ResBuyQuanMinBossTimesHandler,'net.handler.dungeon.ResBuyQuanMinBossTimesHandler',_super);
	var __proto=ResBuyQuanMinBossTimesHandler.prototype;
	// 购买全民boss挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyQuanMinBossTimesHandler",msg.quanminBuyTimes);
	}

	return ResBuyQuanMinBossTimesHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetInfoErrorHandler extends net.MNetHandler
var ResArenaGetInfoErrorHandler=(function(_super){
	function ResArenaGetInfoErrorHandler(){
		ResArenaGetInfoErrorHandler.__super.call(this);;
	}

	__class(ResArenaGetInfoErrorHandler,'net.handler.arena.ResArenaGetInfoErrorHandler',_super);
	var __proto=ResArenaGetInfoErrorHandler.prototype;
	// 获取竞技场信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetInfoErrorHandler",msg.error);
	}

	return ResArenaGetInfoErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResTameWildPetHandler extends net.MNetHandler
var ResTameWildPetHandler=(function(_super){
	function ResTameWildPetHandler(){
		ResTameWildPetHandler.__super.call(this);;
	}

	__class(ResTameWildPetHandler,'net.handler.pet.ResTameWildPetHandler',_super);
	var __proto=ResTameWildPetHandler.prototype;
	// 捕获宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TameWildPetHandler",msg);
	}

	return ResTameWildPetHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionOutSquareMessageErrorHandler extends net.MNetHandler
var ResLegionOutSquareMessageErrorHandler=(function(_super){
	function ResLegionOutSquareMessageErrorHandler(){
		ResLegionOutSquareMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionOutSquareMessageErrorHandler,'net.handler.legion.ResLegionOutSquareMessageErrorHandler',_super);
	var __proto=ResLegionOutSquareMessageErrorHandler.prototype;
	// 某个玩家离开广场
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionOutSquareMessageErrorHandler" ,msg);
	}

	return ResLegionOutSquareMessageErrorHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeDestinyHandler extends net.MNetHandler
var ResAdviserUpgradeDestinyHandler=(function(_super){
	function ResAdviserUpgradeDestinyHandler(){
		ResAdviserUpgradeDestinyHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeDestinyHandler,'net.handler.adviser.ResAdviserUpgradeDestinyHandler',_super);
	var __proto=ResAdviserUpgradeDestinyHandler.prototype;
	// 升级天命
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeDestinyHandler",msg);
	}

	return ResAdviserUpgradeDestinyHandler;
})(MNetHandler)


//class net.handler.goodLuck.ResSelectLuckErrorHandler extends net.MNetHandler
var ResSelectLuckErrorHandler=(function(_super){
	function ResSelectLuckErrorHandler(){
		ResSelectLuckErrorHandler.__super.call(this);;
	}

	__class(ResSelectLuckErrorHandler,'net.handler.goodLuck.ResSelectLuckErrorHandler',_super);
	var __proto=ResSelectLuckErrorHandler.prototype;
	// 发送祥瑞事件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SelectLuckErrorHandler",msg);
	}

	return ResSelectLuckErrorHandler;
})(MNetHandler)


//class net.handler.skin.ResUpdateSkinHandler extends net.MNetHandler
var ResUpdateSkinHandler=(function(_super){
	function ResUpdateSkinHandler(){
		ResUpdateSkinHandler.__super.call(this);;
	}

	__class(ResUpdateSkinHandler,'net.handler.skin.ResUpdateSkinHandler',_super);
	var __proto=ResUpdateSkinHandler.prototype;
	// 更新时装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateSkinHandler",msg);
	}

	return ResUpdateSkinHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的参与者对象
*/
//class net.message.gb.LegionBattleOverlordBean extends engine.base.data.Bean
var LegionBattleOverlordBean=(function(_super){
	function LegionBattleOverlordBean(){
		/**uid */
		this._uid=null;
		/**外形 */
		this._appearanceBean=null;
		LegionBattleOverlordBean.__super.call(this);
	}

	__class(LegionBattleOverlordBean,'net.message.gb.LegionBattleOverlordBean',_super);
	var __proto=LegionBattleOverlordBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	return LegionBattleOverlordBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*技能使用排序
*/
//class net.message.setting.SettingSkillSortBean extends engine.base.data.Bean
var SettingSkillSortBean=(function(_super){
	function SettingSkillSortBean(){
		SettingSkillSortBean.__super.call(this);
		this._skills1=[];
		this._skills2=[];
		this._skills3=[];
	}

	__class(SettingSkillSortBean,'net.message.setting.SettingSkillSortBean',_super);
	var __proto=SettingSkillSortBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skills1.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills1.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skills1[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skills2.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills2.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skills2[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skills3.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills3.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skills3[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._skills1=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills1[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._skills2=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills2[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._skills3=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills3[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**英雄1技能列表 */
	/**英雄1技能列表 */
	__getset(0,__proto,'skills1',function(){
		return this._skills1;
		},function(value){
		this._skills1=value;
	});

	/**英雄2技能列表 */
	/**英雄2技能列表 */
	__getset(0,__proto,'skills2',function(){
		return this._skills2;
		},function(value){
		this._skills2=value;
	});

	/**英雄3技能列表 */
	/**英雄3技能列表 */
	__getset(0,__proto,'skills3',function(){
		return this._skills3;
		},function(value){
		this._skills3=value;
	});

	return SettingSkillSortBean;
})(Bean)


//class net.handler.general.ResGeneralUpgradeWeaponErrorHandler extends net.MNetHandler
var ResGeneralUpgradeWeaponErrorHandler=(function(_super){
	function ResGeneralUpgradeWeaponErrorHandler(){
		ResGeneralUpgradeWeaponErrorHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeWeaponErrorHandler,'net.handler.general.ResGeneralUpgradeWeaponErrorHandler',_super);
	var __proto=ResGeneralUpgradeWeaponErrorHandler.prototype;
	// 蛮器升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeWeaponErrorHandler" ,msg);
	}

	return ResGeneralUpgradeWeaponErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResFinishEscortHandler extends net.MNetHandler
var ResFinishEscortHandler=(function(_super){
	function ResFinishEscortHandler(){
		ResFinishEscortHandler.__super.call(this);;
	}

	__class(ResFinishEscortHandler,'net.handler.escort.ResFinishEscortHandler',_super);
	var __proto=ResFinishEscortHandler.prototype;
	// 通知押运结束
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FinishEscortHandler",msg);
	}

	return ResFinishEscortHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗对象-NPC
*/
//class net.message.fight.FightNpcBean extends engine.base.data.Bean
var FightNpcBean=(function(_super){
	function FightNpcBean(){
		/**对象唯一id */
		this._uid=0;
		/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
		this._type=0;
		/**id */
		this._id=0;
		/**血量 */
		this._hp=null;
		/**血量上限 */
		this._hpMax=null;
		/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		/**结束血量 */
		this._ehp=null;
		/**等级 */
		this._level=0;
		/**monstershow */
		this._monstershow=0;
		/**monstershow */
		this._star=0;
		FightNpcBean.__super.call(this);
		this._params=[];
	}

	__class(FightNpcBean,'net.message.fight.FightNpcBean',_super);
	var __proto=FightNpcBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._uid);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._hpMax);
		this.writeInt(_buf,this._position);
		this.writeLong(_buf,this._ehp);
		this.writeInt(_buf,this._params.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._params.length;++i_am_tmp_i){
			this.writeInt(_buf,this._params[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._monstershow);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._hpMax=this.readLong(_buf);
		this._position=this.readInt(_buf);
		this._ehp=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._params=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._params[i_am_tmp_i]=this.readInt(_buf);
		}
		this._level=this.readInt(_buf);
		this._monstershow=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**血量 */
	/**血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**对象唯一id */
	/**对象唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
	/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**monstershow */
	/**monstershow */
	__getset(0,__proto,'monstershow',function(){
		return this._monstershow;
		},function(value){
		this._monstershow=value;
	});

	/**结束血量 */
	/**结束血量 */
	__getset(0,__proto,'ehp',function(){
		return this._ehp;
		},function(value){
		this._ehp=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'hpMax',function(){
		return this._hpMax;
		},function(value){
		this._hpMax=value;
	});

	/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**位置[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**额外参数(不同类型前后端单独核对)*/
	/**额外参数(不同类型前后端单独核对)*/
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	/**monstershow */
	/**monstershow */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return FightNpcBean;
})(Bean)


//class net.handler.miji.ResSetMijiHandler extends net.MNetHandler
var ResSetMijiHandler=(function(_super){
	function ResSetMijiHandler(){
		ResSetMijiHandler.__super.call(this);;
	}

	__class(ResSetMijiHandler,'net.handler.miji.ResSetMijiHandler',_super);
	var __proto=ResSetMijiHandler.prototype;
	// 镶嵌秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSetMijiHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*门对象
*/
//class net.message.garrison.GarrisonDoorBean extends engine.base.data.Bean
var GarrisonDoorBean=(function(_super){
	function GarrisonDoorBean(){
		/**类型[1:][2:][3:][4:] */
		this._type=0;
		/**等级 */
		this._lv=0;
		/**城池奖励可领奖时间戳 */
		this._rewardTime=null;
		/**镇守军师 */
		this._guard=0;
		/**镇守奖励可领奖时间戳 */
		this._guardRewardTime=null;
		GarrisonDoorBean.__super.call(this);
	}

	__class(GarrisonDoorBean,'net.message.garrison.GarrisonDoorBean',_super);
	var __proto=GarrisonDoorBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lv);
		this.writeLong(_buf,this._rewardTime);
		this.writeInt(_buf,this._guard);
		this.writeLong(_buf,this._guardRewardTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._rewardTime=this.readLong(_buf);
		this._guard=this.readInt(_buf);
		this._guardRewardTime=this.readLong(_buf);
	}

	/**类型[1:][2:][3:][4:] */
	/**类型[1:][2:][3:][4:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**城池奖励可领奖时间戳 */
	/**城池奖励可领奖时间戳 */
	__getset(0,__proto,'rewardTime',function(){
		return this._rewardTime;
		},function(value){
		this._rewardTime=value;
	});

	/**镇守军师 */
	/**镇守军师 */
	__getset(0,__proto,'guard',function(){
		return this._guard;
		},function(value){
		this._guard=value;
	});

	/**镇守奖励可领奖时间戳 */
	/**镇守奖励可领奖时间戳 */
	__getset(0,__proto,'guardRewardTime',function(){
		return this._guardRewardTime;
		},function(value){
		this._guardRewardTime=value;
	});

	return GarrisonDoorBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*媚坞奖励信息
*/
//class net.message.gongCe.MeiWuItemBean extends engine.base.data.Bean
var MeiWuItemBean=(function(_super){
	function MeiWuItemBean(){
		/**宝箱的位置 */
		this._position=0;
		/**宝箱的id */
		this._boxId=0;
		MeiWuItemBean.__super.call(this);
	}

	__class(MeiWuItemBean,'net.message.gongCe.MeiWuItemBean',_super);
	var __proto=MeiWuItemBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._position);
		this.writeInt(_buf,this._boxId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._position=this.readInt(_buf);
		this._boxId=this.readInt(_buf);
	}

	/**宝箱的位置 */
	/**宝箱的位置 */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**宝箱的id */
	/**宝箱的id */
	__getset(0,__proto,'boxId',function(){
		return this._boxId;
		},function(value){
		this._boxId=value;
	});

	return MeiWuItemBean;
})(Bean)


//class net.handler.legion.ResLegionSignMessageHandler extends net.MNetHandler
var ResLegionSignMessageHandler=(function(_super){
	function ResLegionSignMessageHandler(){
		ResLegionSignMessageHandler.__super.call(this);;
	}

	__class(ResLegionSignMessageHandler,'net.handler.legion.ResLegionSignMessageHandler',_super);
	var __proto=ResLegionSignMessageHandler.prototype;
	// 签到
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSignMessageHandler" ,msg);
	}

	return ResLegionSignMessageHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpdateGarrisonCountHandler extends net.MNetHandler
var ResGarrisonUpdateGarrisonCountHandler=(function(_super){
	function ResGarrisonUpdateGarrisonCountHandler(){
		ResGarrisonUpdateGarrisonCountHandler.__super.call(this);;
	}

	__class(ResGarrisonUpdateGarrisonCountHandler,'net.handler.garrison.ResGarrisonUpdateGarrisonCountHandler',_super);
	var __proto=ResGarrisonUpdateGarrisonCountHandler.prototype;
	// 更新门数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpdateGarrisonCountHandler" ,msg);
	}

	return ResGarrisonUpdateGarrisonCountHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateGetFirstClearanceHandler extends net.MNetHandler
var ResTeamDuplicateGetFirstClearanceHandler=(function(_super){
	function ResTeamDuplicateGetFirstClearanceHandler(){
		ResTeamDuplicateGetFirstClearanceHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateGetFirstClearanceHandler,'net.handler.teamDuplicate.ResTeamDuplicateGetFirstClearanceHandler',_super);
	var __proto=ResTeamDuplicateGetFirstClearanceHandler.prototype;
	// 获取首通和最小回合数记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateGetFirstClearanceHandler",msg);
	}

	return ResTeamDuplicateGetFirstClearanceHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneChangeHandler extends net.MNetHandler
var ResSceneChangeHandler=(function(_super){
	function ResSceneChangeHandler(){
		ResSceneChangeHandler.__super.call(this);;
	}

	__class(ResSceneChangeHandler,'net.handler.scene.ResSceneChangeHandler',_super);
	var __proto=ResSceneChangeHandler.prototype;
	// 切换场景
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneChangeHandler",msg);
	}

	return ResSceneChangeHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiFinishTaskErrorHandler extends net.MNetHandler
var ResChibiFinishTaskErrorHandler=(function(_super){
	function ResChibiFinishTaskErrorHandler(){
		ResChibiFinishTaskErrorHandler.__super.call(this);;
	}

	__class(ResChibiFinishTaskErrorHandler,'net.handler.chibi.ResChibiFinishTaskErrorHandler',_super);
	var __proto=ResChibiFinishTaskErrorHandler.prototype;
	// 完成赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiFinishTaskErrorHandler",msg);
	}

	return ResChibiFinishTaskErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResChatKanZhuangBiHandler extends net.MNetHandler
var ResChatKanZhuangBiHandler=(function(_super){
	function ResChatKanZhuangBiHandler(){
		ResChatKanZhuangBiHandler.__super.call(this);;
	}

	__class(ResChatKanZhuangBiHandler,'net.handler.chat.ResChatKanZhuangBiHandler',_super);
	var __proto=ResChatKanZhuangBiHandler.prototype;
	// 看别人装逼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatKanZhuangBiHandler",msg);
	}

	return ResChatKanZhuangBiHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyTaletUpgradeHandler extends net.MNetHandler
var ResSoulBoyTaletUpgradeHandler=(function(_super){
	function ResSoulBoyTaletUpgradeHandler(){
		ResSoulBoyTaletUpgradeHandler.__super.call(this);;
	}

	__class(ResSoulBoyTaletUpgradeHandler,'net.handler.soulboy.ResSoulBoyTaletUpgradeHandler',_super);
	var __proto=ResSoulBoyTaletUpgradeHandler.prototype;
	// 升级灵童天赋
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyTaletUpgradeHandler",msg);
	}

	return ResSoulBoyTaletUpgradeHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerAttackErrorHandler extends net.MNetHandler
var ResNineHeavyPlayerAttackErrorHandler=(function(_super){
	function ResNineHeavyPlayerAttackErrorHandler(){
		ResNineHeavyPlayerAttackErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerAttackErrorHandler,'net.handler.nineHeavy.ResNineHeavyPlayerAttackErrorHandler',_super);
	var __proto=ResNineHeavyPlayerAttackErrorHandler.prototype;
	// 玩家攻击
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerAttackErrorHandler",msg);
	}

	return ResNineHeavyPlayerAttackErrorHandler;
})(MNetHandler)


//class net.handler.quanfuboss.ResQuanFuBossBuyTimeHandler extends net.MNetHandler
var ResQuanFuBossBuyTimeHandler=(function(_super){
	function ResQuanFuBossBuyTimeHandler(){
		ResQuanFuBossBuyTimeHandler.__super.call(this);;
	}

	__class(ResQuanFuBossBuyTimeHandler,'net.handler.quanfuboss.ResQuanFuBossBuyTimeHandler',_super);
	var __proto=ResQuanFuBossBuyTimeHandler.prototype;
	// 购买全服boss挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanFuBossBuyTimeHandler",msg);
	}

	return ResQuanFuBossBuyTimeHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomCloseFullHandler extends net.MNetHandler
var ResTeamDuplicateRoomCloseFullHandler=(function(_super){
	function ResTeamDuplicateRoomCloseFullHandler(){
		ResTeamDuplicateRoomCloseFullHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomCloseFullHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomCloseFullHandler',_super);
	var __proto=ResTeamDuplicateRoomCloseFullHandler.prototype;
	// 满员自动开战和多少秒后自动 的状态修改
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomCloseFullHandler",msg);
	}

	return ResTeamDuplicateRoomCloseFullHandler;
})(MNetHandler)


//class net.handler.shop.ResRefreshMystersiousShopErrorHandler extends net.MNetHandler
var ResRefreshMystersiousShopErrorHandler=(function(_super){
	function ResRefreshMystersiousShopErrorHandler(){
		ResRefreshMystersiousShopErrorHandler.__super.call(this);;
	}

	__class(ResRefreshMystersiousShopErrorHandler,'net.handler.shop.ResRefreshMystersiousShopErrorHandler',_super);
	var __proto=ResRefreshMystersiousShopErrorHandler.prototype;
	// 刷新神秘商店
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RefreshMystersiousShopErrorHandler",msg);
	}

	return ResRefreshMystersiousShopErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResBuyHuntTreasureHandler extends net.MNetHandler
var ResBuyHuntTreasureHandler=(function(_super){
	function ResBuyHuntTreasureHandler(){
		ResBuyHuntTreasureHandler.__super.call(this);;
	}

	__class(ResBuyHuntTreasureHandler,'net.handler.gongCe.ResBuyHuntTreasureHandler',_super);
	var __proto=ResBuyHuntTreasureHandler.prototype;
	// 购买寻宝特权
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyHuntTreasureHandler",msg);
	}

	return ResBuyHuntTreasureHandler;
})(MNetHandler)


//class net.handler.wartoken.ResGetCommonWarTokenRewardErrorHandler extends net.MNetHandler
var ResGetCommonWarTokenRewardErrorHandler=(function(_super){
	function ResGetCommonWarTokenRewardErrorHandler(){
		ResGetCommonWarTokenRewardErrorHandler.__super.call(this);;
	}

	__class(ResGetCommonWarTokenRewardErrorHandler,'net.handler.wartoken.ResGetCommonWarTokenRewardErrorHandler',_super);
	var __proto=ResGetCommonWarTokenRewardErrorHandler.prototype;
	// 通用战令领奖消息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetCommonWarTokenRewardErrorHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResSelectLoveHeroErrorHandler extends net.MNetHandler
var ResSelectLoveHeroErrorHandler=(function(_super){
	function ResSelectLoveHeroErrorHandler(){
		ResSelectLoveHeroErrorHandler.__super.call(this);;
	}

	__class(ResSelectLoveHeroErrorHandler,'net.handler.textureHunt.ResSelectLoveHeroErrorHandler',_super);
	var __proto=ResSelectLoveHeroErrorHandler.prototype;
	// 更新幸运寻宝次数
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSelectLoveHeroErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派成员信息
*/
//class net.message.guild.GuildMemberBean extends engine.base.data.Bean
var GuildMemberBean=(function(_super){
	function GuildMemberBean(){
		/**ID */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**职务[1:帮主][2:副帮主][3:普通成员] */
		this._position=0;
		/**战斗力 */
		this._power=null;
		/**离线时间 */
		this._offline=null;
		/**历史贡献 */
		this._contribute=0;
		/**等级 */
		this._level=0;
		GuildMemberBean.__super.call(this);
	}

	__class(GuildMemberBean,'net.message.guild.GuildMemberBean',_super);
	var __proto=GuildMemberBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._position);
		this.writeLong(_buf,this._power);
		this.writeLong(_buf,this._offline);
		this.writeInt(_buf,this._contribute);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._position=this.readInt(_buf);
		this._power=this.readLong(_buf);
		this._offline=this.readLong(_buf);
		this._contribute=this.readInt(_buf);
		this._level=this.readInt(_buf);
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'power',function(){
		return this._power;
		},function(value){
		this._power=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**离线时间 */
	/**离线时间 */
	__getset(0,__proto,'offline',function(){
		return this._offline;
		},function(value){
		this._offline=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**历史贡献 */
	/**历史贡献 */
	__getset(0,__proto,'contribute',function(){
		return this._contribute;
		},function(value){
		this._contribute=value;
	});

	/**职务[1:帮主][2:副帮主][3:普通成员] */
	/**职务[1:帮主][2:副帮主][3:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return GuildMemberBean;
})(Bean)


//class net.handler.fight.ResFightPositionRemoveHandler extends net.MNetHandler
var ResFightPositionRemoveHandler=(function(_super){
	function ResFightPositionRemoveHandler(){
		ResFightPositionRemoveHandler.__super.call(this);;
	}

	__class(ResFightPositionRemoveHandler,'net.handler.fight.ResFightPositionRemoveHandler',_super);
	var __proto=ResFightPositionRemoveHandler.prototype;
	// 下阵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionRemoveHandler" ,msg);
	}

	return ResFightPositionRemoveHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*至尊BOSS
*/
//class net.message.dungeon.ZhiZhunBossBean extends engine.base.data.Bean
var ZhiZhunBossBean=(function(_super){
	function ZhiZhunBossBean(){
		/**副本ID */
		this._id=0;
		/**花费 */
		this._gold=0;
		ZhiZhunBossBean.__super.call(this);
	}

	__class(ZhiZhunBossBean,'net.message.dungeon.ZhiZhunBossBean',_super);
	var __proto=ZhiZhunBossBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._gold);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._gold=this.readInt(_buf);
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**花费 */
	/**花费 */
	__getset(0,__proto,'gold',function(){
		return this._gold;
		},function(value){
		this._gold=value;
	});

	return ZhiZhunBossBean;
})(Bean)


//class net.handler.misc.ResUpdateGMStateHandler extends net.MNetHandler
var ResUpdateGMStateHandler=(function(_super){
	function ResUpdateGMStateHandler(){
		ResUpdateGMStateHandler.__super.call(this);;
	}

	__class(ResUpdateGMStateHandler,'net.handler.misc.ResUpdateGMStateHandler',_super);
	var __proto=ResUpdateGMStateHandler.prototype;
	// 更新GM权限状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateGMStateHandler",msg);
	}

	return ResUpdateGMStateHandler;
})(MNetHandler)


//class net.handler.redEnvelopes.ResUpdateRedEnvelopesHandler extends net.MNetHandler
var ResUpdateRedEnvelopesHandler=(function(_super){
	function ResUpdateRedEnvelopesHandler(){
		ResUpdateRedEnvelopesHandler.__super.call(this);;
	}

	__class(ResUpdateRedEnvelopesHandler,'net.handler.redEnvelopes.ResUpdateRedEnvelopesHandler',_super);
	var __proto=ResUpdateRedEnvelopesHandler.prototype;
	// 更新红包
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateRedEnvelopesHandler",msg);
	}

	return ResUpdateRedEnvelopesHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团兑换对象
*/
//class net.message.legion.LegionExchangeBean extends engine.base.data.Bean
var LegionExchangeBean=(function(_super){
	function LegionExchangeBean(){
		/**商品ID */
		this._id=0;
		/**是否可兑换 */
		this._valid=false;
		LegionExchangeBean.__super.call(this);
	}

	__class(LegionExchangeBean,'net.message.legion.LegionExchangeBean',_super);
	var __proto=LegionExchangeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBoolean(_buf,this._valid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._valid=this.readBoolean(_buf);
	}

	/**商品ID */
	/**商品ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否可兑换 */
	/**是否可兑换 */
	__getset(0,__proto,'valid',function(){
		return this._valid;
		},function(value){
		this._valid=value;
	});

	return LegionExchangeBean;
})(Bean)


//class net.handler.misc.ResGetAttributeInfoErrorHandler extends net.MNetHandler
var ResGetAttributeInfoErrorHandler=(function(_super){
	function ResGetAttributeInfoErrorHandler(){
		ResGetAttributeInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetAttributeInfoErrorHandler,'net.handler.misc.ResGetAttributeInfoErrorHandler',_super);
	var __proto=ResGetAttributeInfoErrorHandler.prototype;
	// 充值
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetAttributeInfoErrorHandler;
})(MNetHandler)


//class net.handler.jingmai.ResJingMaiUpgradeHandler extends net.MNetHandler
var ResJingMaiUpgradeHandler=(function(_super){
	function ResJingMaiUpgradeHandler(){
		ResJingMaiUpgradeHandler.__super.call(this);;
	}

	__class(ResJingMaiUpgradeHandler,'net.handler.jingmai.ResJingMaiUpgradeHandler',_super);
	var __proto=ResJingMaiUpgradeHandler.prototype;
	// 升级经脉
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("JingMaiUpgradeHandler",msg);
	}

	return ResJingMaiUpgradeHandler;
})(MNetHandler)


//class net.handler.gongCe.ResZhunDianErrorHandler extends net.MNetHandler
var ResZhunDianErrorHandler=(function(_super){
	function ResZhunDianErrorHandler(){
		ResZhunDianErrorHandler.__super.call(this);;
	}

	__class(ResZhunDianErrorHandler,'net.handler.gongCe.ResZhunDianErrorHandler',_super);
	var __proto=ResZhunDianErrorHandler.prototype;
	// 准点登陆
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ZhunDianErrorHandler",msg);
	}

	return ResZhunDianErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResGetWorldBossInfoHandler extends net.MNetHandler
var ResGetWorldBossInfoHandler=(function(_super){
	function ResGetWorldBossInfoHandler(){
		ResGetWorldBossInfoHandler.__super.call(this);;
	}

	__class(ResGetWorldBossInfoHandler,'net.handler.worldboss.ResGetWorldBossInfoHandler',_super);
	var __proto=ResGetWorldBossInfoHandler.prototype;
	// 军团首领信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetWorldBossInfoHandler",msg);
	}

	return ResGetWorldBossInfoHandler;
})(MNetHandler)


//class net.handler.rank.ResRankMoBaiHandler extends net.MNetHandler
var ResRankMoBaiHandler=(function(_super){
	function ResRankMoBaiHandler(){
		ResRankMoBaiHandler.__super.call(this);;
	}

	__class(ResRankMoBaiHandler,'net.handler.rank.ResRankMoBaiHandler',_super);
	var __proto=ResRankMoBaiHandler.prototype;
	// 膜拜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RankMoBaiHandler",msg.prize);
	}

	return ResRankMoBaiHandler;
})(MNetHandler)


//class net.handler.examination.ResKejuAnswerExaminationHandler extends net.MNetHandler
var ResKejuAnswerExaminationHandler=(function(_super){
	function ResKejuAnswerExaminationHandler(){
		ResKejuAnswerExaminationHandler.__super.call(this);;
	}

	__class(ResKejuAnswerExaminationHandler,'net.handler.examination.ResKejuAnswerExaminationHandler',_super);
	var __proto=ResKejuAnswerExaminationHandler.prototype;
	// 接受答案
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KejuAnswerExaminationHandler" ,msg);
	}

	return ResKejuAnswerExaminationHandler;
})(MNetHandler)


//class net.handler.todayrecommend.ResRecommendIntegralUpdateHandler extends net.MNetHandler
var ResRecommendIntegralUpdateHandler=(function(_super){
	function ResRecommendIntegralUpdateHandler(){
		ResRecommendIntegralUpdateHandler.__super.call(this);;
	}

	__class(ResRecommendIntegralUpdateHandler,'net.handler.todayrecommend.ResRecommendIntegralUpdateHandler',_super);
	var __proto=ResRecommendIntegralUpdateHandler.prototype;
	// 更新任务
	__proto.action=function(){}
	return ResRecommendIntegralUpdateHandler;
})(MNetHandler)


//class net.handler.gongCe.ResXuYuanErrorHandler extends net.MNetHandler
var ResXuYuanErrorHandler=(function(_super){
	function ResXuYuanErrorHandler(){
		ResXuYuanErrorHandler.__super.call(this);;
	}

	__class(ResXuYuanErrorHandler,'net.handler.gongCe.ResXuYuanErrorHandler',_super);
	var __proto=ResXuYuanErrorHandler.prototype;
	// 许愿
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XuYuanErrorHandler",msg);
	}

	return ResXuYuanErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskRemoveHandler extends net.MNetHandler
var ResTaskRemoveHandler=(function(_super){
	function ResTaskRemoveHandler(){
		ResTaskRemoveHandler.__super.call(this);;
	}

	__class(ResTaskRemoveHandler,'net.handler.task.ResTaskRemoveHandler',_super);
	var __proto=ResTaskRemoveHandler.prototype;
	// 移除任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskRemoveHandler",msg);
	}

	return ResTaskRemoveHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团广场对象
*/
//class net.message.legion.LegionPlayerBean extends engine.base.data.Bean
var LegionPlayerBean=(function(_super){
	function LegionPlayerBean(){
		/**ID */
		this._uid=null;
		/**外形 */
		this._appearanceBean=null;
		LegionPlayerBean.__super.call(this);
	}

	__class(LegionPlayerBean,'net.message.legion.LegionPlayerBean',_super);
	var __proto=LegionPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	return LegionPlayerBean;
})(Bean)


//class net.handler.examination.ResKejuExaminationRankHandler extends net.MNetHandler
var ResKejuExaminationRankHandler=(function(_super){
	function ResKejuExaminationRankHandler(){
		ResKejuExaminationRankHandler.__super.call(this);;
	}

	__class(ResKejuExaminationRankHandler,'net.handler.examination.ResKejuExaminationRankHandler',_super);
	var __proto=ResKejuExaminationRankHandler.prototype;
	// 获取科举的排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KejuExaminationRankHandler" ,msg.rank);
	}

	return ResKejuExaminationRankHandler;
})(MNetHandler)


//class net.handler.investment.ResGuanQiaInvestmentBuyBestMessageHandler extends net.MNetHandler
var ResGuanQiaInvestmentBuyBestMessageHandler=(function(_super){
	function ResGuanQiaInvestmentBuyBestMessageHandler(){
		ResGuanQiaInvestmentBuyBestMessageHandler.__super.call(this);;
	}

	__class(ResGuanQiaInvestmentBuyBestMessageHandler,'net.handler.investment.ResGuanQiaInvestmentBuyBestMessageHandler',_super);
	var __proto=ResGuanQiaInvestmentBuyBestMessageHandler.prototype;
	// 购买关卡投资高级资格成功
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGuanQiaInvestmentBuyBestMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*科举排行榜成员
*/
//class net.message.examination.KejuRankMemberBean extends engine.base.data.Bean
var KejuRankMemberBean=(function(_super){
	function KejuRankMemberBean(){
		/**积分 */
		this._score=0;
		/**答题人的名字 */
		this._name=null;
		/**是否月卡 */
		this._yueKa=false;
		/**是否终身卡 */
		this._zhongShenKa=false;
		KejuRankMemberBean.__super.call(this);
	}

	__class(KejuRankMemberBean,'net.message.examination.KejuRankMemberBean',_super);
	var __proto=KejuRankMemberBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._score);
		this.writeString(_buf,this._name);
		this.writeBoolean(_buf,this._yueKa);
		this.writeBoolean(_buf,this._zhongShenKa);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._score=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._yueKa=this.readBoolean(_buf);
		this._zhongShenKa=this.readBoolean(_buf);
	}

	/**积分 */
	/**积分 */
	__getset(0,__proto,'score',function(){
		return this._score;
		},function(value){
		this._score=value;
	});

	/**是否月卡 */
	/**是否月卡 */
	__getset(0,__proto,'yueKa',function(){
		return this._yueKa;
		},function(value){
		this._yueKa=value;
	});

	/**答题人的名字 */
	/**答题人的名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**是否终身卡 */
	/**是否终身卡 */
	__getset(0,__proto,'zhongShenKa',function(){
		return this._zhongShenKa;
		},function(value){
		this._zhongShenKa=value;
	});

	return KejuRankMemberBean;
})(Bean)


//class net.handler.misc.ResFastOnHookRewardInfoHandler extends net.MNetHandler
var ResFastOnHookRewardInfoHandler=(function(_super){
	function ResFastOnHookRewardInfoHandler(){
		ResFastOnHookRewardInfoHandler.__super.call(this);;
	}

	__class(ResFastOnHookRewardInfoHandler,'net.handler.misc.ResFastOnHookRewardInfoHandler',_super);
	var __proto=ResFastOnHookRewardInfoHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FastOnHookRewardInfoHandler",msg);
	}

	return ResFastOnHookRewardInfoHandler;
})(MNetHandler)


//class net.handler.task.ResTaskGuildSquareResetHandler extends net.MNetHandler
var ResTaskGuildSquareResetHandler=(function(_super){
	function ResTaskGuildSquareResetHandler(){
		ResTaskGuildSquareResetHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquareResetHandler,'net.handler.task.ResTaskGuildSquareResetHandler',_super);
	var __proto=ResTaskGuildSquareResetHandler.prototype;
	// 重置军团广场任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquareResetHandler",msg);
	}

	return ResTaskGuildSquareResetHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*词条信息
*/
//class net.message.godClothes.CiTiaoBean extends engine.base.data.Bean
var CiTiaoBean=(function(_super){
	function CiTiaoBean(){
		/**id */
		this._id=0;
		/**部位 */
		this._grid=0;
		/**等级 */
		this._level=0;
		/**当前经验 */
		this._exp=0;
		/**目前随机的属性 */
		this._attribute=0;
		CiTiaoBean.__super.call(this);
	}

	__class(CiTiaoBean,'net.message.godClothes.CiTiaoBean',_super);
	var __proto=CiTiaoBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._exp);
		this.writeInt(_buf,this._attribute);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._grid=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._exp=this.readInt(_buf);
		this._attribute=this.readInt(_buf);
	}

	/**当前经验 */
	/**当前经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**部位 */
	/**部位 */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**目前随机的属性 */
	/**目前随机的属性 */
	__getset(0,__proto,'attribute',function(){
		return this._attribute;
		},function(value){
		this._attribute=value;
	});

	return CiTiaoBean;
})(Bean)


//class net.handler.qunyinghui.ResQunYingHuiGetFightInfoErrorHandler extends net.MNetHandler
var ResQunYingHuiGetFightInfoErrorHandler=(function(_super){
	function ResQunYingHuiGetFightInfoErrorHandler(){
		ResQunYingHuiGetFightInfoErrorHandler.__super.call(this);;
	}

	__class(ResQunYingHuiGetFightInfoErrorHandler,'net.handler.qunyinghui.ResQunYingHuiGetFightInfoErrorHandler',_super);
	var __proto=ResQunYingHuiGetFightInfoErrorHandler.prototype;
	// 群英会获取战斗信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiGetFightInfoErrorHandler",msg);
	}

	return ResQunYingHuiGetFightInfoErrorHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetParticipantHandler extends net.MNetHandler
var ResFitSetParticipantHandler=(function(_super){
	function ResFitSetParticipantHandler(){
		ResFitSetParticipantHandler.__super.call(this);;
	}

	__class(ResFitSetParticipantHandler,'net.handler.fit.ResFitSetParticipantHandler',_super);
	var __proto=ResFitSetParticipantHandler.prototype;
	// 设置合体参与者
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetParticipantHandler" ,msg);
	}

	return ResFitSetParticipantHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetFightRecordErrorHandler extends net.MNetHandler
var ResArenaGetFightRecordErrorHandler=(function(_super){
	function ResArenaGetFightRecordErrorHandler(){
		ResArenaGetFightRecordErrorHandler.__super.call(this);;
	}

	__class(ResArenaGetFightRecordErrorHandler,'net.handler.arena.ResArenaGetFightRecordErrorHandler',_super);
	var __proto=ResArenaGetFightRecordErrorHandler.prototype;
	// 获取竞技场战斗记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetFightRecordErrorHandler",msg);
	}

	return ResArenaGetFightRecordErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskCleanHandler extends net.MNetHandler
var ResTaskCleanHandler=(function(_super){
	function ResTaskCleanHandler(){
		ResTaskCleanHandler.__super.call(this);;
	}

	__class(ResTaskCleanHandler,'net.handler.task.ResTaskCleanHandler',_super);
	var __proto=ResTaskCleanHandler.prototype;
	// 移除任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskCleanHandler",msg);
	}

	return ResTaskCleanHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的帮会对象
*/
//class net.message.gb.LegionBattleKingRankBean extends engine.base.data.Bean
var LegionBattleKingRankBean=(function(_super){
	function LegionBattleKingRankBean(){
		/**帮派名字 */
		this._name=null;
		/**占领时长 */
		this._time=0;
		/**服务器序号 */
		this._sno=0;
		LegionBattleKingRankBean.__super.call(this);
	}

	__class(LegionBattleKingRankBean,'net.message.gb.LegionBattleKingRankBean',_super);
	var __proto=LegionBattleKingRankBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._time=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**占领时长 */
	/**占领时长 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return LegionBattleKingRankBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团守护对象
*/
//class net.message.legion.LegionGuardBean extends engine.base.data.Bean
var LegionGuardBean=(function(_super){
	function LegionGuardBean(){
		/**等级 */
		this._lv=0;
		/**当前点数 */
		this._num=0;
		/**今日的活跃点 */
		this._today=0;
		LegionGuardBean.__super.call(this);
		this._reward=[];
	}

	__class(LegionGuardBean,'net.message.legion.LegionGuardBean',_super);
	var __proto=LegionGuardBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._today);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this.writeInt(_buf,this._reward[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._today=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前点数 */
	/**当前点数 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**今日的活跃点 */
	/**今日的活跃点 */
	__getset(0,__proto,'today',function(){
		return this._today;
		},function(value){
		this._today=value;
	});

	/**已经领取的活跃度奖励 */
	/**已经领取的活跃度奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return LegionGuardBean;
})(Bean)


//class net.handler.upgrade.ResUpgradeCommonSkillLevelHandler extends net.MNetHandler
var ResUpgradeCommonSkillLevelHandler=(function(_super){
	function ResUpgradeCommonSkillLevelHandler(){
		ResUpgradeCommonSkillLevelHandler.__super.call(this);;
	}

	__class(ResUpgradeCommonSkillLevelHandler,'net.handler.upgrade.ResUpgradeCommonSkillLevelHandler',_super);
	var __proto=ResUpgradeCommonSkillLevelHandler.prototype;
	// 升级通用进阶技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeCommonSkillLevelHandler",msg);
	}

	return ResUpgradeCommonSkillLevelHandler;
})(MNetHandler)


//class net.handler.wartoken.ResBuyWarTokenLevelHandler extends net.MNetHandler
var ResBuyWarTokenLevelHandler=(function(_super){
	function ResBuyWarTokenLevelHandler(){
		ResBuyWarTokenLevelHandler.__super.call(this);;
	}

	__class(ResBuyWarTokenLevelHandler,'net.handler.wartoken.ResBuyWarTokenLevelHandler',_super);
	var __proto=ResBuyWarTokenLevelHandler.prototype;
	// 购买三国令等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyWarTokenLevelHandler",msg);
	}

	return ResBuyWarTokenLevelHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爵位
*/
//class net.message.juewei.JueWeiBean extends engine.base.data.Bean
var JueWeiBean=(function(_super){
	function JueWeiBean(){
		/**爵位等级 */
		this._lv=0;
		JueWeiBean.__super.call(this);
		this._attributes=[];
	}

	__class(JueWeiBean,'net.message.juewei.JueWeiBean',_super);
	var __proto=JueWeiBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	/**爵位等级 */
	/**爵位等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**属性列表 */
	/**属性列表 */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	return JueWeiBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*排行榜玩家
*/
//class net.message.rank.RankUserBean extends engine.base.data.Bean
var RankUserBean=(function(_super){
	function RankUserBean(){
		/**服务器 */
		this._server=0;
		/**服务器序号 */
		this._sno=0;
		/**名字 */
		this._name=null;
		/**等级 */
		this._level=0;
		/**vip等级 */
		this._vip=0;
		/**战力 */
		this._fightPower=null;
		/**是否月卡 */
		this._isYueKa=false;
		/**是否终生卡 */
		this._isZhongShengKa=false;
		RankUserBean.__super.call(this);
		this._params=[];
	}

	__class(RankUserBean,'net.message.rank.RankUserBean',_super);
	var __proto=RankUserBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._server);
		this.writeInt(_buf,this._sno);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._vip);
		this.writeLong(_buf,this._fightPower);
		this.writeBoolean(_buf,this._isYueKa);
		this.writeBoolean(_buf,this._isZhongShengKa);
		this.writeInt(_buf,this._params.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._params.length;++i_am_tmp_i){
			this.writeLong(_buf,this._params[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._server=this.readInt(_buf);
		this._sno=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
		this._vip=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._isYueKa=this.readBoolean(_buf);
		this._isZhongShengKa=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._params=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._params[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**服务器 */
	/**服务器 */
	__getset(0,__proto,'server',function(){
		return this._server;
		},function(value){
		this._server=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**是否月卡 */
	/**是否月卡 */
	__getset(0,__proto,'isYueKa',function(){
		return this._isYueKa;
		},function(value){
		this._isYueKa=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**是否终生卡 */
	/**是否终生卡 */
	__getset(0,__proto,'isZhongShengKa',function(){
		return this._isZhongShengKa;
		},function(value){
		this._isZhongShengKa=value;
	});

	/**vip等级 */
	/**vip等级 */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return RankUserBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*猎命
*/
//class net.message.lieming.LieMingBean extends engine.base.data.Bean
var LieMingBean=(function(_super){
	function LieMingBean(){
		/**猎命等级 */
		this._lv=0;
		LieMingBean.__super.call(this);
	}

	__class(LieMingBean,'net.message.lieming.LieMingBean',_super);
	var __proto=LieMingBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	/**猎命等级 */
	/**猎命等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return LieMingBean;
})(Bean)


//class net.handler.guild.ResGuildChangePositionHandler extends net.MNetHandler
var ResGuildChangePositionHandler=(function(_super){
	function ResGuildChangePositionHandler(){
		ResGuildChangePositionHandler.__super.call(this);;
	}

	__class(ResGuildChangePositionHandler,'net.handler.guild.ResGuildChangePositionHandler',_super);
	var __proto=ResGuildChangePositionHandler.prototype;
	// 修改职位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangePositionErrorHandler",msg);
	}

	return ResGuildChangePositionHandler;
})(MNetHandler)


//class net.handler.shop.ResShopBuyHandler extends net.MNetHandler
var ResShopBuyHandler=(function(_super){
	function ResShopBuyHandler(){
		ResShopBuyHandler.__super.call(this);;
	}

	__class(ResShopBuyHandler,'net.handler.shop.ResShopBuyHandler',_super);
	var __proto=ResShopBuyHandler.prototype;
	// 购买商店商品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ShopBuyHandler",msg);
	}

	return ResShopBuyHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageGetTeammateSkinHandler extends net.MNetHandler
var ResMarriageGetTeammateSkinHandler=(function(_super){
	function ResMarriageGetTeammateSkinHandler(){
		ResMarriageGetTeammateSkinHandler.__super.call(this);;
	}

	__class(ResMarriageGetTeammateSkinHandler,'net.handler.marriage.ResMarriageGetTeammateSkinHandler',_super);
	var __proto=ResMarriageGetTeammateSkinHandler.prototype;
	// 拉取伴侣外形
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageGetTeammateSkinHandler",msg.skin);
	}

	return ResMarriageGetTeammateSkinHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionIntoSquareMessageHandler extends net.MNetHandler
var ResLegionIntoSquareMessageHandler=(function(_super){
	function ResLegionIntoSquareMessageHandler(){
		ResLegionIntoSquareMessageHandler.__super.call(this);;
	}

	__class(ResLegionIntoSquareMessageHandler,'net.handler.legion.ResLegionIntoSquareMessageHandler',_super);
	var __proto=ResLegionIntoSquareMessageHandler.prototype;
	// 请求进入广场
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionIntoSquareMessageHandler" ,msg);
	}

	return ResLegionIntoSquareMessageHandler;
})(MNetHandler)


//class net.handler.task.ResTaskGuildSquareTakePrizeHandler extends net.MNetHandler
var ResTaskGuildSquareTakePrizeHandler=(function(_super){
	function ResTaskGuildSquareTakePrizeHandler(){
		ResTaskGuildSquareTakePrizeHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquareTakePrizeHandler,'net.handler.task.ResTaskGuildSquareTakePrizeHandler',_super);
	var __proto=ResTaskGuildSquareTakePrizeHandler.prototype;
	// 领取军团广场任务奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquareTakePrizeHandler",msg);
	}

	return ResTaskGuildSquareTakePrizeHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeYCTTPrizeHandler extends net.MNetHandler
var ResTakeYCTTPrizeHandler=(function(_super){
	function ResTakeYCTTPrizeHandler(){
		ResTakeYCTTPrizeHandler.__super.call(this);;
	}

	__class(ResTakeYCTTPrizeHandler,'net.handler.pata.ResTakeYCTTPrizeHandler',_super);
	var __proto=ResTakeYCTTPrizeHandler.prototype;
	// 领取勇闯天庭奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeYCTTPrizeHandler",msg);
	}

	return ResTakeYCTTPrizeHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralSurmountErrorHandler extends net.MNetHandler
var ResGeneralSurmountErrorHandler=(function(_super){
	function ResGeneralSurmountErrorHandler(){
		ResGeneralSurmountErrorHandler.__super.call(this);;
	}

	__class(ResGeneralSurmountErrorHandler,'net.handler.general.ResGeneralSurmountErrorHandler',_super);
	var __proto=ResGeneralSurmountErrorHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralSurmountErrorHandler" ,msg);
	}

	return ResGeneralSurmountErrorHandler;
})(MNetHandler)


//class net.handler.xuannv.ResUpdateXuanNvOverTimeHandler extends net.MNetHandler
var ResUpdateXuanNvOverTimeHandler=(function(_super){
	function ResUpdateXuanNvOverTimeHandler(){
		ResUpdateXuanNvOverTimeHandler.__super.call(this);;
	}

	__class(ResUpdateXuanNvOverTimeHandler,'net.handler.xuannv.ResUpdateXuanNvOverTimeHandler',_super);
	var __proto=ResUpdateXuanNvOverTimeHandler.prototype;
	// 机关过期时间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateXuanNvOverTimeHandler",msg);
	}

	return ResUpdateXuanNvOverTimeHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetEquipGemHandler extends net.MNetHandler
var ResFitSetEquipGemHandler=(function(_super){
	function ResFitSetEquipGemHandler(){
		ResFitSetEquipGemHandler.__super.call(this);;
	}

	__class(ResFitSetEquipGemHandler,'net.handler.fit.ResFitSetEquipGemHandler',_super);
	var __proto=ResFitSetEquipGemHandler.prototype;
	// 设置合体装备宝石
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetEquipGemHandler" ,msg);
	}

	return ResFitSetEquipGemHandler;
})(MNetHandler)


//class net.handler.skill.ResUpgradeHeroSkillHandler extends net.MNetHandler
var ResUpgradeHeroSkillHandler=(function(_super){
	function ResUpgradeHeroSkillHandler(){
		ResUpgradeHeroSkillHandler.__super.call(this);;
	}

	__class(ResUpgradeHeroSkillHandler,'net.handler.skill.ResUpgradeHeroSkillHandler',_super);
	var __proto=ResUpgradeHeroSkillHandler.prototype;
	// 升级英雄技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeHeroSkillHandler",msg);
	}

	return ResUpgradeHeroSkillHandler;
})(MNetHandler)


//class net.handler.chat.ResChatNeedHelpErrorHandler extends net.MNetHandler
var ResChatNeedHelpErrorHandler=(function(_super){
	function ResChatNeedHelpErrorHandler(){
		ResChatNeedHelpErrorHandler.__super.call(this);;
	}

	__class(ResChatNeedHelpErrorHandler,'net.handler.chat.ResChatNeedHelpErrorHandler',_super);
	var __proto=ResChatNeedHelpErrorHandler.prototype;
	// 帮助关卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatNeedHelpErrorHandler",msg);
	}

	return ResChatNeedHelpErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResUpdateSpecialActListHandler extends net.MNetHandler
var ResUpdateSpecialActListHandler=(function(_super){
	function ResUpdateSpecialActListHandler(){
		ResUpdateSpecialActListHandler.__super.call(this);;
	}

	__class(ResUpdateSpecialActListHandler,'net.handler.activities.ResUpdateSpecialActListHandler',_super);
	var __proto=ResUpdateSpecialActListHandler.prototype;
	// 推送当前开放中的特殊活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResUpdateSpecialActListHandler",msg);
	}

	return ResUpdateSpecialActListHandler;
})(MNetHandler)


//class net.handler.activities.ResRechargeTurntableHandler extends net.MNetHandler
var ResRechargeTurntableHandler=(function(_super){
	function ResRechargeTurntableHandler(){
		ResRechargeTurntableHandler.__super.call(this);;
	}

	__class(ResRechargeTurntableHandler,'net.handler.activities.ResRechargeTurntableHandler',_super);
	var __proto=ResRechargeTurntableHandler.prototype;
	// 充值返利活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResRechargeTurntableHandler",msg);
	}

	return ResRechargeTurntableHandler;
})(MNetHandler)


//class net.handler.gongCe.ResSelectQingWangRewardHandler extends net.MNetHandler
var ResSelectQingWangRewardHandler=(function(_super){
	function ResSelectQingWangRewardHandler(){
		ResSelectQingWangRewardHandler.__super.call(this);;
	}

	__class(ResSelectQingWangRewardHandler,'net.handler.gongCe.ResSelectQingWangRewardHandler',_super);
	var __proto=ResSelectQingWangRewardHandler.prototype;
	// 勤王特供
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSelectQingWangReward",msg);
	}

	return ResSelectQingWangRewardHandler;
})(MNetHandler)


//class net.handler.equip.ResUpGradeEquipErrorHandler extends net.MNetHandler
var ResUpGradeEquipErrorHandler=(function(_super){
	function ResUpGradeEquipErrorHandler(){
		ResUpGradeEquipErrorHandler.__super.call(this);;
	}

	__class(ResUpGradeEquipErrorHandler,'net.handler.equip.ResUpGradeEquipErrorHandler',_super);
	var __proto=ResUpGradeEquipErrorHandler.prototype;
	// 升级圣甲圣武
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpGradeEquipErrorHandler",msg);
	}

	return ResUpGradeEquipErrorHandler;
})(MNetHandler)


//class net.handler.shop.ResShopBuyErrorHandler extends net.MNetHandler
var ResShopBuyErrorHandler=(function(_super){
	function ResShopBuyErrorHandler(){
		ResShopBuyErrorHandler.__super.call(this);;
	}

	__class(ResShopBuyErrorHandler,'net.handler.shop.ResShopBuyErrorHandler',_super);
	var __proto=ResShopBuyErrorHandler.prototype;
	// 购买商店商品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ShopBuyErrorHandler",msg.error);
	}

	return ResShopBuyErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResGetLLBTInfoErrorHandler extends net.MNetHandler
var ResGetLLBTInfoErrorHandler=(function(_super){
	function ResGetLLBTInfoErrorHandler(){
		ResGetLLBTInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetLLBTInfoErrorHandler,'net.handler.pata.ResGetLLBTInfoErrorHandler',_super);
	var __proto=ResGetLLBTInfoErrorHandler.prototype;
	// 获取玲珑宝塔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetLLBTInfoErrorHandler",msg);
	}

	return ResGetLLBTInfoErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResActivePetGroupErrorHandler extends net.MNetHandler
var ResActivePetGroupErrorHandler=(function(_super){
	function ResActivePetGroupErrorHandler(){
		ResActivePetGroupErrorHandler.__super.call(this);;
	}

	__class(ResActivePetGroupErrorHandler,'net.handler.pet.ResActivePetGroupErrorHandler',_super);
	var __proto=ResActivePetGroupErrorHandler.prototype;
	// 激活宠物缘分
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivePetGroupErrorHandler",msg.error);
	}

	return ResActivePetGroupErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildInviteHandler extends net.MNetHandler
var ResGuildInviteHandler=(function(_super){
	function ResGuildInviteHandler(){
		ResGuildInviteHandler.__super.call(this);;
	}

	__class(ResGuildInviteHandler,'net.handler.guild.ResGuildInviteHandler',_super);
	var __proto=ResGuildInviteHandler.prototype;
	// 邀请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildInviteHandler",msg);
	}

	return ResGuildInviteHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildGetAllHandler extends net.MNetHandler
var ResGuildGetAllHandler=(function(_super){
	function ResGuildGetAllHandler(){
		ResGuildGetAllHandler.__super.call(this);;
	}

	__class(ResGuildGetAllHandler,'net.handler.guild.ResGuildGetAllHandler',_super);
	var __proto=ResGuildGetAllHandler.prototype;
	// 获取所有军团的简要信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildGetAllHandler",msg);
	}

	return ResGuildGetAllHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralActiveHandler extends net.MNetHandler
var ResGeneralActiveHandler=(function(_super){
	function ResGeneralActiveHandler(){
		ResGeneralActiveHandler.__super.call(this);;
	}

	__class(ResGeneralActiveHandler,'net.handler.general.ResGeneralActiveHandler',_super);
	var __proto=ResGeneralActiveHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralActiveHandler" ,msg);
	}

	return ResGeneralActiveHandler;
})(MNetHandler)


//class net.handler.skill.ResUpgradeSkillErrorHandler extends net.MNetHandler
var ResUpgradeSkillErrorHandler=(function(_super){
	function ResUpgradeSkillErrorHandler(){
		ResUpgradeSkillErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeSkillErrorHandler,'net.handler.skill.ResUpgradeSkillErrorHandler',_super);
	var __proto=ResUpgradeSkillErrorHandler.prototype;
	// 对战斗对象使用技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeSkillErrorHandler",msg);
	}

	return ResUpgradeSkillErrorHandler;
})(MNetHandler)


//class net.handler.advanceReward.ResAdvancedRewardErrorHandler extends net.MNetHandler
var ResAdvancedRewardErrorHandler=(function(_super){
	function ResAdvancedRewardErrorHandler(){
		ResAdvancedRewardErrorHandler.__super.call(this);;
	}

	__class(ResAdvancedRewardErrorHandler,'net.handler.advanceReward.ResAdvancedRewardErrorHandler',_super);
	var __proto=ResAdvancedRewardErrorHandler.prototype;
	// 进阶奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdvancedRewardError_HANDLER",msg.error);
	}

	return ResAdvancedRewardErrorHandler;
})(MNetHandler)


//class net.handler.fight.ResPVPFightStateChangeHandler extends net.MNetHandler
var ResPVPFightStateChangeHandler=(function(_super){
	function ResPVPFightStateChangeHandler(){
		ResPVPFightStateChangeHandler.__super.call(this);;
	}

	__class(ResPVPFightStateChangeHandler,'net.handler.fight.ResPVPFightStateChangeHandler',_super);
	var __proto=ResPVPFightStateChangeHandler.prototype;
	// pvp战斗状态变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PVPFightStateChangeHandler" ,msg);
	}

	return ResPVPFightStateChangeHandler;
})(MNetHandler)


//class net.handler.activities.ResActTurntableHandler extends net.MNetHandler
var ResActTurntableHandler=(function(_super){
	function ResActTurntableHandler(){
		ResActTurntableHandler.__super.call(this);;
	}

	__class(ResActTurntableHandler,'net.handler.activities.ResActTurntableHandler',_super);
	var __proto=ResActTurntableHandler.prototype;
	// 活动转盘
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResActTurntableHandler",msg);
	}

	return ResActTurntableHandler;
})(MNetHandler)


//class net.handler.pet.ResUpgradePetStarHandler extends net.MNetHandler
var ResUpgradePetStarHandler=(function(_super){
	function ResUpgradePetStarHandler(){
		ResUpgradePetStarHandler.__super.call(this);;
	}

	__class(ResUpgradePetStarHandler,'net.handler.pet.ResUpgradePetStarHandler',_super);
	var __proto=ResUpgradePetStarHandler.prototype;
	// 宠物升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetStarHandler",msg);
	}

	return ResUpgradePetStarHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageGiftHandler extends net.MNetHandler
var ResMarriageGiftHandler=(function(_super){
	function ResMarriageGiftHandler(){
		ResMarriageGiftHandler.__super.call(this);;
	}

	__class(ResMarriageGiftHandler,'net.handler.marriage.ResMarriageGiftHandler',_super);
	var __proto=ResMarriageGiftHandler.prototype;
	// 发送贺礼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageGiftHandler",msg);
	}

	return ResMarriageGiftHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionSkillUpgradeMessageHandler extends net.MNetHandler
var ResLegionSkillUpgradeMessageHandler=(function(_super){
	function ResLegionSkillUpgradeMessageHandler(){
		ResLegionSkillUpgradeMessageHandler.__super.call(this);;
	}

	__class(ResLegionSkillUpgradeMessageHandler,'net.handler.legion.ResLegionSkillUpgradeMessageHandler',_super);
	var __proto=ResLegionSkillUpgradeMessageHandler.prototype;
	// 请求升级帮会技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionSkillUpgradeMessageHandler",msg);
	}

	return ResLegionSkillUpgradeMessageHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobberyErrorHandler extends net.MNetHandler
var ResEscortRobberyErrorHandler=(function(_super){
	function ResEscortRobberyErrorHandler(){
		ResEscortRobberyErrorHandler.__super.call(this);;
	}

	__class(ResEscortRobberyErrorHandler,'net.handler.escort.ResEscortRobberyErrorHandler',_super);
	var __proto=ResEscortRobberyErrorHandler.prototype;
	// 请求劫镖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRobberyErrorHandler",msg);
	}

	return ResEscortRobberyErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResArmyForHelpHandler extends net.MNetHandler
var ResArmyForHelpHandler=(function(_super){
	function ResArmyForHelpHandler(){
		ResArmyForHelpHandler.__super.call(this);;
	}

	__class(ResArmyForHelpHandler,'net.handler.gongCe.ResArmyForHelpHandler',_super);
	var __proto=ResArmyForHelpHandler.prototype;
	// 军团求助
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResArmyForHelpHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveYeWaiBossDungeonPrizeHandler extends net.MNetHandler
var ResReceiveYeWaiBossDungeonPrizeHandler=(function(_super){
	function ResReceiveYeWaiBossDungeonPrizeHandler(){
		ResReceiveYeWaiBossDungeonPrizeHandler.__super.call(this);;
	}

	__class(ResReceiveYeWaiBossDungeonPrizeHandler,'net.handler.dungeon.ResReceiveYeWaiBossDungeonPrizeHandler',_super);
	var __proto=ResReceiveYeWaiBossDungeonPrizeHandler.prototype;
	// 领取副本奖励(野外BOSS)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveYeWaiBossDungeonPrizeHandler",msg);
	}

	return ResReceiveYeWaiBossDungeonPrizeHandler;
})(MNetHandler)


//class net.handler.towerFight.ResselectTowerHandler extends net.MNetHandler
var ResselectTowerHandler=(function(_super){
	function ResselectTowerHandler(){
		ResselectTowerHandler.__super.call(this);;
	}

	__class(ResselectTowerHandler,'net.handler.towerFight.ResselectTowerHandler',_super);
	var __proto=ResselectTowerHandler.prototype;
	// 进入试炼之塔具体某个塔
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TrialTowerSelectHandler",msg);
	}

	return ResselectTowerHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpdateMasterHandler extends net.MNetHandler
var ResFitUpdateMasterHandler=(function(_super){
	function ResFitUpdateMasterHandler(){
		ResFitUpdateMasterHandler.__super.call(this);;
	}

	__class(ResFitUpdateMasterHandler,'net.handler.fit.ResFitUpdateMasterHandler',_super);
	var __proto=ResFitUpdateMasterHandler.prototype;
	// 更新锻造大师等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpdateMasterHandler" ,msg);
	}

	return ResFitUpdateMasterHandler;
})(MNetHandler)


//class net.handler.official.ResUpgradeOfficialLvErrorHandler extends net.MNetHandler
var ResUpgradeOfficialLvErrorHandler=(function(_super){
	function ResUpgradeOfficialLvErrorHandler(){
		ResUpgradeOfficialLvErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeOfficialLvErrorHandler,'net.handler.official.ResUpgradeOfficialLvErrorHandler',_super);
	var __proto=ResUpgradeOfficialLvErrorHandler.prototype;
	// 升级官位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeOfficialLvErrorHandler",msg);
	}

	return ResUpgradeOfficialLvErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomDissolutionHandler extends net.MNetHandler
var ResTeamDuplicateRoomDissolutionHandler=(function(_super){
	function ResTeamDuplicateRoomDissolutionHandler(){
		ResTeamDuplicateRoomDissolutionHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomDissolutionHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomDissolutionHandler',_super);
	var __proto=ResTeamDuplicateRoomDissolutionHandler.prototype;
	// 房间解散
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomDissolutionHandler",msg);
	}

	return ResTeamDuplicateRoomDissolutionHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipIllusionErrorHandler extends net.MNetHandler
var ResEquipIllusionErrorHandler=(function(_super){
	function ResEquipIllusionErrorHandler(){
		ResEquipIllusionErrorHandler.__super.call(this);;
	}

	__class(ResEquipIllusionErrorHandler,'net.handler.equip.ResEquipIllusionErrorHandler',_super);
	var __proto=ResEquipIllusionErrorHandler.prototype;
	// 装备幻化
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEquipIllusionErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoySynthesisErrorHandler extends net.MNetHandler
var ResSoulBoySynthesisErrorHandler=(function(_super){
	function ResSoulBoySynthesisErrorHandler(){
		ResSoulBoySynthesisErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoySynthesisErrorHandler,'net.handler.soulboy.ResSoulBoySynthesisErrorHandler',_super);
	var __proto=ResSoulBoySynthesisErrorHandler.prototype;
	// 合成灵童卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoySynthesisErrorHandler",msg);
	}

	return ResSoulBoySynthesisErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResReceiveEscortRewardHandler extends net.MNetHandler
var ResReceiveEscortRewardHandler=(function(_super){
	function ResReceiveEscortRewardHandler(){
		ResReceiveEscortRewardHandler.__super.call(this);;
	}

	__class(ResReceiveEscortRewardHandler,'net.handler.escort.ResReceiveEscortRewardHandler',_super);
	var __proto=ResReceiveEscortRewardHandler.prototype;
	// 领取押运奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveEscortRewardHandler" ,msg);
	}

	return ResReceiveEscortRewardHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveAllDungeonPrizeHandler extends net.MNetHandler
var ResReceiveAllDungeonPrizeHandler=(function(_super){
	function ResReceiveAllDungeonPrizeHandler(){
		ResReceiveAllDungeonPrizeHandler.__super.call(this);;
	}

	__class(ResReceiveAllDungeonPrizeHandler,'net.handler.dungeon.ResReceiveAllDungeonPrizeHandler',_super);
	var __proto=ResReceiveAllDungeonPrizeHandler.prototype;
	// 扫荡副本奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveAllDungeonPrizeHandler",msg);
	}

	return ResReceiveAllDungeonPrizeHandler;
})(MNetHandler)


//class net.handler.team.ResTeamApplyReplyErrorHandler extends net.MNetHandler
var ResTeamApplyReplyErrorHandler=(function(_super){
	function ResTeamApplyReplyErrorHandler(){
		ResTeamApplyReplyErrorHandler.__super.call(this);;
	}

	__class(ResTeamApplyReplyErrorHandler,'net.handler.team.ResTeamApplyReplyErrorHandler',_super);
	var __proto=ResTeamApplyReplyErrorHandler.prototype;
	// 回应申请加入队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamApplyReplyErrorHandler",msg);
	}

	return ResTeamApplyReplyErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyDrugItemHandler extends net.MNetHandler
var ResSoulBoyDrugItemHandler=(function(_super){
	function ResSoulBoyDrugItemHandler(){
		ResSoulBoyDrugItemHandler.__super.call(this);;
	}

	__class(ResSoulBoyDrugItemHandler,'net.handler.soulboy.ResSoulBoyDrugItemHandler',_super);
	var __proto=ResSoulBoyDrugItemHandler.prototype;
	// 灵童使用属性丹
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSoulBoyDrugItemHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyCityPayColdErrorHandler extends net.MNetHandler
var ResEmptyCityPayColdErrorHandler=(function(_super){
	function ResEmptyCityPayColdErrorHandler(){
		ResEmptyCityPayColdErrorHandler.__super.call(this);;
	}

	__class(ResEmptyCityPayColdErrorHandler,'net.handler.emptycity.ResEmptyCityPayColdErrorHandler',_super);
	var __proto=ResEmptyCityPayColdErrorHandler.prototype;
	// 购买冷却
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyCityPayColdErrorHandler",msg);
	}

	return ResEmptyCityPayColdErrorHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyGetBattleRecordHandler extends net.MNetHandler
var ResEmptyGetBattleRecordHandler=(function(_super){
	function ResEmptyGetBattleRecordHandler(){
		ResEmptyGetBattleRecordHandler.__super.call(this);;
	}

	__class(ResEmptyGetBattleRecordHandler,'net.handler.emptycity.ResEmptyGetBattleRecordHandler',_super);
	var __proto=ResEmptyGetBattleRecordHandler.prototype;
	// 获得空城计战斗回放
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyGetBattleRecordHandler",msg);
	}

	return ResEmptyGetBattleRecordHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildDismissHandler extends net.MNetHandler
var ResGuildDismissHandler=(function(_super){
	function ResGuildDismissHandler(){
		ResGuildDismissHandler.__super.call(this);;
	}

	__class(ResGuildDismissHandler,'net.handler.guild.ResGuildDismissHandler',_super);
	var __proto=ResGuildDismissHandler.prototype;
	// 解散军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildDismissErrorHandler",msg);
	}

	return ResGuildDismissHandler;
})(MNetHandler)


//class net.handler.rank.ResGetRankInfoErrorHandler extends net.MNetHandler
var ResGetRankInfoErrorHandler=(function(_super){
	function ResGetRankInfoErrorHandler(){
		ResGetRankInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetRankInfoErrorHandler,'net.handler.rank.ResGetRankInfoErrorHandler',_super);
	var __proto=ResGetRankInfoErrorHandler.prototype;
	// 激活宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetRankInfoErrorHandler",msg.error);
	}

	return ResGetRankInfoErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化数据
*/
//class net.message.login.InitBean extends engine.base.data.Bean
var InitBean=(function(_super){
	function InitBean(){
		/**ID */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**转生信息 */
		this._zhuanSheng=null;
		/**等级 */
		this._level=0;
		/**经验 */
		this._exp=null;
		/**关卡副本ID */
		this._guanqiaDungeonID=0;
		/**当前所在关卡副本ID */
		this._curGuanqiaDungeonID=0;
		/**上次挑战关卡时间 */
		this._challengeGuanQiaTime=0;
		/**前端配置 */
		this._setting=null;
		/**可抓捕宠物ID,0表示没得 */
		this._wildPet=0;
		/**全民boss已经复活次数(跨天重置)*/
		this._quanminReliveTimes=0;
		/**全民boss可挑战次数 */
		this._quanminChallengeTimes=0;
		/**全民boss可挑战次数恢复时间 */
		this._quanminChallengeRecoverTime=0;
		/**全民boss已购买次数(跨天重置)*/
		this._quanminBuyTimes=0;
		/**玄女 */
		this._xuannv=null;
		/**是否已经膜拜过(跨天清除)*/
		this._rankMoBai=false;
		/**每日官位 */
		this._official=null;
		/**每日的押运对象 */
		this._escort=null;
		/**赤壁对象 */
		this._chibi=null;
		/**跨服副本对象 */
		this._teamBeans=null;
		/**Vip对象 */
		this._vip=null;
		/**成长对象 */
		this._invest=null;
		/**爵位 */
		this._jueWeiBean=null;
		/**猎命 */
		this._lieMingBean=null;
		/**福利大厅 */
		this._welfareBean=null;
		/**进阶豪礼 */
		this._advancedRewardBean=null;
		/**开服时间 */
		this._openServerTime=null;
		/**今日充值额度 */
		this._rechargeCount=null;
		/**累计充值额度 */
		this._totalRechargeCount=null;
		/**兑换剩余次数 */
		this._exchangeCount=0;
		/**禁言时间 */
		this._shutUp=null;
		/**帮助次数 */
		this._helpCount=0;
		/**被帮助次数 */
		this._behelpCount=null;
		/**图腾 */
		this._totemsBean=null;
		/**军师 */
		this._advisersBean=null;
		/**蛮将 */
		this._generalsBean=null;
		/**首次十连抽过没有 */
		this._firstHunt=false;
		/**累冲天数不清 */
		this._rechargeDayCount=0;
		/**金币收益 */
		this._copperPerSec=0;
		/**经验收益 */
		this._expPerSec=0;
		/**累计消费刀币 */
		this._costGold=null;
		/**战斗力 */
		this._fightPower=null;
		/**虎牢关 */
		this._cbtLayer=0;
		/**是否有首次押镖 */
		this._firstEscort=false;
		/**军团守护信息 */
		this._legionGuard=null;
		/**军团副本剩余收益次数 */
		this._legionProfit=0;
		/**军团副本剩余助战收益次数 */
		this._legionAssist=0;
		/**军团兑换刷新时间 */
		this._legionExchangeTime=null;
		/**创建时间戳，毫秒 */
		this._createTime=null;
		/**玩家一天的登陆次数 */
		this._LoginTimeOneDay=0;
		/**玩家选择的心愿武将id */
		this._LoveHero=0;
		InitBean.__super.call(this);
		this._heroes=[];
		this._packets=[];
		this._values=[];
		this._mails=[];
		this._gameSystemStatus=[];
		this._guanqiaChapterPrize=[];
		this._tasks=[];
		this._pets=[];
		this._petGroups=[];
		this._upgradeObjects=[];
		this._wakeUpBeans=[];
		this._skills=[];
		this._attributeGoods=[];
		this._shopGoodsBuyTimes=[];
		this._dungeonTodayTimes=[];
		this._prizedDungeons=[];
		this._soulBoyBeans=[];
		this._ming=[];
		this._luckCount=[];
		this._fitBeans=[];
		this._systemsReward=[];
		this._huoDongNum=[];
		this._rechargeRecords=[];
		this._handBookBeans=[];
		this._fitSkill=[];
		this._legionExchange=[];
		this._caiLiaoDungeonTimes=[];
		this._fightPositions=[];
		this._yuanZhengFightPositions=[];
		this._operateTask=[];
		this._treasureList=[];
		this._towerPosiTions=[];
	}

	__class(InitBean,'net.message.login.InitBean',_super);
	var __proto=InitBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._heroes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._heroes.length;++i_am_tmp_i){
			this._heroes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._packets.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._packets.length;++i_am_tmp_i){
			this._packets[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._values.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._values.length;++i_am_tmp_i){
			this.writeLong(_buf,this._values[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._mails.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._mails.length;++i_am_tmp_i){
			this._mails[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._gameSystemStatus.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._gameSystemStatus.length;++i_am_tmp_i){
			this.writeBoolean(_buf,this._gameSystemStatus[i_am_tmp_i]);
		}
		this.writeBean(_buf,this._zhuanSheng);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._guanqiaDungeonID);
		this.writeInt(_buf,this._curGuanqiaDungeonID);
		this.writeInt(_buf,this._challengeGuanQiaTime);
		this.writeInt(_buf,this._guanqiaChapterPrize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._guanqiaChapterPrize.length;++i_am_tmp_i){
			this.writeInt(_buf,this._guanqiaChapterPrize[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._tasks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._tasks.length;++i_am_tmp_i){
			this._tasks[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._pets.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pets.length;++i_am_tmp_i){
			this._pets[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._petGroups.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._petGroups.length;++i_am_tmp_i){
			this.writeInt(_buf,this._petGroups[i_am_tmp_i]);
		}
		this.writeBean(_buf,this._setting);
		this.writeInt(_buf,this._upgradeObjects.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._upgradeObjects.length;++i_am_tmp_i){
			this._upgradeObjects[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._wakeUpBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._wakeUpBeans.length;++i_am_tmp_i){
			this._wakeUpBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._attributeGoods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributeGoods.length;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._wildPet);
		this.writeInt(_buf,this._shopGoodsBuyTimes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._shopGoodsBuyTimes.length;++i_am_tmp_i){
			this._shopGoodsBuyTimes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._dungeonTodayTimes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._dungeonTodayTimes.length;++i_am_tmp_i){
			this._dungeonTodayTimes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._prizedDungeons.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizedDungeons.length;++i_am_tmp_i){
			this.writeInt(_buf,this._prizedDungeons[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._quanminReliveTimes);
		this.writeInt(_buf,this._quanminChallengeTimes);
		this.writeInt(_buf,this._quanminChallengeRecoverTime);
		this.writeInt(_buf,this._quanminBuyTimes);
		this.writeBean(_buf,this._xuannv);
		this.writeBoolean(_buf,this._rankMoBai);
		this.writeBean(_buf,this._official);
		this.writeBean(_buf,this._escort);
		this.writeBean(_buf,this._chibi);
		this.writeInt(_buf,this._soulBoyBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._soulBoyBeans.length;++i_am_tmp_i){
			this._soulBoyBeans[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._teamBeans);
		this.writeInt(_buf,this._ming.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._ming.length;++i_am_tmp_i){
			this._ming[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._vip);
		this.writeBean(_buf,this._invest);
		this.writeBean(_buf,this._jueWeiBean);
		this.writeBean(_buf,this._lieMingBean);
		this.writeBean(_buf,this._welfareBean);
		this.writeBean(_buf,this._advancedRewardBean);
		this.writeLong(_buf,this._openServerTime);
		this.writeInt(_buf,this._luckCount.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._luckCount.length;++i_am_tmp_i){
			this.writeInt(_buf,this._luckCount[i_am_tmp_i]);
		}
		this.writeLong(_buf,this._rechargeCount);
		this.writeLong(_buf,this._totalRechargeCount);
		this.writeInt(_buf,this._exchangeCount);
		this.writeLong(_buf,this._shutUp);
		this.writeInt(_buf,this._helpCount);
		this.writeLong(_buf,this._behelpCount);
		this.writeBean(_buf,this._totemsBean);
		this.writeBean(_buf,this._advisersBean);
		this.writeBean(_buf,this._generalsBean);
		this.writeInt(_buf,this._fitBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fitBeans.length;++i_am_tmp_i){
			this._fitBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._systemsReward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._systemsReward.length;++i_am_tmp_i){
			this.writeInt(_buf,this._systemsReward[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._firstHunt);
		this.writeInt(_buf,this._rechargeDayCount);
		this.writeInt(_buf,this._copperPerSec);
		this.writeInt(_buf,this._expPerSec);
		this.writeInt(_buf,this._huoDongNum.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._huoDongNum.length;++i_am_tmp_i){
			this.writeInt(_buf,this._huoDongNum[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._rechargeRecords.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rechargeRecords.length;++i_am_tmp_i){
			this._rechargeRecords[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._costGold);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._handBookBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._handBookBeans.length;++i_am_tmp_i){
			this._handBookBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._cbtLayer);
		this.writeInt(_buf,this._fitSkill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fitSkill.length;++i_am_tmp_i){
			this.writeInt(_buf,this._fitSkill[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._firstEscort);
		this.writeBean(_buf,this._legionGuard);
		this.writeInt(_buf,this._legionExchange.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._legionExchange.length;++i_am_tmp_i){
			this._legionExchange[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._caiLiaoDungeonTimes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._caiLiaoDungeonTimes.length;++i_am_tmp_i){
			this.writeInt(_buf,this._caiLiaoDungeonTimes[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._fightPositions.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fightPositions.length;++i_am_tmp_i){
			this._fightPositions[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._legionProfit);
		this.writeInt(_buf,this._legionAssist);
		this.writeLong(_buf,this._legionExchangeTime);
		this.writeInt(_buf,this._yuanZhengFightPositions.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._yuanZhengFightPositions.length;++i_am_tmp_i){
			this._yuanZhengFightPositions[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._operateTask.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._operateTask.length;++i_am_tmp_i){
			this._operateTask[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._createTime);
		this.writeInt(_buf,this._LoginTimeOneDay);
		this.writeInt(_buf,this._LoveHero);
		this.writeInt(_buf,this._treasureList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._treasureList.length;++i_am_tmp_i){
			this._treasureList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._towerPosiTions.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._towerPosiTions.length;++i_am_tmp_i){
			this._towerPosiTions[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		size52413035=this.readInt(_buf);
		this._heroes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._heroes[i_am_tmp_i]=this.readBeanInList(_buf,HeroBean);
		}
		size52413035=this.readInt(_buf);
		this._packets=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._packets[i_am_tmp_i]=this.readBeanInList(_buf,PacketBean);
		}
		size52413035=this.readInt(_buf);
		this._values=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._values[i_am_tmp_i]=this.readLong(_buf);
		}
		size52413035=this.readInt(_buf);
		this._mails=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._mails[i_am_tmp_i]=this.readBeanInList(_buf,MailBean);
		}
		size52413035=this.readInt(_buf);
		this._gameSystemStatus=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._gameSystemStatus[i_am_tmp_i]=this.readBoolean(_buf);
		}
		this._zhuanSheng=this.readBean(_buf,ZhuanShengBean);
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._guanqiaDungeonID=this.readInt(_buf);
		this._curGuanqiaDungeonID=this.readInt(_buf);
		this._challengeGuanQiaTime=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._guanqiaChapterPrize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._guanqiaChapterPrize[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._tasks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._tasks[i_am_tmp_i]=this.readBeanInList(_buf,TaskBean);
		}
		size52413035=this.readInt(_buf);
		this._pets=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pets[i_am_tmp_i]=this.readBeanInList(_buf,PetBean);
		}
		size52413035=this.readInt(_buf);
		this._petGroups=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._petGroups[i_am_tmp_i]=this.readInt(_buf);
		}
		this._setting=this.readBean(_buf,SettingBean);
		size52413035=this.readInt(_buf);
		this._upgradeObjects=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._upgradeObjects[i_am_tmp_i]=this.readBeanInList(_buf,UpgradeBean);
		}
		size52413035=this.readInt(_buf);
		this._wakeUpBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._wakeUpBeans[i_am_tmp_i]=this.readBeanInList(_buf,WakeUpBean);
		}
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		size52413035=this.readInt(_buf);
		this._attributeGoods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		this._wildPet=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._shopGoodsBuyTimes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._shopGoodsBuyTimes[i_am_tmp_i]=this.readBeanInList(_buf,ShopGoodsBuyTimesBean);
		}
		size52413035=this.readInt(_buf);
		this._dungeonTodayTimes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._dungeonTodayTimes[i_am_tmp_i]=this.readBeanInList(_buf,DungeonTimesBean);
		}
		size52413035=this.readInt(_buf);
		this._prizedDungeons=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizedDungeons[i_am_tmp_i]=this.readInt(_buf);
		}
		this._quanminReliveTimes=this.readInt(_buf);
		this._quanminChallengeTimes=this.readInt(_buf);
		this._quanminChallengeRecoverTime=this.readInt(_buf);
		this._quanminBuyTimes=this.readInt(_buf);
		this._xuannv=this.readBean(_buf,XuanNvBean);
		this._rankMoBai=this.readBoolean(_buf);
		this._official=this.readBean(_buf,OfficialBean);
		this._escort=this.readBean(_buf,EscortBean);
		this._chibi=this.readBean(_buf,ChibiBean);
		size52413035=this.readInt(_buf);
		this._soulBoyBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._soulBoyBeans[i_am_tmp_i]=this.readBeanInList(_buf,SoulBoyBean);
		}
		this._teamBeans=this.readBean(_buf,TeamDuplicateBean);
		size52413035=this.readInt(_buf);
		this._ming=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._ming[i_am_tmp_i]=this.readBeanInList(_buf,SoulMatch);
		}
		this._vip=this.readBean(_buf,VipBean);
		this._invest=this.readBean(_buf,InvestmentBean);
		this._jueWeiBean=this.readBean(_buf,JueWeiBean);
		this._lieMingBean=this.readBean(_buf,LieMingBean);
		this._welfareBean=this.readBean(_buf,WelfareBean);
		this._advancedRewardBean=this.readBean(_buf,AdvancedRewardBean);
		this._openServerTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._luckCount=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._luckCount[i_am_tmp_i]=this.readInt(_buf);
		}
		this._rechargeCount=this.readLong(_buf);
		this._totalRechargeCount=this.readLong(_buf);
		this._exchangeCount=this.readInt(_buf);
		this._shutUp=this.readLong(_buf);
		this._helpCount=this.readInt(_buf);
		this._behelpCount=this.readLong(_buf);
		this._totemsBean=this.readBean(_buf,TotemsBean);
		this._advisersBean=this.readBean(_buf,AdvisersBean);
		this._generalsBean=this.readBean(_buf,GeneralsBean);
		size52413035=this.readInt(_buf);
		this._fitBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fitBeans[i_am_tmp_i]=this.readBeanInList(_buf,FitBean);
		}
		size52413035=this.readInt(_buf);
		this._systemsReward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._systemsReward[i_am_tmp_i]=this.readInt(_buf);
		}
		this._firstHunt=this.readBoolean(_buf);
		this._rechargeDayCount=this.readInt(_buf);
		this._copperPerSec=this.readInt(_buf);
		this._expPerSec=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._huoDongNum=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._huoDongNum[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._rechargeRecords=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rechargeRecords[i_am_tmp_i]=this.readBeanInList(_buf,RechargeRecord);
		}
		this._costGold=this.readLong(_buf);
		this._fightPower=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._handBookBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._handBookBeans[i_am_tmp_i]=this.readBeanInList(_buf,HandBookBean);
		}
		this._cbtLayer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._fitSkill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fitSkill[i_am_tmp_i]=this.readInt(_buf);
		}
		this._firstEscort=this.readBoolean(_buf);
		this._legionGuard=this.readBean(_buf,LegionGuardBean);
		size52413035=this.readInt(_buf);
		this._legionExchange=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._legionExchange[i_am_tmp_i]=this.readBeanInList(_buf,LegionExchangeBean);
		}
		size52413035=this.readInt(_buf);
		this._caiLiaoDungeonTimes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._caiLiaoDungeonTimes[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._fightPositions=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fightPositions[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionBean);
		}
		this._legionProfit=this.readInt(_buf);
		this._legionAssist=this.readInt(_buf);
		this._legionExchangeTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._yuanZhengFightPositions=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._yuanZhengFightPositions[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionBean);
		}
		size52413035=this.readInt(_buf);
		this._operateTask=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._operateTask[i_am_tmp_i]=this.readBeanInList(_buf,TaskBean);
		}
		this._createTime=this.readLong(_buf);
		this._LoginTimeOneDay=this.readInt(_buf);
		this._LoveHero=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._treasureList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._treasureList[i_am_tmp_i]=this.readBeanInList(_buf,TreasureBean);
		}
		size52413035=this.readInt(_buf);
		this._towerPosiTions=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._towerPosiTions[i_am_tmp_i]=this.readBeanInList(_buf,TowerPosiTion);
		}
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**已有英雄 */
	/**已有英雄 */
	__getset(0,__proto,'heroes',function(){
		return this._heroes;
		},function(value){
		this._heroes=value;
	});

	/**全民boss可挑战次数 */
	/**全民boss可挑战次数 */
	__getset(0,__proto,'quanminChallengeTimes',function(){
		return this._quanminChallengeTimes;
		},function(value){
		this._quanminChallengeTimes=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**任务列表 */
	/**任务列表 */
	__getset(0,__proto,'tasks',function(){
		return this._tasks;
		},function(value){
		this._tasks=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**包裹列表 */
	/**包裹列表 */
	__getset(0,__proto,'packets',function(){
		return this._packets;
		},function(value){
		this._packets=value;
	});

	/**军团兑换刷新时间 */
	/**军团兑换刷新时间 */
	__getset(0,__proto,'legionExchangeTime',function(){
		return this._legionExchangeTime;
		},function(value){
		this._legionExchangeTime=value;
	});

	/**灵童对象 */
	/**灵童对象 */
	__getset(0,__proto,'soulBoyBeans',function(){
		return this._soulBoyBeans;
		},function(value){
		this._soulBoyBeans=value;
	});

	/**数值列表,见ValueType */
	/**数值列表,见ValueType */
	__getset(0,__proto,'values',function(){
		return this._values;
		},function(value){
		this._values=value;
	});

	/**合体 */
	/**合体 */
	__getset(0,__proto,'fitBeans',function(){
		return this._fitBeans;
		},function(value){
		this._fitBeans=value;
	});

	/**开服时间 */
	/**开服时间 */
	__getset(0,__proto,'openServerTime',function(){
		return this._openServerTime;
		},function(value){
		this._openServerTime=value;
	});

	/**邮件列表 */
	/**邮件列表 */
	__getset(0,__proto,'mails',function(){
		return this._mails;
		},function(value){
		this._mails=value;
	});

	/**军师 */
	/**军师 */
	__getset(0,__proto,'advisersBean',function(){
		return this._advisersBean;
		},function(value){
		this._advisersBean=value;
	});

	/**军团副本剩余助战收益次数 */
	/**军团副本剩余助战收益次数 */
	__getset(0,__proto,'legionAssist',function(){
		return this._legionAssist;
		},function(value){
		this._legionAssist=value;
	});

	/**系统激活状态 */
	/**系统激活状态 */
	__getset(0,__proto,'gameSystemStatus',function(){
		return this._gameSystemStatus;
		},function(value){
		this._gameSystemStatus=value;
	});

	/**转生信息 */
	/**转生信息 */
	__getset(0,__proto,'zhuanSheng',function(){
		return this._zhuanSheng;
		},function(value){
		this._zhuanSheng=value;
	});

	/**经验 */
	/**经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**关卡副本ID */
	/**关卡副本ID */
	__getset(0,__proto,'guanqiaDungeonID',function(){
		return this._guanqiaDungeonID;
		},function(value){
		this._guanqiaDungeonID=value;
	});

	/**被帮助次数 */
	/**被帮助次数 */
	__getset(0,__proto,'behelpCount',function(){
		return this._behelpCount;
		},function(value){
		this._behelpCount=value;
	});

	/**当前所在关卡副本ID */
	/**当前所在关卡副本ID */
	__getset(0,__proto,'curGuanqiaDungeonID',function(){
		return this._curGuanqiaDungeonID;
		},function(value){
		this._curGuanqiaDungeonID=value;
	});

	/**上次挑战关卡时间 */
	/**上次挑战关卡时间 */
	__getset(0,__proto,'challengeGuanQiaTime',function(){
		return this._challengeGuanQiaTime;
		},function(value){
		this._challengeGuanQiaTime=value;
	});

	/**副本今日挑战次数(跨天清除)*/
	/**副本今日挑战次数(跨天清除)*/
	__getset(0,__proto,'dungeonTodayTimes',function(){
		return this._dungeonTodayTimes;
		},function(value){
		this._dungeonTodayTimes=value;
	});

	/**可领取的关卡奖励,副本ID列表 */
	/**可领取的关卡奖励,副本ID列表 */
	__getset(0,__proto,'guanqiaChapterPrize',function(){
		return this._guanqiaChapterPrize;
		},function(value){
		this._guanqiaChapterPrize=value;
	});

	/**属性道具使用数量 */
	/**属性道具使用数量 */
	__getset(0,__proto,'attributeGoods',function(){
		return this._attributeGoods;
		},function(value){
		this._attributeGoods=value;
	});

	/**宠物列表 */
	/**宠物列表 */
	__getset(0,__proto,'pets',function(){
		return this._pets;
		},function(value){
		this._pets=value;
	});

	/**已激活的宠物缘分 */
	/**已激活的宠物缘分 */
	__getset(0,__proto,'petGroups',function(){
		return this._petGroups;
		},function(value){
		this._petGroups=value;
	});

	/**前端配置 */
	/**前端配置 */
	__getset(0,__proto,'setting',function(){
		return this._setting;
		},function(value){
		this._setting=value;
	});

	/**累冲天数不清 */
	/**累冲天数不清 */
	__getset(0,__proto,'rechargeDayCount',function(){
		return this._rechargeDayCount;
		},function(value){
		this._rechargeDayCount=value;
	});

	/**升级对象 */
	/**升级对象 */
	__getset(0,__proto,'upgradeObjects',function(){
		return this._upgradeObjects;
		},function(value){
		this._upgradeObjects=value;
	});

	/**参加活动次数{0科举，1草船,2军团boss,3煮酒,4群英会,5王者争爸,6组队副本,7全民boss,}*/
	/**参加活动次数{0科举，1草船,2军团boss,3煮酒,4群英会,5王者争爸,6组队副本,7全民boss,}*/
	__getset(0,__proto,'huoDongNum',function(){
		return this._huoDongNum;
		},function(value){
		this._huoDongNum=value;
	});

	/**累计充值额度 */
	/**累计充值额度 */
	__getset(0,__proto,'totalRechargeCount',function(){
		return this._totalRechargeCount;
		},function(value){
		this._totalRechargeCount=value;
	});

	/**觉醒对象 */
	/**觉醒对象 */
	__getset(0,__proto,'wakeUpBeans',function(){
		return this._wakeUpBeans;
		},function(value){
		this._wakeUpBeans=value;
	});

	/**玩家技能 */
	/**玩家技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**累计消费刀币 */
	/**累计消费刀币 */
	__getset(0,__proto,'costGold',function(){
		return this._costGold;
		},function(value){
		this._costGold=value;
	});

	/**可抓捕宠物ID,0表示没得 */
	/**可抓捕宠物ID,0表示没得 */
	__getset(0,__proto,'wildPet',function(){
		return this._wildPet;
		},function(value){
		this._wildPet=value;
	});

	/**商品购买次数信息 */
	/**商品购买次数信息 */
	__getset(0,__proto,'shopGoodsBuyTimes',function(){
		return this._shopGoodsBuyTimes;
		},function(value){
		this._shopGoodsBuyTimes=value;
	});

	/**进阶豪礼 */
	/**进阶豪礼 */
	__getset(0,__proto,'advancedRewardBean',function(){
		return this._advancedRewardBean;
		},function(value){
		this._advancedRewardBean=value;
	});

	/**领过奖的副本 */
	/**领过奖的副本 */
	__getset(0,__proto,'prizedDungeons',function(){
		return this._prizedDungeons;
		},function(value){
		this._prizedDungeons=value;
	});

	/**全民boss已经复活次数(跨天重置)*/
	/**全民boss已经复活次数(跨天重置)*/
	__getset(0,__proto,'quanminReliveTimes',function(){
		return this._quanminReliveTimes;
		},function(value){
		this._quanminReliveTimes=value;
	});

	/**兑换剩余次数 */
	/**兑换剩余次数 */
	__getset(0,__proto,'exchangeCount',function(){
		return this._exchangeCount;
		},function(value){
		this._exchangeCount=value;
	});

	/**全民boss可挑战次数恢复时间 */
	/**全民boss可挑战次数恢复时间 */
	__getset(0,__proto,'quanminChallengeRecoverTime',function(){
		return this._quanminChallengeRecoverTime;
		},function(value){
		this._quanminChallengeRecoverTime=value;
	});

	/**全民boss已购买次数(跨天重置)*/
	/**全民boss已购买次数(跨天重置)*/
	__getset(0,__proto,'quanminBuyTimes',function(){
		return this._quanminBuyTimes;
		},function(value){
		this._quanminBuyTimes=value;
	});

	/**玄女 */
	/**玄女 */
	__getset(0,__proto,'xuannv',function(){
		return this._xuannv;
		},function(value){
		this._xuannv=value;
	});

	/**是否已经膜拜过(跨天清除)*/
	/**是否已经膜拜过(跨天清除)*/
	__getset(0,__proto,'rankMoBai',function(){
		return this._rankMoBai;
		},function(value){
		this._rankMoBai=value;
	});

	/**每日官位 */
	/**每日官位 */
	__getset(0,__proto,'official',function(){
		return this._official;
		},function(value){
		this._official=value;
	});

	/**福利大厅 */
	/**福利大厅 */
	__getset(0,__proto,'welfareBean',function(){
		return this._welfareBean;
		},function(value){
		this._welfareBean=value;
	});

	/**每日的押运对象 */
	/**每日的押运对象 */
	__getset(0,__proto,'escort',function(){
		return this._escort;
		},function(value){
		this._escort=value;
	});

	/**赤壁对象 */
	/**赤壁对象 */
	__getset(0,__proto,'chibi',function(){
		return this._chibi;
		},function(value){
		this._chibi=value;
	});

	/**跨服副本对象 */
	/**跨服副本对象 */
	__getset(0,__proto,'teamBeans',function(){
		return this._teamBeans;
		},function(value){
		this._teamBeans=value;
	});

	/**经验收益 */
	/**经验收益 */
	__getset(0,__proto,'expPerSec',function(){
		return this._expPerSec;
		},function(value){
		this._expPerSec=value;
	});

	/**命格对象 */
	/**命格对象 */
	__getset(0,__proto,'ming',function(){
		return this._ming;
		},function(value){
		this._ming=value;
	});

	/**Vip对象 */
	/**Vip对象 */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	/**首次十连抽过没有 */
	/**首次十连抽过没有 */
	__getset(0,__proto,'firstHunt',function(){
		return this._firstHunt;
		},function(value){
		this._firstHunt=value;
	});

	/**成长对象 */
	/**成长对象 */
	__getset(0,__proto,'invest',function(){
		return this._invest;
		},function(value){
		this._invest=value;
	});

	/**金币收益 */
	/**金币收益 */
	__getset(0,__proto,'copperPerSec',function(){
		return this._copperPerSec;
		},function(value){
		this._copperPerSec=value;
	});

	/**爵位 */
	/**爵位 */
	__getset(0,__proto,'jueWeiBean',function(){
		return this._jueWeiBean;
		},function(value){
		this._jueWeiBean=value;
	});

	/**猎命 */
	/**猎命 */
	__getset(0,__proto,'lieMingBean',function(){
		return this._lieMingBean;
		},function(value){
		this._lieMingBean=value;
	});

	/**寻宝幸运值 */
	/**寻宝幸运值 */
	__getset(0,__proto,'luckCount',function(){
		return this._luckCount;
		},function(value){
		this._luckCount=value;
	});

	/**今日充值额度 */
	/**今日充值额度 */
	__getset(0,__proto,'rechargeCount',function(){
		return this._rechargeCount;
		},function(value){
		this._rechargeCount=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**禁言时间 */
	/**禁言时间 */
	__getset(0,__proto,'shutUp',function(){
		return this._shutUp;
		},function(value){
		this._shutUp=value;
	});

	/**蛮将 */
	/**蛮将 */
	__getset(0,__proto,'generalsBean',function(){
		return this._generalsBean;
		},function(value){
		this._generalsBean=value;
	});

	/**帮助次数 */
	/**帮助次数 */
	__getset(0,__proto,'helpCount',function(){
		return this._helpCount;
		},function(value){
		this._helpCount=value;
	});

	/**图腾 */
	/**图腾 */
	__getset(0,__proto,'totemsBean',function(){
		return this._totemsBean;
		},function(value){
		this._totemsBean=value;
	});

	/**激活系统的奖励 */
	/**激活系统的奖励 */
	__getset(0,__proto,'systemsReward',function(){
		return this._systemsReward;
		},function(value){
		this._systemsReward=value;
	});

	/**充值记录 */
	/**充值记录 */
	__getset(0,__proto,'rechargeRecords',function(){
		return this._rechargeRecords;
		},function(value){
		this._rechargeRecords=value;
	});

	/**已激活的图鉴 */
	/**已激活的图鉴 */
	__getset(0,__proto,'handBookBeans',function(){
		return this._handBookBeans;
		},function(value){
		this._handBookBeans=value;
	});

	/**虎牢关 */
	/**虎牢关 */
	__getset(0,__proto,'cbtLayer',function(){
		return this._cbtLayer;
		},function(value){
		this._cbtLayer=value;
	});

	/**合体技能 */
	/**合体技能 */
	__getset(0,__proto,'fitSkill',function(){
		return this._fitSkill;
		},function(value){
		this._fitSkill=value;
	});

	/**是否有首次押镖 */
	/**是否有首次押镖 */
	__getset(0,__proto,'firstEscort',function(){
		return this._firstEscort;
		},function(value){
		this._firstEscort=value;
	});

	/**军团守护信息 */
	/**军团守护信息 */
	__getset(0,__proto,'legionGuard',function(){
		return this._legionGuard;
		},function(value){
		this._legionGuard=value;
	});

	/**军团兑换信息 */
	/**军团兑换信息 */
	__getset(0,__proto,'legionExchange',function(){
		return this._legionExchange;
		},function(value){
		this._legionExchange=value;
	});

	/**材料副本已挑战次数 */
	/**材料副本已挑战次数 */
	__getset(0,__proto,'caiLiaoDungeonTimes',function(){
		return this._caiLiaoDungeonTimes;
		},function(value){
		this._caiLiaoDungeonTimes=value;
	});

	/**站位信息 */
	/**站位信息 */
	__getset(0,__proto,'fightPositions',function(){
		return this._fightPositions;
		},function(value){
		this._fightPositions=value;
	});

	/**军团副本剩余收益次数 */
	/**军团副本剩余收益次数 */
	__getset(0,__proto,'legionProfit',function(){
		return this._legionProfit;
		},function(value){
		this._legionProfit=value;
	});

	/**远征站位信息 */
	/**远征站位信息 */
	__getset(0,__proto,'yuanZhengFightPositions',function(){
		return this._yuanZhengFightPositions;
		},function(value){
		this._yuanZhengFightPositions=value;
	});

	/**运营活动任务 */
	/**运营活动任务 */
	__getset(0,__proto,'operateTask',function(){
		return this._operateTask;
		},function(value){
		this._operateTask=value;
	});

	/**创建时间戳，毫秒 */
	/**创建时间戳，毫秒 */
	__getset(0,__proto,'createTime',function(){
		return this._createTime;
		},function(value){
		this._createTime=value;
	});

	/**玩家一天的登陆次数 */
	/**玩家一天的登陆次数 */
	__getset(0,__proto,'LoginTimeOneDay',function(){
		return this._LoginTimeOneDay;
		},function(value){
		this._LoginTimeOneDay=value;
	});

	/**玩家选择的心愿武将id */
	/**玩家选择的心愿武将id */
	__getset(0,__proto,'LoveHero',function(){
		return this._LoveHero;
		},function(value){
		this._LoveHero=value;
	});

	/**宝物列表 */
	/**宝物列表 */
	__getset(0,__proto,'treasureList',function(){
		return this._treasureList;
		},function(value){
		this._treasureList=value;
	});

	/**试炼之塔信息 */
	/**试炼之塔信息 */
	__getset(0,__proto,'towerPosiTions',function(){
		return this._towerPosiTions;
		},function(value){
		this._towerPosiTions=value;
	});

	return InitBean;
})(Bean)


//class net.handler.upgrade.ResCommonUpgradeHandler extends net.MNetHandler
var ResCommonUpgradeHandler=(function(_super){
	function ResCommonUpgradeHandler(){
		ResCommonUpgradeHandler.__super.call(this);;
	}

	__class(ResCommonUpgradeHandler,'net.handler.upgrade.ResCommonUpgradeHandler',_super);
	var __proto=ResCommonUpgradeHandler.prototype;
	// 通用进阶
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonUpgradeHandler",msg);
	}

	return ResCommonUpgradeHandler;
})(MNetHandler)


//class net.handler.activities.ResWeekendXuYuanSelectErrorHandler extends net.MNetHandler
var ResWeekendXuYuanSelectErrorHandler=(function(_super){
	function ResWeekendXuYuanSelectErrorHandler(){
		ResWeekendXuYuanSelectErrorHandler.__super.call(this);;
	}

	__class(ResWeekendXuYuanSelectErrorHandler,'net.handler.activities.ResWeekendXuYuanSelectErrorHandler',_super);
	var __proto=ResWeekendXuYuanSelectErrorHandler.prototype;
	// 周末许愿
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResWeekendXuYuanSelectErrorHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengChallengeErrorHandler extends net.MNetHandler
var ResYuanZhengChallengeErrorHandler=(function(_super){
	function ResYuanZhengChallengeErrorHandler(){
		ResYuanZhengChallengeErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengChallengeErrorHandler,'net.handler.yuanzheng.ResYuanZhengChallengeErrorHandler',_super);
	var __proto=ResYuanZhengChallengeErrorHandler.prototype;
	// 远征挑战
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengChallengeErrorHandler",msg);
	}

	return ResYuanZhengChallengeErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResLookPlayerHandler extends net.MNetHandler
var ResLookPlayerHandler=(function(_super){
	function ResLookPlayerHandler(){
		ResLookPlayerHandler.__super.call(this);;
	}

	__class(ResLookPlayerHandler,'net.handler.chat.ResLookPlayerHandler',_super);
	var __proto=ResLookPlayerHandler.prototype;
	// 查看玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LookPlayerHandler",msg);
	}

	return ResLookPlayerHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的帮会对象
*/
//class net.message.gb.LegionBattleGuildBean extends engine.base.data.Bean
var LegionBattleGuildBean=(function(_super){
	function LegionBattleGuildBean(){
		/**唯一ID */
		this._uid=null;
		/**帮派名字 */
		this._name=null;
		/**服务器序号 */
		this._sno=0;
		LegionBattleGuildBean.__super.call(this);
	}

	__class(LegionBattleGuildBean,'net.message.gb.LegionBattleGuildBean',_super);
	var __proto=LegionBattleGuildBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._sno=this.readInt(_buf);
	}

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return LegionBattleGuildBean;
})(Bean)


//class net.handler.duanzao.ResDuanZaoUpgradeErrorHandler extends net.MNetHandler
var ResDuanZaoUpgradeErrorHandler=(function(_super){
	function ResDuanZaoUpgradeErrorHandler(){
		ResDuanZaoUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResDuanZaoUpgradeErrorHandler,'net.handler.duanzao.ResDuanZaoUpgradeErrorHandler',_super);
	var __proto=ResDuanZaoUpgradeErrorHandler.prototype;
	// 锻造升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DuanZaoUpgradeErrorHandler",msg.error);
	}

	return ResDuanZaoUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskGuildSquarePayErrorHandler extends net.MNetHandler
var ResTaskGuildSquarePayErrorHandler=(function(_super){
	function ResTaskGuildSquarePayErrorHandler(){
		ResTaskGuildSquarePayErrorHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquarePayErrorHandler,'net.handler.task.ResTaskGuildSquarePayErrorHandler',_super);
	var __proto=ResTaskGuildSquarePayErrorHandler.prototype;
	// 付费完成军团广场任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquarePayErrorHandler",msg);
	}

	return ResTaskGuildSquarePayErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征队伍成员
*/
//class net.message.yuanzheng.YuanzhengMemberBean extends engine.base.data.Bean
var YuanzhengMemberBean=(function(_super){
	function YuanzhengMemberBean(){
		/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
		this._fightType=0;
		/**ID */
		this._id=0;
		/**hp */
		this._hp=null;
		/**maxHp */
		this._maxHp=null;
		YuanzhengMemberBean.__super.call(this);
	}

	__class(YuanzhengMemberBean,'net.message.yuanzheng.YuanzhengMemberBean',_super);
	var __proto=YuanzhengMemberBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightType);
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._maxHp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightType=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._maxHp=this.readLong(_buf);
	}

	/**maxHp */
	/**maxHp */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
	/**类型[1:宠物][2:军师][3:蛮将][4:玄女][5:红颜][6:怪物][7:英雄][8:宝物] */
	__getset(0,__proto,'fightType',function(){
		return this._fightType;
		},function(value){
		this._fightType=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**hp */
	/**hp */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	return YuanzhengMemberBean;
})(Bean)


//class net.handler.worldboss.ResWorldBossJoinErrorHandler extends net.MNetHandler
var ResWorldBossJoinErrorHandler=(function(_super){
	function ResWorldBossJoinErrorHandler(){
		ResWorldBossJoinErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossJoinErrorHandler,'net.handler.worldboss.ResWorldBossJoinErrorHandler',_super);
	var __proto=ResWorldBossJoinErrorHandler.prototype;
	// 请求加入军团首领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossJoinErrorHandler",msg);
	}

	return ResWorldBossJoinErrorHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyUpdateCityHandler extends net.MNetHandler
var ResEmptyUpdateCityHandler=(function(_super){
	function ResEmptyUpdateCityHandler(){
		ResEmptyUpdateCityHandler.__super.call(this);;
	}

	__class(ResEmptyUpdateCityHandler,'net.handler.emptycity.ResEmptyUpdateCityHandler',_super);
	var __proto=ResEmptyUpdateCityHandler.prototype;
	// 更新空城计单位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyUpdateCityHandler",msg);
	}

	return ResEmptyUpdateCityHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerAttackResultErrorHandler extends net.MNetHandler
var ResNineHeavyPlayerAttackResultErrorHandler=(function(_super){
	function ResNineHeavyPlayerAttackResultErrorHandler(){
		ResNineHeavyPlayerAttackResultErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerAttackResultErrorHandler,'net.handler.nineHeavy.ResNineHeavyPlayerAttackResultErrorHandler',_super);
	var __proto=ResNineHeavyPlayerAttackResultErrorHandler.prototype;
	// 玩家攻击的结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerAttackResultErrorHandler",msg);
	}

	return ResNineHeavyPlayerAttackResultErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskFinishErrorHandler extends net.MNetHandler
var ResTaskFinishErrorHandler=(function(_super){
	function ResTaskFinishErrorHandler(){
		ResTaskFinishErrorHandler.__super.call(this);;
	}

	__class(ResTaskFinishErrorHandler,'net.handler.task.ResTaskFinishErrorHandler',_super);
	var __proto=ResTaskFinishErrorHandler.prototype;
	// 完成任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskFinishErrorHandler",msg);
	}

	return ResTaskFinishErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*投资计划对象
*/
//class net.message.investment.InvestmentBean extends engine.base.data.Bean
var InvestmentBean=(function(_super){
	function InvestmentBean(){
		/**投资计划是否已经购买 0 没有 1已经买了 */
		this._investment=0;
		/**成长基金是否已经购买 0 没有 1已经买了 */
		this._growUp=0;
		/**上次登录时间 */
		this._loginTime=null;
		/**登陆天数 */
		this._loginCount=0;
		InvestmentBean.__super.call(this);
		this._investmentTasks=[];
		this._growUpTasks=[];
	}

	__class(InvestmentBean,'net.message.investment.InvestmentBean',_super);
	var __proto=InvestmentBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._investment);
		this.writeInt(_buf,this._growUp);
		this.writeLong(_buf,this._loginTime);
		this.writeInt(_buf,this._loginCount);
		this.writeInt(_buf,this._investmentTasks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._investmentTasks.length;++i_am_tmp_i){
			this._investmentTasks[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._growUpTasks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._growUpTasks.length;++i_am_tmp_i){
			this._growUpTasks[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._investment=this.readInt(_buf);
		this._growUp=this.readInt(_buf);
		this._loginTime=this.readLong(_buf);
		this._loginCount=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._investmentTasks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._investmentTasks[i_am_tmp_i]=this.readBeanInList(_buf,InvestmentTaskBean);
		}
		size52413035=this.readInt(_buf);
		this._growUpTasks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._growUpTasks[i_am_tmp_i]=this.readBeanInList(_buf,InvestmentTaskBean);
		}
	}

	/**投资计划是否已经购买 0 没有 1已经买了 */
	/**投资计划是否已经购买 0 没有 1已经买了 */
	__getset(0,__proto,'investment',function(){
		return this._investment;
		},function(value){
		this._investment=value;
	});

	/**成长基金任务 */
	/**成长基金任务 */
	__getset(0,__proto,'growUpTasks',function(){
		return this._growUpTasks;
		},function(value){
		this._growUpTasks=value;
	});

	/**成长基金是否已经购买 0 没有 1已经买了 */
	/**成长基金是否已经购买 0 没有 1已经买了 */
	__getset(0,__proto,'growUp',function(){
		return this._growUp;
		},function(value){
		this._growUp=value;
	});

	/**上次登录时间 */
	/**上次登录时间 */
	__getset(0,__proto,'loginTime',function(){
		return this._loginTime;
		},function(value){
		this._loginTime=value;
	});

	/**登陆天数 */
	/**登陆天数 */
	__getset(0,__proto,'loginCount',function(){
		return this._loginCount;
		},function(value){
		this._loginCount=value;
	});

	/**投资计划任务 */
	/**投资计划任务 */
	__getset(0,__proto,'investmentTasks',function(){
		return this._investmentTasks;
		},function(value){
		this._investmentTasks=value;
	});

	return InvestmentBean;
})(Bean)


//class net.handler.login.ResLoginForTypeErrorHandler extends net.MNetHandler
var ResLoginForTypeErrorHandler=(function(_super){
	function ResLoginForTypeErrorHandler(){
		ResLoginForTypeErrorHandler.__super.call(this);;
	}

	__class(ResLoginForTypeErrorHandler,'net.handler.login.ResLoginForTypeErrorHandler',_super);
	var __proto=ResLoginForTypeErrorHandler.prototype;
	// 登录(本地)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LoginForTypeErrorHandler",msg);
	}

	return ResLoginForTypeErrorHandler;
})(MNetHandler)


//class net.handler.goodLuck.ResSendGoodLuckHandler extends net.MNetHandler
var ResSendGoodLuckHandler=(function(_super){
	function ResSendGoodLuckHandler(){
		ResSendGoodLuckHandler.__super.call(this);;
	}

	__class(ResSendGoodLuckHandler,'net.handler.goodLuck.ResSendGoodLuckHandler',_super);
	var __proto=ResSendGoodLuckHandler.prototype;
	// 发送祥瑞
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("StartXiangRuiHandler",msg);
	}

	return ResSendGoodLuckHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangePositionErrorHandler extends net.MNetHandler
var ResGuildChangePositionErrorHandler=(function(_super){
	function ResGuildChangePositionErrorHandler(){
		ResGuildChangePositionErrorHandler.__super.call(this);;
	}

	__class(ResGuildChangePositionErrorHandler,'net.handler.guild.ResGuildChangePositionErrorHandler',_super);
	var __proto=ResGuildChangePositionErrorHandler.prototype;
	// 修改职位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangePositionErrorHandler",msg);
	}

	return ResGuildChangePositionErrorHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookDecomposeHandler extends net.MNetHandler
var ResHandBookDecomposeHandler=(function(_super){
	function ResHandBookDecomposeHandler(){
		ResHandBookDecomposeHandler.__super.call(this);;
	}

	__class(ResHandBookDecomposeHandler,'net.handler.handbook.ResHandBookDecomposeHandler',_super);
	var __proto=ResHandBookDecomposeHandler.prototype;
	// 图鉴分解
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookDecomposeHandler");
	}

	return ResHandBookDecomposeHandler;
})(MNetHandler)


//class net.handler.shop.ResUpdateShopInfoHandler extends net.MNetHandler
var ResUpdateShopInfoHandler=(function(_super){
	function ResUpdateShopInfoHandler(){
		ResUpdateShopInfoHandler.__super.call(this);;
	}

	__class(ResUpdateShopInfoHandler,'net.handler.shop.ResUpdateShopInfoHandler',_super);
	var __proto=ResUpdateShopInfoHandler.prototype;
	// 获取商店商品信息,初次打开面板请求一次即可
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateShopInfoHandler",msg);
	}

	return ResUpdateShopInfoHandler;
})(MNetHandler)


//class net.handler.equip.ResUpGradeEquipHandler extends net.MNetHandler
var ResUpGradeEquipHandler=(function(_super){
	function ResUpGradeEquipHandler(){
		ResUpGradeEquipHandler.__super.call(this);;
	}

	__class(ResUpGradeEquipHandler,'net.handler.equip.ResUpGradeEquipHandler',_super);
	var __proto=ResUpGradeEquipHandler.prototype;
	// 升级圣甲圣武
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpGradeEquipHandler",msg);
	}

	return ResUpGradeEquipHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*排行榜玩家
*/
//class net.message.rank.RankBeanUser extends engine.base.data.Bean
var RankBeanUser=(function(_super){
	function RankBeanUser(){
		/**名字 */
		this._name=null;
		/**id */
		this._userId=null;
		/**等级 */
		this._level=0;
		/**vip等级 */
		this._vip=0;
		/**是否月卡 */
		this._yueka=false;
		/**是否终生咔 */
		this._zhongshengka=false;
		/**战力 */
		this._fightPower=null;
		/**职业 */
		this._profession=0;
		/**性别 */
		this._gender=0;
		/**坐骑 */
		this._horse=0;
		/**坐骑 */
		this._wing=0;
		/**武器 */
		this._armor=0;
		/**衣服 */
		this._clothes=0;
		/**主站武将id */
		this._mainPet=0;
		/**主站红颜id */
		this._mainHongYan=0;
		/**主站军师id */
		this._mainJunShi=0;
		/**主站蛮将id */
		this._mainManJiang=0;
		/**主站合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._mainFitType=0;
		/**主站合体id */
		this._mainFitId=0;
		/**结婚对象名字 */
		this._marryName=null;
		/**服务器序号 */
		this._sno=0;
		RankBeanUser.__super.call(this);
		this._params=[];
		this._skinList=[];
		this._pet=[];
	}

	__class(RankBeanUser,'net.message.rank.RankBeanUser',_super);
	var __proto=RankBeanUser.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._userId);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._vip);
		this.writeBoolean(_buf,this._yueka);
		this.writeBoolean(_buf,this._zhongshengka);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._horse);
		this.writeInt(_buf,this._wing);
		this.writeInt(_buf,this._armor);
		this.writeInt(_buf,this._params.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._params.length;++i_am_tmp_i){
			this.writeLong(_buf,this._params[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._clothes);
		this.writeInt(_buf,this._skinList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._mainPet);
		this.writeInt(_buf,this._mainHongYan);
		this.writeInt(_buf,this._mainJunShi);
		this.writeInt(_buf,this._mainManJiang);
		this.writeInt(_buf,this._mainFitType);
		this.writeInt(_buf,this._mainFitId);
		this.writeInt(_buf,this._pet.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pet.length;++i_am_tmp_i){
			this.writeInt(_buf,this._pet[i_am_tmp_i]);
		}
		this.writeString(_buf,this._marryName);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._userId=this.readLong(_buf);
		this._level=this.readInt(_buf);
		this._vip=this.readInt(_buf);
		this._yueka=this.readBoolean(_buf);
		this._zhongshengka=this.readBoolean(_buf);
		this._fightPower=this.readLong(_buf);
		this._profession=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._horse=this.readInt(_buf);
		this._wing=this.readInt(_buf);
		this._armor=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._params=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._params[i_am_tmp_i]=this.readLong(_buf);
		}
		this._clothes=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinList[i_am_tmp_i]=this.readInt(_buf);
		}
		this._mainPet=this.readInt(_buf);
		this._mainHongYan=this.readInt(_buf);
		this._mainJunShi=this.readInt(_buf);
		this._mainManJiang=this.readInt(_buf);
		this._mainFitType=this.readInt(_buf);
		this._mainFitId=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._pet=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pet[i_am_tmp_i]=this.readInt(_buf);
		}
		this._marryName=this.readString(_buf);
		this._sno=this.readInt(_buf);
	}

	/**是否月卡 */
	/**是否月卡 */
	__getset(0,__proto,'yueka',function(){
		return this._yueka;
		},function(value){
		this._yueka=value;
	});

	/**坐骑 */
	/**坐骑 */
	__getset(0,__proto,'horse',function(){
		return this._horse;
		},function(value){
		this._horse=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'userId',function(){
		return this._userId;
		},function(value){
		this._userId=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**是否终生咔 */
	/**是否终生咔 */
	__getset(0,__proto,'zhongshengka',function(){
		return this._zhongshengka;
		},function(value){
		this._zhongshengka=value;
	});

	/**vip等级 */
	/**vip等级 */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**坐骑 */
	/**坐骑 */
	__getset(0,__proto,'wing',function(){
		return this._wing;
		},function(value){
		this._wing=value;
	});

	/**武器 */
	/**武器 */
	__getset(0,__proto,'armor',function(){
		return this._armor;
		},function(value){
		this._armor=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	/**衣服 */
	/**衣服 */
	__getset(0,__proto,'clothes',function(){
		return this._clothes;
		},function(value){
		this._clothes=value;
	});

	/**各部位时装id */
	/**各部位时装id */
	__getset(0,__proto,'skinList',function(){
		return this._skinList;
		},function(value){
		this._skinList=value;
	});

	/**主站武将id */
	/**主站武将id */
	__getset(0,__proto,'mainPet',function(){
		return this._mainPet;
		},function(value){
		this._mainPet=value;
	});

	/**主站红颜id */
	/**主站红颜id */
	__getset(0,__proto,'mainHongYan',function(){
		return this._mainHongYan;
		},function(value){
		this._mainHongYan=value;
	});

	/**主站军师id */
	/**主站军师id */
	__getset(0,__proto,'mainJunShi',function(){
		return this._mainJunShi;
		},function(value){
		this._mainJunShi=value;
	});

	/**主站蛮将id */
	/**主站蛮将id */
	__getset(0,__proto,'mainManJiang',function(){
		return this._mainManJiang;
		},function(value){
		this._mainManJiang=value;
	});

	/**主站合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**主站合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'mainFitType',function(){
		return this._mainFitType;
		},function(value){
		this._mainFitType=value;
	});

	/**主站合体id */
	/**主站合体id */
	__getset(0,__proto,'mainFitId',function(){
		return this._mainFitId;
		},function(value){
		this._mainFitId=value;
	});

	/**阵容 */
	/**阵容 */
	__getset(0,__proto,'pet',function(){
		return this._pet;
		},function(value){
		this._pet=value;
	});

	/**结婚对象名字 */
	/**结婚对象名字 */
	__getset(0,__proto,'marryName',function(){
		return this._marryName;
		},function(value){
		this._marryName=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return RankBeanUser;
})(Bean)


//class net.handler.escort.ResKillEscortTimeHandler extends net.MNetHandler
var ResKillEscortTimeHandler=(function(_super){
	function ResKillEscortTimeHandler(){
		ResKillEscortTimeHandler.__super.call(this);;
	}

	__class(ResKillEscortTimeHandler,'net.handler.escort.ResKillEscortTimeHandler',_super);
	var __proto=ResKillEscortTimeHandler.prototype;
	// 秒杀押运时间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KillEscortTimeHandler" ,msg);
	}

	return ResKillEscortTimeHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSynthesisHandler extends net.MNetHandler
var ResFitSynthesisHandler=(function(_super){
	function ResFitSynthesisHandler(){
		ResFitSynthesisHandler.__super.call(this);;
	}

	__class(ResFitSynthesisHandler,'net.handler.fit.ResFitSynthesisHandler',_super);
	var __proto=ResFitSynthesisHandler.prototype;
	// 合体
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSynthesisHandler" ,msg);
	}

	return ResFitSynthesisHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResSelectLoveHeroHandler extends net.MNetHandler
var ResSelectLoveHeroHandler=(function(_super){
	function ResSelectLoveHeroHandler(){
		ResSelectLoveHeroHandler.__super.call(this);;
	}

	__class(ResSelectLoveHeroHandler,'net.handler.textureHunt.ResSelectLoveHeroHandler',_super);
	var __proto=ResSelectLoveHeroHandler.prototype;
	// 更新幸运寻宝次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSelectLoveHeroHandler",msg);
	}

	return ResSelectLoveHeroHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveDungeonPrizeErrorHandler extends net.MNetHandler
var ResReceiveDungeonPrizeErrorHandler=(function(_super){
	function ResReceiveDungeonPrizeErrorHandler(){
		ResReceiveDungeonPrizeErrorHandler.__super.call(this);;
	}

	__class(ResReceiveDungeonPrizeErrorHandler,'net.handler.dungeon.ResReceiveDungeonPrizeErrorHandler',_super);
	var __proto=ResReceiveDungeonPrizeErrorHandler.prototype;
	// 领取副本奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveDungeonPrizeErrorHandler",msg);
	}

	return ResReceiveDungeonPrizeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进阶豪礼
*/
//class net.message.advanceReward.AdvancedRewardBean extends engine.base.data.Bean
var AdvancedRewardBean=(function(_super){
	function AdvancedRewardBean(){
		AdvancedRewardBean.__super.call(this);
		this._list=[];
	}

	__class(AdvancedRewardBean,'net.message.advanceReward.AdvancedRewardBean',_super);
	var __proto=AdvancedRewardBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this.writeInt(_buf,this._list[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**已领取id列表 */
	/**已领取id列表 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return AdvancedRewardBean;
})(Bean)


//class net.handler.skin.ResActivateSkinHandler extends net.MNetHandler
var ResActivateSkinHandler=(function(_super){
	function ResActivateSkinHandler(){
		ResActivateSkinHandler.__super.call(this);;
	}

	__class(ResActivateSkinHandler,'net.handler.skin.ResActivateSkinHandler',_super);
	var __proto=ResActivateSkinHandler.prototype;
	// 激活时装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivateSkinHandler",msg);
	}

	return ResActivateSkinHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*血量变更
*/
//class net.message.fight.FightHpChangeBean extends engine.base.data.Bean
var FightHpChangeBean=(function(_super){
	function FightHpChangeBean(){
		/**序号 */
		this._index=0;
		/**对象唯一ID */
		this._uid=0;
		/**当前血量 */
		this._hp=null;
		/**当前护盾 */
		this._shield=null;
		/**当前护盾最大值 */
		this._shieldMax=null;
		FightHpChangeBean.__super.call(this);
	}

	__class(FightHpChangeBean,'net.message.fight.FightHpChangeBean',_super);
	var __proto=FightHpChangeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._uid);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._shield);
		this.writeLong(_buf,this._shieldMax);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._uid=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._shield=this.readLong(_buf);
		this._shieldMax=this.readLong(_buf);
	}

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**当前血量 */
	/**当前血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**对象唯一ID */
	/**对象唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**当前护盾 */
	/**当前护盾 */
	__getset(0,__proto,'shield',function(){
		return this._shield;
		},function(value){
		this._shield=value;
	});

	/**当前护盾最大值 */
	/**当前护盾最大值 */
	__getset(0,__proto,'shieldMax',function(){
		return this._shieldMax;
		},function(value){
		this._shieldMax=value;
	});

	return FightHpChangeBean;
})(Bean)


//class net.handler.goods.ResUpdateExchangeCountHandler extends net.MNetHandler
var ResUpdateExchangeCountHandler=(function(_super){
	function ResUpdateExchangeCountHandler(){
		ResUpdateExchangeCountHandler.__super.call(this);;
	}

	__class(ResUpdateExchangeCountHandler,'net.handler.goods.ResUpdateExchangeCountHandler',_super);
	var __proto=ResUpdateExchangeCountHandler.prototype;
	// 剩余可兑换次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EXCHANGGECOIN",msg);
	}

	return ResUpdateExchangeCountHandler;
})(MNetHandler)


//class net.handler.shimen.ResTakeShiMenRoundPrizeHandler extends net.MNetHandler
var ResTakeShiMenRoundPrizeHandler=(function(_super){
	function ResTakeShiMenRoundPrizeHandler(){
		ResTakeShiMenRoundPrizeHandler.__super.call(this);;
	}

	__class(ResTakeShiMenRoundPrizeHandler,'net.handler.shimen.ResTakeShiMenRoundPrizeHandler',_super);
	var __proto=ResTakeShiMenRoundPrizeHandler.prototype;
	// 领取师门环奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeShiMenRoundPrizeHandler",msg);
	}

	return ResTakeShiMenRoundPrizeHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyXilianHandler extends net.MNetHandler
var ResSoulBoyXilianHandler=(function(_super){
	function ResSoulBoyXilianHandler(){
		ResSoulBoyXilianHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianHandler,'net.handler.soulboy.ResSoulBoyXilianHandler',_super);
	var __proto=ResSoulBoyXilianHandler.prototype;
	// 灵童被动技能洗练
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianHandler",msg);
	}

	return ResSoulBoyXilianHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageGiftErrorHandler extends net.MNetHandler
var ResMarriageGiftErrorHandler=(function(_super){
	function ResMarriageGiftErrorHandler(){
		ResMarriageGiftErrorHandler.__super.call(this);;
	}

	__class(ResMarriageGiftErrorHandler,'net.handler.marriage.ResMarriageGiftErrorHandler',_super);
	var __proto=ResMarriageGiftErrorHandler.prototype;
	// 发送贺礼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageGiftErrorHandler",msg);
	}

	return ResMarriageGiftErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamMemberRemoveHandler extends net.MNetHandler
var ResTeamMemberRemoveHandler=(function(_super){
	function ResTeamMemberRemoveHandler(){
		ResTeamMemberRemoveHandler.__super.call(this);;
	}

	__class(ResTeamMemberRemoveHandler,'net.handler.team.ResTeamMemberRemoveHandler',_super);
	var __proto=ResTeamMemberRemoveHandler.prototype;
	// 队伍移除成员
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamMemberRemoveHandler",msg);
	}

	return ResTeamMemberRemoveHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*特殊活动消息
*/
//class net.message.activities.SpecialActInfoBean extends engine.base.data.Bean
var SpecialActInfoBean=(function(_super){
	function SpecialActInfoBean(){
		/**活动配置id */
		this._cfgId=0;
		/**开始时间戳，毫秒 */
		this._startTime=null;
		/**结束时间戳，毫秒 */
		this._endTime=null;
		SpecialActInfoBean.__super.call(this);
	}

	__class(SpecialActInfoBean,'net.message.activities.SpecialActInfoBean',_super);
	var __proto=SpecialActInfoBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._cfgId);
		this.writeLong(_buf,this._startTime);
		this.writeLong(_buf,this._endTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cfgId=this.readInt(_buf);
		this._startTime=this.readLong(_buf);
		this._endTime=this.readLong(_buf);
	}

	/**活动配置id */
	/**活动配置id */
	__getset(0,__proto,'cfgId',function(){
		return this._cfgId;
		},function(value){
		this._cfgId=value;
	});

	/**开始时间戳，毫秒 */
	/**开始时间戳，毫秒 */
	__getset(0,__proto,'startTime',function(){
		return this._startTime;
		},function(value){
		this._startTime=value;
	});

	/**结束时间戳，毫秒 */
	/**结束时间戳，毫秒 */
	__getset(0,__proto,'endTime',function(){
		return this._endTime;
		},function(value){
		this._endTime=value;
	});

	return SpecialActInfoBean;
})(Bean)


//class net.handler.yuanzheng.ResYuanZhengTakeSkillErrorHandler extends net.MNetHandler
var ResYuanZhengTakeSkillErrorHandler=(function(_super){
	function ResYuanZhengTakeSkillErrorHandler(){
		ResYuanZhengTakeSkillErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengTakeSkillErrorHandler,'net.handler.yuanzheng.ResYuanZhengTakeSkillErrorHandler',_super);
	var __proto=ResYuanZhengTakeSkillErrorHandler.prototype;
	// 远征领取技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengTakeSkillErrorHandler",msg);
	}

	return ResYuanZhengTakeSkillErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossDetailHandler extends net.MNetHandler
var ResWorldBossDetailHandler=(function(_super){
	function ResWorldBossDetailHandler(){
		ResWorldBossDetailHandler.__super.call(this);;
	}

	__class(ResWorldBossDetailHandler,'net.handler.worldboss.ResWorldBossDetailHandler',_super);
	var __proto=ResWorldBossDetailHandler.prototype;
	// 请求军团首领的大概信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossDetailHandler",msg);
	}

	return ResWorldBossDetailHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipMakingErrorHandler extends net.MNetHandler
var ResEquipMakingErrorHandler=(function(_super){
	function ResEquipMakingErrorHandler(){
		ResEquipMakingErrorHandler.__super.call(this);;
	}

	__class(ResEquipMakingErrorHandler,'net.handler.equip.ResEquipMakingErrorHandler',_super);
	var __proto=ResEquipMakingErrorHandler.prototype;
	// 打造装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipMakingErrorHandler",msg);
	}

	return ResEquipMakingErrorHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipSuitActiveErrorHandler extends net.MNetHandler
var ResEquipSuitActiveErrorHandler=(function(_super){
	function ResEquipSuitActiveErrorHandler(){
		ResEquipSuitActiveErrorHandler.__super.call(this);;
	}

	__class(ResEquipSuitActiveErrorHandler,'net.handler.equip.ResEquipSuitActiveErrorHandler',_super);
	var __proto=ResEquipSuitActiveErrorHandler.prototype;
	// 打造装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipSuitActiveErrorMessage",msg);
	}

	return ResEquipSuitActiveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*九重天对象
*/
//class net.message.nineHeavy.NineHeavyPlayerBean extends engine.base.data.Bean
var NineHeavyPlayerBean=(function(_super){
	function NineHeavyPlayerBean(){
		/**参与活动的用户对象ID */
		this._uid=null;
		/**玩家的积分 */
		this._integral=0;
		/**玩家所在层数 */
		this._gradation=0;
		/**复活时间 */
		this._rebornTime=0;
		/**对象位置 */
		this._point=null;
		/**外形 */
		this._appearanceBean=null;
		NineHeavyPlayerBean.__super.call(this);
		this._integralReward=[];
	}

	__class(NineHeavyPlayerBean,'net.message.nineHeavy.NineHeavyPlayerBean',_super);
	var __proto=NineHeavyPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._integral);
		this.writeInt(_buf,this._gradation);
		this.writeInt(_buf,this._rebornTime);
		this.writeBean(_buf,this._point);
		this.writeInt(_buf,this._integralReward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._integralReward.length;++i_am_tmp_i){
			this.writeInt(_buf,this._integralReward[i_am_tmp_i]);
		}
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._integral=this.readInt(_buf);
		this._gradation=this.readInt(_buf);
		this._rebornTime=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
		size52413035=this.readInt(_buf);
		this._integralReward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._integralReward[i_am_tmp_i]=this.readInt(_buf);
		}
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	/**玩家的积分 */
	/**玩家的积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**参与活动的用户对象ID */
	/**参与活动的用户对象ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**积分奖励 */
	/**积分奖励 */
	__getset(0,__proto,'integralReward',function(){
		return this._integralReward;
		},function(value){
		this._integralReward=value;
	});

	/**玩家所在层数 */
	/**玩家所在层数 */
	__getset(0,__proto,'gradation',function(){
		return this._gradation;
		},function(value){
		this._gradation=value;
	});

	/**复活时间 */
	/**复活时间 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	/**对象位置 */
	/**对象位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return NineHeavyPlayerBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyMonsterFlushHandler extends net.MNetHandler
var ResNineHeavyMonsterFlushHandler=(function(_super){
	function ResNineHeavyMonsterFlushHandler(){
		ResNineHeavyMonsterFlushHandler.__super.call(this);;
	}

	__class(ResNineHeavyMonsterFlushHandler,'net.handler.nineHeavy.ResNineHeavyMonsterFlushHandler',_super);
	var __proto=ResNineHeavyMonsterFlushHandler.prototype;
	// 怪物刷新
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyMonsterFlushHandler",msg);
	}

	return ResNineHeavyMonsterFlushHandler;
})(MNetHandler)


//class net.handler.rank.ResGetRankInfoHandler extends net.MNetHandler
var ResGetRankInfoHandler=(function(_super){
	function ResGetRankInfoHandler(){
		ResGetRankInfoHandler.__super.call(this);;
	}

	__class(ResGetRankInfoHandler,'net.handler.rank.ResGetRankInfoHandler',_super);
	var __proto=ResGetRankInfoHandler.prototype;
	// 激活宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetRankInfoHandler",msg);
	}

	return ResGetRankInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*书生
*/
//class net.message.yuanzheng.YuanZhengShuShengBean extends engine.base.data.Bean
var YuanZhengShuShengBean=(function(_super){
	function YuanZhengShuShengBean(){
		/**关卡ID */
		this._guanqiaID=0;
		/**道具ID */
		this._goodsID=0;
		/**原价 */
		this._priceSB=0;
		/**现价 */
		this._price=0;
		/**是否可购买 */
		this._buy=false;
		YuanZhengShuShengBean.__super.call(this);
	}

	__class(YuanZhengShuShengBean,'net.message.yuanzheng.YuanZhengShuShengBean',_super);
	var __proto=YuanZhengShuShengBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeInt(_buf,this._goodsID);
		this.writeInt(_buf,this._priceSB);
		this.writeInt(_buf,this._price);
		this.writeBoolean(_buf,this._buy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._goodsID=this.readInt(_buf);
		this._priceSB=this.readInt(_buf);
		this._price=this.readInt(_buf);
		this._buy=this.readBoolean(_buf);
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'goodsID',function(){
		return this._goodsID;
		},function(value){
		this._goodsID=value;
	});

	/**是否可购买 */
	/**是否可购买 */
	__getset(0,__proto,'buy',function(){
		return this._buy;
		},function(value){
		this._buy=value;
	});

	/**原价 */
	/**原价 */
	__getset(0,__proto,'priceSB',function(){
		return this._priceSB;
		},function(value){
		this._priceSB=value;
	});

	/**现价 */
	/**现价 */
	__getset(0,__proto,'price',function(){
		return this._price;
		},function(value){
		this._price=value;
	});

	return YuanZhengShuShengBean;
})(Bean)


//class net.handler.activities.ResGoldDoubleActHandler extends net.MNetHandler
var ResGoldDoubleActHandler=(function(_super){
	function ResGoldDoubleActHandler(){
		ResGoldDoubleActHandler.__super.call(this);;
	}

	__class(ResGoldDoubleActHandler,'net.handler.activities.ResGoldDoubleActHandler',_super);
	var __proto=ResGoldDoubleActHandler.prototype;
	// 刀币翻倍活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGoldDoubleActHandler",msg);
	}

	return ResGoldDoubleActHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetEquipErrorHandler extends net.MNetHandler
var ResFitSetEquipErrorHandler=(function(_super){
	function ResFitSetEquipErrorHandler(){
		ResFitSetEquipErrorHandler.__super.call(this);;
	}

	__class(ResFitSetEquipErrorHandler,'net.handler.fit.ResFitSetEquipErrorHandler',_super);
	var __proto=ResFitSetEquipErrorHandler.prototype;
	// 穿戴合体装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetEquipErrorHandler" ,msg);
	}

	return ResFitSetEquipErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*投资计划任务
*/
//class net.message.investment.InvestmentTaskBean extends engine.base.data.Bean
var InvestmentTaskBean=(function(_super){
	function InvestmentTaskBean(){
		/**任务ID */
		this._id=0;
		/**是否已经领取奖励 */
		this._reward=0;
		InvestmentTaskBean.__super.call(this);
	}

	__class(InvestmentTaskBean,'net.message.investment.InvestmentTaskBean',_super);
	var __proto=InvestmentTaskBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._reward);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._reward=this.readInt(_buf);
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否已经领取奖励 */
	/**是否已经领取奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return InvestmentTaskBean;
})(Bean)


//class net.handler.soulboy.ResSoulBoyXilianReplaceHandler extends net.MNetHandler
var ResSoulBoyXilianReplaceHandler=(function(_super){
	function ResSoulBoyXilianReplaceHandler(){
		ResSoulBoyXilianReplaceHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianReplaceHandler,'net.handler.soulboy.ResSoulBoyXilianReplaceHandler',_super);
	var __proto=ResSoulBoyXilianReplaceHandler.prototype;
	// 灵童洗练技能覆盖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianReplaceHandler",msg);
	}

	return ResSoulBoyXilianReplaceHandler;
})(MNetHandler)


//class net.handler.redEnvelopes.ResRedEnvelopesHandler extends net.MNetHandler
var ResRedEnvelopesHandler=(function(_super){
	function ResRedEnvelopesHandler(){
		ResRedEnvelopesHandler.__super.call(this);;
	}

	__class(ResRedEnvelopesHandler,'net.handler.redEnvelopes.ResRedEnvelopesHandler',_super);
	var __proto=ResRedEnvelopesHandler.prototype;
	// 抢
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RedEnvelopesHandler",msg);
	}

	return ResRedEnvelopesHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyDestinyErrorHandler extends net.MNetHandler
var ResSoulBoyDestinyErrorHandler=(function(_super){
	function ResSoulBoyDestinyErrorHandler(){
		ResSoulBoyDestinyErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyDestinyErrorHandler,'net.handler.soulboy.ResSoulBoyDestinyErrorHandler',_super);
	var __proto=ResSoulBoyDestinyErrorHandler.prototype;
	// 灵童装备命格
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyDestinyErrorHandler",msg);
	}

	return ResSoulBoyDestinyErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResLimitWuJiangHuntActHandler extends net.MNetHandler
var ResLimitWuJiangHuntActHandler=(function(_super){
	function ResLimitWuJiangHuntActHandler(){
		ResLimitWuJiangHuntActHandler.__super.call(this);;
	}

	__class(ResLimitWuJiangHuntActHandler,'net.handler.activities.ResLimitWuJiangHuntActHandler',_super);
	var __proto=ResLimitWuJiangHuntActHandler.prototype;
	// 限定武将活动
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResLimitWuJiangHuntActHandler;
})(MNetHandler)


//class net.handler.treasure.ResTreasureStarUpErrorHandler extends net.MNetHandler
var ResTreasureStarUpErrorHandler=(function(_super){
	function ResTreasureStarUpErrorHandler(){
		ResTreasureStarUpErrorHandler.__super.call(this);;
	}

	__class(ResTreasureStarUpErrorHandler,'net.handler.treasure.ResTreasureStarUpErrorHandler',_super);
	var __proto=ResTreasureStarUpErrorHandler.prototype;
	// 宝物升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasureActiveErrorHandler",msg.error);
	}

	return ResTreasureStarUpErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店分页
*/
//class net.message.shop.ShopTabBean extends engine.base.data.Bean
var ShopTabBean=(function(_super){
	function ShopTabBean(){
		/**商店分页类型 */
		this._type=0;
		/**过期时间(unix时间戳，单位秒，0表示不过期)*/
		this._overtime=0;
		ShopTabBean.__super.call(this);
		this._shopGoods=[];
	}

	__class(ShopTabBean,'net.message.shop.ShopTabBean',_super);
	var __proto=ShopTabBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._shopGoods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._shopGoods.length;++i_am_tmp_i){
			this._shopGoods[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._overtime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._shopGoods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._shopGoods[i_am_tmp_i]=this.readBeanInList(_buf,ShopGoodsBean);
		}
		this._overtime=this.readInt(_buf);
	}

	/**商品 */
	/**商品 */
	__getset(0,__proto,'shopGoods',function(){
		return this._shopGoods;
		},function(value){
		this._shopGoods=value;
	});

	/**商店分页类型 */
	/**商店分页类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**过期时间(unix时间戳，单位秒，0表示不过期)*/
	/**过期时间(unix时间戳，单位秒，0表示不过期)*/
	__getset(0,__proto,'overtime',function(){
		return this._overtime;
		},function(value){
		this._overtime=value;
	});

	return ShopTabBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyPlayerUpstairsHandler extends net.MNetHandler
var ResNineHeavyPlayerUpstairsHandler=(function(_super){
	function ResNineHeavyPlayerUpstairsHandler(){
		ResNineHeavyPlayerUpstairsHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerUpstairsHandler,'net.handler.nineHeavy.ResNineHeavyPlayerUpstairsHandler',_super);
	var __proto=ResNineHeavyPlayerUpstairsHandler.prototype;
	// 上楼对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerUpstairsHandler",msg);
	}

	return ResNineHeavyPlayerUpstairsHandler;
})(MNetHandler)


//class net.handler.escort.ResUpdateEscortHandler extends net.MNetHandler
var ResUpdateEscortHandler=(function(_super){
	function ResUpdateEscortHandler(){
		ResUpdateEscortHandler.__super.call(this);;
	}

	__class(ResUpdateEscortHandler,'net.handler.escort.ResUpdateEscortHandler',_super);
	var __proto=ResUpdateEscortHandler.prototype;
	// 更新押运数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateEscortHandler" ,msg.bean);
	}

	return ResUpdateEscortHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetSkillErrorHandler extends net.MNetHandler
var ResFitSetSkillErrorHandler=(function(_super){
	function ResFitSetSkillErrorHandler(){
		ResFitSetSkillErrorHandler.__super.call(this);;
	}

	__class(ResFitSetSkillErrorHandler,'net.handler.fit.ResFitSetSkillErrorHandler',_super);
	var __proto=ResFitSetSkillErrorHandler.prototype;
	// 设置合体技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetSkillErrorHandler" ,msg);
	}

	return ResFitSetSkillErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军师元素
*/
//class net.message.adviser.AdviserElementBean extends engine.base.data.Bean
var AdviserElementBean=(function(_super){
	function AdviserElementBean(){
		/**元素等级 */
		this._lv=0;
		/**元素升级进度 */
		this._progress=0;
		AdviserElementBean.__super.call(this);
	}

	__class(AdviserElementBean,'net.message.adviser.AdviserElementBean',_super);
	var __proto=AdviserElementBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	/**元素等级 */
	/**元素等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**元素升级进度 */
	/**元素升级进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return AdviserElementBean;
})(Bean)


//class net.handler.todayrecommend.ResRecommendTaskRewardHandler extends net.MNetHandler
var ResRecommendTaskRewardHandler=(function(_super){
	function ResRecommendTaskRewardHandler(){
		ResRecommendTaskRewardHandler.__super.call(this);;
	}

	__class(ResRecommendTaskRewardHandler,'net.handler.todayrecommend.ResRecommendTaskRewardHandler',_super);
	var __proto=ResRecommendTaskRewardHandler.prototype;
	// 领取任务奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RecommendTaskRewardHandler",msg);
	}

	return ResRecommendTaskRewardHandler;
})(MNetHandler)


//class net.handler.fight.ResPVPFightOverUnlockHandler extends net.MNetHandler
var ResPVPFightOverUnlockHandler=(function(_super){
	function ResPVPFightOverUnlockHandler(){
		ResPVPFightOverUnlockHandler.__super.call(this);;
	}

	__class(ResPVPFightOverUnlockHandler,'net.handler.fight.ResPVPFightOverUnlockHandler',_super);
	var __proto=ResPVPFightOverUnlockHandler.prototype;
	// pvp战斗结束请求解锁
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResPVPFightOverUnlockHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyCityAttackHandler extends net.MNetHandler
var ResEmptyCityAttackHandler=(function(_super){
	function ResEmptyCityAttackHandler(){
		ResEmptyCityAttackHandler.__super.call(this);;
	}

	__class(ResEmptyCityAttackHandler,'net.handler.emptycity.ResEmptyCityAttackHandler',_super);
	var __proto=ResEmptyCityAttackHandler.prototype;
	// 攻击城市
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyCityAttackHandler",msg);
	}

	return ResEmptyCityAttackHandler;
})(MNetHandler)


//class net.handler.investment.ResGuanQiaInvestmentGetRewardMessageHandler extends net.MNetHandler
var ResGuanQiaInvestmentGetRewardMessageHandler=(function(_super){
	function ResGuanQiaInvestmentGetRewardMessageHandler(){
		ResGuanQiaInvestmentGetRewardMessageHandler.__super.call(this);;
	}

	__class(ResGuanQiaInvestmentGetRewardMessageHandler,'net.handler.investment.ResGuanQiaInvestmentGetRewardMessageHandler',_super);
	var __proto=ResGuanQiaInvestmentGetRewardMessageHandler.prototype;
	// 关卡投资计划领奖
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGuanQiaInvestmentGetRewardMessageHandler;
})(MNetHandler)


//class net.handler.team.ResTeamGetAllHandler extends net.MNetHandler
var ResTeamGetAllHandler=(function(_super){
	function ResTeamGetAllHandler(){
		ResTeamGetAllHandler.__super.call(this);;
	}

	__class(ResTeamGetAllHandler,'net.handler.team.ResTeamGetAllHandler',_super);
	var __proto=ResTeamGetAllHandler.prototype;
	// 获取所有队伍的简要信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamGetAllHandler",msg);
	}

	return ResTeamGetAllHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengBuyGoodsHandler extends net.MNetHandler
var ResYuanZhengBuyGoodsHandler=(function(_super){
	function ResYuanZhengBuyGoodsHandler(){
		ResYuanZhengBuyGoodsHandler.__super.call(this);;
	}

	__class(ResYuanZhengBuyGoodsHandler,'net.handler.yuanzheng.ResYuanZhengBuyGoodsHandler',_super);
	var __proto=ResYuanZhengBuyGoodsHandler.prototype;
	// 远征购买物品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengBuyGoodsHandler",msg);
	}

	return ResYuanZhengBuyGoodsHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*神装
*/
//class net.message.godClothes.GodClothesBean extends engine.base.data.Bean
var GodClothesBean=(function(_super){
	function GodClothesBean(){
		GodClothesBean.__super.call(this);
		this._godClothesList=[];
	}

	__class(GodClothesBean,'net.message.godClothes.GodClothesBean',_super);
	var __proto=GodClothesBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._godClothesList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._godClothesList.length;++i_am_tmp_i){
			this._godClothesList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._godClothesList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._godClothesList[i_am_tmp_i]=this.readBeanInList(_buf,GodClothes);
		}
	}

	/**神装列表 */
	/**神装列表 */
	__getset(0,__proto,'godClothesList',function(){
		return this._godClothesList;
		},function(value){
		this._godClothesList=value;
	});

	return GodClothesBean;
})(Bean)


//class net.handler.dungeon.ResQuanMinBossOtherJoinHandler extends net.MNetHandler
var ResQuanMinBossOtherJoinHandler=(function(_super){
	function ResQuanMinBossOtherJoinHandler(){
		ResQuanMinBossOtherJoinHandler.__super.call(this);;
	}

	__class(ResQuanMinBossOtherJoinHandler,'net.handler.dungeon.ResQuanMinBossOtherJoinHandler',_super);
	var __proto=ResQuanMinBossOtherJoinHandler.prototype;
	// 其他人加入全民首领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanMinBossOtherJoinHandler",msg);
	}

	return ResQuanMinBossOtherJoinHandler;
})(MNetHandler)


//class net.handler.goods.ResUpdateAttributeGoodsHandler extends net.MNetHandler
var ResUpdateAttributeGoodsHandler=(function(_super){
	function ResUpdateAttributeGoodsHandler(){
		ResUpdateAttributeGoodsHandler.__super.call(this);;
	}

	__class(ResUpdateAttributeGoodsHandler,'net.handler.goods.ResUpdateAttributeGoodsHandler',_super);
	var __proto=ResUpdateAttributeGoodsHandler.prototype;
	// 更新属性道具使用数量
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateAttributeGoodsHandler" ,msg);
	}

	return ResUpdateAttributeGoodsHandler;
})(MNetHandler)


//class net.handler.pata.ResGetPFITInfoErrorHandler extends net.MNetHandler
var ResGetPFITInfoErrorHandler=(function(_super){
	function ResGetPFITInfoErrorHandler(){
		ResGetPFITInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetPFITInfoErrorHandler,'net.handler.pata.ResGetPFITInfoErrorHandler',_super);
	var __proto=ResGetPFITInfoErrorHandler.prototype;
	// 获取合体爬塔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetPFITInfoErrorHandler",msg);
	}

	return ResGetPFITInfoErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeRecordErrorHandler extends net.MNetHandler
var ResEscortRevengeRecordErrorHandler=(function(_super){
	function ResEscortRevengeRecordErrorHandler(){
		ResEscortRevengeRecordErrorHandler.__super.call(this);;
	}

	__class(ResEscortRevengeRecordErrorHandler,'net.handler.escort.ResEscortRevengeRecordErrorHandler',_super);
	var __proto=ResEscortRevengeRecordErrorHandler.prototype;
	// 请求复仇的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRevengeRecordErrorHandler",msg);
	}

	return ResEscortRevengeRecordErrorHandler;
})(MNetHandler)


//class net.handler.miji.ResExchangeMijiErrorHandler extends net.MNetHandler
var ResExchangeMijiErrorHandler=(function(_super){
	function ResExchangeMijiErrorHandler(){
		ResExchangeMijiErrorHandler.__super.call(this);;
	}

	__class(ResExchangeMijiErrorHandler,'net.handler.miji.ResExchangeMijiErrorHandler',_super);
	var __proto=ResExchangeMijiErrorHandler.prototype;
	// 置换秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResExchangeMijiErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonUpdateDoorHandler extends net.MNetHandler
var ResGarrisonUpdateDoorHandler=(function(_super){
	function ResGarrisonUpdateDoorHandler(){
		ResGarrisonUpdateDoorHandler.__super.call(this);;
	}

	__class(ResGarrisonUpdateDoorHandler,'net.handler.garrison.ResGarrisonUpdateDoorHandler',_super);
	var __proto=ResGarrisonUpdateDoorHandler.prototype;
	// 更新门对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpdateDoorHandler " ,msg);
	}

	return ResGarrisonUpdateDoorHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookUpStarErrorHandler extends net.MNetHandler
var ResHandBookUpStarErrorHandler=(function(_super){
	function ResHandBookUpStarErrorHandler(){
		ResHandBookUpStarErrorHandler.__super.call(this);;
	}

	__class(ResHandBookUpStarErrorHandler,'net.handler.handbook.ResHandBookUpStarErrorHandler',_super);
	var __proto=ResHandBookUpStarErrorHandler.prototype;
	// 图鉴升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookUpStarErrorHandler",msg.error);
	}

	return ResHandBookUpStarErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeErrorHandler extends net.MNetHandler
var ResEscortRevengeErrorHandler=(function(_super){
	function ResEscortRevengeErrorHandler(){
		ResEscortRevengeErrorHandler.__super.call(this);;
	}

	__class(ResEscortRevengeErrorHandler,'net.handler.escort.ResEscortRevengeErrorHandler',_super);
	var __proto=ResEscortRevengeErrorHandler.prototype;
	// 请求复仇
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRevengeErrorHandler",msg);
	}

	return ResEscortRevengeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*结婚对象
*/
//class net.message.marriage.MarriageBean extends engine.base.data.Bean
var MarriageBean=(function(_super){
	function MarriageBean(){
		/**对象UID */
		this._target=null;
		/**自己扮演角色 1 丈夫 0 妻子 */
		this._type=0;
		/**今日剩余求婚次数 */
		this._count=0;
		/**亲密度 */
		this._intimate=null;
		/**领证时间 */
		this._time=null;
		/**房屋等级 */
		this._house_lv=0;
		/**房屋升阶进度 */
		this._house_progress=0;
		/**房屋品质 */
		this._house_quality=0;
		MarriageBean.__super.call(this);
		this._receive=[];
	}

	__class(MarriageBean,'net.message.marriage.MarriageBean',_super);
	var __proto=MarriageBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._target);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._count);
		this.writeLong(_buf,this._intimate);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._house_lv);
		this.writeInt(_buf,this._house_progress);
		this.writeInt(_buf,this._house_quality);
		this.writeInt(_buf,this._receive.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._receive.length;++i_am_tmp_i){
			this._receive[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._count=this.readInt(_buf);
		this._intimate=this.readLong(_buf);
		this._time=this.readLong(_buf);
		this._house_lv=this.readInt(_buf);
		this._house_progress=this.readInt(_buf);
		this._house_quality=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._receive=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._receive[i_am_tmp_i]=this.readBeanInList(_buf,ProgressBean);
		}
	}

	/**亲密度 */
	/**亲密度 */
	__getset(0,__proto,'intimate',function(){
		return this._intimate;
		},function(value){
		this._intimate=value;
	});

	/**对象UID */
	/**对象UID */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**自己扮演角色 1 丈夫 0 妻子 */
	/**自己扮演角色 1 丈夫 0 妻子 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**房屋品质 */
	/**房屋品质 */
	__getset(0,__proto,'house_quality',function(){
		return this._house_quality;
		},function(value){
		this._house_quality=value;
	});

	/**领证时间 */
	/**领证时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**今日剩余求婚次数 */
	/**今日剩余求婚次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**房屋等级 */
	/**房屋等级 */
	__getset(0,__proto,'house_lv',function(){
		return this._house_lv;
		},function(value){
		this._house_lv=value;
	});

	/**可领取的进度 */
	/**可领取的进度 */
	__getset(0,__proto,'receive',function(){
		return this._receive;
		},function(value){
		this._receive=value;
	});

	/**房屋升阶进度 */
	/**房屋升阶进度 */
	__getset(0,__proto,'house_progress',function(){
		return this._house_progress;
		},function(value){
		this._house_progress=value;
	});

	return MarriageBean;
})(Bean)


//class net.handler.garrison.ResGarrisonFindTargetErrorHandler extends net.MNetHandler
var ResGarrisonFindTargetErrorHandler=(function(_super){
	function ResGarrisonFindTargetErrorHandler(){
		ResGarrisonFindTargetErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonFindTargetErrorHandler,'net.handler.garrison.ResGarrisonFindTargetErrorHandler',_super);
	var __proto=ResGarrisonFindTargetErrorHandler.prototype;
	// 寻找对手
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonFindTargetErrorHandler" ,msg);
	}

	return ResGarrisonFindTargetErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*录像
*/
//class net.message.video.VideoBean extends engine.base.data.Bean
var VideoBean=(function(_super){
	function VideoBean(){
		/**录像唯一id */
		this._videoId=null;
		/**录像类型，0竞技场，1草船拦截，2煮酒切磋，3军团战，4王者争霸,5空城计,6军师巡城 */
		this._type=0;
		/**战斗 */
		this._fightId=null;
		/**录像点赞数 */
		this._like=0;
		/**录像播放数 */
		this._play=0;
		/**队伍1的玩家的信息 */
		this._team1Player=null;
		/**队伍2的玩家的信息 */
		this._team2Player=null;
		/**战斗简要消息 */
		this._fightBean=null;
		VideoBean.__super.call(this);
	}

	__class(VideoBean,'net.message.video.VideoBean',_super);
	var __proto=VideoBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._videoId);
		this.writeInt(_buf,this._type);
		this.writeString(_buf,this._fightId);
		this.writeInt(_buf,this._like);
		this.writeInt(_buf,this._play);
		this.writeBean(_buf,this._team1Player);
		this.writeBean(_buf,this._team2Player);
		this.writeBean(_buf,this._fightBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._videoId=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._fightId=this.readString(_buf);
		this._like=this.readInt(_buf);
		this._play=this.readInt(_buf);
		this._team1Player=this.readBean(_buf,VideoPlayerBean);
		this._team2Player=this.readBean(_buf,VideoPlayerBean);
		this._fightBean=this.readBean(_buf,FightBean);
	}

	/**录像唯一id */
	/**录像唯一id */
	__getset(0,__proto,'videoId',function(){
		return this._videoId;
		},function(value){
		this._videoId=value;
	});

	/**录像类型，0竞技场，1草船拦截，2煮酒切磋，3军团战，4王者争霸,5空城计,6军师巡城 */
	/**录像类型，0竞技场，1草船拦截，2煮酒切磋，3军团战，4王者争霸,5空城计,6军师巡城 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**战斗 */
	/**战斗 */
	__getset(0,__proto,'fightId',function(){
		return this._fightId;
		},function(value){
		this._fightId=value;
	});

	/**队伍1的玩家的信息 */
	/**队伍1的玩家的信息 */
	__getset(0,__proto,'team1Player',function(){
		return this._team1Player;
		},function(value){
		this._team1Player=value;
	});

	/**录像点赞数 */
	/**录像点赞数 */
	__getset(0,__proto,'like',function(){
		return this._like;
		},function(value){
		this._like=value;
	});

	/**战斗简要消息 */
	/**战斗简要消息 */
	__getset(0,__proto,'fightBean',function(){
		return this._fightBean;
		},function(value){
		this._fightBean=value;
	});

	/**队伍2的玩家的信息 */
	/**队伍2的玩家的信息 */
	__getset(0,__proto,'team2Player',function(){
		return this._team2Player;
		},function(value){
		this._team2Player=value;
	});

	/**录像播放数 */
	/**录像播放数 */
	__getset(0,__proto,'play',function(){
		return this._play;
		},function(value){
		this._play=value;
	});

	return VideoBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*boss类副本
*/
//class net.message.dungeon.QuanMinBossDungeonBean extends engine.base.data.Bean
var QuanMinBossDungeonBean=(function(_super){
	function QuanMinBossDungeonBean(){
		/**副本ID */
		this._id=0;
		/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
		this._hp=null;
		/**重生时间 */
		this._reliveTime=0;
		/**争夺人数 */
		this._count=0;
		/**最大血量 */
		this._maxHp=null;
		QuanMinBossDungeonBean.__super.call(this);
	}

	__class(QuanMinBossDungeonBean,'net.message.dungeon.QuanMinBossDungeonBean',_super);
	var __proto=QuanMinBossDungeonBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._hp);
		this.writeInt(_buf,this._reliveTime);
		this.writeInt(_buf,this._count);
		this.writeLong(_buf,this._maxHp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._reliveTime=this.readInt(_buf);
		this._count=this.readInt(_buf);
		this._maxHp=this.readLong(_buf);
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
	/**剩余血量,对于一个崭新的boss，后端会初始化血量为int.max */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**重生时间 */
	/**重生时间 */
	__getset(0,__proto,'reliveTime',function(){
		return this._reliveTime;
		},function(value){
		this._reliveTime=value;
	});

	/**争夺人数 */
	/**争夺人数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	return QuanMinBossDungeonBean;
})(Bean)


//class net.handler.worldboss.ResWorldBossBoxRemoveErrorHandler extends net.MNetHandler
var ResWorldBossBoxRemoveErrorHandler=(function(_super){
	function ResWorldBossBoxRemoveErrorHandler(){
		ResWorldBossBoxRemoveErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossBoxRemoveErrorHandler,'net.handler.worldboss.ResWorldBossBoxRemoveErrorHandler',_super);
	var __proto=ResWorldBossBoxRemoveErrorHandler.prototype;
	// boss宝箱拾取删除
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossBoxRemoveErrorHandler",msg);
	}

	return ResWorldBossBoxRemoveErrorHandler;
})(MNetHandler)


//class net.handler.zhanwen.ResReplaceZhanwenErrorHandler extends net.MNetHandler
var ResReplaceZhanwenErrorHandler=(function(_super){
	function ResReplaceZhanwenErrorHandler(){
		ResReplaceZhanwenErrorHandler.__super.call(this);;
	}

	__class(ResReplaceZhanwenErrorHandler,'net.handler.zhanwen.ResReplaceZhanwenErrorHandler',_super);
	var __proto=ResReplaceZhanwenErrorHandler.prototype;
	// 替换/装备战纹
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceZhanwenErrorHandler");
	}

	return ResReplaceZhanwenErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildApplyHandler extends net.MNetHandler
var ResGuildApplyHandler=(function(_super){
	function ResGuildApplyHandler(){
		ResGuildApplyHandler.__super.call(this);;
	}

	__class(ResGuildApplyHandler,'net.handler.guild.ResGuildApplyHandler',_super);
	var __proto=ResGuildApplyHandler.prototype;
	// 申请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildApplyHandler",msg);
	}

	return ResGuildApplyHandler;
})(MNetHandler)


//class net.handler.chat.ResChatZhuangBiErrorHandler extends net.MNetHandler
var ResChatZhuangBiErrorHandler=(function(_super){
	function ResChatZhuangBiErrorHandler(){
		ResChatZhuangBiErrorHandler.__super.call(this);;
	}

	__class(ResChatZhuangBiErrorHandler,'net.handler.chat.ResChatZhuangBiErrorHandler',_super);
	var __proto=ResChatZhuangBiErrorHandler.prototype;
	// 装逼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatZhuangBiErrorHandler",msg);
	}

	return ResChatZhuangBiErrorHandler;
})(MNetHandler)


//class net.handler.xuannv.ResUpdateXuanNvAttributeHandler extends net.MNetHandler
var ResUpdateXuanNvAttributeHandler=(function(_super){
	function ResUpdateXuanNvAttributeHandler(){
		ResUpdateXuanNvAttributeHandler.__super.call(this);;
	}

	__class(ResUpdateXuanNvAttributeHandler,'net.handler.xuannv.ResUpdateXuanNvAttributeHandler',_super);
	var __proto=ResUpdateXuanNvAttributeHandler.prototype;
	// 更新玄女属性
	__proto.action=function(){}
	return ResUpdateXuanNvAttributeHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossUpdateRankHandler extends net.MNetHandler
var ResWorldBossUpdateRankHandler=(function(_super){
	function ResWorldBossUpdateRankHandler(){
		ResWorldBossUpdateRankHandler.__super.call(this);;
	}

	__class(ResWorldBossUpdateRankHandler,'net.handler.worldboss.ResWorldBossUpdateRankHandler',_super);
	var __proto=ResWorldBossUpdateRankHandler.prototype;
	// 更新排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossUpdateRankHandler",msg);
	}

	return ResWorldBossUpdateRankHandler;
})(MNetHandler)


//class net.handler.activities.ResWeekendXuYuanSelectHandler extends net.MNetHandler
var ResWeekendXuYuanSelectHandler=(function(_super){
	function ResWeekendXuYuanSelectHandler(){
		ResWeekendXuYuanSelectHandler.__super.call(this);;
	}

	__class(ResWeekendXuYuanSelectHandler,'net.handler.activities.ResWeekendXuYuanSelectHandler',_super);
	var __proto=ResWeekendXuYuanSelectHandler.prototype;
	// 周末许愿
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WeekendPrayHandler" ,msg);
	}

	return ResWeekendXuYuanSelectHandler;
})(MNetHandler)


//class net.handler.worldboss.ResGetWorldBossInfoErrorHandler extends net.MNetHandler
var ResGetWorldBossInfoErrorHandler=(function(_super){
	function ResGetWorldBossInfoErrorHandler(){
		ResGetWorldBossInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetWorldBossInfoErrorHandler,'net.handler.worldboss.ResGetWorldBossInfoErrorHandler',_super);
	var __proto=ResGetWorldBossInfoErrorHandler.prototype;
	// 军团首领信息
	__proto.action=function(){}
	return ResGetWorldBossInfoErrorHandler;
})(MNetHandler)


//class net.handler.juewei.ResUpdateJueWeiLevelHandler extends net.MNetHandler
var ResUpdateJueWeiLevelHandler=(function(_super){
	function ResUpdateJueWeiLevelHandler(){
		ResUpdateJueWeiLevelHandler.__super.call(this);;
	}

	__class(ResUpdateJueWeiLevelHandler,'net.handler.juewei.ResUpdateJueWeiLevelHandler',_super);
	var __proto=ResUpdateJueWeiLevelHandler.prototype;
	// 更新爵位等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateJueWeiLevelHandler",msg);
	}

	return ResUpdateJueWeiLevelHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleGetLegalKingGuildErrorHandler extends net.MNetHandler
var ResLegionBattleGetLegalKingGuildErrorHandler=(function(_super){
	function ResLegionBattleGetLegalKingGuildErrorHandler(){
		ResLegionBattleGetLegalKingGuildErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleGetLegalKingGuildErrorHandler,'net.handler.gb.ResLegionBattleGetLegalKingGuildErrorHandler',_super);
	var __proto=ResLegionBattleGetLegalKingGuildErrorHandler.prototype;
	// 获取可夺取玉玺的帮会
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleGetLegalKingGuildErrorHandler" ,msg);
	}

	return ResLegionBattleGetLegalKingGuildErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeNoticeHandler extends net.MNetHandler
var ResGuildChangeNoticeHandler=(function(_super){
	function ResGuildChangeNoticeHandler(){
		ResGuildChangeNoticeHandler.__super.call(this);;
	}

	__class(ResGuildChangeNoticeHandler,'net.handler.guild.ResGuildChangeNoticeHandler',_super);
	var __proto=ResGuildChangeNoticeHandler.prototype;
	// 帮会改名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeNoticeHandler",msg);
	}

	return ResGuildChangeNoticeHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiBuyQueueHandler extends net.MNetHandler
var ResChibiBuyQueueHandler=(function(_super){
	function ResChibiBuyQueueHandler(){
		ResChibiBuyQueueHandler.__super.call(this);;
	}

	__class(ResChibiBuyQueueHandler,'net.handler.chibi.ResChibiBuyQueueHandler',_super);
	var __proto=ResChibiBuyQueueHandler.prototype;
	// 购买赤壁任务队列
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiBuyQueueHandler",msg);
	}

	return ResChibiBuyQueueHandler;
})(MNetHandler)


//class net.handler.pet.ResChangePetNameErrorHandler extends net.MNetHandler
var ResChangePetNameErrorHandler=(function(_super){
	function ResChangePetNameErrorHandler(){
		ResChangePetNameErrorHandler.__super.call(this);;
	}

	__class(ResChangePetNameErrorHandler,'net.handler.pet.ResChangePetNameErrorHandler',_super);
	var __proto=ResChangePetNameErrorHandler.prototype;
	// 修改宠物名字
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangePetNameErrorHandler",msg.error);
	}

	return ResChangePetNameErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyFightResultHandler extends net.MNetHandler
var ResNineHeavyFightResultHandler=(function(_super){
	function ResNineHeavyFightResultHandler(){
		ResNineHeavyFightResultHandler.__super.call(this);;
	}

	__class(ResNineHeavyFightResultHandler,'net.handler.nineHeavy.ResNineHeavyFightResultHandler',_super);
	var __proto=ResNineHeavyFightResultHandler.prototype;
	// 战斗结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyFightResultHandler",msg);
	}

	return ResNineHeavyFightResultHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightRewardErrorHandler extends net.MNetHandler
var ResKingWarFightRewardErrorHandler=(function(_super){
	function ResKingWarFightRewardErrorHandler(){
		ResKingWarFightRewardErrorHandler.__super.call(this);;
	}

	__class(ResKingWarFightRewardErrorHandler,'net.handler.kingwar.ResKingWarFightRewardErrorHandler',_super);
	var __proto=ResKingWarFightRewardErrorHandler.prototype;
	// 王者争霸请求战斗结果
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightRewardErrorHandler",msg);
	}

	return ResKingWarFightRewardErrorHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeYuanMaiHandler extends net.MNetHandler
var ResGeneralUpgradeYuanMaiHandler=(function(_super){
	function ResGeneralUpgradeYuanMaiHandler(){
		ResGeneralUpgradeYuanMaiHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeYuanMaiHandler,'net.handler.general.ResGeneralUpgradeYuanMaiHandler',_super);
	var __proto=ResGeneralUpgradeYuanMaiHandler.prototype;
	// 蛮将升级元脉
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeYuanMaiHandler" ,msg.lv);
	}

	return ResGeneralUpgradeYuanMaiHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpdateSkillHandler extends net.MNetHandler
var ResFitUpdateSkillHandler=(function(_super){
	function ResFitUpdateSkillHandler(){
		ResFitUpdateSkillHandler.__super.call(this);;
	}

	__class(ResFitUpdateSkillHandler,'net.handler.fit.ResFitUpdateSkillHandler',_super);
	var __proto=ResFitUpdateSkillHandler.prototype;
	// 更新合体对象技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpdateSkillHandler" ,msg);
	}

	return ResFitUpdateSkillHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*全民boss击杀者
*/
//class net.message.dungeon.QuanMinKillerBean extends engine.base.data.Bean
var QuanMinKillerBean=(function(_super){
	function QuanMinKillerBean(){
		/**击杀时间 */
		this._killTime=0;
		/**击杀者名字 */
		this._killerName=null;
		/**击杀者战力 */
		this._killerFightPower=null;
		QuanMinKillerBean.__super.call(this);
	}

	__class(QuanMinKillerBean,'net.message.dungeon.QuanMinKillerBean',_super);
	var __proto=QuanMinKillerBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._killTime);
		this.writeString(_buf,this._killerName);
		this.writeLong(_buf,this._killerFightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._killTime=this.readInt(_buf);
		this._killerName=this.readString(_buf);
		this._killerFightPower=this.readLong(_buf);
	}

	/**击杀时间 */
	/**击杀时间 */
	__getset(0,__proto,'killTime',function(){
		return this._killTime;
		},function(value){
		this._killTime=value;
	});

	/**击杀者名字 */
	/**击杀者名字 */
	__getset(0,__proto,'killerName',function(){
		return this._killerName;
		},function(value){
		this._killerName=value;
	});

	/**击杀者战力 */
	/**击杀者战力 */
	__getset(0,__proto,'killerFightPower',function(){
		return this._killerFightPower;
		},function(value){
		this._killerFightPower=value;
	});

	return QuanMinKillerBean;
})(Bean)


//class net.handler.soulboy.ResSoulBoyActivationErrorHandler extends net.MNetHandler
var ResSoulBoyActivationErrorHandler=(function(_super){
	function ResSoulBoyActivationErrorHandler(){
		ResSoulBoyActivationErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyActivationErrorHandler,'net.handler.soulboy.ResSoulBoyActivationErrorHandler',_super);
	var __proto=ResSoulBoyActivationErrorHandler.prototype;
	// 激活灵童
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyActivationErrorHandler",msg);
	}

	return ResSoulBoyActivationErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResFlushEscortLvHandler extends net.MNetHandler
var ResFlushEscortLvHandler=(function(_super){
	function ResFlushEscortLvHandler(){
		ResFlushEscortLvHandler.__super.call(this);;
	}

	__class(ResFlushEscortLvHandler,'net.handler.escort.ResFlushEscortLvHandler',_super);
	var __proto=ResFlushEscortLvHandler.prototype;
	// 刷新镖车等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FlushEscortLvHandler" ,msg);
	}

	return ResFlushEscortLvHandler;
})(MNetHandler)


//class net.handler.lieming.ResUpdateLieMingLevelErrorHandler extends net.MNetHandler
var ResUpdateLieMingLevelErrorHandler=(function(_super){
	function ResUpdateLieMingLevelErrorHandler(){
		ResUpdateLieMingLevelErrorHandler.__super.call(this);;
	}

	__class(ResUpdateLieMingLevelErrorHandler,'net.handler.lieming.ResUpdateLieMingLevelErrorHandler',_super);
	var __proto=ResUpdateLieMingLevelErrorHandler.prototype;
	// 更新猎命等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateLieMingLevelErrorHandler",msg);
	}

	return ResUpdateLieMingLevelErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyActivationHandler extends net.MNetHandler
var ResSoulBoyActivationHandler=(function(_super){
	function ResSoulBoyActivationHandler(){
		ResSoulBoyActivationHandler.__super.call(this);;
	}

	__class(ResSoulBoyActivationHandler,'net.handler.soulboy.ResSoulBoyActivationHandler',_super);
	var __proto=ResSoulBoyActivationHandler.prototype;
	// 激活灵童
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyActivationHandler",msg);
	}

	return ResSoulBoyActivationHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸战斗记录对象
*/
//class net.message.kingwar.KingWarFightRecoedBean extends engine.base.data.Bean
var KingWarFightRecoedBean=(function(_super){
	function KingWarFightRecoedBean(){
		/**主动进攻? */
		this._attack=false;
		/**是否胜利 */
		this._isWin=false;
		/**玩家名字 */
		this._name=null;
		/**发生时间 */
		this._time=null;
		KingWarFightRecoedBean.__super.call(this);
	}

	__class(KingWarFightRecoedBean,'net.message.kingwar.KingWarFightRecoedBean',_super);
	var __proto=KingWarFightRecoedBean.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._attack);
		this.writeBoolean(_buf,this._isWin);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._attack=this.readBoolean(_buf);
		this._isWin=this.readBoolean(_buf);
		this._name=this.readString(_buf);
		this._time=this.readLong(_buf);
	}

	/**主动进攻? */
	/**主动进攻? */
	__getset(0,__proto,'attack',function(){
		return this._attack;
		},function(value){
		this._attack=value;
	});

	/**是否胜利 */
	/**是否胜利 */
	__getset(0,__proto,'isWin',function(){
		return this._isWin;
		},function(value){
		this._isWin=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**发生时间 */
	/**发生时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return KingWarFightRecoedBean;
})(Bean)


//class net.handler.gongCe.ResBuyHuntTreasureErrorHandler extends net.MNetHandler
var ResBuyHuntTreasureErrorHandler=(function(_super){
	function ResBuyHuntTreasureErrorHandler(){
		ResBuyHuntTreasureErrorHandler.__super.call(this);;
	}

	__class(ResBuyHuntTreasureErrorHandler,'net.handler.gongCe.ResBuyHuntTreasureErrorHandler',_super);
	var __proto=ResBuyHuntTreasureErrorHandler.prototype;
	// 购买寻宝特权
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyHuntTreasureErrorHandler",msg);
	}

	return ResBuyHuntTreasureErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResPataFightErrorHandler extends net.MNetHandler
var ResPataFightErrorHandler=(function(_super){
	function ResPataFightErrorHandler(){
		ResPataFightErrorHandler.__super.call(this);;
	}

	__class(ResPataFightErrorHandler,'net.handler.pata.ResPataFightErrorHandler',_super);
	var __proto=ResPataFightErrorHandler.prototype;
	// 爬塔战斗
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PataFightErrorHandler",msg.error);
	}

	return ResPataFightErrorHandler;
})(MNetHandler)


//class net.handler.official.ResUpgradeOfficialActivityHandler extends net.MNetHandler
var ResUpgradeOfficialActivityHandler=(function(_super){
	function ResUpgradeOfficialActivityHandler(){
		ResUpgradeOfficialActivityHandler.__super.call(this);;
	}

	__class(ResUpgradeOfficialActivityHandler,'net.handler.official.ResUpgradeOfficialActivityHandler',_super);
	var __proto=ResUpgradeOfficialActivityHandler.prototype;
	// 更新官位活跃度
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeOfficialActivityHandler",msg);
	}

	return ResUpgradeOfficialActivityHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageFlowersErrorHandler extends net.MNetHandler
var ResMarriageFlowersErrorHandler=(function(_super){
	function ResMarriageFlowersErrorHandler(){
		ResMarriageFlowersErrorHandler.__super.call(this);;
	}

	__class(ResMarriageFlowersErrorHandler,'net.handler.marriage.ResMarriageFlowersErrorHandler',_super);
	var __proto=ResMarriageFlowersErrorHandler.prototype;
	// 给伴侣赠送鲜花
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageFlowersErrorHandler",msg);
	}

	return ResMarriageFlowersErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResUpgradePetStarErrorHandler extends net.MNetHandler
var ResUpgradePetStarErrorHandler=(function(_super){
	function ResUpgradePetStarErrorHandler(){
		ResUpgradePetStarErrorHandler.__super.call(this);;
	}

	__class(ResUpgradePetStarErrorHandler,'net.handler.pet.ResUpgradePetStarErrorHandler',_super);
	var __proto=ResUpgradePetStarErrorHandler.prototype;
	// 宠物升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetStarErrorHandler",msg.error);
	}

	return ResUpgradePetStarErrorHandler;
})(MNetHandler)


//class net.handler.xuannv.ResUpdateXuanNvLingZhuangHandler extends net.MNetHandler
var ResUpdateXuanNvLingZhuangHandler=(function(_super){
	function ResUpdateXuanNvLingZhuangHandler(){
		ResUpdateXuanNvLingZhuangHandler.__super.call(this);;
	}

	__class(ResUpdateXuanNvLingZhuangHandler,'net.handler.xuannv.ResUpdateXuanNvLingZhuangHandler',_super);
	var __proto=ResUpdateXuanNvLingZhuangHandler.prototype;
	// 更新玄女灵装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateXuanNvLingZhuangHandler",msg.itemID);
	}

	return ResUpdateXuanNvLingZhuangHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级对象
*/
//class net.message.upgrade.WakeUpBean extends engine.base.data.Bean
var WakeUpBean=(function(_super){
	function WakeUpBean(){
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**觉醒等级 */
		this._level=0;
		WakeUpBean.__super.call(this);
	}

	__class(WakeUpBean,'net.message.upgrade.WakeUpBean',_super);
	var __proto=WakeUpBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._level=this.readInt(_buf);
	}

	/**觉醒等级 */
	/**觉醒等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return WakeUpBean;
})(Bean)


//class net.handler.pet.ResReplaceXiLianPetErrorHandler extends net.MNetHandler
var ResReplaceXiLianPetErrorHandler=(function(_super){
	function ResReplaceXiLianPetErrorHandler(){
		ResReplaceXiLianPetErrorHandler.__super.call(this);;
	}

	__class(ResReplaceXiLianPetErrorHandler,'net.handler.pet.ResReplaceXiLianPetErrorHandler',_super);
	var __proto=ResReplaceXiLianPetErrorHandler.prototype;
	// 更换洗练技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceXiLianPetErrorHandler",msg.error);
	}

	return ResReplaceXiLianPetErrorHandler;
})(MNetHandler)


//class net.handler.packet.ResEquipPacketAddCapacityHandler extends net.MNetHandler
var ResEquipPacketAddCapacityHandler=(function(_super){
	function ResEquipPacketAddCapacityHandler(){
		ResEquipPacketAddCapacityHandler.__super.call(this);;
	}

	__class(ResEquipPacketAddCapacityHandler,'net.handler.packet.ResEquipPacketAddCapacityHandler',_super);
	var __proto=ResEquipPacketAddCapacityHandler.prototype;
	// 装备背包扩容
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipPacketAddCapacityHandler",msg);
	}

	return ResEquipPacketAddCapacityHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionExchangeItemMessageErrorHandler extends net.MNetHandler
var ResLegionExchangeItemMessageErrorHandler=(function(_super){
	function ResLegionExchangeItemMessageErrorHandler(){
		ResLegionExchangeItemMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionExchangeItemMessageErrorHandler,'net.handler.legion.ResLegionExchangeItemMessageErrorHandler',_super);
	var __proto=ResLegionExchangeItemMessageErrorHandler.prototype;
	// 请求兑换商品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionExchangeItemMessageErrorHandler",msg);
	}

	return ResLegionExchangeItemMessageErrorHandler;
})(MNetHandler)


//class net.handler.quanfuboss.ResQuanFuBossBuyTimeErrorHandler extends net.MNetHandler
var ResQuanFuBossBuyTimeErrorHandler=(function(_super){
	function ResQuanFuBossBuyTimeErrorHandler(){
		ResQuanFuBossBuyTimeErrorHandler.__super.call(this);;
	}

	__class(ResQuanFuBossBuyTimeErrorHandler,'net.handler.quanfuboss.ResQuanFuBossBuyTimeErrorHandler',_super);
	var __proto=ResQuanFuBossBuyTimeErrorHandler.prototype;
	// 购买全服boss挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanFuBossBuyTimeErrorHandler",msg);
	}

	return ResQuanFuBossBuyTimeErrorHandler;
})(MNetHandler)


//class net.handler.examination.ResKejuNowExaminationHandler extends net.MNetHandler
var ResKejuNowExaminationHandler=(function(_super){
	function ResKejuNowExaminationHandler(){
		ResKejuNowExaminationHandler.__super.call(this);;
	}

	__class(ResKejuNowExaminationHandler,'net.handler.examination.ResKejuNowExaminationHandler',_super);
	var __proto=ResKejuNowExaminationHandler.prototype;
	// 进入科举答题活动(打开面板时发送)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KejuNowExaminationHandler" ,msg);
	}

	return ResKejuNowExaminationHandler;
})(MNetHandler)


//class net.handler.setting.ResSettingHandler extends net.MNetHandler
var ResSettingHandler=(function(_super){
	function ResSettingHandler(){
		ResSettingHandler.__super.call(this);;
	}

	__class(ResSettingHandler,'net.handler.setting.ResSettingHandler',_super);
	var __proto=ResSettingHandler.prototype;
	// 修改配置
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SettingHandler",msg.bean);
	}

	return ResSettingHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipZhuWenHandler extends net.MNetHandler
var ResEquipZhuWenHandler=(function(_super){
	function ResEquipZhuWenHandler(){
		ResEquipZhuWenHandler.__super.call(this);;
	}

	__class(ResEquipZhuWenHandler,'net.handler.equip.ResEquipZhuWenHandler',_super);
	var __proto=ResEquipZhuWenHandler.prototype;
	// 装备铸纹
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEquipZhuWenHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyGetDataErrorHandler extends net.MNetHandler
var ResEmptyGetDataErrorHandler=(function(_super){
	function ResEmptyGetDataErrorHandler(){
		ResEmptyGetDataErrorHandler.__super.call(this);;
	}

	__class(ResEmptyGetDataErrorHandler,'net.handler.emptycity.ResEmptyGetDataErrorHandler',_super);
	var __proto=ResEmptyGetDataErrorHandler.prototype;
	// 获得空城计状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyGetDataErrorHandler",msg);
	}

	return ResEmptyGetDataErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResTongShuaiJinJianErrorHandler extends net.MNetHandler
var ResTongShuaiJinJianErrorHandler=(function(_super){
	function ResTongShuaiJinJianErrorHandler(){
		ResTongShuaiJinJianErrorHandler.__super.call(this);;
	}

	__class(ResTongShuaiJinJianErrorHandler,'net.handler.gongCe.ResTongShuaiJinJianErrorHandler',_super);
	var __proto=ResTongShuaiJinJianErrorHandler.prototype;
	// 兑换主公
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTongShuaiJinJianError",msg);
	}

	return ResTongShuaiJinJianErrorHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomOtherJoinHandler extends net.MNetHandler
var ResTeamDuplicateRoomOtherJoinHandler=(function(_super){
	function ResTeamDuplicateRoomOtherJoinHandler(){
		ResTeamDuplicateRoomOtherJoinHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomOtherJoinHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomOtherJoinHandler',_super);
	var __proto=ResTeamDuplicateRoomOtherJoinHandler.prototype;
	// 其它玩家加入房间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomOtherJoinHandler",msg);
	}

	return ResTeamDuplicateRoomOtherJoinHandler;
})(MNetHandler)


//class net.handler.misc.ResOnHookRewardErrorHandler extends net.MNetHandler
var ResOnHookRewardErrorHandler=(function(_super){
	function ResOnHookRewardErrorHandler(){
		ResOnHookRewardErrorHandler.__super.call(this);;
	}

	__class(ResOnHookRewardErrorHandler,'net.handler.misc.ResOnHookRewardErrorHandler',_super);
	var __proto=ResOnHookRewardErrorHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OnHookRewardErrorHandler",msg);
	}

	return ResOnHookRewardErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值天数和档位
*/
//class net.message.welfare.RechargeDay extends engine.base.data.Bean
var RechargeDay=(function(_super){
	function RechargeDay(){
		/**档位 */
		this._prize=0;
		/**天数 */
		this._days=0;
		RechargeDay.__super.call(this);
	}

	__class(RechargeDay,'net.message.welfare.RechargeDay',_super);
	var __proto=RechargeDay.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prize);
		this.writeInt(_buf,this._days);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._prize=this.readInt(_buf);
		this._days=this.readInt(_buf);
	}

	/**档位 */
	/**档位 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**天数 */
	/**天数 */
	__getset(0,__proto,'days',function(){
		return this._days;
		},function(value){
		this._days=value;
	});

	return RechargeDay;
})(Bean)


//class net.handler.yuanzheng.ResYuanZhengResetErrorHandler extends net.MNetHandler
var ResYuanZhengResetErrorHandler=(function(_super){
	function ResYuanZhengResetErrorHandler(){
		ResYuanZhengResetErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengResetErrorHandler,'net.handler.yuanzheng.ResYuanZhengResetErrorHandler',_super);
	var __proto=ResYuanZhengResetErrorHandler.prototype;
	// 远征重置
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengResetErrorHandler",msg);
	}

	return ResYuanZhengResetErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildAddEventHandler extends net.MNetHandler
var ResGuildAddEventHandler=(function(_super){
	function ResGuildAddEventHandler(){
		ResGuildAddEventHandler.__super.call(this);;
	}

	__class(ResGuildAddEventHandler,'net.handler.guild.ResGuildAddEventHandler',_super);
	var __proto=ResGuildAddEventHandler.prototype;
	// 添加帮会事件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildAddEventHandler ",msg);
	}

	return ResGuildAddEventHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将出战列表
*/
//class net.message.setting.SettingGeneralBean extends engine.base.data.Bean
var SettingGeneralBean=(function(_super){
	function SettingGeneralBean(){
		SettingGeneralBean.__super.call(this);
		this._fights=[];
	}

	__class(SettingGeneralBean,'net.message.setting.SettingGeneralBean',_super);
	var __proto=SettingGeneralBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fights.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fights.length;++i_am_tmp_i){
			this.writeInt(_buf,this._fights[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._fights=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fights[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**出战列表 */
	/**出战列表 */
	__getset(0,__proto,'fights',function(){
		return this._fights;
		},function(value){
		this._fights=value;
	});

	return SettingGeneralBean;
})(Bean)


//class net.handler.worldboss.ResWorldBossBoxRemoveHandler extends net.MNetHandler
var ResWorldBossBoxRemoveHandler=(function(_super){
	function ResWorldBossBoxRemoveHandler(){
		ResWorldBossBoxRemoveHandler.__super.call(this);;
	}

	__class(ResWorldBossBoxRemoveHandler,'net.handler.worldboss.ResWorldBossBoxRemoveHandler',_super);
	var __proto=ResWorldBossBoxRemoveHandler.prototype;
	// boss宝箱拾取删除
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossBoxRemoveHandler",msg);
	}

	return ResWorldBossBoxRemoveHandler;
})(MNetHandler)


//class net.handler.examination.ResKejuExitErrorHandler extends net.MNetHandler
var ResKejuExitErrorHandler=(function(_super){
	function ResKejuExitErrorHandler(){
		ResKejuExitErrorHandler.__super.call(this);;
	}

	__class(ResKejuExitErrorHandler,'net.handler.examination.ResKejuExitErrorHandler',_super);
	var __proto=ResKejuExitErrorHandler.prototype;
	// 退出答题
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResKejuExitErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerRankErrorHandler extends net.MNetHandler
var ResNineHeavyPlayerRankErrorHandler=(function(_super){
	function ResNineHeavyPlayerRankErrorHandler(){
		ResNineHeavyPlayerRankErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerRankErrorHandler,'net.handler.nineHeavy.ResNineHeavyPlayerRankErrorHandler',_super);
	var __proto=ResNineHeavyPlayerRankErrorHandler.prototype;
	// 请求排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerRankErrorHandler",msg);
	}

	return ResNineHeavyPlayerRankErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派OR世界BOSS对象
*/
//class net.message.worldboss.WorldBossBean extends engine.base.data.Bean
var WorldBossBean=(function(_super){
	function WorldBossBean(){
		/**玩家ID */
		this._uid=null;
		/**-1 为正常 其他为死亡复活的倒计时 */
		this._rebornTime=null;
		/**造成的伤害 */
		this._injury=null;
		/**是否离开了副本 0 没有 1离开了 */
		this._leave=0;
		/**位置Point */
		this._point=null;
		/**帮会ID */
		this._legionID=null;
		/**外形 */
		this._appearanceBean=null;
		WorldBossBean.__super.call(this);
	}

	__class(WorldBossBean,'net.message.worldboss.WorldBossBean',_super);
	var __proto=WorldBossBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._rebornTime);
		this.writeLong(_buf,this._injury);
		this.writeInt(_buf,this._leave);
		this.writeBean(_buf,this._point);
		this.writeLong(_buf,this._legionID);
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._rebornTime=this.readLong(_buf);
		this._injury=this.readLong(_buf);
		this._leave=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
		this._legionID=this.readLong(_buf);
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**帮会ID */
	/**帮会ID */
	__getset(0,__proto,'legionID',function(){
		return this._legionID;
		},function(value){
		this._legionID=value;
	});

	/**造成的伤害 */
	/**造成的伤害 */
	__getset(0,__proto,'injury',function(){
		return this._injury;
		},function(value){
		this._injury=value;
	});

	/**-1 为正常 其他为死亡复活的倒计时 */
	/**-1 为正常 其他为死亡复活的倒计时 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	/**是否离开了副本 0 没有 1离开了 */
	/**是否离开了副本 0 没有 1离开了 */
	__getset(0,__proto,'leave',function(){
		return this._leave;
		},function(value){
		this._leave=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	/**位置Point */
	/**位置Point */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return WorldBossBean;
})(Bean)


//class net.handler.garrison.ResGarrisonUpgradeHandler extends net.MNetHandler
var ResGarrisonUpgradeHandler=(function(_super){
	function ResGarrisonUpgradeHandler(){
		ResGarrisonUpgradeHandler.__super.call(this);;
	}

	__class(ResGarrisonUpgradeHandler,'net.handler.garrison.ResGarrisonUpgradeHandler',_super);
	var __proto=ResGarrisonUpgradeHandler.prototype;
	// 升级城门
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonUpgradeHandler" ,msg);
	}

	return ResGarrisonUpgradeHandler;
})(MNetHandler)


//class net.handler.activitys.ResUpdateHuoDongNumHandler extends net.MNetHandler
var ResUpdateHuoDongNumHandler=(function(_super){
	function ResUpdateHuoDongNumHandler(){
		ResUpdateHuoDongNumHandler.__super.call(this);;
	}

	__class(ResUpdateHuoDongNumHandler,'net.handler.activitys.ResUpdateHuoDongNumHandler',_super);
	var __proto=ResUpdateHuoDongNumHandler.prototype;
	// 活动次数变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ACTIVITYS_HANDLER",msg);
	}

	return ResUpdateHuoDongNumHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店商品
*/
//class net.message.shop.ShopGoodsBean extends engine.base.data.Bean
var ShopGoodsBean=(function(_super){
	function ShopGoodsBean(){
		/**唯一ID */
		this._id=0;
		/**道具ID */
		this._goodsID=0;
		/**道具数量 */
		this._num=0;
		/**消耗物品ID */
		this._costGoodsID=0;
		/**消耗物品数量 */
		this._costGoodsNum=0;
		/**消耗物品数量(原价)*/
		this._costGoodsNumShow=0;
		/**购买次数上限 */
		this._limitMax=0;
		/**购买次数上限类型：1：限购天，2：终生限购 */
		this._limitType=0;
		/**购买条件 */
		this._condition=null;
		ShopGoodsBean.__super.call(this);
	}

	__class(ShopGoodsBean,'net.message.shop.ShopGoodsBean',_super);
	var __proto=ShopGoodsBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._goodsID);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._costGoodsID);
		this.writeInt(_buf,this._costGoodsNum);
		this.writeInt(_buf,this._costGoodsNumShow);
		this.writeInt(_buf,this._limitMax);
		this.writeInt(_buf,this._limitType);
		this.writeString(_buf,this._condition);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._goodsID=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._costGoodsID=this.readInt(_buf);
		this._costGoodsNum=this.readInt(_buf);
		this._costGoodsNumShow=this.readInt(_buf);
		this._limitMax=this.readInt(_buf);
		this._limitType=this.readInt(_buf);
		this._condition=this.readString(_buf);
	}

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**购买次数上限类型：1：限购天，2：终生限购 */
	/**购买次数上限类型：1：限购天，2：终生限购 */
	__getset(0,__proto,'limitType',function(){
		return this._limitType;
		},function(value){
		this._limitType=value;
	});

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'goodsID',function(){
		return this._goodsID;
		},function(value){
		this._goodsID=value;
	});

	/**道具数量 */
	/**道具数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**消耗物品数量(原价)*/
	/**消耗物品数量(原价)*/
	__getset(0,__proto,'costGoodsNumShow',function(){
		return this._costGoodsNumShow;
		},function(value){
		this._costGoodsNumShow=value;
	});

	/**消耗物品ID */
	/**消耗物品ID */
	__getset(0,__proto,'costGoodsID',function(){
		return this._costGoodsID;
		},function(value){
		this._costGoodsID=value;
	});

	/**购买次数上限 */
	/**购买次数上限 */
	__getset(0,__proto,'limitMax',function(){
		return this._limitMax;
		},function(value){
		this._limitMax=value;
	});

	/**消耗物品数量 */
	/**消耗物品数量 */
	__getset(0,__proto,'costGoodsNum',function(){
		return this._costGoodsNum;
		},function(value){
		this._costGoodsNum=value;
	});

	/**购买条件 */
	/**购买条件 */
	__getset(0,__proto,'condition',function(){
		return this._condition;
		},function(value){
		this._condition=value;
	});

	return ShopGoodsBean;
})(Bean)


//class net.handler.xuannv.ResXuanNvFeiShengQiangHuaErrorHandler extends net.MNetHandler
var ResXuanNvFeiShengQiangHuaErrorHandler=(function(_super){
	function ResXuanNvFeiShengQiangHuaErrorHandler(){
		ResXuanNvFeiShengQiangHuaErrorHandler.__super.call(this);;
	}

	__class(ResXuanNvFeiShengQiangHuaErrorHandler,'net.handler.xuannv.ResXuanNvFeiShengQiangHuaErrorHandler',_super);
	var __proto=ResXuanNvFeiShengQiangHuaErrorHandler.prototype;
	// 玄女飞升强化
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XuanNvFeiShengQiangHuaErrorHandler",msg.error);
	}

	return ResXuanNvFeiShengQiangHuaErrorHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookActivateErrorHandler extends net.MNetHandler
var ResHandBookActivateErrorHandler=(function(_super){
	function ResHandBookActivateErrorHandler(){
		ResHandBookActivateErrorHandler.__super.call(this);;
	}

	__class(ResHandBookActivateErrorHandler,'net.handler.handbook.ResHandBookActivateErrorHandler',_super);
	var __proto=ResHandBookActivateErrorHandler.prototype;
	// 图鉴激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookActivateErrorHandler",msg.error);
	}

	return ResHandBookActivateErrorHandler;
})(MNetHandler)


//class net.handler.packet.ResEquipPacketAddCapacityErrorHandler extends net.MNetHandler
var ResEquipPacketAddCapacityErrorHandler=(function(_super){
	function ResEquipPacketAddCapacityErrorHandler(){
		ResEquipPacketAddCapacityErrorHandler.__super.call(this);;
	}

	__class(ResEquipPacketAddCapacityErrorHandler,'net.handler.packet.ResEquipPacketAddCapacityErrorHandler',_super);
	var __proto=ResEquipPacketAddCapacityErrorHandler.prototype;
	// 装备背包扩容
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipPacketAddCapacityErrorHandler",msg);
	}

	return ResEquipPacketAddCapacityErrorHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobberyHandler extends net.MNetHandler
var ResEscortRobberyHandler=(function(_super){
	function ResEscortRobberyHandler(){
		ResEscortRobberyHandler.__super.call(this);;
	}

	__class(ResEscortRobberyHandler,'net.handler.escort.ResEscortRobberyHandler',_super);
	var __proto=ResEscortRobberyHandler.prototype;
	// 请求劫镖
	__proto.action=function(){}
	return ResEscortRobberyHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyCityOccupiedHandler extends net.MNetHandler
var ResEmptyCityOccupiedHandler=(function(_super){
	function ResEmptyCityOccupiedHandler(){
		ResEmptyCityOccupiedHandler.__super.call(this);;
	}

	__class(ResEmptyCityOccupiedHandler,'net.handler.emptycity.ResEmptyCityOccupiedHandler',_super);
	var __proto=ResEmptyCityOccupiedHandler.prototype;
	// 通知被占领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyCityOccupiedHandler",msg);
	}

	return ResEmptyCityOccupiedHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateZhuluBoxHandler extends net.MNetHandler
var ResTeamDuplicateZhuluBoxHandler=(function(_super){
	function ResTeamDuplicateZhuluBoxHandler(){
		ResTeamDuplicateZhuluBoxHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateZhuluBoxHandler,'net.handler.teamDuplicate.ResTeamDuplicateZhuluBoxHandler',_super);
	var __proto=ResTeamDuplicateZhuluBoxHandler.prototype;
	// 请求开启逐鹿宝箱
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateZhuluBoxHandler",msg);
	}

	return ResTeamDuplicateZhuluBoxHandler;
})(MNetHandler)


//class net.handler.fight.ResFightPositionExchangeErrorHandler extends net.MNetHandler
var ResFightPositionExchangeErrorHandler=(function(_super){
	function ResFightPositionExchangeErrorHandler(){
		ResFightPositionExchangeErrorHandler.__super.call(this);;
	}

	__class(ResFightPositionExchangeErrorHandler,'net.handler.fight.ResFightPositionExchangeErrorHandler',_super);
	var __proto=ResFightPositionExchangeErrorHandler.prototype;
	// 上阵位置替换
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionExchangeErrorHandler" ,msg);
	}

	return ResFightPositionExchangeErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResZhiJianShareSucHandler extends net.MNetHandler
var ResZhiJianShareSucHandler=(function(_super){
	function ResZhiJianShareSucHandler(){
		ResZhiJianShareSucHandler.__super.call(this);;
	}

	__class(ResZhiJianShareSucHandler,'net.handler.misc.ResZhiJianShareSucHandler',_super);
	var __proto=ResZhiJianShareSucHandler.prototype;
	// 通知服务端指尖玩家成功分享
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResZhiJianShareSucHandler",msg);
	}

	return ResZhiJianShareSucHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaChallengeErrorHandler extends net.MNetHandler
var ResArenaChallengeErrorHandler=(function(_super){
	function ResArenaChallengeErrorHandler(){
		ResArenaChallengeErrorHandler.__super.call(this);;
	}

	__class(ResArenaChallengeErrorHandler,'net.handler.arena.ResArenaChallengeErrorHandler',_super);
	var __proto=ResArenaChallengeErrorHandler.prototype;
	// 挑战
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaChallengeErrorHandler",msg.error);
	}

	return ResArenaChallengeErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveQuanMinBossDungeonPrizeErrorHandler extends net.MNetHandler
var ResReceiveQuanMinBossDungeonPrizeErrorHandler=(function(_super){
	function ResReceiveQuanMinBossDungeonPrizeErrorHandler(){
		ResReceiveQuanMinBossDungeonPrizeErrorHandler.__super.call(this);;
	}

	__class(ResReceiveQuanMinBossDungeonPrizeErrorHandler,'net.handler.dungeon.ResReceiveQuanMinBossDungeonPrizeErrorHandler',_super);
	var __proto=ResReceiveQuanMinBossDungeonPrizeErrorHandler.prototype;
	// 领取副本奖励(全民BOSS)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveQuanMinBossDungeonPrizeErrorHandler",msg.error);
	}

	return ResReceiveQuanMinBossDungeonPrizeErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossMoveHandler extends net.MNetHandler
var ResWorldBossMoveHandler=(function(_super){
	function ResWorldBossMoveHandler(){
		ResWorldBossMoveHandler.__super.call(this);;
	}

	__class(ResWorldBossMoveHandler,'net.handler.worldboss.ResWorldBossMoveHandler',_super);
	var __proto=ResWorldBossMoveHandler.prototype;
	// 玩家移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossMoveHandler",msg);
	}

	return ResWorldBossMoveHandler;
})(MNetHandler)


//class net.handler.video.ResLikeVideoHandler extends net.MNetHandler
var ResLikeVideoHandler=(function(_super){
	function ResLikeVideoHandler(){
		ResLikeVideoHandler.__super.call(this);;
	}

	__class(ResLikeVideoHandler,'net.handler.video.ResLikeVideoHandler',_super);
	var __proto=ResLikeVideoHandler.prototype;
	// 录像点赞
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LikeVideoHandler",msg);
	}

	return ResLikeVideoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物
*/
//class net.message.treasure.TreasureBean extends engine.base.data.Bean
var TreasureBean=(function(_super){
	function TreasureBean(){
		/**ID */
		this._id=0;
		/**培养等级 */
		this._pyLevel=0;
		/**星级 */
		this._star=0;
		TreasureBean.__super.call(this);
		this._pyAttrs=[];
	}

	__class(TreasureBean,'net.message.treasure.TreasureBean',_super);
	var __proto=TreasureBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._pyLevel);
		this.writeInt(_buf,this._star);
		this.writeInt(_buf,this._pyAttrs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pyAttrs.length;++i_am_tmp_i){
			this._pyAttrs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._pyLevel=this.readInt(_buf);
		this._star=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._pyAttrs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pyAttrs[i_am_tmp_i]=this.readBeanInList(_buf,AttributeBean);
		}
	}

	/**培养等级 */
	/**培养等级 */
	__getset(0,__proto,'pyLevel',function(){
		return this._pyLevel;
		},function(value){
		this._pyLevel=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**星级 */
	/**星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**培养(基础)属性 */
	/**培养(基础)属性 */
	__getset(0,__proto,'pyAttrs',function(){
		return this._pyAttrs;
		},function(value){
		this._pyAttrs=value;
	});

	return TreasureBean;
})(Bean)


//class net.handler.adviser.ResAdviserUpgradeElementQuickHandler extends net.MNetHandler
var ResAdviserUpgradeElementQuickHandler=(function(_super){
	function ResAdviserUpgradeElementQuickHandler(){
		ResAdviserUpgradeElementQuickHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeElementQuickHandler,'net.handler.adviser.ResAdviserUpgradeElementQuickHandler',_super);
	var __proto=ResAdviserUpgradeElementQuickHandler.prototype;
	// 一键升级觉醒元素
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeElementQuickHandler",msg.elementBeans);
	}

	return ResAdviserUpgradeElementQuickHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageWeddingInvitationHandler extends net.MNetHandler
var ResMarriageWeddingInvitationHandler=(function(_super){
	function ResMarriageWeddingInvitationHandler(){
		ResMarriageWeddingInvitationHandler.__super.call(this);;
	}

	__class(ResMarriageWeddingInvitationHandler,'net.handler.marriage.ResMarriageWeddingInvitationHandler',_super);
	var __proto=ResMarriageWeddingInvitationHandler.prototype;
	// 有玩家结婚
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageWeddingInvitationHandler",msg);
	}

	return ResMarriageWeddingInvitationHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树
*/
//class net.message.welfare.YaoQianShu extends engine.base.data.Bean
var YaoQianShu=(function(_super){
	function YaoQianShu(){
		/**摇钱次数 */
		this._num=0;
		/**可领取次数 */
		this._rewardNum=0;
		/**已领取次数 */
		this._getRewardNum=0;
		/**是否遭遇奇遇 */
		this._isQiYu=false;
		/**上次登录时间 */
		this._lastUpdateTime=null;
		YaoQianShu.__super.call(this);
	}

	__class(YaoQianShu,'net.message.welfare.YaoQianShu',_super);
	var __proto=YaoQianShu.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._rewardNum);
		this.writeInt(_buf,this._getRewardNum);
		this.writeBoolean(_buf,this._isQiYu);
		this.writeLong(_buf,this._lastUpdateTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._num=this.readInt(_buf);
		this._rewardNum=this.readInt(_buf);
		this._getRewardNum=this.readInt(_buf);
		this._isQiYu=this.readBoolean(_buf);
		this._lastUpdateTime=this.readLong(_buf);
	}

	/**摇钱次数 */
	/**摇钱次数 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**可领取次数 */
	/**可领取次数 */
	__getset(0,__proto,'rewardNum',function(){
		return this._rewardNum;
		},function(value){
		this._rewardNum=value;
	});

	/**已领取次数 */
	/**已领取次数 */
	__getset(0,__proto,'getRewardNum',function(){
		return this._getRewardNum;
		},function(value){
		this._getRewardNum=value;
	});

	/**是否遭遇奇遇 */
	/**是否遭遇奇遇 */
	__getset(0,__proto,'isQiYu',function(){
		return this._isQiYu;
		},function(value){
		this._isQiYu=value;
	});

	/**上次登录时间 */
	/**上次登录时间 */
	__getset(0,__proto,'lastUpdateTime',function(){
		return this._lastUpdateTime;
		},function(value){
		this._lastUpdateTime=value;
	});

	return YaoQianShu;
})(Bean)


//class net.handler.pet.ResUpgradePetSkillHandler extends net.MNetHandler
var ResUpgradePetSkillHandler=(function(_super){
	function ResUpgradePetSkillHandler(){
		ResUpgradePetSkillHandler.__super.call(this);;
	}

	__class(ResUpgradePetSkillHandler,'net.handler.pet.ResUpgradePetSkillHandler',_super);
	var __proto=ResUpgradePetSkillHandler.prototype;
	// 升级宠物技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetSkillHandler",msg);
	}

	return ResUpgradePetSkillHandler;
})(MNetHandler)


//class net.handler.towerFight.ResEnterTowerErrorHandler extends net.MNetHandler
var ResEnterTowerErrorHandler=(function(_super){
	function ResEnterTowerErrorHandler(){
		ResEnterTowerErrorHandler.__super.call(this);;
	}

	__class(ResEnterTowerErrorHandler,'net.handler.towerFight.ResEnterTowerErrorHandler',_super);
	var __proto=ResEnterTowerErrorHandler.prototype;
	// 进入试炼之塔
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEnterTowerErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarBuyCountHandler extends net.MNetHandler
var ResKingWarBuyCountHandler=(function(_super){
	function ResKingWarBuyCountHandler(){
		ResKingWarBuyCountHandler.__super.call(this);;
	}

	__class(ResKingWarBuyCountHandler,'net.handler.kingwar.ResKingWarBuyCountHandler',_super);
	var __proto=ResKingWarBuyCountHandler.prototype;
	// 王者争霸购买战斗次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarBuyCountHandler",msg);
	}

	return ResKingWarBuyCountHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneMoveErrorHandler extends net.MNetHandler
var ResSceneMoveErrorHandler=(function(_super){
	function ResSceneMoveErrorHandler(){
		ResSceneMoveErrorHandler.__super.call(this);;
	}

	__class(ResSceneMoveErrorHandler,'net.handler.scene.ResSceneMoveErrorHandler',_super);
	var __proto=ResSceneMoveErrorHandler.prototype;
	// 移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneMoveErrorHandler",msg);
	}

	return ResSceneMoveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*场景玩家
*/
//class net.message.scene.SceneUserBean extends engine.base.data.Bean
var SceneUserBean=(function(_super){
	function SceneUserBean(){
		/**唯一ID */
		this._uid=null;
		/**自动复活时间，0表示未死亡 */
		this._reliveTime=null;
		/**x */
		this._x=0;
		/**y */
		this._y=0;
		/**外观 */
		this._appearance=null;
		SceneUserBean.__super.call(this);
	}

	__class(SceneUserBean,'net.message.scene.SceneUserBean',_super);
	var __proto=SceneUserBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._reliveTime);
		this.writeInt(_buf,this._x);
		this.writeInt(_buf,this._y);
		this.writeBean(_buf,this._appearance);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._reliveTime=this.readLong(_buf);
		this._x=this.readInt(_buf);
		this._y=this.readInt(_buf);
		this._appearance=this.readBean(_buf,AppearanceBean);
	}

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**自动复活时间，0表示未死亡 */
	/**自动复活时间，0表示未死亡 */
	__getset(0,__proto,'reliveTime',function(){
		return this._reliveTime;
		},function(value){
		this._reliveTime=value;
	});

	/**外观 */
	/**外观 */
	__getset(0,__proto,'appearance',function(){
		return this._appearance;
		},function(value){
		this._appearance=value;
	});

	/**x */
	/**x */
	__getset(0,__proto,'x',function(){
		return this._x;
		},function(value){
		this._x=value;
	});

	/**y */
	/**y */
	__getset(0,__proto,'y',function(){
		return this._y;
		},function(value){
		this._y=value;
	});

	return SceneUserBean;
})(Bean)


//class net.handler.misc.ResGetRechargeInfoHandler extends net.MNetHandler
var ResGetRechargeInfoHandler=(function(_super){
	function ResGetRechargeInfoHandler(){
		ResGetRechargeInfoHandler.__super.call(this);;
	}

	__class(ResGetRechargeInfoHandler,'net.handler.misc.ResGetRechargeInfoHandler',_super);
	var __proto=ResGetRechargeInfoHandler.prototype;
	// 充值信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetRechargeInfoHandler",msg.rechargeIdList);
	}

	return ResGetRechargeInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍
*/
//class net.message.fight.FightTeamBean extends engine.base.data.Bean
var FightTeamBean=(function(_super){
	function FightTeamBean(){
		FightTeamBean.__super.call(this);
		this._heroes=[];
		this._npcs=[];
	}

	__class(FightTeamBean,'net.message.fight.FightTeamBean',_super);
	var __proto=FightTeamBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._heroes.length;++i_am_tmp_i){
			this._heroes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._npcs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._npcs.length;++i_am_tmp_i){
			this._npcs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._heroes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._heroes[i_am_tmp_i]=this.readBeanInList(_buf,FightHeroBean);
		}
		size52413035=this.readInt(_buf);
		this._npcs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._npcs[i_am_tmp_i]=this.readBeanInList(_buf,FightNpcBean);
		}
	}

	/**英雄列表 */
	/**英雄列表 */
	__getset(0,__proto,'heroes',function(){
		return this._heroes;
		},function(value){
		this._heroes=value;
	});

	/**宠物列表 */
	/**宠物列表 */
	__getset(0,__proto,'npcs',function(){
		return this._npcs;
		},function(value){
		this._npcs=value;
	});

	return FightTeamBean;
})(Bean)


//class net.handler.guild.ResGuildKickHandler extends net.MNetHandler
var ResGuildKickHandler=(function(_super){
	function ResGuildKickHandler(){
		ResGuildKickHandler.__super.call(this);;
	}

	__class(ResGuildKickHandler,'net.handler.guild.ResGuildKickHandler',_super);
	var __proto=ResGuildKickHandler.prototype;
	// 军团踢人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildKickHandler",msg);
	}

	return ResGuildKickHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*跨服玩家
*/
//class net.message.teamDuplicate.TeamPlayerBean extends engine.base.data.Bean
var TeamPlayerBean=(function(_super){
	function TeamPlayerBean(){
		/**ID */
		this._uid=null;
		/**等级 */
		this._lv=0;
		/**性别 */
		this._sex=0;
		/**职业 */
		this._occupation=0;
		/**服务器ID */
		this._serverID=0;
		/**玩家名字 */
		this._uname=null;
		/**战斗力 */
		this._fightPower=null;
		/**服务器序号 */
		this._sno=0;
		TeamPlayerBean.__super.call(this);
	}

	__class(TeamPlayerBean,'net.message.teamDuplicate.TeamPlayerBean',_super);
	var __proto=TeamPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._sex);
		this.writeInt(_buf,this._occupation);
		this.writeInt(_buf,this._serverID);
		this.writeString(_buf,this._uname);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._lv=this.readInt(_buf);
		this._sex=this.readInt(_buf);
		this._occupation=this.readInt(_buf);
		this._serverID=this.readInt(_buf);
		this._uname=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._sno=this.readInt(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**服务器ID */
	/**服务器ID */
	__getset(0,__proto,'serverID',function(){
		return this._serverID;
		},function(value){
		this._serverID=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'sex',function(){
		return this._sex;
		},function(value){
		this._sex=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'occupation',function(){
		return this._occupation;
		},function(value){
		this._occupation=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'uname',function(){
		return this._uname;
		},function(value){
		this._uname=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return TeamPlayerBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图腾
*/
//class net.message.totem.TotemBean extends engine.base.data.Bean
var TotemBean=(function(_super){
	function TotemBean(){
		/**id */
		this._id=0;
		/**等级 */
		this._lv=0;
		/**进度 */
		this._progress=0;
		/**突破 */
		this._surmount=0;
		/**是否激活 */
		this._isActive=false;
		TotemBean.__super.call(this);
		this._attribute=[];
		this._surmountttribute=[];
	}

	__class(TotemBean,'net.message.totem.TotemBean',_super);
	var __proto=TotemBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._surmount);
		this.writeBoolean(_buf,this._isActive);
		this.writeInt(_buf,this._attribute.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attribute.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attribute[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._surmountttribute.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._surmountttribute.length;++i_am_tmp_i){
			this.writeLong(_buf,this._surmountttribute[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		this._surmount=this.readInt(_buf);
		this._isActive=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._attribute=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attribute[i_am_tmp_i]=this.readLong(_buf);
		}
		size52413035=this.readInt(_buf);
		this._surmountttribute=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._surmountttribute[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**属性 */
	/**属性 */
	__getset(0,__proto,'attribute',function(){
		return this._attribute;
		},function(value){
		this._attribute=value;
	});

	/**是否激活 */
	/**是否激活 */
	__getset(0,__proto,'isActive',function(){
		return this._isActive;
		},function(value){
		this._isActive=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**突破 */
	/**突破 */
	__getset(0,__proto,'surmount',function(){
		return this._surmount;
		},function(value){
		this._surmount=value;
	});

	/**突破属性 */
	/**突破属性 */
	__getset(0,__proto,'surmountttribute',function(){
		return this._surmountttribute;
		},function(value){
		this._surmountttribute=value;
	});

	return TotemBean;
})(Bean)


//class net.handler.zhanwen.ResReplaceZhanwenHandler extends net.MNetHandler
var ResReplaceZhanwenHandler=(function(_super){
	function ResReplaceZhanwenHandler(){
		ResReplaceZhanwenHandler.__super.call(this);;
	}

	__class(ResReplaceZhanwenHandler,'net.handler.zhanwen.ResReplaceZhanwenHandler',_super);
	var __proto=ResReplaceZhanwenHandler.prototype;
	// 替换/装备战纹
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceZhanwenHandler",msg);
	}

	return ResReplaceZhanwenHandler;
})(MNetHandler)


//class net.handler.misc.ResGetAttributeInfoHandler extends net.MNetHandler
var ResGetAttributeInfoHandler=(function(_super){
	function ResGetAttributeInfoHandler(){
		ResGetAttributeInfoHandler.__super.call(this);;
	}

	__class(ResGetAttributeInfoHandler,'net.handler.misc.ResGetAttributeInfoHandler',_super);
	var __proto=ResGetAttributeInfoHandler.prototype;
	// 充值
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OtherPlayerAttrInfoHandler" ,msg);
	}

	return ResGetAttributeInfoHandler;
})(MNetHandler)


//class net.handler.pet.ResXiLianPetErrorHandler extends net.MNetHandler
var ResXiLianPetErrorHandler=(function(_super){
	function ResXiLianPetErrorHandler(){
		ResXiLianPetErrorHandler.__super.call(this);;
	}

	__class(ResXiLianPetErrorHandler,'net.handler.pet.ResXiLianPetErrorHandler',_super);
	var __proto=ResXiLianPetErrorHandler.prototype;
	// 洗练宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XiLianPetErrorHandler",msg.error);
	}

	return ResXiLianPetErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeAutoAgreeApplyErrorHandler extends net.MNetHandler
var ResGuildChangeAutoAgreeApplyErrorHandler=(function(_super){
	function ResGuildChangeAutoAgreeApplyErrorHandler(){
		ResGuildChangeAutoAgreeApplyErrorHandler.__super.call(this);;
	}

	__class(ResGuildChangeAutoAgreeApplyErrorHandler,'net.handler.guild.ResGuildChangeAutoAgreeApplyErrorHandler',_super);
	var __proto=ResGuildChangeAutoAgreeApplyErrorHandler.prototype;
	// 修改是否允许自动入帮
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeAutoAgreeApplyErrorHandler",msg);
	}

	return ResGuildChangeAutoAgreeApplyErrorHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeWakeUpHandler extends net.MNetHandler
var ResAdviserUpgradeWakeUpHandler=(function(_super){
	function ResAdviserUpgradeWakeUpHandler(){
		ResAdviserUpgradeWakeUpHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeWakeUpHandler,'net.handler.adviser.ResAdviserUpgradeWakeUpHandler',_super);
	var __proto=ResAdviserUpgradeWakeUpHandler.prototype;
	// 升级觉醒
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeWakeUpHandler",msg);
	}

	return ResAdviserUpgradeWakeUpHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipMakingStoneErrorHandler extends net.MNetHandler
var ResEquipMakingStoneErrorHandler=(function(_super){
	function ResEquipMakingStoneErrorHandler(){
		ResEquipMakingStoneErrorHandler.__super.call(this);;
	}

	__class(ResEquipMakingStoneErrorHandler,'net.handler.equip.ResEquipMakingStoneErrorHandler',_super);
	var __proto=ResEquipMakingStoneErrorHandler.prototype;
	// 合成装备打造石
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipMakingStoneErrorHandler",msg);
	}

	return ResEquipMakingStoneErrorHandler;
})(MNetHandler)


//class net.handler.advanceReward.ResGetAdvancedInfoHandler extends net.MNetHandler
var ResGetAdvancedInfoHandler=(function(_super){
	function ResGetAdvancedInfoHandler(){
		ResGetAdvancedInfoHandler.__super.call(this);;
	}

	__class(ResGetAdvancedInfoHandler,'net.handler.advanceReward.ResGetAdvancedInfoHandler',_super);
	var __proto=ResGetAdvancedInfoHandler.prototype;
	// 获取进阶好礼信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdvancedRewardInfo_HANDLER",msg.rewarded);
	}

	return ResGetAdvancedInfoHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeNoticeErrorHandler extends net.MNetHandler
var ResGuildChangeNoticeErrorHandler=(function(_super){
	function ResGuildChangeNoticeErrorHandler(){
		ResGuildChangeNoticeErrorHandler.__super.call(this);;
	}

	__class(ResGuildChangeNoticeErrorHandler,'net.handler.guild.ResGuildChangeNoticeErrorHandler',_super);
	var __proto=ResGuildChangeNoticeErrorHandler.prototype;
	// 帮会改名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeNoticeErrorHandler",msg);
	}

	return ResGuildChangeNoticeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*被占领对象
*/
//class net.message.emptycity.EmptyCityOccupiedBean extends engine.base.data.Bean
var EmptyCityOccupiedBean=(function(_super){
	function EmptyCityOccupiedBean(){
		/**攻击者名字 */
		this._atkerName=null;
		/**被攻击城池ID */
		this._cityID=0;
		/**发生时间 */
		this._time=null;
		EmptyCityOccupiedBean.__super.call(this);
	}

	__class(EmptyCityOccupiedBean,'net.message.emptycity.EmptyCityOccupiedBean',_super);
	var __proto=EmptyCityOccupiedBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._atkerName);
		this.writeInt(_buf,this._cityID);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._atkerName=this.readString(_buf);
		this._cityID=this.readInt(_buf);
		this._time=this.readLong(_buf);
	}

	/**攻击者名字 */
	/**攻击者名字 */
	__getset(0,__proto,'atkerName',function(){
		return this._atkerName;
		},function(value){
		this._atkerName=value;
	});

	/**被攻击城池ID */
	/**被攻击城池ID */
	__getset(0,__proto,'cityID',function(){
		return this._cityID;
		},function(value){
		this._cityID=value;
	});

	/**发生时间 */
	/**发生时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return EmptyCityOccupiedBean;
})(Bean)


//class net.handler.gb.ResLegionBattlePayRebornHandler extends net.MNetHandler
var ResLegionBattlePayRebornHandler=(function(_super){
	function ResLegionBattlePayRebornHandler(){
		ResLegionBattlePayRebornHandler.__super.call(this);;
	}

	__class(ResLegionBattlePayRebornHandler,'net.handler.gb.ResLegionBattlePayRebornHandler',_super);
	var __proto=ResLegionBattlePayRebornHandler.prototype;
	// 请求给钱复活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattlePayRebornHandler" ,msg);
	}

	return ResLegionBattlePayRebornHandler;
})(MNetHandler)


//class net.handler.fight.ResFightPositionRemoveErrorHandler extends net.MNetHandler
var ResFightPositionRemoveErrorHandler=(function(_super){
	function ResFightPositionRemoveErrorHandler(){
		ResFightPositionRemoveErrorHandler.__super.call(this);;
	}

	__class(ResFightPositionRemoveErrorHandler,'net.handler.fight.ResFightPositionRemoveErrorHandler',_super);
	var __proto=ResFightPositionRemoveErrorHandler.prototype;
	// 下阵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionRemoveErrorHandler" ,msg);
	}

	return ResFightPositionRemoveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*百万元宝
*/
//class net.message.welfare.BaiWanYuanBao extends engine.base.data.Bean
var BaiWanYuanBao=(function(_super){
	function BaiWanYuanBao(){
		/**登录天数 */
		this._loginDay=0;
		/**上次登录时间 */
		this._lastLoginTime=null;
		BaiWanYuanBao.__super.call(this);
		this._receivedId=[];
	}

	__class(BaiWanYuanBao,'net.message.welfare.BaiWanYuanBao',_super);
	var __proto=BaiWanYuanBao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._loginDay);
		this.writeLong(_buf,this._lastLoginTime);
		this.writeInt(_buf,this._receivedId.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._receivedId.length;++i_am_tmp_i){
			this.writeInt(_buf,this._receivedId[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._loginDay=this.readInt(_buf);
		this._lastLoginTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._receivedId=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._receivedId[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**登录天数 */
	/**登录天数 */
	__getset(0,__proto,'loginDay',function(){
		return this._loginDay;
		},function(value){
		this._loginDay=value;
	});

	/**已领取宝箱id */
	/**已领取宝箱id */
	__getset(0,__proto,'receivedId',function(){
		return this._receivedId;
		},function(value){
		this._receivedId=value;
	});

	/**上次登录时间 */
	/**上次登录时间 */
	__getset(0,__proto,'lastLoginTime',function(){
		return this._lastLoginTime;
		},function(value){
		this._lastLoginTime=value;
	});

	return BaiWanYuanBao;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供宝箱信息
*/
//class net.message.gongCe.QingWangBean extends engine.base.data.Bean
var QingWangBean=(function(_super){
	function QingWangBean(){
		/**id */
		this._id=0;
		/**是否已购买 */
		this._isChongzhi=false;
		/**是否已领取 */
		this._isReceived=false;
		/**自选的奖励 */
		this._index=0;
		/**可购买的次数 */
		this._count=0;
		QingWangBean.__super.call(this);
	}

	__class(QingWangBean,'net.message.gongCe.QingWangBean',_super);
	var __proto=QingWangBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBoolean(_buf,this._isChongzhi);
		this.writeBoolean(_buf,this._isReceived);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._isChongzhi=this.readBoolean(_buf);
		this._isReceived=this.readBoolean(_buf);
		this._index=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否已购买 */
	/**是否已购买 */
	__getset(0,__proto,'isChongzhi',function(){
		return this._isChongzhi;
		},function(value){
		this._isChongzhi=value;
	});

	/**是否已领取 */
	/**是否已领取 */
	__getset(0,__proto,'isReceived',function(){
		return this._isReceived;
		},function(value){
		this._isReceived=value;
	});

	/**自选的奖励 */
	/**自选的奖励 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**可购买的次数 */
	/**可购买的次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return QingWangBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店商品购买次数
*/
//class net.message.shop.ShopGoodsBuyTimesBean extends engine.base.data.Bean
var ShopGoodsBuyTimesBean=(function(_super){
	function ShopGoodsBuyTimesBean(){
		/**商店商品ID */
		this._shopGoodsID=0;
		/**已购买次数 */
		this._times=0;
		ShopGoodsBuyTimesBean.__super.call(this);
	}

	__class(ShopGoodsBuyTimesBean,'net.message.shop.ShopGoodsBuyTimesBean',_super);
	var __proto=ShopGoodsBuyTimesBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopGoodsID);
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopGoodsID=this.readInt(_buf);
		this._times=this.readInt(_buf);
	}

	/**商店商品ID */
	/**商店商品ID */
	__getset(0,__proto,'shopGoodsID',function(){
		return this._shopGoodsID;
		},function(value){
		this._shopGoodsID=value;
	});

	/**已购买次数 */
	/**已购买次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ShopGoodsBuyTimesBean;
})(Bean)


//class net.handler.emptycity.ResEmptyCityPayColdHandler extends net.MNetHandler
var ResEmptyCityPayColdHandler=(function(_super){
	function ResEmptyCityPayColdHandler(){
		ResEmptyCityPayColdHandler.__super.call(this);;
	}

	__class(ResEmptyCityPayColdHandler,'net.handler.emptycity.ResEmptyCityPayColdHandler',_super);
	var __proto=ResEmptyCityPayColdHandler.prototype;
	// 购买冷却
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyCityPayColdHandler",msg);
	}

	return ResEmptyCityPayColdHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveYeWaiBossDungeonPrizeErrorHandler extends net.MNetHandler
var ResReceiveYeWaiBossDungeonPrizeErrorHandler=(function(_super){
	function ResReceiveYeWaiBossDungeonPrizeErrorHandler(){
		ResReceiveYeWaiBossDungeonPrizeErrorHandler.__super.call(this);;
	}

	__class(ResReceiveYeWaiBossDungeonPrizeErrorHandler,'net.handler.dungeon.ResReceiveYeWaiBossDungeonPrizeErrorHandler',_super);
	var __proto=ResReceiveYeWaiBossDungeonPrizeErrorHandler.prototype;
	// 领取副本奖励(野外BOSS)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveYeWaiBossDungeonPrizeErrorHandler",msg.error);
	}

	return ResReceiveYeWaiBossDungeonPrizeErrorHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipIllusionHandler extends net.MNetHandler
var ResEquipIllusionHandler=(function(_super){
	function ResEquipIllusionHandler(){
		ResEquipIllusionHandler.__super.call(this);;
	}

	__class(ResEquipIllusionHandler,'net.handler.equip.ResEquipIllusionHandler',_super);
	var __proto=ResEquipIllusionHandler.prototype;
	// 装备幻化
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipIllusionHandler",msg);
	}

	return ResEquipIllusionHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*全民boss对象
*/
//class net.message.dungeon.QuanMinBossBean extends engine.base.data.Bean
var QuanMinBossBean=(function(_super){
	function QuanMinBossBean(){
		/**玩家ID */
		this._uid=null;
		/**是否离开了副本 0 没有 1离开了 */
		this._leave=0;
		/**位置Point */
		this._point=null;
		/**外形 */
		this._appearanceBean=null;
		QuanMinBossBean.__super.call(this);
	}

	__class(QuanMinBossBean,'net.message.dungeon.QuanMinBossBean',_super);
	var __proto=QuanMinBossBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._leave);
		this.writeBean(_buf,this._point);
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._leave=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**是否离开了副本 0 没有 1离开了 */
	/**是否离开了副本 0 没有 1离开了 */
	__getset(0,__proto,'leave',function(){
		return this._leave;
		},function(value){
		this._leave=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	/**位置Point */
	/**位置Point */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return QuanMinBossBean;
})(Bean)


//class net.handler.wartoken.ResBuyWarTokenSucessHandler extends net.MNetHandler
var ResBuyWarTokenSucessHandler=(function(_super){
	function ResBuyWarTokenSucessHandler(){
		ResBuyWarTokenSucessHandler.__super.call(this);;
	}

	__class(ResBuyWarTokenSucessHandler,'net.handler.wartoken.ResBuyWarTokenSucessHandler',_super);
	var __proto=ResBuyWarTokenSucessHandler.prototype;
	// 购买三国令成功
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyWarTokenSucessHandler",msg);
	}

	return ResBuyWarTokenSucessHandler;
})(MNetHandler)


//class net.handler.team.ResTeamKickHandler extends net.MNetHandler
var ResTeamKickHandler=(function(_super){
	function ResTeamKickHandler(){
		ResTeamKickHandler.__super.call(this);;
	}

	__class(ResTeamKickHandler,'net.handler.team.ResTeamKickHandler',_super);
	var __proto=ResTeamKickHandler.prototype;
	// 队伍踢人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamKickHandler",msg);
	}

	return ResTeamKickHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiGetFightInfoHandler extends net.MNetHandler
var ResQunYingHuiGetFightInfoHandler=(function(_super){
	function ResQunYingHuiGetFightInfoHandler(){
		ResQunYingHuiGetFightInfoHandler.__super.call(this);;
	}

	__class(ResQunYingHuiGetFightInfoHandler,'net.handler.qunyinghui.ResQunYingHuiGetFightInfoHandler',_super);
	var __proto=ResQunYingHuiGetFightInfoHandler.prototype;
	// 群英会获取战斗信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiGetFightInfoHandler",msg);
	}

	return ResQunYingHuiGetFightInfoHandler;
})(MNetHandler)


//class net.handler.towerFight.ResTowerFightHandler extends net.MNetHandler
var ResTowerFightHandler=(function(_super){
	function ResTowerFightHandler(){
		ResTowerFightHandler.__super.call(this);;
	}

	__class(ResTowerFightHandler,'net.handler.towerFight.ResTowerFightHandler',_super);
	var __proto=ResTowerFightHandler.prototype;
	// 挑战试炼之塔
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TowerFightResultHandler",msg);
	}

	return ResTowerFightHandler;
})(MNetHandler)


//class net.handler.chat.ResChatNeedHelpHandler extends net.MNetHandler
var ResChatNeedHelpHandler=(function(_super){
	function ResChatNeedHelpHandler(){
		ResChatNeedHelpHandler.__super.call(this);;
	}

	__class(ResChatNeedHelpHandler,'net.handler.chat.ResChatNeedHelpHandler',_super);
	var __proto=ResChatNeedHelpHandler.prototype;
	// 帮助关卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatNeedHelpHandler",msg);
	}

	return ResChatNeedHelpHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemSurmountHandler extends net.MNetHandler
var ResTotemSurmountHandler=(function(_super){
	function ResTotemSurmountHandler(){
		ResTotemSurmountHandler.__super.call(this);;
	}

	__class(ResTotemSurmountHandler,'net.handler.totem.ResTotemSurmountHandler',_super);
	var __proto=ResTotemSurmountHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemSurmountHandler",msg.totemBean);
	}

	return ResTotemSurmountHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPayRebornErrorHandler extends net.MNetHandler
var ResNineHeavyPayRebornErrorHandler=(function(_super){
	function ResNineHeavyPayRebornErrorHandler(){
		ResNineHeavyPayRebornErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyPayRebornErrorHandler,'net.handler.nineHeavy.ResNineHeavyPayRebornErrorHandler',_super);
	var __proto=ResNineHeavyPayRebornErrorHandler.prototype;
	// 玩家攻击
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPayRebornErrorHandler",msg);
	}

	return ResNineHeavyPayRebornErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamApplyReplyHandler extends net.MNetHandler
var ResTeamApplyReplyHandler=(function(_super){
	function ResTeamApplyReplyHandler(){
		ResTeamApplyReplyHandler.__super.call(this);;
	}

	__class(ResTeamApplyReplyHandler,'net.handler.team.ResTeamApplyReplyHandler',_super);
	var __proto=ResTeamApplyReplyHandler.prototype;
	// 回应申请加入队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamApplyReplyHandler",msg);
	}

	return ResTeamApplyReplyHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyUpdateAppearanceHandler extends net.MNetHandler
var ResNineHeavyUpdateAppearanceHandler=(function(_super){
	function ResNineHeavyUpdateAppearanceHandler(){
		ResNineHeavyUpdateAppearanceHandler.__super.call(this);;
	}

	__class(ResNineHeavyUpdateAppearanceHandler,'net.handler.nineHeavy.ResNineHeavyUpdateAppearanceHandler',_super);
	var __proto=ResNineHeavyUpdateAppearanceHandler.prototype;
	// 更新参战
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyUpdateAppearanceHandler",msg);
	}

	return ResNineHeavyUpdateAppearanceHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyXilianTranslateErrorHandler extends net.MNetHandler
var ResSoulBoyXilianTranslateErrorHandler=(function(_super){
	function ResSoulBoyXilianTranslateErrorHandler(){
		ResSoulBoyXilianTranslateErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianTranslateErrorHandler,'net.handler.soulboy.ResSoulBoyXilianTranslateErrorHandler',_super);
	var __proto=ResSoulBoyXilianTranslateErrorHandler.prototype;
	// 御魂和灵分解
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianTranslateErrorHandler",msg);
	}

	return ResSoulBoyXilianTranslateErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResUpdateCaiLiaoDungeonTimeHandler extends net.MNetHandler
var ResUpdateCaiLiaoDungeonTimeHandler=(function(_super){
	function ResUpdateCaiLiaoDungeonTimeHandler(){
		ResUpdateCaiLiaoDungeonTimeHandler.__super.call(this);;
	}

	__class(ResUpdateCaiLiaoDungeonTimeHandler,'net.handler.dungeon.ResUpdateCaiLiaoDungeonTimeHandler',_super);
	var __proto=ResUpdateCaiLiaoDungeonTimeHandler.prototype;
	// 更新材料副本挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateCaiLiaoDungeonTimeHandler",msg);
	}

	return ResUpdateCaiLiaoDungeonTimeHandler;
})(MNetHandler)


//class net.handler.pata.ResGetYCTTInfoHandler extends net.MNetHandler
var ResGetYCTTInfoHandler=(function(_super){
	function ResGetYCTTInfoHandler(){
		ResGetYCTTInfoHandler.__super.call(this);;
	}

	__class(ResGetYCTTInfoHandler,'net.handler.pata.ResGetYCTTInfoHandler',_super);
	var __proto=ResGetYCTTInfoHandler.prototype;
	// 获取勇闯天庭信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetYCTTInfoHandler",msg);
	}

	return ResGetYCTTInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登陆送元宝
*/
//class net.message.welfare.DengLuSongYuanBao extends engine.base.data.Bean
var DengLuSongYuanBao=(function(_super){
	function DengLuSongYuanBao(){
		/**登录天数 */
		this._loginDay=0;
		/**上次登录时间 */
		this._lastLoginTime=null;
		DengLuSongYuanBao.__super.call(this);
		this._receivedId=[];
	}

	__class(DengLuSongYuanBao,'net.message.welfare.DengLuSongYuanBao',_super);
	var __proto=DengLuSongYuanBao.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._loginDay);
		this.writeLong(_buf,this._lastLoginTime);
		this.writeInt(_buf,this._receivedId.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._receivedId.length;++i_am_tmp_i){
			this.writeInt(_buf,this._receivedId[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._loginDay=this.readInt(_buf);
		this._lastLoginTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._receivedId=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._receivedId[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**登录天数 */
	/**登录天数 */
	__getset(0,__proto,'loginDay',function(){
		return this._loginDay;
		},function(value){
		this._loginDay=value;
	});

	/**已领取宝箱id */
	/**已领取宝箱id */
	__getset(0,__proto,'receivedId',function(){
		return this._receivedId;
		},function(value){
		this._receivedId=value;
	});

	/**上次登录时间 */
	/**上次登录时间 */
	__getset(0,__proto,'lastLoginTime',function(){
		return this._lastLoginTime;
		},function(value){
		this._lastLoginTime=value;
	});

	return DengLuSongYuanBao;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*竞技场战斗记录
*/
//class net.message.arena.ArenaFightRecordBean extends engine.base.data.Bean
var ArenaFightRecordBean=(function(_super){
	function ArenaFightRecordBean(){
		/**是否胜利 */
		this._win=false;
		/**发生时间 */
		this._time=null;
		/**对方名字 */
		this._targetUserName=null;
		ArenaFightRecordBean.__super.call(this);
	}

	__class(ArenaFightRecordBean,'net.message.arena.ArenaFightRecordBean',_super);
	var __proto=ArenaFightRecordBean.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._win);
		this.writeLong(_buf,this._time);
		this.writeString(_buf,this._targetUserName);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._win=this.readBoolean(_buf);
		this._time=this.readLong(_buf);
		this._targetUserName=this.readString(_buf);
	}

	/**是否胜利 */
	/**是否胜利 */
	__getset(0,__proto,'win',function(){
		return this._win;
		},function(value){
		this._win=value;
	});

	/**发生时间 */
	/**发生时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**对方名字 */
	/**对方名字 */
	__getset(0,__proto,'targetUserName',function(){
		return this._targetUserName;
		},function(value){
		this._targetUserName=value;
	});

	return ArenaFightRecordBean;
})(Bean)


//class net.handler.shimen.ResChangeShiMenStarHandler extends net.MNetHandler
var ResChangeShiMenStarHandler=(function(_super){
	function ResChangeShiMenStarHandler(){
		ResChangeShiMenStarHandler.__super.call(this);;
	}

	__class(ResChangeShiMenStarHandler,'net.handler.shimen.ResChangeShiMenStarHandler',_super);
	var __proto=ResChangeShiMenStarHandler.prototype;
	// 修改师门星级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeShiMenStarHandler",msg.star);
	}

	return ResChangeShiMenStarHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会战斗者对象
*/
//class net.message.qunyinghui.QunYingHuiFighterBean extends engine.base.data.Bean
var QunYingHuiFighterBean=(function(_super){
	function QunYingHuiFighterBean(){
		/**来源战斗 */
		this._src=null;
		/**唯一ID */
		this._uid=null;
		QunYingHuiFighterBean.__super.call(this);
	}

	__class(QunYingHuiFighterBean,'net.message.qunyinghui.QunYingHuiFighterBean',_super);
	var __proto=QunYingHuiFighterBean.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._src);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._src=this.readBean(_buf,QunYingHuiFightBean);
		this._uid=this.readLong(_buf);
	}

	/**来源战斗 */
	/**来源战斗 */
	__getset(0,__proto,'src',function(){
		return this._src;
		},function(value){
		this._src=value;
	});

	/**唯一ID */
	/**唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return QunYingHuiFighterBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*藏宝图页奖励
*/
//class net.message.pata.CBTPagePrizeBean extends engine.base.data.Bean
var CBTPagePrizeBean=(function(_super){
	function CBTPagePrizeBean(){
		/**需要星级 */
		this._star=0;
		/**奖励字符串 */
		this._prize=null;
		/**是否已领取 */
		this._prized=false;
		CBTPagePrizeBean.__super.call(this);
	}

	__class(CBTPagePrizeBean,'net.message.pata.CBTPagePrizeBean',_super);
	var __proto=CBTPagePrizeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._star);
		this.writeString(_buf,this._prize);
		this.writeBoolean(_buf,this._prized);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._star=this.readInt(_buf);
		this._prize=this.readString(_buf);
		this._prized=this.readBoolean(_buf);
	}

	/**是否已领取 */
	/**是否已领取 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	/**需要星级 */
	/**需要星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**奖励字符串 */
	/**奖励字符串 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return CBTPagePrizeBean;
})(Bean)


//class net.handler.misc.ResDuiHuanHandler extends net.MNetHandler
var ResDuiHuanHandler=(function(_super){
	function ResDuiHuanHandler(){
		ResDuiHuanHandler.__super.call(this);;
	}

	__class(ResDuiHuanHandler,'net.handler.misc.ResDuiHuanHandler',_super);
	var __proto=ResDuiHuanHandler.prototype;
	// 兑换
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DuiHuanHandler",msg.items);
	}

	return ResDuiHuanHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*空城计对象
*/
//class net.message.emptycity.EmptyCityPlayerBean extends engine.base.data.Bean
var EmptyCityPlayerBean=(function(_super){
	function EmptyCityPlayerBean(){
		/**所有者id */
		this._uid=null;
		/**冷却时间 */
		this._coldTime=0;
		/**剩余次数 */
		this._count=0;
		EmptyCityPlayerBean.__super.call(this);
	}

	__class(EmptyCityPlayerBean,'net.message.emptycity.EmptyCityPlayerBean',_super);
	var __proto=EmptyCityPlayerBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._coldTime);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._coldTime=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	/**所有者id */
	/**所有者id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**冷却时间 */
	/**冷却时间 */
	__getset(0,__proto,'coldTime',function(){
		return this._coldTime;
		},function(value){
		this._coldTime=value;
	});

	/**剩余次数 */
	/**剩余次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return EmptyCityPlayerBean;
})(Bean)


//class net.handler.marriage.ResMarriageRdivorceErrorHandler extends net.MNetHandler
var ResMarriageRdivorceErrorHandler=(function(_super){
	function ResMarriageRdivorceErrorHandler(){
		ResMarriageRdivorceErrorHandler.__super.call(this);;
	}

	__class(ResMarriageRdivorceErrorHandler,'net.handler.marriage.ResMarriageRdivorceErrorHandler',_super);
	var __proto=ResMarriageRdivorceErrorHandler.prototype;
	// 发送贺礼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageRdivorceErrorHandler",msg);
	}

	return ResMarriageRdivorceErrorHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengBuyMessageErrorHandler extends net.MNetHandler
var ResInvestmengBuyMessageErrorHandler=(function(_super){
	function ResInvestmengBuyMessageErrorHandler(){
		ResInvestmengBuyMessageErrorHandler.__super.call(this);;
	}

	__class(ResInvestmengBuyMessageErrorHandler,'net.handler.investment.ResInvestmengBuyMessageErrorHandler',_super);
	var __proto=ResInvestmengBuyMessageErrorHandler.prototype;
	// 请求购买投资计划
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengBuyMessageErrorHandler",msg);
	}

	return ResInvestmengBuyMessageErrorHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionUpperErrorHandler extends net.MNetHandler
var ResAuctionUpperErrorHandler=(function(_super){
	function ResAuctionUpperErrorHandler(){
		ResAuctionUpperErrorHandler.__super.call(this);;
	}

	__class(ResAuctionUpperErrorHandler,'net.handler.auction.ResAuctionUpperErrorHandler',_super);
	var __proto=ResAuctionUpperErrorHandler.prototype;
	// 上架物品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionUpperErrorHandler",msg.error);
	}

	return ResAuctionUpperErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*附灵信息
*/
//class net.message.equip.FuLingBean extends engine.base.data.Bean
var FuLingBean=(function(_super){
	function FuLingBean(){
		/**id */
		this._id=0;
		/**部位 */
		this._grid=0;
		FuLingBean.__super.call(this);
	}

	__class(FuLingBean,'net.message.equip.FuLingBean',_super);
	var __proto=FuLingBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._grid=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**部位 */
	/**部位 */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return FuLingBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*出战
*/
//class net.message.fight.FightNpcChuzhanBean extends engine.base.data.Bean
var FightNpcChuzhanBean=(function(_super){
	function FightNpcChuzhanBean(){
		/**序号 */
		this._index=0;
		/**是否攻方 */
		this._gong=false;
		/**出战对象 */
		this._npc=null;
		FightNpcChuzhanBean.__super.call(this);
	}

	__class(FightNpcChuzhanBean,'net.message.fight.FightNpcChuzhanBean',_super);
	var __proto=FightNpcChuzhanBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeBoolean(_buf,this._gong);
		this.writeBean(_buf,this._npc);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._gong=this.readBoolean(_buf);
		this._npc=this.readBean(_buf,FightNpcBean);
	}

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**出战对象 */
	/**出战对象 */
	__getset(0,__proto,'npc',function(){
		return this._npc;
		},function(value){
		this._npc=value;
	});

	/**是否攻方 */
	/**是否攻方 */
	__getset(0,__proto,'gong',function(){
		return this._gong;
		},function(value){
		this._gong=value;
	});

	return FightNpcChuzhanBean;
})(Bean)


//class net.handler.fit.ResFitSetSkillHandler extends net.MNetHandler
var ResFitSetSkillHandler=(function(_super){
	function ResFitSetSkillHandler(){
		ResFitSetSkillHandler.__super.call(this);;
	}

	__class(ResFitSetSkillHandler,'net.handler.fit.ResFitSetSkillHandler',_super);
	var __proto=ResFitSetSkillHandler.prototype;
	// 设置合体技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetSkillHandler" ,msg);
	}

	return ResFitSetSkillHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemActiveHandler extends net.MNetHandler
var ResTotemActiveHandler=(function(_super){
	function ResTotemActiveHandler(){
		ResTotemActiveHandler.__super.call(this);;
	}

	__class(ResTotemActiveHandler,'net.handler.totem.ResTotemActiveHandler',_super);
	var __proto=ResTotemActiveHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemActiveHandler",msg.totemBean);
	}

	return ResTotemActiveHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneChangeErrorHandler extends net.MNetHandler
var ResSceneChangeErrorHandler=(function(_super){
	function ResSceneChangeErrorHandler(){
		ResSceneChangeErrorHandler.__super.call(this);;
	}

	__class(ResSceneChangeErrorHandler,'net.handler.scene.ResSceneChangeErrorHandler',_super);
	var __proto=ResSceneChangeErrorHandler.prototype;
	// 切换场景
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneChangeErrorHandler",msg);
	}

	return ResSceneChangeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用战令数据
*/
//class net.message.wartoken.CommonWarTokenBean extends engine.base.data.Bean
var CommonWarTokenBean=(function(_super){
	function CommonWarTokenBean(){
		/**战令类型 */
		this._warTokenType=0;
		/**是否已经购买高级资格 */
		this._hasBuyBest=false;
		/**截止时间，毫秒时间戳，如果为0那么以活动正常截止时间为准 */
		this._endTime=null;
		CommonWarTokenBean.__super.call(this);
		this._normalRewarded=[];
		this._bestRewarded=[];
	}

	__class(CommonWarTokenBean,'net.message.wartoken.CommonWarTokenBean',_super);
	var __proto=CommonWarTokenBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._warTokenType);
		this.writeInt(_buf,this._normalRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._normalRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._normalRewarded[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._bestRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bestRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._bestRewarded[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._hasBuyBest);
		this.writeLong(_buf,this._endTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenType=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._normalRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._normalRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._bestRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bestRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		this._hasBuyBest=this.readBoolean(_buf);
		this._endTime=this.readLong(_buf);
	}

	/**战令类型 */
	/**战令类型 */
	__getset(0,__proto,'warTokenType',function(){
		return this._warTokenType;
		},function(value){
		this._warTokenType=value;
	});

	/**已经领取的普通奖励 */
	/**已经领取的普通奖励 */
	__getset(0,__proto,'normalRewarded',function(){
		return this._normalRewarded;
		},function(value){
		this._normalRewarded=value;
	});

	/**已经领取的高级奖励 */
	/**已经领取的高级奖励 */
	__getset(0,__proto,'bestRewarded',function(){
		return this._bestRewarded;
		},function(value){
		this._bestRewarded=value;
	});

	/**截止时间，毫秒时间戳，如果为0那么以活动正常截止时间为准 */
	/**截止时间，毫秒时间戳，如果为0那么以活动正常截止时间为准 */
	__getset(0,__proto,'endTime',function(){
		return this._endTime;
		},function(value){
		this._endTime=value;
	});

	/**是否已经购买高级资格 */
	/**是否已经购买高级资格 */
	__getset(0,__proto,'hasBuyBest',function(){
		return this._hasBuyBest;
		},function(value){
		this._hasBuyBest=value;
	});

	return CommonWarTokenBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*空城计对象
*/
//class net.message.emptycity.EmptyCityBean extends engine.base.data.Bean
var EmptyCityBean=(function(_super){
	function EmptyCityBean(){
		/**id */
		this._id=0;
		EmptyCityBean.__super.call(this);
		this._woners=[];
		this._record=[];
	}

	__class(EmptyCityBean,'net.message.emptycity.EmptyCityBean',_super);
	var __proto=EmptyCityBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._woners.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._woners.length;++i_am_tmp_i){
			this._woners[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._record.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._record.length;++i_am_tmp_i){
			this._record[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._woners=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._woners[i_am_tmp_i]=this.readBeanInList(_buf,EmptyCityOwnerBean);
		}
		size52413035=this.readInt(_buf);
		this._record=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._record[i_am_tmp_i]=this.readBeanInList(_buf,EmptyCityRecordBean);
		}
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**所有者 */
	/**所有者 */
	__getset(0,__proto,'woners',function(){
		return this._woners;
		},function(value){
		this._woners=value;
	});

	/**格子等级 */
	/**格子等级 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return EmptyCityBean;
})(Bean)


//class net.handler.garrison.ResGarrisonSetGuardHandler extends net.MNetHandler
var ResGarrisonSetGuardHandler=(function(_super){
	function ResGarrisonSetGuardHandler(){
		ResGarrisonSetGuardHandler.__super.call(this);;
	}

	__class(ResGarrisonSetGuardHandler,'net.handler.garrison.ResGarrisonSetGuardHandler',_super);
	var __proto=ResGarrisonSetGuardHandler.prototype;
	// 设置镇守
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonSetGuardHandler" ,msg);
	}

	return ResGarrisonSetGuardHandler;
})(MNetHandler)


//class net.handler.juewei.ResUpdateJueWeiLevelErrorHandler extends net.MNetHandler
var ResUpdateJueWeiLevelErrorHandler=(function(_super){
	function ResUpdateJueWeiLevelErrorHandler(){
		ResUpdateJueWeiLevelErrorHandler.__super.call(this);;
	}

	__class(ResUpdateJueWeiLevelErrorHandler,'net.handler.juewei.ResUpdateJueWeiLevelErrorHandler',_super);
	var __proto=ResUpdateJueWeiLevelErrorHandler.prototype;
	// 更新爵位等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateJueWeiLevelErrorHandler",msg);
	}

	return ResUpdateJueWeiLevelErrorHandler;
})(MNetHandler)


//class net.handler.miji.ResUpdateMijiUsableGridHandler extends net.MNetHandler
var ResUpdateMijiUsableGridHandler=(function(_super){
	function ResUpdateMijiUsableGridHandler(){
		ResUpdateMijiUsableGridHandler.__super.call(this);;
	}

	__class(ResUpdateMijiUsableGridHandler,'net.handler.miji.ResUpdateMijiUsableGridHandler',_super);
	var __proto=ResUpdateMijiUsableGridHandler.prototype;
	// 更新秘籍可用格子数量
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUpdateMijiUsableGridHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*九重天怪物对象
*/
//class net.message.nineHeavy.NineHeavyMonsterBean extends engine.base.data.Bean
var NineHeavyMonsterBean=(function(_super){
	function NineHeavyMonsterBean(){
		/**怪物ID */
		this._id=0;
		/**配置ID */
		this._configID=0;
		/**对象位置 */
		this._point=null;
		/**重生剩余时间 */
		this._rebornTime=0;
		/**是否正在战斗 */
		this._onBattle=0;
		/**怪物ID */
		this._monsterID=0;
		NineHeavyMonsterBean.__super.call(this);
	}

	__class(NineHeavyMonsterBean,'net.message.nineHeavy.NineHeavyMonsterBean',_super);
	var __proto=NineHeavyMonsterBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._configID);
		this.writeBean(_buf,this._point);
		this.writeInt(_buf,this._rebornTime);
		this.writeInt(_buf,this._onBattle);
		this.writeInt(_buf,this._monsterID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._configID=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
		this._rebornTime=this.readInt(_buf);
		this._onBattle=this.readInt(_buf);
		this._monsterID=this.readInt(_buf);
	}

	/**怪物ID */
	/**怪物ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否正在战斗 */
	/**是否正在战斗 */
	__getset(0,__proto,'onBattle',function(){
		return this._onBattle;
		},function(value){
		this._onBattle=value;
	});

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	/**对象位置 */
	/**对象位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	/**重生剩余时间 */
	/**重生剩余时间 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	/**怪物ID */
	/**怪物ID */
	__getset(0,__proto,'monsterID',function(){
		return this._monsterID;
		},function(value){
		this._monsterID=value;
	});

	return NineHeavyMonsterBean;
})(Bean)


//class net.handler.appearance.ResGlobalUpdateAppearanceHandler extends net.MNetHandler
var ResGlobalUpdateAppearanceHandler=(function(_super){
	function ResGlobalUpdateAppearanceHandler(){
		ResGlobalUpdateAppearanceHandler.__super.call(this);;
	}

	__class(ResGlobalUpdateAppearanceHandler,'net.handler.appearance.ResGlobalUpdateAppearanceHandler',_super);
	var __proto=ResGlobalUpdateAppearanceHandler.prototype;
	// 更新外形
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GlobalUpdateAppearanceHandler",msg);
	}

	return ResGlobalUpdateAppearanceHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserActiveErrorHandler extends net.MNetHandler
var ResAdviserActiveErrorHandler=(function(_super){
	function ResAdviserActiveErrorHandler(){
		ResAdviserActiveErrorHandler.__super.call(this);;
	}

	__class(ResAdviserActiveErrorHandler,'net.handler.adviser.ResAdviserActiveErrorHandler',_super);
	var __proto=ResAdviserActiveErrorHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserActiveErrorHandler",msg.error);
	}

	return ResAdviserActiveErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResChatHelpRewardHandler extends net.MNetHandler
var ResChatHelpRewardHandler=(function(_super){
	function ResChatHelpRewardHandler(){
		ResChatHelpRewardHandler.__super.call(this);;
	}

	__class(ResChatHelpRewardHandler,'net.handler.chat.ResChatHelpRewardHandler',_super);
	var __proto=ResChatHelpRewardHandler.prototype;
	// 帮助关卡的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatHelpRewardHandler",msg);
	}

	return ResChatHelpRewardHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengUpdateTaskMessageErrorHandler extends net.MNetHandler
var ResInvestmengUpdateTaskMessageErrorHandler=(function(_super){
	function ResInvestmengUpdateTaskMessageErrorHandler(){
		ResInvestmengUpdateTaskMessageErrorHandler.__super.call(this);;
	}

	__class(ResInvestmengUpdateTaskMessageErrorHandler,'net.handler.investment.ResInvestmengUpdateTaskMessageErrorHandler',_super);
	var __proto=ResInvestmengUpdateTaskMessageErrorHandler.prototype;
	// 请求领取透支计划奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengUpdateTaskMessageErrorHandler",msg);
	}

	return ResInvestmengUpdateTaskMessageErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeYCTTPrizeErrorHandler extends net.MNetHandler
var ResTakeYCTTPrizeErrorHandler=(function(_super){
	function ResTakeYCTTPrizeErrorHandler(){
		ResTakeYCTTPrizeErrorHandler.__super.call(this);;
	}

	__class(ResTakeYCTTPrizeErrorHandler,'net.handler.pata.ResTakeYCTTPrizeErrorHandler',_super);
	var __proto=ResTakeYCTTPrizeErrorHandler.prototype;
	// 领取勇闯天庭奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeYCTTPrizeErrorHandler",msg.error);
	}

	return ResTakeYCTTPrizeErrorHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionMonitorHandler extends net.MNetHandler
var ResAuctionMonitorHandler=(function(_super){
	function ResAuctionMonitorHandler(){
		ResAuctionMonitorHandler.__super.call(this);;
	}

	__class(ResAuctionMonitorHandler,'net.handler.auction.ResAuctionMonitorHandler',_super);
	var __proto=ResAuctionMonitorHandler.prototype;
	// 获取拍卖行的数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionMonitorHandler",msg);
	}

	return ResAuctionMonitorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResInitYeWaiBossHandler extends net.MNetHandler
var ResInitYeWaiBossHandler=(function(_super){
	function ResInitYeWaiBossHandler(){
		ResInitYeWaiBossHandler.__super.call(this);;
	}

	__class(ResInitYeWaiBossHandler,'net.handler.dungeon.ResInitYeWaiBossHandler',_super);
	var __proto=ResInitYeWaiBossHandler.prototype;
	// 初始化野外boss副本信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InitYeWaiBossHandler",msg.dungeons);
	}

	return ResInitYeWaiBossHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyChangeStateHandler extends net.MNetHandler
var ResNineHeavyChangeStateHandler=(function(_super){
	function ResNineHeavyChangeStateHandler(){
		ResNineHeavyChangeStateHandler.__super.call(this);;
	}

	__class(ResNineHeavyChangeStateHandler,'net.handler.nineHeavy.ResNineHeavyChangeStateHandler',_super);
	var __proto=ResNineHeavyChangeStateHandler.prototype;
	// 更新玩家状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyChangeStateHandler",msg);
	}

	return ResNineHeavyChangeStateHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipFuLingHandler extends net.MNetHandler
var ResEquipFuLingHandler=(function(_super){
	function ResEquipFuLingHandler(){
		ResEquipFuLingHandler.__super.call(this);;
	}

	__class(ResEquipFuLingHandler,'net.handler.equip.ResEquipFuLingHandler',_super);
	var __proto=ResEquipFuLingHandler.prototype;
	// 装备附灵
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEquipFuLingHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildUpdatePositionHandler extends net.MNetHandler
var ResGuildUpdatePositionHandler=(function(_super){
	function ResGuildUpdatePositionHandler(){
		ResGuildUpdatePositionHandler.__super.call(this);;
	}

	__class(ResGuildUpdatePositionHandler,'net.handler.guild.ResGuildUpdatePositionHandler',_super);
	var __proto=ResGuildUpdatePositionHandler.prototype;
	// 更新帮会成员职位(收到该消息时前端需要添加事件GuildBean.positionEvents)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildUpdatePositionHandler",msg);
	}

	return ResGuildUpdatePositionHandler;
})(MNetHandler)


//class net.handler.lieming.ResUpdateLieMingLevelHandler extends net.MNetHandler
var ResUpdateLieMingLevelHandler=(function(_super){
	function ResUpdateLieMingLevelHandler(){
		ResUpdateLieMingLevelHandler.__super.call(this);;
	}

	__class(ResUpdateLieMingLevelHandler,'net.handler.lieming.ResUpdateLieMingLevelHandler',_super);
	var __proto=ResUpdateLieMingLevelHandler.prototype;
	// 更新猎命等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateLieMingLevelHandler",msg.isOk);
	}

	return ResUpdateLieMingLevelHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengReliveHandler extends net.MNetHandler
var ResYuanZhengReliveHandler=(function(_super){
	function ResYuanZhengReliveHandler(){
		ResYuanZhengReliveHandler.__super.call(this);;
	}

	__class(ResYuanZhengReliveHandler,'net.handler.yuanzheng.ResYuanZhengReliveHandler',_super);
	var __proto=ResYuanZhengReliveHandler.prototype;
	// 远征复活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengReliveHandler",msg);
	}

	return ResYuanZhengReliveHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageFlowersHandler extends net.MNetHandler
var ResMarriageFlowersHandler=(function(_super){
	function ResMarriageFlowersHandler(){
		ResMarriageFlowersHandler.__super.call(this);;
	}

	__class(ResMarriageFlowersHandler,'net.handler.marriage.ResMarriageFlowersHandler',_super);
	var __proto=ResMarriageFlowersHandler.prototype;
	// 给伴侣赠送鲜花
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageFlowersHandler",msg);
	}

	return ResMarriageFlowersHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoySynthesisHandler extends net.MNetHandler
var ResSoulBoySynthesisHandler=(function(_super){
	function ResSoulBoySynthesisHandler(){
		ResSoulBoySynthesisHandler.__super.call(this);;
	}

	__class(ResSoulBoySynthesisHandler,'net.handler.soulboy.ResSoulBoySynthesisHandler',_super);
	var __proto=ResSoulBoySynthesisHandler.prototype;
	// 合成灵童卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoySynthesisHandler",msg);
	}

	return ResSoulBoySynthesisHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*福利大厅
*/
//class net.message.welfare.WelfareBean extends engine.base.data.Bean
var WelfareBean=(function(_super){
	function WelfareBean(){
		/**每日签到 */
		this._meiRiQianDao=null;
		/**福利签到 */
		this._fuLiQianDao=null;
		/**百万元宝 */
		this._baiWanYuanBao=null;
		/**等级礼包 */
		this._dengJiLiBao=null;
		/**摇钱树 */
		this._yaoQianShu=null;
		/**登陆送元宝 */
		this._dengLuSongYuanBao=null;
		/**月卡 */
		this._yueKa=null;
		/**在线礼包 */
		this._zaiXianLiBao=null;
		/**天天返利 */
		this._tianTianFanLi=null;
		WelfareBean.__super.call(this);
	}

	__class(WelfareBean,'net.message.welfare.WelfareBean',_super);
	var __proto=WelfareBean.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._meiRiQianDao);
		this.writeBean(_buf,this._fuLiQianDao);
		this.writeBean(_buf,this._baiWanYuanBao);
		this.writeBean(_buf,this._dengJiLiBao);
		this.writeBean(_buf,this._yaoQianShu);
		this.writeBean(_buf,this._dengLuSongYuanBao);
		this.writeBean(_buf,this._yueKa);
		this.writeBean(_buf,this._zaiXianLiBao);
		this.writeBean(_buf,this._tianTianFanLi);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._meiRiQianDao=this.readBean(_buf,MeiRiQianDao);
		this._fuLiQianDao=this.readBean(_buf,FuLiQianDao);
		this._baiWanYuanBao=this.readBean(_buf,BaiWanYuanBao);
		this._dengJiLiBao=this.readBean(_buf,DengJiLiBao);
		this._yaoQianShu=this.readBean(_buf,YaoQianShu);
		this._dengLuSongYuanBao=this.readBean(_buf,DengLuSongYuanBao);
		this._yueKa=this.readBean(_buf,YueKa);
		this._zaiXianLiBao=this.readBean(_buf,ZaiXianLiBao);
		this._tianTianFanLi=this.readBean(_buf,TianTianFanLi);
	}

	/**月卡 */
	/**月卡 */
	__getset(0,__proto,'yueKa',function(){
		return this._yueKa;
		},function(value){
		this._yueKa=value;
	});

	/**福利签到 */
	/**福利签到 */
	__getset(0,__proto,'fuLiQianDao',function(){
		return this._fuLiQianDao;
		},function(value){
		this._fuLiQianDao=value;
	});

	/**每日签到 */
	/**每日签到 */
	__getset(0,__proto,'meiRiQianDao',function(){
		return this._meiRiQianDao;
		},function(value){
		this._meiRiQianDao=value;
	});

	/**登陆送元宝 */
	/**登陆送元宝 */
	__getset(0,__proto,'dengLuSongYuanBao',function(){
		return this._dengLuSongYuanBao;
		},function(value){
		this._dengLuSongYuanBao=value;
	});

	/**百万元宝 */
	/**百万元宝 */
	__getset(0,__proto,'baiWanYuanBao',function(){
		return this._baiWanYuanBao;
		},function(value){
		this._baiWanYuanBao=value;
	});

	/**等级礼包 */
	/**等级礼包 */
	__getset(0,__proto,'dengJiLiBao',function(){
		return this._dengJiLiBao;
		},function(value){
		this._dengJiLiBao=value;
	});

	/**摇钱树 */
	/**摇钱树 */
	__getset(0,__proto,'yaoQianShu',function(){
		return this._yaoQianShu;
		},function(value){
		this._yaoQianShu=value;
	});

	/**在线礼包 */
	/**在线礼包 */
	__getset(0,__proto,'zaiXianLiBao',function(){
		return this._zaiXianLiBao;
		},function(value){
		this._zaiXianLiBao=value;
	});

	/**天天返利 */
	/**天天返利 */
	__getset(0,__proto,'tianTianFanLi',function(){
		return this._tianTianFanLi;
		},function(value){
		this._tianTianFanLi=value;
	});

	return WelfareBean;
})(Bean)


//class net.handler.shimen.ResTakeShiMenRoundPrizeErrorHandler extends net.MNetHandler
var ResTakeShiMenRoundPrizeErrorHandler=(function(_super){
	function ResTakeShiMenRoundPrizeErrorHandler(){
		ResTakeShiMenRoundPrizeErrorHandler.__super.call(this);;
	}

	__class(ResTakeShiMenRoundPrizeErrorHandler,'net.handler.shimen.ResTakeShiMenRoundPrizeErrorHandler',_super);
	var __proto=ResTakeShiMenRoundPrizeErrorHandler.prototype;
	// 领取师门环奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeShiMenRoundPrizeErrorHandler",msg.error);
	}

	return ResTakeShiMenRoundPrizeErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResWxRechargeErrorHandler extends net.MNetHandler
var ResWxRechargeErrorHandler=(function(_super){
	function ResWxRechargeErrorHandler(){
		ResWxRechargeErrorHandler.__super.call(this);;
	}

	__class(ResWxRechargeErrorHandler,'net.handler.misc.ResWxRechargeErrorHandler',_super);
	var __proto=ResWxRechargeErrorHandler.prototype;
	// 微信充值
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResWxRechargeErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePromoteHouseLvHandler extends net.MNetHandler
var ResMarriagePromoteHouseLvHandler=(function(_super){
	function ResMarriagePromoteHouseLvHandler(){
		ResMarriagePromoteHouseLvHandler.__super.call(this);;
	}

	__class(ResMarriagePromoteHouseLvHandler,'net.handler.marriage.ResMarriagePromoteHouseLvHandler',_super);
	var __proto=ResMarriagePromoteHouseLvHandler.prototype;
	// 升阶房子
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePromoteHouseLvHandler",msg);
	}

	return ResMarriagePromoteHouseLvHandler;
})(MNetHandler)


//class net.handler.goods.ResDisposeEquipHandler extends net.MNetHandler
var ResDisposeEquipHandler=(function(_super){
	function ResDisposeEquipHandler(){
		ResDisposeEquipHandler.__super.call(this);;
	}

	__class(ResDisposeEquipHandler,'net.handler.goods.ResDisposeEquipHandler',_super);
	var __proto=ResDisposeEquipHandler.prototype;
	// 分解装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DisposeEquipHandler" ,msg);
	}

	return ResDisposeEquipHandler;
})(MNetHandler)


//class net.handler.team.ResTeamChangeFightPowerHandler extends net.MNetHandler
var ResTeamChangeFightPowerHandler=(function(_super){
	function ResTeamChangeFightPowerHandler(){
		ResTeamChangeFightPowerHandler.__super.call(this);;
	}

	__class(ResTeamChangeFightPowerHandler,'net.handler.team.ResTeamChangeFightPowerHandler',_super);
	var __proto=ResTeamChangeFightPowerHandler.prototype;
	// 队伍修改战力条件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamChangeFightPowerHandler",msg);
	}

	return ResTeamChangeFightPowerHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*任务
*/
//class net.message.task.TaskBean extends engine.base.data.Bean
var TaskBean=(function(_super){
	function TaskBean(){
		/**id */
		this._id=0;
		/**进度 */
		this._progress=0;
		/**进度上限 */
		this._maxProgress=0;
		/**已完成次数 */
		this._finishTimes=0;
		/**是否已经完成 */
		this._isfinished=false;
		/**结束时间 */
		this._overTime=0;
		/**玩家名字 */
		this._username=null;
		/**玩家性别[1:男性][2:女性] */
		this._gender=0;
		TaskBean.__super.call(this);
		this._param=[];
	}

	__class(TaskBean,'net.message.task.TaskBean',_super);
	var __proto=TaskBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._maxProgress);
		this.writeInt(_buf,this._finishTimes);
		this.writeBoolean(_buf,this._isfinished);
		this.writeInt(_buf,this._overTime);
		this.writeString(_buf,this._username);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._param.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._param.length;++i_am_tmp_i){
			this.writeInt(_buf,this._param[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		this._maxProgress=this.readInt(_buf);
		this._finishTimes=this.readInt(_buf);
		this._isfinished=this.readBoolean(_buf);
		this._overTime=this.readInt(_buf);
		this._username=this.readString(_buf);
		this._gender=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._param=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._param[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**已完成次数 */
	/**已完成次数 */
	__getset(0,__proto,'finishTimes',function(){
		return this._finishTimes;
		},function(value){
		this._finishTimes=value;
	});

	/**玩家性别[1:男性][2:女性] */
	/**玩家性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**结束时间 */
	/**结束时间 */
	__getset(0,__proto,'overTime',function(){
		return this._overTime;
		},function(value){
		this._overTime=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**进度上限 */
	/**进度上限 */
	__getset(0,__proto,'maxProgress',function(){
		return this._maxProgress;
		},function(value){
		this._maxProgress=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'param',function(){
		return this._param;
		},function(value){
		this._param=value;
	});

	/**是否已经完成 */
	/**是否已经完成 */
	__getset(0,__proto,'isfinished',function(){
		return this._isfinished;
		},function(value){
		this._isfinished=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'username',function(){
		return this._username;
		},function(value){
		this._username=value;
	});

	return TaskBean;
})(Bean)


//class net.handler.team.ResTeamChangeFightPowerErrorHandler extends net.MNetHandler
var ResTeamChangeFightPowerErrorHandler=(function(_super){
	function ResTeamChangeFightPowerErrorHandler(){
		ResTeamChangeFightPowerErrorHandler.__super.call(this);;
	}

	__class(ResTeamChangeFightPowerErrorHandler,'net.handler.team.ResTeamChangeFightPowerErrorHandler',_super);
	var __proto=ResTeamChangeFightPowerErrorHandler.prototype;
	// 队伍修改战力条件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamChangeFightPowerErrorHandler",msg);
	}

	return ResTeamChangeFightPowerErrorHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateCostGoldHandler extends net.MNetHandler
var ResUpdateCostGoldHandler=(function(_super){
	function ResUpdateCostGoldHandler(){
		ResUpdateCostGoldHandler.__super.call(this);;
	}

	__class(ResUpdateCostGoldHandler,'net.handler.user.ResUpdateCostGoldHandler',_super);
	var __proto=ResUpdateCostGoldHandler.prototype;
	// 更新累计花费刀币
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateCostGoldHandler",msg.value);
	}

	return ResUpdateCostGoldHandler;
})(MNetHandler)


//class net.handler.team.ResTeamGetAllErrorHandler extends net.MNetHandler
var ResTeamGetAllErrorHandler=(function(_super){
	function ResTeamGetAllErrorHandler(){
		ResTeamGetAllErrorHandler.__super.call(this);;
	}

	__class(ResTeamGetAllErrorHandler,'net.handler.team.ResTeamGetAllErrorHandler',_super);
	var __proto=ResTeamGetAllErrorHandler.prototype;
	// 获取所有队伍的简要信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamGetAllErrorHandler",msg);
	}

	return ResTeamGetAllErrorHandler;
})(MNetHandler)


//class net.handler.video.ResLikeVideoErrorHandler extends net.MNetHandler
var ResLikeVideoErrorHandler=(function(_super){
	function ResLikeVideoErrorHandler(){
		ResLikeVideoErrorHandler.__super.call(this);;
	}

	__class(ResLikeVideoErrorHandler,'net.handler.video.ResLikeVideoErrorHandler',_super);
	var __proto=ResLikeVideoErrorHandler.prototype;
	// 录像点赞
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LikeVideoErrorHandler",msg);
	}

	return ResLikeVideoErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildCreateHandler extends net.MNetHandler
var ResGuildCreateHandler=(function(_super){
	function ResGuildCreateHandler(){
		ResGuildCreateHandler.__super.call(this);;
	}

	__class(ResGuildCreateHandler,'net.handler.guild.ResGuildCreateHandler',_super);
	var __proto=ResGuildCreateHandler.prototype;
	// 请求创建军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildCreateHandler",msg);
	}

	return ResGuildCreateHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemUpgradeErrorHandler extends net.MNetHandler
var ResTotemUpgradeErrorHandler=(function(_super){
	function ResTotemUpgradeErrorHandler(){
		ResTotemUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResTotemUpgradeErrorHandler,'net.handler.totem.ResTotemUpgradeErrorHandler',_super);
	var __proto=ResTotemUpgradeErrorHandler.prototype;
	// 升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemUpgradeErrorHandler",msg.error);
	}

	return ResTotemUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonTakeWeekRewardErrorHandler extends net.MNetHandler
var ResGarrisonTakeWeekRewardErrorHandler=(function(_super){
	function ResGarrisonTakeWeekRewardErrorHandler(){
		ResGarrisonTakeWeekRewardErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonTakeWeekRewardErrorHandler,'net.handler.garrison.ResGarrisonTakeWeekRewardErrorHandler',_super);
	var __proto=ResGarrisonTakeWeekRewardErrorHandler.prototype;
	// 收取周奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonTakeWeekRewardErrorHandler" ,msg);
	}

	return ResGarrisonTakeWeekRewardErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResChatZhuangBiHandler extends net.MNetHandler
var ResChatZhuangBiHandler=(function(_super){
	function ResChatZhuangBiHandler(){
		ResChatZhuangBiHandler.__super.call(this);;
	}

	__class(ResChatZhuangBiHandler,'net.handler.chat.ResChatZhuangBiHandler',_super);
	var __proto=ResChatZhuangBiHandler.prototype;
	// 装逼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatZhuangBiHandler",msg);
	}

	return ResChatZhuangBiHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetEquipGemErrorHandler extends net.MNetHandler
var ResFitSetEquipGemErrorHandler=(function(_super){
	function ResFitSetEquipGemErrorHandler(){
		ResFitSetEquipGemErrorHandler.__super.call(this);;
	}

	__class(ResFitSetEquipGemErrorHandler,'net.handler.fit.ResFitSetEquipGemErrorHandler',_super);
	var __proto=ResFitSetEquipGemErrorHandler.prototype;
	// 设置合体装备宝石
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetEquipGemErrorHandler" ,msg);
	}

	return ResFitSetEquipGemErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResActScoreUpdateHandler extends net.MNetHandler
var ResActScoreUpdateHandler=(function(_super){
	function ResActScoreUpdateHandler(){
		ResActScoreUpdateHandler.__super.call(this);;
	}

	__class(ResActScoreUpdateHandler,'net.handler.activities.ResActScoreUpdateHandler',_super);
	var __proto=ResActScoreUpdateHandler.prototype;
	// 更新活动积分
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActScoreUpdateHandler",msg);
	}

	return ResActScoreUpdateHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobberyRewardErrorHandler extends net.MNetHandler
var ResEscortRobberyRewardErrorHandler=(function(_super){
	function ResEscortRobberyRewardErrorHandler(){
		ResEscortRobberyRewardErrorHandler.__super.call(this);;
	}

	__class(ResEscortRobberyRewardErrorHandler,'net.handler.escort.ResEscortRobberyRewardErrorHandler',_super);
	var __proto=ResEscortRobberyRewardErrorHandler.prototype;
	// 请求劫镖奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRobberyRewardErrorHandler",msg);
	}

	return ResEscortRobberyRewardErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResGetXYCMInfoErrorHandler extends net.MNetHandler
var ResGetXYCMInfoErrorHandler=(function(_super){
	function ResGetXYCMInfoErrorHandler(){
		ResGetXYCMInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetXYCMInfoErrorHandler,'net.handler.pata.ResGetXYCMInfoErrorHandler',_super);
	var __proto=ResGetXYCMInfoErrorHandler.prototype;
	// 获取降妖除魔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetXYCMInfoErrorHandler",msg.error);
	}

	return ResGetXYCMInfoErrorHandler;
})(MNetHandler)


//class net.handler.login.ResLoginLocalHandler extends net.MNetHandler
var ResLoginLocalHandler=(function(_super){
	function ResLoginLocalHandler(){
		ResLoginLocalHandler.__super.call(this);;
	}

	__class(ResLoginLocalHandler,'net.handler.login.ResLoginLocalHandler',_super);
	var __proto=ResLoginLocalHandler.prototype;
	// 登录(本地)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LoginLocalHandler",msg);
	}

	return ResLoginLocalHandler;
})(MNetHandler)


//class net.handler.equip.ResFuLingGetInfoHandler extends net.MNetHandler
var ResFuLingGetInfoHandler=(function(_super){
	function ResFuLingGetInfoHandler(){
		ResFuLingGetInfoHandler.__super.call(this);;
	}

	__class(ResFuLingGetInfoHandler,'net.handler.equip.ResFuLingGetInfoHandler',_super);
	var __proto=ResFuLingGetInfoHandler.prototype;
	// 附灵信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResFuLingGetInfoHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackErrorHandler extends net.MNetHandler
var ResWorldBossAttackErrorHandler=(function(_super){
	function ResWorldBossAttackErrorHandler(){
		ResWorldBossAttackErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackErrorHandler,'net.handler.worldboss.ResWorldBossAttackErrorHandler',_super);
	var __proto=ResWorldBossAttackErrorHandler.prototype;
	// 玩家攻击BOSS
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackErrorHandler",msg);
	}

	return ResWorldBossAttackErrorHandler;
})(MNetHandler)


//class net.handler.lieming.ResLiemingErrorHandler extends net.MNetHandler
var ResLiemingErrorHandler=(function(_super){
	function ResLiemingErrorHandler(){
		ResLiemingErrorHandler.__super.call(this);;
	}

	__class(ResLiemingErrorHandler,'net.handler.lieming.ResLiemingErrorHandler',_super);
	var __proto=ResLiemingErrorHandler.prototype;
	// 猎命
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LiemingErrorHandler",msg.error);
	}

	return ResLiemingErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的冷却对象
*/
//class net.message.gb.LegionBattleMonsterCold extends engine.base.data.Bean
var LegionBattleMonsterCold=(function(_super){
	function LegionBattleMonsterCold(){
		/**副本id */
		this._dungeonID=0;
		/**怪物序号 */
		this._monsterIndex=0;
		/**到期时间 */
		this._time=null;
		LegionBattleMonsterCold.__super.call(this);
	}

	__class(LegionBattleMonsterCold,'net.message.gb.LegionBattleMonsterCold',_super);
	var __proto=LegionBattleMonsterCold.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._monsterIndex);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._monsterIndex=this.readInt(_buf);
		this._time=this.readLong(_buf);
	}

	/**副本id */
	/**副本id */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**怪物序号 */
	/**怪物序号 */
	__getset(0,__proto,'monsterIndex',function(){
		return this._monsterIndex;
		},function(value){
		this._monsterIndex=value;
	});

	/**到期时间 */
	/**到期时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return LegionBattleMonsterCold;
})(Bean)


//class net.handler.fit.ResFitGemUpgradeErrorHandler extends net.MNetHandler
var ResFitGemUpgradeErrorHandler=(function(_super){
	function ResFitGemUpgradeErrorHandler(){
		ResFitGemUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResFitGemUpgradeErrorHandler,'net.handler.fit.ResFitGemUpgradeErrorHandler',_super);
	var __proto=ResFitGemUpgradeErrorHandler.prototype;
	// 合体宝石升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitGemUpgradeErrorHandler" ,msg);
	}

	return ResFitGemUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpdateEquipLockHandler extends net.MNetHandler
var ResFitUpdateEquipLockHandler=(function(_super){
	function ResFitUpdateEquipLockHandler(){
		ResFitUpdateEquipLockHandler.__super.call(this);;
	}

	__class(ResFitUpdateEquipLockHandler,'net.handler.fit.ResFitUpdateEquipLockHandler',_super);
	var __proto=ResFitUpdateEquipLockHandler.prototype;
	// 更新合体对象技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpdateEquipLockHandler" ,msg);
	}

	return ResFitUpdateEquipLockHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneMoveHandler extends net.MNetHandler
var ResSceneMoveHandler=(function(_super){
	function ResSceneMoveHandler(){
		ResSceneMoveHandler.__super.call(this);;
	}

	__class(ResSceneMoveHandler,'net.handler.scene.ResSceneMoveHandler',_super);
	var __proto=ResSceneMoveHandler.prototype;
	// 移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneMoveHandler",msg);
	}

	return ResSceneMoveHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomRewardHandler extends net.MNetHandler
var ResTeamDuplicateRoomRewardHandler=(function(_super){
	function ResTeamDuplicateRoomRewardHandler(){
		ResTeamDuplicateRoomRewardHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomRewardHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomRewardHandler',_super);
	var __proto=ResTeamDuplicateRoomRewardHandler.prototype;
	// 领取战斗后的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomRewardHandler",msg);
	}

	return ResTeamDuplicateRoomRewardHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体装备对象
*/
//class net.message.fit.FitEquipBean extends engine.base.data.Bean
var FitEquipBean=(function(_super){
	function FitEquipBean(){
		/**类型[1:][2:][3:][4:][5:][6:][7:][8:] */
		this._type=0;
		/**是否锁定中 */
		this._locked=false;
		/**装备的道具ID */
		this._item=0;
		/**部位等级 */
		this._lv=0;
		FitEquipBean.__super.call(this);
		this._rune=[];
	}

	__class(FitEquipBean,'net.message.fit.FitEquipBean',_super);
	var __proto=FitEquipBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBoolean(_buf,this._locked);
		this.writeInt(_buf,this._item);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._rune.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rune.length;++i_am_tmp_i){
			this._rune[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._locked=this.readBoolean(_buf);
		this._item=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rune=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rune[i_am_tmp_i]=this.readBeanInList(_buf,FitGemBean);
		}
	}

	/**插件 */
	/**插件 */
	__getset(0,__proto,'rune',function(){
		return this._rune;
		},function(value){
		this._rune=value;
	});

	/**类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	/**类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**是否锁定中 */
	/**是否锁定中 */
	__getset(0,__proto,'locked',function(){
		return this._locked;
		},function(value){
		this._locked=value;
	});

	/**装备的道具ID */
	/**装备的道具ID */
	__getset(0,__proto,'item',function(){
		return this._item;
		},function(value){
		this._item=value;
	});

	/**部位等级 */
	/**部位等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return FitEquipBean;
})(Bean)


//class net.handler.marriage.ResMarriageRdivorceHandler extends net.MNetHandler
var ResMarriageRdivorceHandler=(function(_super){
	function ResMarriageRdivorceHandler(){
		ResMarriageRdivorceHandler.__super.call(this);;
	}

	__class(ResMarriageRdivorceHandler,'net.handler.marriage.ResMarriageRdivorceHandler',_super);
	var __proto=ResMarriageRdivorceHandler.prototype;
	// 发送贺礼
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageRdivorceHandler",msg);
	}

	return ResMarriageRdivorceHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玄女
*/
//class net.message.xuannv.XuanNvBean extends engine.base.data.Bean
var XuanNvBean=(function(_super){
	function XuanNvBean(){
		XuanNvBean.__super.call(this);
		this._lingzhuang=[];
		this._feishengQianghua=[];
		this._faqis=[];
		this._skills=[];
	}

	__class(XuanNvBean,'net.message.xuannv.XuanNvBean',_super);
	var __proto=XuanNvBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lingzhuang.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lingzhuang.length;++i_am_tmp_i){
			this.writeInt(_buf,this._lingzhuang[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._feishengQianghua.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._feishengQianghua.length;++i_am_tmp_i){
			this.writeInt(_buf,this._feishengQianghua[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._faqis.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._faqis.length;++i_am_tmp_i){
			this._faqis[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._lingzhuang=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lingzhuang[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._feishengQianghua=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._feishengQianghua[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._faqis=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._faqis[i_am_tmp_i]=this.readBeanInList(_buf,FaQiBean);
		}
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	/**灵装 */
	/**灵装 */
	__getset(0,__proto,'lingzhuang',function(){
		return this._lingzhuang;
		},function(value){
		this._lingzhuang=value;
	});

	/**飞升装备强化等级 */
	/**飞升装备强化等级 */
	__getset(0,__proto,'feishengQianghua',function(){
		return this._feishengQianghua;
		},function(value){
		this._feishengQianghua=value;
	});

	/**已激活的技能 */
	/**已激活的技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**法器 */
	/**法器 */
	__getset(0,__proto,'faqis',function(){
		return this._faqis;
		},function(value){
		this._faqis=value;
	});

	return XuanNvBean;
})(Bean)


//class net.handler.general.ResGeneralUpgradeStarErrorHandler extends net.MNetHandler
var ResGeneralUpgradeStarErrorHandler=(function(_super){
	function ResGeneralUpgradeStarErrorHandler(){
		ResGeneralUpgradeStarErrorHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeStarErrorHandler,'net.handler.general.ResGeneralUpgradeStarErrorHandler',_super);
	var __proto=ResGeneralUpgradeStarErrorHandler.prototype;
	// 升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeStarErrorHandler" ,msg);
	}

	return ResGeneralUpgradeStarErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*赤壁对象
*/
//class net.message.chibi.ChibiHeroBean extends engine.base.data.Bean
var ChibiHeroBean=(function(_super){
	function ChibiHeroBean(){
		/**英雄id */
		this._heroId=0;
		/**英雄类型 1:武将2:红颜3:军师4:蛮将 */
		this._type=0;
		ChibiHeroBean.__super.call(this);
	}

	__class(ChibiHeroBean,'net.message.chibi.ChibiHeroBean',_super);
	var __proto=ChibiHeroBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroId);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroId=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	/**英雄id */
	/**英雄id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	/**英雄类型 1:武将2:红颜3:军师4:蛮将 */
	/**英雄类型 1:武将2:红颜3:军师4:蛮将 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ChibiHeroBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*活动积分
*/
//class net.message.activities.ActScoreBean extends engine.base.data.Bean
var ActScoreBean=(function(_super){
	function ActScoreBean(){
		/**活动积分类型 */
		this._scoreType=0;
		/**当前活动积分值 */
		this._value=0;
		ActScoreBean.__super.call(this);
	}

	__class(ActScoreBean,'net.message.activities.ActScoreBean',_super);
	var __proto=ActScoreBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._scoreType);
		this.writeInt(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._scoreType=this.readInt(_buf);
		this._value=this.readInt(_buf);
	}

	/**活动积分类型 */
	/**活动积分类型 */
	__getset(0,__proto,'scoreType',function(){
		return this._scoreType;
		},function(value){
		this._scoreType=value;
	});

	/**当前活动积分值 */
	/**当前活动积分值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ActScoreBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyGameOverHandler extends net.MNetHandler
var ResNineHeavyGameOverHandler=(function(_super){
	function ResNineHeavyGameOverHandler(){
		ResNineHeavyGameOverHandler.__super.call(this);;
	}

	__class(ResNineHeavyGameOverHandler,'net.handler.nineHeavy.ResNineHeavyGameOverHandler',_super);
	var __proto=ResNineHeavyGameOverHandler.prototype;
	// 九重天活动结束
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyGameOverHandler",msg);
	}

	return ResNineHeavyGameOverHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*包裹
*/
//class net.message.packet.PacketBean extends engine.base.data.Bean
var PacketBean=(function(_super){
	function PacketBean(){
		/**类型[1:装备][2:道具][3:战纹][4:秘宝] */
		this._type=0;
		/**包裹容量 */
		this._capacity=0;
		PacketBean.__super.call(this);
		this._items=[];
	}

	__class(PacketBean,'net.message.packet.PacketBean',_super);
	var __proto=PacketBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._capacity);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._capacity=this.readInt(_buf);
	}

	/**类型[1:装备][2:道具][3:战纹][4:秘宝] */
	/**类型[1:装备][2:道具][3:战纹][4:秘宝] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具列表 */
	/**道具列表 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	/**包裹容量 */
	/**包裹容量 */
	__getset(0,__proto,'capacity',function(){
		return this._capacity;
		},function(value){
		this._capacity=value;
	});

	return PacketBean;
})(Bean)


//class net.handler.nineHeavy.ResNineHeavyPlayerMoveHandler extends net.MNetHandler
var ResNineHeavyPlayerMoveHandler=(function(_super){
	function ResNineHeavyPlayerMoveHandler(){
		ResNineHeavyPlayerMoveHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerMoveHandler,'net.handler.nineHeavy.ResNineHeavyPlayerMoveHandler',_super);
	var __proto=ResNineHeavyPlayerMoveHandler.prototype;
	// 玩家移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerMoveHandler",msg);
	}

	return ResNineHeavyPlayerMoveHandler;
})(MNetHandler)


//class net.handler.pata.ResGetXXHJInfoErrorHandler extends net.MNetHandler
var ResGetXXHJInfoErrorHandler=(function(_super){
	function ResGetXXHJInfoErrorHandler(){
		ResGetXXHJInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetXXHJInfoErrorHandler,'net.handler.pata.ResGetXXHJInfoErrorHandler',_super);
	var __proto=ResGetXXHJInfoErrorHandler.prototype;
	// 获取星宿幻境信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetXXHJInfoErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarGetExtPrizeErrorHandler extends net.MNetHandler
var ResKingWarGetExtPrizeErrorHandler=(function(_super){
	function ResKingWarGetExtPrizeErrorHandler(){
		ResKingWarGetExtPrizeErrorHandler.__super.call(this);;
	}

	__class(ResKingWarGetExtPrizeErrorHandler,'net.handler.kingwar.ResKingWarGetExtPrizeErrorHandler',_super);
	var __proto=ResKingWarGetExtPrizeErrorHandler.prototype;
	// 领取王者额外奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarGetExtPrizeErrorHandler",msg.error);
	}

	return ResKingWarGetExtPrizeErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*外形对象
*/
//class net.message.appearance.AppearanceBean extends engine.base.data.Bean
var AppearanceBean=(function(_super){
	function AppearanceBean(){
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**帮派名 */
		this._legionName=null;
		/**vip */
		this._vip=0;
		/**名字 */
		this._name=null;
		/**是否月卡 */
		this._isYueKa=false;
		/**是否终生卡 */
		this._isZhongShengKa=false;
		/**爵位 */
		this._juewei=0;
		/**是否结婚 */
		this._marriage=false;
		/**服务器序号 */
		this._sno=0;
		AppearanceBean.__super.call(this);
		this._skinIdList=[];
	}

	__class(AppearanceBean,'net.message.appearance.AppearanceBean',_super);
	var __proto=AppearanceBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._skinIdList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinIdList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinIdList[i_am_tmp_i]);
		}
		this.writeString(_buf,this._legionName);
		this.writeInt(_buf,this._vip);
		this.writeString(_buf,this._name);
		this.writeBoolean(_buf,this._isYueKa);
		this.writeBoolean(_buf,this._isZhongShengKa);
		this.writeInt(_buf,this._juewei);
		this.writeBoolean(_buf,this._marriage);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinIdList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinIdList[i_am_tmp_i]=this.readInt(_buf);
		}
		this._legionName=this.readString(_buf);
		this._vip=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._isYueKa=this.readBoolean(_buf);
		this._isZhongShengKa=this.readBoolean(_buf);
		this._juewei=this.readInt(_buf);
		this._marriage=this.readBoolean(_buf);
		this._sno=this.readInt(_buf);
	}

	/**是否终生卡 */
	/**是否终生卡 */
	__getset(0,__proto,'isZhongShengKa',function(){
		return this._isZhongShengKa;
		},function(value){
		this._isZhongShengKa=value;
	});

	/**vip */
	/**vip */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	/**帮派名 */
	/**帮派名 */
	__getset(0,__proto,'legionName',function(){
		return this._legionName;
		},function(value){
		this._legionName=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**各部位id */
	/**各部位id */
	__getset(0,__proto,'skinIdList',function(){
		return this._skinIdList;
		},function(value){
		this._skinIdList=value;
	});

	/**是否月卡 */
	/**是否月卡 */
	__getset(0,__proto,'isYueKa',function(){
		return this._isYueKa;
		},function(value){
		this._isYueKa=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**爵位 */
	/**爵位 */
	__getset(0,__proto,'juewei',function(){
		return this._juewei;
		},function(value){
		this._juewei=value;
	});

	/**是否结婚 */
	/**是否结婚 */
	__getset(0,__proto,'marriage',function(){
		return this._marriage;
		},function(value){
		this._marriage=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return AppearanceBean;
})(Bean)


//class net.handler.legion.ResLegionGuardRewardMessageErrorHandler extends net.MNetHandler
var ResLegionGuardRewardMessageErrorHandler=(function(_super){
	function ResLegionGuardRewardMessageErrorHandler(){
		ResLegionGuardRewardMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionGuardRewardMessageErrorHandler,'net.handler.legion.ResLegionGuardRewardMessageErrorHandler',_super);
	var __proto=ResLegionGuardRewardMessageErrorHandler.prototype;
	// 请求获得守护每日奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionGuardRewardMessageErrorHandler",msg);
	}

	return ResLegionGuardRewardMessageErrorHandler;
})(MNetHandler)


//class net.handler.miji.ResSetMijiErrorHandler extends net.MNetHandler
var ResSetMijiErrorHandler=(function(_super){
	function ResSetMijiErrorHandler(){
		ResSetMijiErrorHandler.__super.call(this);;
	}

	__class(ResSetMijiErrorHandler,'net.handler.miji.ResSetMijiErrorHandler',_super);
	var __proto=ResSetMijiErrorHandler.prototype;
	// 镶嵌秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResSetMijiErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyDestinyHandler extends net.MNetHandler
var ResSoulBoyDestinyHandler=(function(_super){
	function ResSoulBoyDestinyHandler(){
		ResSoulBoyDestinyHandler.__super.call(this);;
	}

	__class(ResSoulBoyDestinyHandler,'net.handler.soulboy.ResSoulBoyDestinyHandler',_super);
	var __proto=ResSoulBoyDestinyHandler.prototype;
	// 灵童装备命格
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyDestinyHandler",msg);
	}

	return ResSoulBoyDestinyHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResHuntUpdateLuckCountHandler extends net.MNetHandler
var ResHuntUpdateLuckCountHandler=(function(_super){
	function ResHuntUpdateLuckCountHandler(){
		ResHuntUpdateLuckCountHandler.__super.call(this);;
	}

	__class(ResHuntUpdateLuckCountHandler,'net.handler.textureHunt.ResHuntUpdateLuckCountHandler',_super);
	var __proto=ResHuntUpdateLuckCountHandler.prototype;
	// 更新幸运寻宝次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntUpdateLuckCountHandler",msg);
	}

	return ResHuntUpdateLuckCountHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRobberyBackHandler extends net.MNetHandler
var ResEscortRobberyBackHandler=(function(_super){
	function ResEscortRobberyBackHandler(){
		ResEscortRobberyBackHandler.__super.call(this);;
	}

	__class(ResEscortRobberyBackHandler,'net.handler.escort.ResEscortRobberyBackHandler',_super);
	var __proto=ResEscortRobberyBackHandler.prototype;
	// 请求劫镖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRobberyBackHandler",msg);
	}

	return ResEscortRobberyBackHandler;
})(MNetHandler)


//class net.handler.misc.ResDuiHuanErrorHandler extends net.MNetHandler
var ResDuiHuanErrorHandler=(function(_super){
	function ResDuiHuanErrorHandler(){
		ResDuiHuanErrorHandler.__super.call(this);;
	}

	__class(ResDuiHuanErrorHandler,'net.handler.misc.ResDuiHuanErrorHandler',_super);
	var __proto=ResDuiHuanErrorHandler.prototype;
	// 兑换
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DuiHuanErrorHandler",msg.error);
	}

	return ResDuiHuanErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyXilianTranslateHandler extends net.MNetHandler
var ResSoulBoyXilianTranslateHandler=(function(_super){
	function ResSoulBoyXilianTranslateHandler(){
		ResSoulBoyXilianTranslateHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianTranslateHandler,'net.handler.soulboy.ResSoulBoyXilianTranslateHandler',_super);
	var __proto=ResSoulBoyXilianTranslateHandler.prototype;
	// 御魂和灵分解
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianTranslateHandler",msg);
	}

	return ResSoulBoyXilianTranslateHandler;
})(MNetHandler)


//class net.handler.goods.ResUseGoodsErrorHandler extends net.MNetHandler
var ResUseGoodsErrorHandler=(function(_super){
	function ResUseGoodsErrorHandler(){
		ResUseGoodsErrorHandler.__super.call(this);;
	}

	__class(ResUseGoodsErrorHandler,'net.handler.goods.ResUseGoodsErrorHandler',_super);
	var __proto=ResUseGoodsErrorHandler.prototype;
	// 背包使用道具(使用类型道具)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UseGoodsErrorHandler",msg);
	}

	return ResUseGoodsErrorHandler;
})(MNetHandler)


//class net.handler.mail.ResReadMailHandler extends net.MNetHandler
var ResReadMailHandler=(function(_super){
	function ResReadMailHandler(){
		ResReadMailHandler.__super.call(this);;
	}

	__class(ResReadMailHandler,'net.handler.mail.ResReadMailHandler',_super);
	var __proto=ResReadMailHandler.prototype;
	// 读取邮件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReadMailHandler",msg);
	}

	return ResReadMailHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightGetWorshipRewardErrorHandler extends net.MNetHandler
var ResKingWarFightGetWorshipRewardErrorHandler=(function(_super){
	function ResKingWarFightGetWorshipRewardErrorHandler(){
		ResKingWarFightGetWorshipRewardErrorHandler.__super.call(this);;
	}

	__class(ResKingWarFightGetWorshipRewardErrorHandler,'net.handler.kingwar.ResKingWarFightGetWorshipRewardErrorHandler',_super);
	var __proto=ResKingWarFightGetWorshipRewardErrorHandler.prototype;
	// 王者争霸获取膜拜奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightGetWorshipRewardErrorHandler",msg.error);
	}

	return ResKingWarFightGetWorshipRewardErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*道具
*/
//class net.message.goods.GoodsBean extends engine.base.data.Bean
var GoodsBean=(function(_super){
	function GoodsBean(){
		/**位置 */
		this._index=0;
		/**配置ID */
		this._configID=0;
		/**过期时间 */
		this._overtime=null;
		/**数量 */
		this._num=0;
		/**创建时间 */
		this._createTime=null;
		GoodsBean.__super.call(this);
		this._extraParam=[];
	}

	__class(GoodsBean,'net.message.goods.GoodsBean',_super);
	var __proto=GoodsBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._configID);
		this.writeLong(_buf,this._overtime);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._extraParam.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._extraParam.length;++i_am_tmp_i){
			this.writeInt(_buf,this._extraParam[i_am_tmp_i]);
		}
		this.writeLong(_buf,this._createTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._configID=this.readInt(_buf);
		this._overtime=this.readLong(_buf);
		this._num=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._extraParam=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._extraParam[i_am_tmp_i]=this.readInt(_buf);
		}
		this._createTime=this.readLong(_buf);
	}

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**位置 */
	/**位置 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	/**附加参数,当道具类型为战纹时:extraParam[0]为战纹等级.当道具类型为战骑装备时:extraParam[0]为星级.当道具类型为装备时:extraParam[0]为属性类型extraParam[1]为属性值依次类推. */
	/**附加参数,当道具类型为战纹时:extraParam[0]为战纹等级.当道具类型为战骑装备时:extraParam[0]为星级.当道具类型为装备时:extraParam[0]为属性类型extraParam[1]为属性值依次类推. */
	__getset(0,__proto,'extraParam',function(){
		return this._extraParam;
		},function(value){
		this._extraParam=value;
	});

	/**过期时间 */
	/**过期时间 */
	__getset(0,__proto,'overtime',function(){
		return this._overtime;
		},function(value){
		this._overtime=value;
	});

	/**创建时间 */
	/**创建时间 */
	__getset(0,__proto,'createTime',function(){
		return this._createTime;
		},function(value){
		this._createTime=value;
	});

	return GoodsBean;
})(Bean)


//class net.handler.treasure.ResTreasurePyHandler extends net.MNetHandler
var ResTreasurePyHandler=(function(_super){
	function ResTreasurePyHandler(){
		ResTreasurePyHandler.__super.call(this);;
	}

	__class(ResTreasurePyHandler,'net.handler.treasure.ResTreasurePyHandler',_super);
	var __proto=ResTreasurePyHandler.prototype;
	// 培养
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasurePyHandler",msg);
	}

	return ResTreasurePyHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonSetGuardErrorHandler extends net.MNetHandler
var ResGarrisonSetGuardErrorHandler=(function(_super){
	function ResGarrisonSetGuardErrorHandler(){
		ResGarrisonSetGuardErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonSetGuardErrorHandler,'net.handler.garrison.ResGarrisonSetGuardErrorHandler',_super);
	var __proto=ResGarrisonSetGuardErrorHandler.prototype;
	// 设置镇守
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonSetGuardErrorHandler" ,msg);
	}

	return ResGarrisonSetGuardErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*转生数据
*/
//class net.message.zhuansheng.ZhuanShengBean extends engine.base.data.Bean
var ZhuanShengBean=(function(_super){
	function ZhuanShengBean(){
		/**等级 */
		this._level=0;
		/**当前修为 */
		this._exp=null;
		/**今天可以降低等级次数(跨天清除)*/
		this._reduceLevelTimes=0;
		/**今天可以使用高级丹次数(跨天清除)*/
		this._gaojiTimes=0;
		/**今天可以使用超级丹次数(跨天清除)*/
		this._chaojiTimes=0;
		ZhuanShengBean.__super.call(this);
	}

	__class(ZhuanShengBean,'net.message.zhuansheng.ZhuanShengBean',_super);
	var __proto=ZhuanShengBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._reduceLevelTimes);
		this.writeInt(_buf,this._gaojiTimes);
		this.writeInt(_buf,this._chaojiTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._reduceLevelTimes=this.readInt(_buf);
		this._gaojiTimes=this.readInt(_buf);
		this._chaojiTimes=this.readInt(_buf);
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**当前修为 */
	/**当前修为 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**今天可以使用超级丹次数(跨天清除)*/
	/**今天可以使用超级丹次数(跨天清除)*/
	__getset(0,__proto,'chaojiTimes',function(){
		return this._chaojiTimes;
		},function(value){
		this._chaojiTimes=value;
	});

	/**今天可以使用高级丹次数(跨天清除)*/
	/**今天可以使用高级丹次数(跨天清除)*/
	__getset(0,__proto,'gaojiTimes',function(){
		return this._gaojiTimes;
		},function(value){
		this._gaojiTimes=value;
	});

	/**今天可以降低等级次数(跨天清除)*/
	/**今天可以降低等级次数(跨天清除)*/
	__getset(0,__proto,'reduceLevelTimes',function(){
		return this._reduceLevelTimes;
		},function(value){
		this._reduceLevelTimes=value;
	});

	return ZhuanShengBean;
})(Bean)


//class net.handler.team.ResTeamCreateErrorHandler extends net.MNetHandler
var ResTeamCreateErrorHandler=(function(_super){
	function ResTeamCreateErrorHandler(){
		ResTeamCreateErrorHandler.__super.call(this);;
	}

	__class(ResTeamCreateErrorHandler,'net.handler.team.ResTeamCreateErrorHandler',_super);
	var __proto=ResTeamCreateErrorHandler.prototype;
	// 请求创建队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamCreateErrorHandler",msg);
	}

	return ResTeamCreateErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResActivePetGroupHandler extends net.MNetHandler
var ResActivePetGroupHandler=(function(_super){
	function ResActivePetGroupHandler(){
		ResActivePetGroupHandler.__super.call(this);;
	}

	__class(ResActivePetGroupHandler,'net.handler.pet.ResActivePetGroupHandler',_super);
	var __proto=ResActivePetGroupHandler.prototype;
	// 激活宠物缘分
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivePetGroupHandler",msg.groupID);
	}

	return ResActivePetGroupHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookUpStarHandler extends net.MNetHandler
var ResHandBookUpStarHandler=(function(_super){
	function ResHandBookUpStarHandler(){
		ResHandBookUpStarHandler.__super.call(this);;
	}

	__class(ResHandBookUpStarHandler,'net.handler.handbook.ResHandBookUpStarHandler',_super);
	var __proto=ResHandBookUpStarHandler.prototype;
	// 图鉴升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookUpStarHandler",msg);
	}

	return ResHandBookUpStarHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildInitHandler extends net.MNetHandler
var ResGuildInitHandler=(function(_super){
	function ResGuildInitHandler(){
		ResGuildInitHandler.__super.call(this);;
	}

	__class(ResGuildInitHandler,'net.handler.guild.ResGuildInitHandler',_super);
	var __proto=ResGuildInitHandler.prototype;
	// 初始化帮会信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildInitHandler",msg);
	}

	return ResGuildInitHandler;
})(MNetHandler)


//class net.handler.dungeon.ResUpdateYeWaiBossHandler extends net.MNetHandler
var ResUpdateYeWaiBossHandler=(function(_super){
	function ResUpdateYeWaiBossHandler(){
		ResUpdateYeWaiBossHandler.__super.call(this);;
	}

	__class(ResUpdateYeWaiBossHandler,'net.handler.dungeon.ResUpdateYeWaiBossHandler',_super);
	var __proto=ResUpdateYeWaiBossHandler.prototype;
	// 刷新野外boss副本信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateYeWaiBossHandler",msg.dungeon);
	}

	return ResUpdateYeWaiBossHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageRenovationHouseHandler extends net.MNetHandler
var ResMarriageRenovationHouseHandler=(function(_super){
	function ResMarriageRenovationHouseHandler(){
		ResMarriageRenovationHouseHandler.__super.call(this);;
	}

	__class(ResMarriageRenovationHouseHandler,'net.handler.marriage.ResMarriageRenovationHouseHandler',_super);
	var __proto=ResMarriageRenovationHouseHandler.prototype;
	// 升阶房子
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageRenovationHouseHandler",msg);
	}

	return ResMarriageRenovationHouseHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleHireErrorHandler extends net.MNetHandler
var ResLegionBattleHireErrorHandler=(function(_super){
	function ResLegionBattleHireErrorHandler(){
		ResLegionBattleHireErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleHireErrorHandler,'net.handler.gb.ResLegionBattleHireErrorHandler',_super);
	var __proto=ResLegionBattleHireErrorHandler.prototype;
	// 帮会战组队招募
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleHireErrorHandler" ,msg);
	}

	return ResLegionBattleHireErrorHandler;
})(MNetHandler)


//class net.handler.gongCe.ResXuYuanStatusHandler extends net.MNetHandler
var ResXuYuanStatusHandler=(function(_super){
	function ResXuYuanStatusHandler(){
		ResXuYuanStatusHandler.__super.call(this);;
	}

	__class(ResXuYuanStatusHandler,'net.handler.gongCe.ResXuYuanStatusHandler',_super);
	var __proto=ResXuYuanStatusHandler.prototype;
	// 许愿状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XuYuanStatusHandler",msg);
	}

	return ResXuYuanStatusHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派事件(职位变更)
*/
//class net.message.guild.GuildEventPositionBean extends engine.base.data.Bean
var GuildEventPositionBean=(function(_super){
	function GuildEventPositionBean(){
		/**时间 */
		this._time=null;
		/**职位[1:帮主][2:副帮主][3:普通成员] */
		this._position=0;
		/**名字 */
		this._name=null;
		GuildEventPositionBean.__super.call(this);
	}

	__class(GuildEventPositionBean,'net.message.guild.GuildEventPositionBean',_super);
	var __proto=GuildEventPositionBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._position);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readLong(_buf);
		this._position=this.readInt(_buf);
		this._name=this.readString(_buf);
	}

	/**时间 */
	/**时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**职位[1:帮主][2:副帮主][3:普通成员] */
	/**职位[1:帮主][2:副帮主][3:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return GuildEventPositionBean;
})(Bean)


//class net.handler.equip.ResGetZhuWenInfoErrorHandler extends net.MNetHandler
var ResGetZhuWenInfoErrorHandler=(function(_super){
	function ResGetZhuWenInfoErrorHandler(){
		ResGetZhuWenInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetZhuWenInfoErrorHandler,'net.handler.equip.ResGetZhuWenInfoErrorHandler',_super);
	var __proto=ResGetZhuWenInfoErrorHandler.prototype;
	// 铸纹信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetZhuWenInfoErrorHandler;
})(MNetHandler)


//class net.handler.official.ResResetOfficialHandler extends net.MNetHandler
var ResResetOfficialHandler=(function(_super){
	function ResResetOfficialHandler(){
		ResResetOfficialHandler.__super.call(this);;
	}

	__class(ResResetOfficialHandler,'net.handler.official.ResResetOfficialHandler',_super);
	var __proto=ResResetOfficialHandler.prototype;
	// 每日重置官位对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResetOfficialHandler",msg);
	}

	return ResResetOfficialHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserSurmountErrorHandler extends net.MNetHandler
var ResAdviserSurmountErrorHandler=(function(_super){
	function ResAdviserSurmountErrorHandler(){
		ResAdviserSurmountErrorHandler.__super.call(this);;
	}

	__class(ResAdviserSurmountErrorHandler,'net.handler.adviser.ResAdviserSurmountErrorHandler',_super);
	var __proto=ResAdviserSurmountErrorHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserSurmountErrorHandler",msg.error);
	}

	return ResAdviserSurmountErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiStartTaskHandler extends net.MNetHandler
var ResChibiStartTaskHandler=(function(_super){
	function ResChibiStartTaskHandler(){
		ResChibiStartTaskHandler.__super.call(this);;
	}

	__class(ResChibiStartTaskHandler,'net.handler.chibi.ResChibiStartTaskHandler',_super);
	var __proto=ResChibiStartTaskHandler.prototype;
	// 开始赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiStartTaskHandler",msg);
	}

	return ResChibiStartTaskHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionUpdateGuardMessageHandler extends net.MNetHandler
var ResLegionUpdateGuardMessageHandler=(function(_super){
	function ResLegionUpdateGuardMessageHandler(){
		ResLegionUpdateGuardMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateGuardMessageHandler,'net.handler.legion.ResLegionUpdateGuardMessageHandler',_super);
	var __proto=ResLegionUpdateGuardMessageHandler.prototype;
	// 更新守护
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateGuardMessageHandler",msg);
	}

	return ResLegionUpdateGuardMessageHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyTaletUpgradeErrorHandler extends net.MNetHandler
var ResSoulBoyTaletUpgradeErrorHandler=(function(_super){
	function ResSoulBoyTaletUpgradeErrorHandler(){
		ResSoulBoyTaletUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyTaletUpgradeErrorHandler,'net.handler.soulboy.ResSoulBoyTaletUpgradeErrorHandler',_super);
	var __proto=ResSoulBoyTaletUpgradeErrorHandler.prototype;
	// 升级灵童天赋
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyTaletUpgradeErrorHandler",msg);
	}

	return ResSoulBoyTaletUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarGetRankHandler extends net.MNetHandler
var ResKingWarGetRankHandler=(function(_super){
	function ResKingWarGetRankHandler(){
		ResKingWarGetRankHandler.__super.call(this);;
	}

	__class(ResKingWarGetRankHandler,'net.handler.kingwar.ResKingWarGetRankHandler',_super);
	var __proto=ResKingWarGetRankHandler.prototype;
	// 请求王者争霸排行榜
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarGetRankHandler",msg);
	}

	return ResKingWarGetRankHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonGetDataErrorHandler extends net.MNetHandler
var ResGarrisonGetDataErrorHandler=(function(_super){
	function ResGarrisonGetDataErrorHandler(){
		ResGarrisonGetDataErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonGetDataErrorHandler,'net.handler.garrison.ResGarrisonGetDataErrorHandler',_super);
	var __proto=ResGarrisonGetDataErrorHandler.prototype;
	// 获取巡城数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGetDataErrorHandler" ,msg);
	}

	return ResGarrisonGetDataErrorHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiBetHandler extends net.MNetHandler
var ResQunYingHuiBetHandler=(function(_super){
	function ResQunYingHuiBetHandler(){
		ResQunYingHuiBetHandler.__super.call(this);;
	}

	__class(ResQunYingHuiBetHandler,'net.handler.qunyinghui.ResQunYingHuiBetHandler',_super);
	var __proto=ResQunYingHuiBetHandler.prototype;
	// 群英会下注
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiBetHandler",msg);
	}

	return ResQunYingHuiBetHandler;
})(MNetHandler)


//class net.handler.gongCe.ResQinWangTeGongHandler extends net.MNetHandler
var ResQinWangTeGongHandler=(function(_super){
	function ResQinWangTeGongHandler(){
		ResQinWangTeGongHandler.__super.call(this);;
	}

	__class(ResQinWangTeGongHandler,'net.handler.gongCe.ResQinWangTeGongHandler',_super);
	var __proto=ResQinWangTeGongHandler.prototype;
	// 勤王特供
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResQinWangTeGong",msg);
	}

	return ResQinWangTeGongHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonGetOverLoadErrorHandler extends net.MNetHandler
var ResGarrisonGetOverLoadErrorHandler=(function(_super){
	function ResGarrisonGetOverLoadErrorHandler(){
		ResGarrisonGetOverLoadErrorHandler.__super.call(this);;
	}

	__class(ResGarrisonGetOverLoadErrorHandler,'net.handler.garrison.ResGarrisonGetOverLoadErrorHandler',_super);
	var __proto=ResGarrisonGetOverLoadErrorHandler.prototype;
	// 查看霸主
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGetOverLoadErrorHandler" ,msg);
	}

	return ResGarrisonGetOverLoadErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateThroneRankHandler extends net.MNetHandler
var ResLegionBattleUpdateThroneRankHandler=(function(_super){
	function ResLegionBattleUpdateThroneRankHandler(){
		ResLegionBattleUpdateThroneRankHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateThroneRankHandler,'net.handler.gb.ResLegionBattleUpdateThroneRankHandler',_super);
	var __proto=ResLegionBattleUpdateThroneRankHandler.prototype;
	// 更新占领王座排名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateThroneRankHandler" ,msg);
	}

	return ResLegionBattleUpdateThroneRankHandler;
})(MNetHandler)


//class net.handler.login.ResLoginLocalErrorHandler extends net.MNetHandler
var ResLoginLocalErrorHandler=(function(_super){
	function ResLoginLocalErrorHandler(){
		ResLoginLocalErrorHandler.__super.call(this);;
	}

	__class(ResLoginLocalErrorHandler,'net.handler.login.ResLoginLocalErrorHandler',_super);
	var __proto=ResLoginLocalErrorHandler.prototype;
	// 登录(本地)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LoginLocalErrorHandler",msg);
	}

	return ResLoginLocalErrorHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaChallengeHandler extends net.MNetHandler
var ResArenaChallengeHandler=(function(_super){
	function ResArenaChallengeHandler(){
		ResArenaChallengeHandler.__super.call(this);;
	}

	__class(ResArenaChallengeHandler,'net.handler.arena.ResArenaChallengeHandler',_super);
	var __proto=ResArenaChallengeHandler.prototype;
	// 挑战
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaChallengeHandler ",msg);
	}

	return ResArenaChallengeHandler;
})(MNetHandler)


//class net.handler.godClothes.ResPutOnGodClothesErrorHandler extends net.MNetHandler
var ResPutOnGodClothesErrorHandler=(function(_super){
	function ResPutOnGodClothesErrorHandler(){
		ResPutOnGodClothesErrorHandler.__super.call(this);;
	}

	__class(ResPutOnGodClothesErrorHandler,'net.handler.godClothes.ResPutOnGodClothesErrorHandler',_super);
	var __proto=ResPutOnGodClothesErrorHandler.prototype;
	// 穿戴神装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutOnGodClothesErrorHandler" ,msg.error);
	}

	return ResPutOnGodClothesErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamInitHandler extends net.MNetHandler
var ResTeamInitHandler=(function(_super){
	function ResTeamInitHandler(){
		ResTeamInitHandler.__super.call(this);;
	}

	__class(ResTeamInitHandler,'net.handler.team.ResTeamInitHandler',_super);
	var __proto=ResTeamInitHandler.prototype;
	// 初始化队伍信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamInitHandler",msg);
	}

	return ResTeamInitHandler;
})(MNetHandler)


//class net.handler.user.ResActiveGameSystemErrorHandler extends net.MNetHandler
var ResActiveGameSystemErrorHandler=(function(_super){
	function ResActiveGameSystemErrorHandler(){
		ResActiveGameSystemErrorHandler.__super.call(this);;
	}

	__class(ResActiveGameSystemErrorHandler,'net.handler.user.ResActiveGameSystemErrorHandler',_super);
	var __proto=ResActiveGameSystemErrorHandler.prototype;
	// 激活系统
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResActiveGameSystemErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskPingDingAnBangPayErrorHandler extends net.MNetHandler
var ResTaskPingDingAnBangPayErrorHandler=(function(_super){
	function ResTaskPingDingAnBangPayErrorHandler(){
		ResTaskPingDingAnBangPayErrorHandler.__super.call(this);;
	}

	__class(ResTaskPingDingAnBangPayErrorHandler,'net.handler.task.ResTaskPingDingAnBangPayErrorHandler',_super);
	var __proto=ResTaskPingDingAnBangPayErrorHandler.prototype;
	// 付费完成平定安邦
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskPingDingAnBangPayErrorHandler",msg);
	}

	return ResTaskPingDingAnBangPayErrorHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionAttentionNotifyHandler extends net.MNetHandler
var ResAuctionAttentionNotifyHandler=(function(_super){
	function ResAuctionAttentionNotifyHandler(){
		ResAuctionAttentionNotifyHandler.__super.call(this);;
	}

	__class(ResAuctionAttentionNotifyHandler,'net.handler.auction.ResAuctionAttentionNotifyHandler',_super);
	var __proto=ResAuctionAttentionNotifyHandler.prototype;
	// 关注的物品上架
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionAttentionNotifyHandler",msg);
	}

	return ResAuctionAttentionNotifyHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeHandler extends net.MNetHandler
var ResGeneralUpgradeHandler=(function(_super){
	function ResGeneralUpgradeHandler(){
		ResGeneralUpgradeHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeHandler,'net.handler.general.ResGeneralUpgradeHandler',_super);
	var __proto=ResGeneralUpgradeHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeHandler" ,msg);
	}

	return ResGeneralUpgradeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*世界BOSS排行榜对象
*/
//class net.message.worldboss.WorldBossRankBean extends engine.base.data.Bean
var WorldBossRankBean=(function(_super){
	function WorldBossRankBean(){
		/**帮派ID */
		this._uid=null;
		/**伤害 */
		this._injury=null;
		/**帮派名字 */
		this._name=null;
		WorldBossRankBean.__super.call(this);
	}

	__class(WorldBossRankBean,'net.message.worldboss.WorldBossRankBean',_super);
	var __proto=WorldBossRankBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._injury);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._injury=this.readLong(_buf);
		this._name=this.readString(_buf);
	}

	/**帮派ID */
	/**帮派ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'injury',function(){
		return this._injury;
		},function(value){
		this._injury=value;
	});

	return WorldBossRankBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*道具数量
*/
//class net.message.goods.GoodsNumBean extends engine.base.data.Bean
var GoodsNumBean=(function(_super){
	function GoodsNumBean(){
		/**ID */
		this._id=0;
		/**数量 */
		this._num=0;
		GoodsNumBean.__super.call(this);
	}

	__class(GoodsNumBean,'net.message.goods.GoodsNumBean',_super);
	var __proto=GoodsNumBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return GoodsNumBean;
})(Bean)


//class net.handler.equip.ResEquipZhuWenErrorHandler extends net.MNetHandler
var ResEquipZhuWenErrorHandler=(function(_super){
	function ResEquipZhuWenErrorHandler(){
		ResEquipZhuWenErrorHandler.__super.call(this);;
	}

	__class(ResEquipZhuWenErrorHandler,'net.handler.equip.ResEquipZhuWenErrorHandler',_super);
	var __proto=ResEquipZhuWenErrorHandler.prototype;
	// 装备铸纹
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEquipZhuWenErrorHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeCBTPrizeErrorHandler extends net.MNetHandler
var ResTakeCBTPrizeErrorHandler=(function(_super){
	function ResTakeCBTPrizeErrorHandler(){
		ResTakeCBTPrizeErrorHandler.__super.call(this);;
	}

	__class(ResTakeCBTPrizeErrorHandler,'net.handler.pata.ResTakeCBTPrizeErrorHandler',_super);
	var __proto=ResTakeCBTPrizeErrorHandler.prototype;
	// 领取藏宝图奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeCBTPrizeErrorHandler",msg.error);
	}

	return ResTakeCBTPrizeErrorHandler;
})(MNetHandler)


//class net.handler.upgrade.ResUpgradeUpdateCritHandler extends net.MNetHandler
var ResUpgradeUpdateCritHandler=(function(_super){
	function ResUpgradeUpdateCritHandler(){
		ResUpgradeUpdateCritHandler.__super.call(this);;
	}

	__class(ResUpgradeUpdateCritHandler,'net.handler.upgrade.ResUpgradeUpdateCritHandler',_super);
	var __proto=ResUpgradeUpdateCritHandler.prototype;
	// 同步暴击日
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeUpdateCritHandler",msg.id);
	}

	return ResUpgradeUpdateCritHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*已关注的道具类型
*/
//class net.message.auction.AuctionAttentionBean extends engine.base.data.Bean
var AuctionAttentionBean=(function(_super){
	function AuctionAttentionBean(){
		/**物品类型 */
		this._type1=0;
		/**物品子类型 */
		this._type2=0;
		AuctionAttentionBean.__super.call(this);
	}

	__class(AuctionAttentionBean,'net.message.auction.AuctionAttentionBean',_super);
	var __proto=AuctionAttentionBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type1);
		this.writeInt(_buf,this._type2);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type1=this.readInt(_buf);
		this._type2=this.readInt(_buf);
	}

	/**物品类型 */
	/**物品类型 */
	__getset(0,__proto,'type1',function(){
		return this._type1;
		},function(value){
		this._type1=value;
	});

	/**物品子类型 */
	/**物品子类型 */
	__getset(0,__proto,'type2',function(){
		return this._type2;
		},function(value){
		this._type2=value;
	});

	return AuctionAttentionBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*跨服副本房间
*/
//class net.message.teamDuplicate.TeamDuplicateRoom extends engine.base.data.Bean
var TeamDuplicateRoom=(function(_super){
	function TeamDuplicateRoom(){
		/**房间ID */
		this._roomID=0;
		/**副本ID */
		this._fubenID=0;
		/**满员自动开启 */
		this._isfull=0;
		/**定时自动开启 */
		this._autoForTime=0;
		/**剩余开启时间 */
		this._time=0;
		/**是否正在战斗 0 不是 1 是 */
		this._isBattle=0;
		TeamDuplicateRoom.__super.call(this);
		this._players=[];
	}

	__class(TeamDuplicateRoom,'net.message.teamDuplicate.TeamDuplicateRoom',_super);
	var __proto=TeamDuplicateRoom.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._roomID);
		this.writeInt(_buf,this._fubenID);
		this.writeInt(_buf,this._isfull);
		this.writeInt(_buf,this._autoForTime);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._players.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._players.length;++i_am_tmp_i){
			this._players[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._isBattle);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._roomID=this.readInt(_buf);
		this._fubenID=this.readInt(_buf);
		this._isfull=this.readInt(_buf);
		this._autoForTime=this.readInt(_buf);
		this._time=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._players=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._players[i_am_tmp_i]=this.readBeanInList(_buf,TeamPlayerBean);
		}
		this._isBattle=this.readInt(_buf);
	}

	/**是否正在战斗 0 不是 1 是 */
	/**是否正在战斗 0 不是 1 是 */
	__getset(0,__proto,'isBattle',function(){
		return this._isBattle;
		},function(value){
		this._isBattle=value;
	});

	/**房间ID */
	/**房间ID */
	__getset(0,__proto,'roomID',function(){
		return this._roomID;
		},function(value){
		this._roomID=value;
	});

	/**剩余开启时间 */
	/**剩余开启时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**定时自动开启 */
	/**定时自动开启 */
	__getset(0,__proto,'autoForTime',function(){
		return this._autoForTime;
		},function(value){
		this._autoForTime=value;
	});

	/**满员自动开启 */
	/**满员自动开启 */
	__getset(0,__proto,'isfull',function(){
		return this._isfull;
		},function(value){
		this._isfull=value;
	});

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'fubenID',function(){
		return this._fubenID;
		},function(value){
		this._fubenID=value;
	});

	/**房间玩家 下标为0的是房主 */
	/**房间玩家 下标为0的是房主 */
	__getset(0,__proto,'players',function(){
		return this._players;
		},function(value){
		this._players=value;
	});

	return TeamDuplicateRoom;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童技能对象
*/
//class net.message.soulboy.SoulBoySkill extends engine.base.data.Bean
var SoulBoySkill=(function(_super){
	function SoulBoySkill(){
		/**技能ID */
		this._id=0;
		/**等级 */
		this._lv=0;
		/**进度 */
		this._progress=0;
		SoulBoySkill.__super.call(this);
	}

	__class(SoulBoySkill,'net.message.soulboy.SoulBoySkill',_super);
	var __proto=SoulBoySkill.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	/**技能ID */
	/**技能ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return SoulBoySkill;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用每日已抽奖次数
*/
//class net.message.textureHunt.CommonHuntCount extends engine.base.data.Bean
var CommonHuntCount=(function(_super){
	function CommonHuntCount(){
		CommonHuntCount.__super.call(this);
		this._count=[];
	}

	__class(CommonHuntCount,'net.message.textureHunt.CommonHuntCount',_super);
	var __proto=CommonHuntCount.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._count.length;++i_am_tmp_i){
			this.writeInt(_buf,this._count[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._count=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._count[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**次数 */
	/**次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return CommonHuntCount;
})(Bean)


//class net.handler.gongCe.ResSelectQingWangRewardErrorHandler extends net.MNetHandler
var ResSelectQingWangRewardErrorHandler=(function(_super){
	function ResSelectQingWangRewardErrorHandler(){
		ResSelectQingWangRewardErrorHandler.__super.call(this);;
	}

	__class(ResSelectQingWangRewardErrorHandler,'net.handler.gongCe.ResSelectQingWangRewardErrorHandler',_super);
	var __proto=ResSelectQingWangRewardErrorHandler.prototype;
	// 勤王特供
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSelectQingWangRewardError",msg);
	}

	return ResSelectQingWangRewardErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResUpdateDungeonTodayTimesHandler extends net.MNetHandler
var ResUpdateDungeonTodayTimesHandler=(function(_super){
	function ResUpdateDungeonTodayTimesHandler(){
		ResUpdateDungeonTodayTimesHandler.__super.call(this);;
	}

	__class(ResUpdateDungeonTodayTimesHandler,'net.handler.dungeon.ResUpdateDungeonTodayTimesHandler',_super);
	var __proto=ResUpdateDungeonTodayTimesHandler.prototype;
	// 更新副本今日挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateDungeonTodayTimesHandler",msg);
	}

	return ResUpdateDungeonTodayTimesHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiBuyTodayErrorHandler extends net.MNetHandler
var ResChibiBuyTodayErrorHandler=(function(_super){
	function ResChibiBuyTodayErrorHandler(){
		ResChibiBuyTodayErrorHandler.__super.call(this);;
	}

	__class(ResChibiBuyTodayErrorHandler,'net.handler.chibi.ResChibiBuyTodayErrorHandler',_super);
	var __proto=ResChibiBuyTodayErrorHandler.prototype;
	// 购买赤壁任务次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiBuyTodayErrorHandler",msg);
	}

	return ResChibiBuyTodayErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店类型
*/
//class net.message.shop.ShopTypeBean extends engine.base.data.Bean
var ShopTypeBean=(function(_super){
	function ShopTypeBean(){
		/**类型 */
		this._type=0;
		/**分页 */
		this._tab=0;
		ShopTypeBean.__super.call(this);
	}

	__class(ShopTypeBean,'net.message.shop.ShopTypeBean',_super);
	var __proto=ShopTypeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._tab);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._tab=this.readInt(_buf);
	}

	/**类型 */
	/**类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**分页 */
	/**分页 */
	__getset(0,__proto,'tab',function(){
		return this._tab;
		},function(value){
		this._tab=value;
	});

	return ShopTypeBean;
})(Bean)


//class net.handler.guild.ResGuildValueUpdateHandler extends net.MNetHandler
var ResGuildValueUpdateHandler=(function(_super){
	function ResGuildValueUpdateHandler(){
		ResGuildValueUpdateHandler.__super.call(this);;
	}

	__class(ResGuildValueUpdateHandler,'net.handler.guild.ResGuildValueUpdateHandler',_super);
	var __proto=ResGuildValueUpdateHandler.prototype;
	// 帮派值更新
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildValueUpdateHandler",msg);
	}

	return ResGuildValueUpdateHandler;
})(MNetHandler)


//class net.handler.team.ResTeamCreateHandler extends net.MNetHandler
var ResTeamCreateHandler=(function(_super){
	function ResTeamCreateHandler(){
		ResTeamCreateHandler.__super.call(this);;
	}

	__class(ResTeamCreateHandler,'net.handler.team.ResTeamCreateHandler',_super);
	var __proto=ResTeamCreateHandler.prototype;
	// 请求创建队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamCreateHandler",msg);
	}

	return ResTeamCreateHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*铸纹信息
*/
//class net.message.equip.ZhuWenBean extends engine.base.data.Bean
var ZhuWenBean=(function(_super){
	function ZhuWenBean(){
		/**id */
		this._id=0;
		/**部位 */
		this._grid=0;
		ZhuWenBean.__super.call(this);
	}

	__class(ZhuWenBean,'net.message.equip.ZhuWenBean',_super);
	var __proto=ZhuWenBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._grid=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**部位 */
	/**部位 */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ZhuWenBean;
})(Bean)


//class net.handler.guild.ResSendGuildExitTimeHandler extends net.MNetHandler
var ResSendGuildExitTimeHandler=(function(_super){
	function ResSendGuildExitTimeHandler(){
		ResSendGuildExitTimeHandler.__super.call(this);;
	}

	__class(ResSendGuildExitTimeHandler,'net.handler.guild.ResSendGuildExitTimeHandler',_super);
	var __proto=ResSendGuildExitTimeHandler.prototype;
	// 更新帮会退出时间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSendGuildExitTimeHandler",msg);
	}

	return ResSendGuildExitTimeHandler;
})(MNetHandler)


//class net.handler.quanfuboss.ResQuanFuBossGetInfoHandler extends net.MNetHandler
var ResQuanFuBossGetInfoHandler=(function(_super){
	function ResQuanFuBossGetInfoHandler(){
		ResQuanFuBossGetInfoHandler.__super.call(this);;
	}

	__class(ResQuanFuBossGetInfoHandler,'net.handler.quanfuboss.ResQuanFuBossGetInfoHandler',_super);
	var __proto=ResQuanFuBossGetInfoHandler.prototype;
	// 获取全服boss信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanFuBossGetInfoHandler",msg);
	}

	return ResQuanFuBossGetInfoHandler;
})(MNetHandler)


//class net.handler.totem.ResTotemActiveErrorHandler extends net.MNetHandler
var ResTotemActiveErrorHandler=(function(_super){
	function ResTotemActiveErrorHandler(){
		ResTotemActiveErrorHandler.__super.call(this);;
	}

	__class(ResTotemActiveErrorHandler,'net.handler.totem.ResTotemActiveErrorHandler',_super);
	var __proto=ResTotemActiveErrorHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TotemActiveErrorHandler",msg.error);
	}

	return ResTotemActiveErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePromoteHouseLvErrorHandler extends net.MNetHandler
var ResMarriagePromoteHouseLvErrorHandler=(function(_super){
	function ResMarriagePromoteHouseLvErrorHandler(){
		ResMarriagePromoteHouseLvErrorHandler.__super.call(this);;
	}

	__class(ResMarriagePromoteHouseLvErrorHandler,'net.handler.marriage.ResMarriagePromoteHouseLvErrorHandler',_super);
	var __proto=ResMarriagePromoteHouseLvErrorHandler.prototype;
	// 升阶房子
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePromoteHouseLvErrorHandler",msg);
	}

	return ResMarriagePromoteHouseLvErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*押运对象
*/
//class net.message.escort.EscortTargetBean extends engine.base.data.Bean
var EscortTargetBean=(function(_super){
	function EscortTargetBean(){
		/**目标ID */
		this._uid=null;
		/**押运的结束时间 */
		this._endTime=0;
		/**当前镖车剩余可被劫次数 */
		this._robbed=0;
		/**押镖人的名字 */
		this._name=null;
		/**镖车等级 */
		this._lv=0;
		/**押镖人的战斗力 */
		this._power=null;
		/**职业 */
		this._profession=0;
		/**性别 */
		this._gender=0;
		/**军团 */
		this._legion=null;
		EscortTargetBean.__super.call(this);
		this._hurted=[];
	}

	__class(EscortTargetBean,'net.message.escort.EscortTargetBean',_super);
	var __proto=EscortTargetBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._endTime);
		this.writeInt(_buf,this._robbed);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._lv);
		this.writeLong(_buf,this._power);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._gender);
		this.writeString(_buf,this._legion);
		this.writeInt(_buf,this._hurted.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._hurted.length;++i_am_tmp_i){
			this.writeLong(_buf,this._hurted[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._endTime=this.readInt(_buf);
		this._robbed=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._lv=this.readInt(_buf);
		this._power=this.readLong(_buf);
		this._profession=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._legion=this.readString(_buf);
		size52413035=this.readInt(_buf);
		this._hurted=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._hurted[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	/**目标ID */
	/**目标ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**军团 */
	/**军团 */
	__getset(0,__proto,'legion',function(){
		return this._legion;
		},function(value){
		this._legion=value;
	});

	/**当前镖车剩余可被劫次数 */
	/**当前镖车剩余可被劫次数 */
	__getset(0,__proto,'robbed',function(){
		return this._robbed;
		},function(value){
		this._robbed=value;
	});

	/**押运的结束时间 */
	/**押运的结束时间 */
	__getset(0,__proto,'endTime',function(){
		return this._endTime;
		},function(value){
		this._endTime=value;
	});

	/**押镖人的战斗力 */
	/**押镖人的战斗力 */
	__getset(0,__proto,'power',function(){
		return this._power;
		},function(value){
		this._power=value;
	});

	/**押镖人的名字 */
	/**押镖人的名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**镖车等级 */
	/**镖车等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**已经劫掠过的人的ID */
	/**已经劫掠过的人的ID */
	__getset(0,__proto,'hurted',function(){
		return this._hurted;
		},function(value){
		this._hurted=value;
	});

	return EscortTargetBean;
})(Bean)


//class net.handler.garrison.ResGarrisonRevengeHandler extends net.MNetHandler
var ResGarrisonRevengeHandler=(function(_super){
	function ResGarrisonRevengeHandler(){
		ResGarrisonRevengeHandler.__super.call(this);;
	}

	__class(ResGarrisonRevengeHandler,'net.handler.garrison.ResGarrisonRevengeHandler',_super);
	var __proto=ResGarrisonRevengeHandler.prototype;
	// 复仇
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonRevengeHandler" ,msg);
	}

	return ResGarrisonRevengeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*精灵
*/
//class net.message.yuanzheng.YuanZhengJingLingBean extends engine.base.data.Bean
var YuanZhengJingLingBean=(function(_super){
	function YuanZhengJingLingBean(){
		/**关卡ID */
		this._guanqiaID=0;
		/**已选择技能 */
		this._skill=0;
		YuanZhengJingLingBean.__super.call(this);
		this._skills=[];
	}

	__class(YuanZhengJingLingBean,'net.message.yuanzheng.YuanZhengJingLingBean',_super);
	var __proto=YuanZhengJingLingBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skills[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skill);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readInt(_buf);
		}
		this._skill=this.readInt(_buf);
	}

	/**已选择技能 */
	/**已选择技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**可选择技能 */
	/**可选择技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return YuanZhengJingLingBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸排名对象
*/
//class net.message.kingwar.KingWarRank extends engine.base.data.Bean
var KingWarRank=(function(_super){
	function KingWarRank(){
		/**玩家ID */
		this._uid=null;
		/**玩家名字 */
		this._name=null;
		/**玩家段位 */
		this._gradation=0;
		/**玩家的星级 */
		this._star=0;
		/**净胜场 */
		this._continuity=0;
		/**战力 */
		this._fightPower=null;
		/**服务器序号 */
		this._sno=0;
		KingWarRank.__super.call(this);
	}

	__class(KingWarRank,'net.message.kingwar.KingWarRank',_super);
	var __proto=KingWarRank.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gradation);
		this.writeInt(_buf,this._star);
		this.writeInt(_buf,this._continuity);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._gradation=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._continuity=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._sno=this.readInt(_buf);
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**玩家名字 */
	/**玩家名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**玩家段位 */
	/**玩家段位 */
	__getset(0,__proto,'gradation',function(){
		return this._gradation;
		},function(value){
		this._gradation=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**玩家的星级 */
	/**玩家的星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**净胜场 */
	/**净胜场 */
	__getset(0,__proto,'continuity',function(){
		return this._continuity;
		},function(value){
		this._continuity=value;
	});

	return KingWarRank;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*空城计战斗记录对象
*/
//class net.message.emptycity.EmptyCityRecordBean extends engine.base.data.Bean
var EmptyCityRecordBean=(function(_super){
	function EmptyCityRecordBean(){
		/**服务器序号 */
		this._atkSno=0;
		/**攻击者 */
		this._atker=null;
		/**服务器序号 */
		this._dstSno=0;
		/**被攻击者 */
		this._defer=null;
		/**是否胜利 */
		this._isWin=false;
		/**发生时间 */
		this._time=null;
		EmptyCityRecordBean.__super.call(this);
	}

	__class(EmptyCityRecordBean,'net.message.emptycity.EmptyCityRecordBean',_super);
	var __proto=EmptyCityRecordBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._atkSno);
		this.writeString(_buf,this._atker);
		this.writeInt(_buf,this._dstSno);
		this.writeString(_buf,this._defer);
		this.writeBoolean(_buf,this._isWin);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._atkSno=this.readInt(_buf);
		this._atker=this.readString(_buf);
		this._dstSno=this.readInt(_buf);
		this._defer=this.readString(_buf);
		this._isWin=this.readBoolean(_buf);
		this._time=this.readLong(_buf);
	}

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'atkSno',function(){
		return this._atkSno;
		},function(value){
		this._atkSno=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'dstSno',function(){
		return this._dstSno;
		},function(value){
		this._dstSno=value;
	});

	/**攻击者 */
	/**攻击者 */
	__getset(0,__proto,'atker',function(){
		return this._atker;
		},function(value){
		this._atker=value;
	});

	/**被攻击者 */
	/**被攻击者 */
	__getset(0,__proto,'defer',function(){
		return this._defer;
		},function(value){
		this._defer=value;
	});

	/**是否胜利 */
	/**是否胜利 */
	__getset(0,__proto,'isWin',function(){
		return this._isWin;
		},function(value){
		this._isWin=value;
	});

	/**发生时间 */
	/**发生时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return EmptyCityRecordBean;
})(Bean)


//class net.handler.adviser.ResAdviserUpgradeElementErrorHandler extends net.MNetHandler
var ResAdviserUpgradeElementErrorHandler=(function(_super){
	function ResAdviserUpgradeElementErrorHandler(){
		ResAdviserUpgradeElementErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeElementErrorHandler,'net.handler.adviser.ResAdviserUpgradeElementErrorHandler',_super);
	var __proto=ResAdviserUpgradeElementErrorHandler.prototype;
	// 升级觉醒元素
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeElementErrorHandler",msg);
	}

	return ResAdviserUpgradeElementErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattlePayRebornErrorHandler extends net.MNetHandler
var ResLegionBattlePayRebornErrorHandler=(function(_super){
	function ResLegionBattlePayRebornErrorHandler(){
		ResLegionBattlePayRebornErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattlePayRebornErrorHandler,'net.handler.gb.ResLegionBattlePayRebornErrorHandler',_super);
	var __proto=ResLegionBattlePayRebornErrorHandler.prototype;
	// 请求给钱复活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattlePayRebornErrorHandler" ,msg);
	}

	return ResLegionBattlePayRebornErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的对象
*/
//class net.message.gb.LegionBattleMemberBean extends engine.base.data.Bean
var LegionBattleMemberBean=(function(_super){
	function LegionBattleMemberBean(){
		/**玩家唯一ID */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**等级 */
		this._level=0;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**战力 */
		this._fightPower=null;
		/**当前血量 */
		this._currentHp=null;
		/**最大血量 */
		this._maxHp=null;
		/**服务器序号 */
		this._sno=0;
		LegionBattleMemberBean.__super.call(this);
	}

	__class(LegionBattleMemberBean,'net.message.gb.LegionBattleMemberBean',_super);
	var __proto=LegionBattleMemberBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeLong(_buf,this._fightPower);
		this.writeLong(_buf,this._currentHp);
		this.writeLong(_buf,this._maxHp);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._currentHp=this.readLong(_buf);
		this._maxHp=this.readLong(_buf);
		this._sno=this.readInt(_buf);
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**玩家唯一ID */
	/**玩家唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**当前血量 */
	/**当前血量 */
	__getset(0,__proto,'currentHp',function(){
		return this._currentHp;
		},function(value){
		this._currentHp=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	return LegionBattleMemberBean;
})(Bean)


//class net.handler.examination.ResKejuExaminationRankErrorHandler extends net.MNetHandler
var ResKejuExaminationRankErrorHandler=(function(_super){
	function ResKejuExaminationRankErrorHandler(){
		ResKejuExaminationRankErrorHandler.__super.call(this);;
	}

	__class(ResKejuExaminationRankErrorHandler,'net.handler.examination.ResKejuExaminationRankErrorHandler',_super);
	var __proto=ResKejuExaminationRankErrorHandler.prototype;
	// 获取科举的排行榜
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResKejuExaminationRankErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResQuanMinBossMoveHandler extends net.MNetHandler
var ResQuanMinBossMoveHandler=(function(_super){
	function ResQuanMinBossMoveHandler(){
		ResQuanMinBossMoveHandler.__super.call(this);;
	}

	__class(ResQuanMinBossMoveHandler,'net.handler.dungeon.ResQuanMinBossMoveHandler',_super);
	var __proto=ResQuanMinBossMoveHandler.prototype;
	// 玩家移动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QuanMinBossMoveHandler",msg);
	}

	return ResQuanMinBossMoveHandler;
})(MNetHandler)


//class net.handler.hero.ResCreateMainHeroErrorHandler extends net.MNetHandler
var ResCreateMainHeroErrorHandler=(function(_super){
	function ResCreateMainHeroErrorHandler(){
		ResCreateMainHeroErrorHandler.__super.call(this);;
	}

	__class(ResCreateMainHeroErrorHandler,'net.handler.hero.ResCreateMainHeroErrorHandler',_super);
	var __proto=ResCreateMainHeroErrorHandler.prototype;
	// 创建主英雄
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CreateMainHeroErrorHandler",msg);
	}

	return ResCreateMainHeroErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChallengeGuanQiaErrorHandler extends net.MNetHandler
var ResChallengeGuanQiaErrorHandler=(function(_super){
	function ResChallengeGuanQiaErrorHandler(){
		ResChallengeGuanQiaErrorHandler.__super.call(this);;
	}

	__class(ResChallengeGuanQiaErrorHandler,'net.handler.dungeon.ResChallengeGuanQiaErrorHandler',_super);
	var __proto=ResChallengeGuanQiaErrorHandler.prototype;
	// 挑战挂机关卡(领奖)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChallengeGuanQiaErrorHandler",msg.error);
	}

	return ResChallengeGuanQiaErrorHandler;
})(MNetHandler)


//class net.handler.equip.ResPutUpgradeEquipHandler extends net.MNetHandler
var ResPutUpgradeEquipHandler=(function(_super){
	function ResPutUpgradeEquipHandler(){
		ResPutUpgradeEquipHandler.__super.call(this);;
	}

	__class(ResPutUpgradeEquipHandler,'net.handler.equip.ResPutUpgradeEquipHandler',_super);
	var __proto=ResPutUpgradeEquipHandler.prototype;
	// 穿戴进阶装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutUpgradeEquipHandler",msg);
	}

	return ResPutUpgradeEquipHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateZhuluBoxErrorHandler extends net.MNetHandler
var ResTeamDuplicateZhuluBoxErrorHandler=(function(_super){
	function ResTeamDuplicateZhuluBoxErrorHandler(){
		ResTeamDuplicateZhuluBoxErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateZhuluBoxErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateZhuluBoxErrorHandler',_super);
	var __proto=ResTeamDuplicateZhuluBoxErrorHandler.prototype;
	// 请求开启逐鹿宝箱
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateZhuluBoxErrorHandler",msg);
	}

	return ResTeamDuplicateZhuluBoxErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionGuardUpgradeMessageHandler extends net.MNetHandler
var ResLegionGuardUpgradeMessageHandler=(function(_super){
	function ResLegionGuardUpgradeMessageHandler(){
		ResLegionGuardUpgradeMessageHandler.__super.call(this);;
	}

	__class(ResLegionGuardUpgradeMessageHandler,'net.handler.legion.ResLegionGuardUpgradeMessageHandler',_super);
	var __proto=ResLegionGuardUpgradeMessageHandler.prototype;
	// 请求升级守护
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionGuardUpgradeMessageHandler" ,msg);
	}

	return ResLegionGuardUpgradeMessageHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetBaoWuRestTimesHandler extends net.MNetHandler
var ResGetBaoWuRestTimesHandler=(function(_super){
	function ResGetBaoWuRestTimesHandler(){
		ResGetBaoWuRestTimesHandler.__super.call(this);;
	}

	__class(ResGetBaoWuRestTimesHandler,'net.handler.textureHunt.ResGetBaoWuRestTimesHandler',_super);
	var __proto=ResGetBaoWuRestTimesHandler.prototype;
	// 获取珍稀宝物剩余次数信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResGetBaoWuRestTimesMsgHandler",msg)
	}

	return ResGetBaoWuRestTimesHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageTakeSinglePlayerErrorHandler extends net.MNetHandler
var ResMarriageTakeSinglePlayerErrorHandler=(function(_super){
	function ResMarriageTakeSinglePlayerErrorHandler(){
		ResMarriageTakeSinglePlayerErrorHandler.__super.call(this);;
	}

	__class(ResMarriageTakeSinglePlayerErrorHandler,'net.handler.marriage.ResMarriageTakeSinglePlayerErrorHandler',_super);
	var __proto=ResMarriageTakeSinglePlayerErrorHandler.prototype;
	// 拉取单身的玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageTakeSinglePlayerErrorHandler",msg);
	}

	return ResMarriageTakeSinglePlayerErrorHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonGetDataHandler extends net.MNetHandler
var ResGarrisonGetDataHandler=(function(_super){
	function ResGarrisonGetDataHandler(){
		ResGarrisonGetDataHandler.__super.call(this);;
	}

	__class(ResGarrisonGetDataHandler,'net.handler.garrison.ResGarrisonGetDataHandler',_super);
	var __proto=ResGarrisonGetDataHandler.prototype;
	// 获取巡城数据
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonGetDataHandler" ,msg);
	}

	return ResGarrisonGetDataHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateNameErrorHandler extends net.MNetHandler
var ResUpdateNameErrorHandler=(function(_super){
	function ResUpdateNameErrorHandler(){
		ResUpdateNameErrorHandler.__super.call(this);;
	}

	__class(ResUpdateNameErrorHandler,'net.handler.user.ResUpdateNameErrorHandler',_super);
	var __proto=ResUpdateNameErrorHandler.prototype;
	// 更改名字
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateNameErrorHandler",msg);
	}

	return ResUpdateNameErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageOperationProposeErrorHandler extends net.MNetHandler
var ResMarriageOperationProposeErrorHandler=(function(_super){
	function ResMarriageOperationProposeErrorHandler(){
		ResMarriageOperationProposeErrorHandler.__super.call(this);;
	}

	__class(ResMarriageOperationProposeErrorHandler,'net.handler.marriage.ResMarriageOperationProposeErrorHandler',_super);
	var __proto=ResMarriageOperationProposeErrorHandler.prototype;
	// 接受或者拒绝求婚
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageOperationProposeErrorHandler",msg);
	}

	return ResMarriageOperationProposeErrorHandler;
})(MNetHandler)


//class net.handler.hero.ResUpdateAttributeHandler extends net.MNetHandler
var ResUpdateAttributeHandler=(function(_super){
	function ResUpdateAttributeHandler(){
		ResUpdateAttributeHandler.__super.call(this);;
	}

	__class(ResUpdateAttributeHandler,'net.handler.hero.ResUpdateAttributeHandler',_super);
	var __proto=ResUpdateAttributeHandler.prototype;
	// 更新自己英雄属性
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateAttributeHandler",msg);
	}

	return ResUpdateAttributeHandler;
})(MNetHandler)


//class net.handler.pata.ResTakeFitPrizeHandler extends net.MNetHandler
var ResTakeFitPrizeHandler=(function(_super){
	function ResTakeFitPrizeHandler(){
		ResTakeFitPrizeHandler.__super.call(this);;
	}

	__class(ResTakeFitPrizeHandler,'net.handler.pata.ResTakeFitPrizeHandler',_super);
	var __proto=ResTakeFitPrizeHandler.prototype;
	// 领取合体奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeFitPrizeHandler ",msg);
	}

	return ResTakeFitPrizeHandler;
})(MNetHandler)


//class net.handler.login.ResLogin37Handler extends net.MNetHandler
var ResLogin37Handler=(function(_super){
	function ResLogin37Handler(){
		ResLogin37Handler.__super.call(this);;
	}

	__class(ResLogin37Handler,'net.handler.login.ResLogin37Handler',_super);
	var __proto=ResLogin37Handler.prototype;
	// 登录(37)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("Login37Handler",msg);
	}

	return ResLogin37Handler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonTakeRewardHandler extends net.MNetHandler
var ResGarrisonTakeRewardHandler=(function(_super){
	function ResGarrisonTakeRewardHandler(){
		ResGarrisonTakeRewardHandler.__super.call(this);;
	}

	__class(ResGarrisonTakeRewardHandler,'net.handler.garrison.ResGarrisonTakeRewardHandler',_super);
	var __proto=ResGarrisonTakeRewardHandler.prototype;
	// 收取奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonTakeRewardHandler" ,msg);
	}

	return ResGarrisonTakeRewardHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeNameHandler extends net.MNetHandler
var ResGuildChangeNameHandler=(function(_super){
	function ResGuildChangeNameHandler(){
		ResGuildChangeNameHandler.__super.call(this);;
	}

	__class(ResGuildChangeNameHandler,'net.handler.guild.ResGuildChangeNameHandler',_super);
	var __proto=ResGuildChangeNameHandler.prototype;
	// 帮会改名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeNameHandler",msg);
	}

	return ResGuildChangeNameHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipPromoteErrorHandler extends net.MNetHandler
var ResEquipPromoteErrorHandler=(function(_super){
	function ResEquipPromoteErrorHandler(){
		ResEquipPromoteErrorHandler.__super.call(this);;
	}

	__class(ResEquipPromoteErrorHandler,'net.handler.equip.ResEquipPromoteErrorHandler',_super);
	var __proto=ResEquipPromoteErrorHandler.prototype;
	// 装备升品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipPromoteErrorMessage",msg);
	}

	return ResEquipPromoteErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResSuperSupplyActErrorHandler extends net.MNetHandler
var ResSuperSupplyActErrorHandler=(function(_super){
	function ResSuperSupplyActErrorHandler(){
		ResSuperSupplyActErrorHandler.__super.call(this);;
	}

	__class(ResSuperSupplyActErrorHandler,'net.handler.activities.ResSuperSupplyActErrorHandler',_super);
	var __proto=ResSuperSupplyActErrorHandler.prototype;
	// 超值补给活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResSuperSupplyActErrorHandler",msg);
	}

	return ResSuperSupplyActErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*法器
*/
//class net.message.xuannv.FaQiBean extends engine.base.data.Bean
var FaQiBean=(function(_super){
	function FaQiBean(){
		/**ID */
		this._id=0;
		/**洗练数据 */
		this._xilian=null;
		FaQiBean.__super.call(this);
	}

	__class(FaQiBean,'net.message.xuannv.FaQiBean',_super);
	var __proto=FaQiBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBean(_buf,this._xilian);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._xilian=this.readBean(_buf,XiLianBean);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**洗练数据 */
	/**洗练数据 */
	__getset(0,__proto,'xilian',function(){
		return this._xilian;
		},function(value){
		this._xilian=value;
	});

	return FaQiBean;
})(Bean)


//class net.handler.zhanwen.ResUpgradeZhanwenErrorHandler extends net.MNetHandler
var ResUpgradeZhanwenErrorHandler=(function(_super){
	function ResUpgradeZhanwenErrorHandler(){
		ResUpgradeZhanwenErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeZhanwenErrorHandler,'net.handler.zhanwen.ResUpgradeZhanwenErrorHandler',_super);
	var __proto=ResUpgradeZhanwenErrorHandler.prototype;
	// 升级战纹
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeZhanwenErrorHandler",msg);
	}

	return ResUpgradeZhanwenErrorHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetTimeInfoErrorHandler extends net.MNetHandler
var ResGetTimeInfoErrorHandler=(function(_super){
	function ResGetTimeInfoErrorHandler(){
		ResGetTimeInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetTimeInfoErrorHandler,'net.handler.textureHunt.ResGetTimeInfoErrorHandler',_super);
	var __proto=ResGetTimeInfoErrorHandler.prototype;
	// 获取寻宝时间
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetTimeInfoErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionOutSquareMessageHandler extends net.MNetHandler
var ResLegionOutSquareMessageHandler=(function(_super){
	function ResLegionOutSquareMessageHandler(){
		ResLegionOutSquareMessageHandler.__super.call(this);;
	}

	__class(ResLegionOutSquareMessageHandler,'net.handler.legion.ResLegionOutSquareMessageHandler',_super);
	var __proto=ResLegionOutSquareMessageHandler.prototype;
	// 某个玩家离开广场
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionOutSquareMessageHandler" ,msg);
	}

	return ResLegionOutSquareMessageHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyLingUpgradeErrorHandler extends net.MNetHandler
var ResSoulBoyLingUpgradeErrorHandler=(function(_super){
	function ResSoulBoyLingUpgradeErrorHandler(){
		ResSoulBoyLingUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyLingUpgradeErrorHandler,'net.handler.soulboy.ResSoulBoyLingUpgradeErrorHandler',_super);
	var __proto=ResSoulBoyLingUpgradeErrorHandler.prototype;
	// 升级或者激活御灵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyLingUpgradeErrorHandler",msg);
	}

	return ResSoulBoyLingUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionHireMessageErrorHandler extends net.MNetHandler
var ResLegionHireMessageErrorHandler=(function(_super){
	function ResLegionHireMessageErrorHandler(){
		ResLegionHireMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionHireMessageErrorHandler,'net.handler.legion.ResLegionHireMessageErrorHandler',_super);
	var __proto=ResLegionHireMessageErrorHandler.prototype;
	// 请求公开招募
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionHireMessageErrorHandler" ,msg);
	}

	return ResLegionHireMessageErrorHandler;
})(MNetHandler)


//class net.handler.activities.ResRechargeTurntableErrorHandler extends net.MNetHandler
var ResRechargeTurntableErrorHandler=(function(_super){
	function ResRechargeTurntableErrorHandler(){
		ResRechargeTurntableErrorHandler.__super.call(this);;
	}

	__class(ResRechargeTurntableErrorHandler,'net.handler.activities.ResRechargeTurntableErrorHandler',_super);
	var __proto=ResRechargeTurntableErrorHandler.prototype;
	// 充值返利活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResRechargeTurntableErrorHandler",msg);
	}

	return ResRechargeTurntableErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChangeGuanQiaDungeonIDErrorHandler extends net.MNetHandler
var ResChangeGuanQiaDungeonIDErrorHandler=(function(_super){
	function ResChangeGuanQiaDungeonIDErrorHandler(){
		ResChangeGuanQiaDungeonIDErrorHandler.__super.call(this);;
	}

	__class(ResChangeGuanQiaDungeonIDErrorHandler,'net.handler.dungeon.ResChangeGuanQiaDungeonIDErrorHandler',_super);
	var __proto=ResChangeGuanQiaDungeonIDErrorHandler.prototype;
	// 切换当前所在关卡副本ID
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeGuanQiaDungeonIDErrorHandler",msg.error);
	}

	return ResChangeGuanQiaDungeonIDErrorHandler;
})(MNetHandler)


//class net.handler.equip.ResPutOnEquipErrorHandler extends net.MNetHandler
var ResPutOnEquipErrorHandler=(function(_super){
	function ResPutOnEquipErrorHandler(){
		ResPutOnEquipErrorHandler.__super.call(this);;
	}

	__class(ResPutOnEquipErrorHandler,'net.handler.equip.ResPutOnEquipErrorHandler',_super);
	var __proto=ResPutOnEquipErrorHandler.prototype;
	// 穿戴装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutOnEquipErrorHandler",msg.error);
	}

	return ResPutOnEquipErrorHandler;
})(MNetHandler)


//class net.handler.rank.ResRankUpdateActivitiesHandler extends net.MNetHandler
var ResRankUpdateActivitiesHandler=(function(_super){
	function ResRankUpdateActivitiesHandler(){
		ResRankUpdateActivitiesHandler.__super.call(this);;
	}

	__class(ResRankUpdateActivitiesHandler,'net.handler.rank.ResRankUpdateActivitiesHandler',_super);
	var __proto=ResRankUpdateActivitiesHandler.prototype;
	// 更新排行榜活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RankUpdateActivitiesHandler",msg.visibleActivities);
	}

	return ResRankUpdateActivitiesHandler;
})(MNetHandler)


//class net.handler.treasure.ResTreasureActiveHandler extends net.MNetHandler
var ResTreasureActiveHandler=(function(_super){
	function ResTreasureActiveHandler(){
		ResTreasureActiveHandler.__super.call(this);;
	}

	__class(ResTreasureActiveHandler,'net.handler.treasure.ResTreasureActiveHandler',_super);
	var __proto=ResTreasureActiveHandler.prototype;
	// 宝物激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResTreasureActiveHandler",msg);
	}

	return ResTreasureActiveHandler;
})(MNetHandler)


//class net.handler.goodLuck.ResSelectLuckHandler extends net.MNetHandler
var ResSelectLuckHandler=(function(_super){
	function ResSelectLuckHandler(){
		ResSelectLuckHandler.__super.call(this);;
	}

	__class(ResSelectLuckHandler,'net.handler.goodLuck.ResSelectLuckHandler',_super);
	var __proto=ResSelectLuckHandler.prototype;
	// 发送祥瑞事件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SelectLuckHandler",msg);
	}

	return ResSelectLuckHandler;
})(MNetHandler)


//class net.handler.dungeon.ResUpdateQuanMinBossTimesHandler extends net.MNetHandler
var ResUpdateQuanMinBossTimesHandler=(function(_super){
	function ResUpdateQuanMinBossTimesHandler(){
		ResUpdateQuanMinBossTimesHandler.__super.call(this);;
	}

	__class(ResUpdateQuanMinBossTimesHandler,'net.handler.dungeon.ResUpdateQuanMinBossTimesHandler',_super);
	var __proto=ResUpdateQuanMinBossTimesHandler.prototype;
	// 刷新全民boss次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateQuanMinBossTimesHandler",msg);
	}

	return ResUpdateQuanMinBossTimesHandler;
})(MNetHandler)


//class net.handler.dungeon.ResClickQuanMinBossDungeonHandler extends net.MNetHandler
var ResClickQuanMinBossDungeonHandler=(function(_super){
	function ResClickQuanMinBossDungeonHandler(){
		ResClickQuanMinBossDungeonHandler.__super.call(this);;
	}

	__class(ResClickQuanMinBossDungeonHandler,'net.handler.dungeon.ResClickQuanMinBossDungeonHandler',_super);
	var __proto=ResClickQuanMinBossDungeonHandler.prototype;
	// 点击全民BOSS(查看排名/击杀者)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ClickQuanMinBossDungeonHandler",msg);
	}

	return ResClickQuanMinBossDungeonHandler;
})(MNetHandler)


//class net.handler.auction.ResAuctionAttentionErrorHandler extends net.MNetHandler
var ResAuctionAttentionErrorHandler=(function(_super){
	function ResAuctionAttentionErrorHandler(){
		ResAuctionAttentionErrorHandler.__super.call(this);;
	}

	__class(ResAuctionAttentionErrorHandler,'net.handler.auction.ResAuctionAttentionErrorHandler',_super);
	var __proto=ResAuctionAttentionErrorHandler.prototype;
	// 关注/取消关注拍卖行物品
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResAuctionAttentionErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiBuyTodayHandler extends net.MNetHandler
var ResChibiBuyTodayHandler=(function(_super){
	function ResChibiBuyTodayHandler(){
		ResChibiBuyTodayHandler.__super.call(this);;
	}

	__class(ResChibiBuyTodayHandler,'net.handler.chibi.ResChibiBuyTodayHandler',_super);
	var __proto=ResChibiBuyTodayHandler.prototype;
	// 购买赤壁任务次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiBuyTodayHandler",msg);
	}

	return ResChibiBuyTodayHandler;
})(MNetHandler)


//class net.handler.user.ResActiveGameSystemHandler extends net.MNetHandler
var ResActiveGameSystemHandler=(function(_super){
	function ResActiveGameSystemHandler(){
		ResActiveGameSystemHandler.__super.call(this);;
	}

	__class(ResActiveGameSystemHandler,'net.handler.user.ResActiveGameSystemHandler',_super);
	var __proto=ResActiveGameSystemHandler.prototype;
	// 激活系统
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResActiveGameSystemHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyGetBattleRecordErrorHandler extends net.MNetHandler
var ResEmptyGetBattleRecordErrorHandler=(function(_super){
	function ResEmptyGetBattleRecordErrorHandler(){
		ResEmptyGetBattleRecordErrorHandler.__super.call(this);;
	}

	__class(ResEmptyGetBattleRecordErrorHandler,'net.handler.emptycity.ResEmptyGetBattleRecordErrorHandler',_super);
	var __proto=ResEmptyGetBattleRecordErrorHandler.prototype;
	// 获得空城计战斗回放
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyGetBattleRecordErrorHandler",msg);
	}

	return ResEmptyGetBattleRecordErrorHandler;
})(MNetHandler)


//class net.handler.hero.ResLevelUpErrorHandler extends net.MNetHandler
var ResLevelUpErrorHandler=(function(_super){
	function ResLevelUpErrorHandler(){
		ResLevelUpErrorHandler.__super.call(this);;
	}

	__class(ResLevelUpErrorHandler,'net.handler.hero.ResLevelUpErrorHandler',_super);
	var __proto=ResLevelUpErrorHandler.prototype;
	// 请求升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LevelUpErrorHandler",msg);
	}

	return ResLevelUpErrorHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResHuntMsgHandler extends net.MNetHandler
var ResHuntMsgHandler=(function(_super){
	function ResHuntMsgHandler(){
		ResHuntMsgHandler.__super.call(this);;
	}

	__class(ResHuntMsgHandler,'net.handler.textureHunt.ResHuntMsgHandler',_super);
	var __proto=ResHuntMsgHandler.prototype;
	// 请求寻宝参数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntMsgHandler",msg);
	}

	return ResHuntMsgHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*前端配置数据
*/
//class net.message.setting.SettingBean extends engine.base.data.Bean
var SettingBean=(function(_super){
	function SettingBean(){
		/**技能使用排序 */
		this._skill=null;
		/**自动熔炼 */
		this._autoMelt=false;
		/**boss刷新 */
		this._bossrefresh=null;
		/**军师配置 */
		this._adviserBean=null;
		/**蛮将配置 */
		this._generalBean=null;
		/**自动遣散抽卡角色 */
		this._autoDisband=false;
		SettingBean.__super.call(this);
	}

	__class(SettingBean,'net.message.setting.SettingBean',_super);
	var __proto=SettingBean.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._skill);
		this.writeBoolean(_buf,this._autoMelt);
		this.writeBean(_buf,this._bossrefresh);
		this.writeBean(_buf,this._adviserBean);
		this.writeBean(_buf,this._generalBean);
		this.writeBoolean(_buf,this._autoDisband);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skill=this.readBean(_buf,SettingSkillSortBean);
		this._autoMelt=this.readBoolean(_buf);
		this._bossrefresh=this.readBean(_buf,SettingBossRefreshBean);
		this._adviserBean=this.readBean(_buf,SettingAdviserBean);
		this._generalBean=this.readBean(_buf,SettingGeneralBean);
		this._autoDisband=this.readBoolean(_buf);
	}

	/**技能使用排序 */
	/**技能使用排序 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	/**自动熔炼 */
	/**自动熔炼 */
	__getset(0,__proto,'autoMelt',function(){
		return this._autoMelt;
		},function(value){
		this._autoMelt=value;
	});

	/**boss刷新 */
	/**boss刷新 */
	__getset(0,__proto,'bossrefresh',function(){
		return this._bossrefresh;
		},function(value){
		this._bossrefresh=value;
	});

	/**军师配置 */
	/**军师配置 */
	__getset(0,__proto,'adviserBean',function(){
		return this._adviserBean;
		},function(value){
		this._adviserBean=value;
	});

	/**蛮将配置 */
	/**蛮将配置 */
	__getset(0,__proto,'generalBean',function(){
		return this._generalBean;
		},function(value){
		this._generalBean=value;
	});

	/**自动遣散抽卡角色 */
	/**自动遣散抽卡角色 */
	__getset(0,__proto,'autoDisband',function(){
		return this._autoDisband;
		},function(value){
		this._autoDisband=value;
	});

	return SettingBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*神装
*/
//class net.message.godClothes.GodClothes extends engine.base.data.Bean
var GodClothes=(function(_super){
	function GodClothes(){
		/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		/**等级 */
		this._lv=0;
		/**套装等级 */
		this._suitLv=0;
		/**兵魂 */
		this._soul=0;
		/**注灵等阶 */
		this._injection=0;
		/**注灵进度 */
		this._progress=0;
		/**这个神装神铸的id */
		this._shenZhuId=0;
		/**是否锁定 0=未锁定 1=已锁定 */
		this._isLocked=0;
		GodClothes.__super.call(this);
		this._clearAttribute=[];
		this._lastAttribute=[];
		this._ciTiaoBeans=[];
	}

	__class(GodClothes,'net.message.godClothes.GodClothes',_super);
	var __proto=GodClothes.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._suitLv);
		this.writeInt(_buf,this._soul);
		this.writeInt(_buf,this._injection);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._clearAttribute.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._clearAttribute.length;++i_am_tmp_i){
			this.writeLong(_buf,this._clearAttribute[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._lastAttribute.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lastAttribute.length;++i_am_tmp_i){
			this.writeLong(_buf,this._lastAttribute[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._shenZhuId);
		this.writeInt(_buf,this._isLocked);
		this.writeInt(_buf,this._ciTiaoBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._ciTiaoBeans.length;++i_am_tmp_i){
			this._ciTiaoBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._grid=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._suitLv=this.readInt(_buf);
		this._soul=this.readInt(_buf);
		this._injection=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._clearAttribute=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._clearAttribute[i_am_tmp_i]=this.readLong(_buf);
		}
		size52413035=this.readInt(_buf);
		this._lastAttribute=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lastAttribute[i_am_tmp_i]=this.readLong(_buf);
		}
		this._shenZhuId=this.readInt(_buf);
		this._isLocked=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._ciTiaoBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._ciTiaoBeans[i_am_tmp_i]=this.readBeanInList(_buf,CiTiaoBean);
		}
	}

	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**淬炼属性 */
	/**淬炼属性 */
	__getset(0,__proto,'clearAttribute',function(){
		return this._clearAttribute;
		},function(value){
		this._clearAttribute=value;
	});

	/**注灵进度 */
	/**注灵进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**兵魂 */
	/**兵魂 */
	__getset(0,__proto,'soul',function(){
		return this._soul;
		},function(value){
		this._soul=value;
	});

	/**套装等级 */
	/**套装等级 */
	__getset(0,__proto,'suitLv',function(){
		return this._suitLv;
		},function(value){
		this._suitLv=value;
	});

	/**注灵等阶 */
	/**注灵等阶 */
	__getset(0,__proto,'injection',function(){
		return this._injection;
		},function(value){
		this._injection=value;
	});

	/**这个神装神铸的id */
	/**这个神装神铸的id */
	__getset(0,__proto,'shenZhuId',function(){
		return this._shenZhuId;
		},function(value){
		this._shenZhuId=value;
	});

	/**上次淬炼属性 */
	/**上次淬炼属性 */
	__getset(0,__proto,'lastAttribute',function(){
		return this._lastAttribute;
		},function(value){
		this._lastAttribute=value;
	});

	/**是否锁定 0=未锁定 1=已锁定 */
	/**是否锁定 0=未锁定 1=已锁定 */
	__getset(0,__proto,'isLocked',function(){
		return this._isLocked;
		},function(value){
		this._isLocked=value;
	});

	/**神铸属性 */
	/**神铸属性 */
	__getset(0,__proto,'ciTiaoBeans',function(){
		return this._ciTiaoBeans;
		},function(value){
		this._ciTiaoBeans=value;
	});

	return GodClothes;
})(Bean)


//class net.handler.towerFight.ResselectTowerErrorHandler extends net.MNetHandler
var ResselectTowerErrorHandler=(function(_super){
	function ResselectTowerErrorHandler(){
		ResselectTowerErrorHandler.__super.call(this);;
	}

	__class(ResselectTowerErrorHandler,'net.handler.towerFight.ResselectTowerErrorHandler',_super);
	var __proto=ResselectTowerErrorHandler.prototype;
	// 进入试炼之塔具体某个塔
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResselectTowerErrorHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonSynthesisHandler extends net.MNetHandler
var ResCommonSynthesisHandler=(function(_super){
	function ResCommonSynthesisHandler(){
		ResCommonSynthesisHandler.__super.call(this);;
	}

	__class(ResCommonSynthesisHandler,'net.handler.upgrade.ResCommonSynthesisHandler',_super);
	var __proto=ResCommonSynthesisHandler.prototype;
	// 通用合成
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonSynthesisHandler",msg);
	}

	return ResCommonSynthesisHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateUpdateHandler extends net.MNetHandler
var ResTeamDuplicateUpdateHandler=(function(_super){
	function ResTeamDuplicateUpdateHandler(){
		ResTeamDuplicateUpdateHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateUpdateHandler,'net.handler.teamDuplicate.ResTeamDuplicateUpdateHandler',_super);
	var __proto=ResTeamDuplicateUpdateHandler.prototype;
	// 每日更新组队副本
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateUpdateHandler",msg.bean);
	}

	return ResTeamDuplicateUpdateHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyIntegralRewardHandler extends net.MNetHandler
var ResNineHeavyIntegralRewardHandler=(function(_super){
	function ResNineHeavyIntegralRewardHandler(){
		ResNineHeavyIntegralRewardHandler.__super.call(this);;
	}

	__class(ResNineHeavyIntegralRewardHandler,'net.handler.nineHeavy.ResNineHeavyIntegralRewardHandler',_super);
	var __proto=ResNineHeavyIntegralRewardHandler.prototype;
	// 玩家领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyIntegralRewardHandler",msg);
	}

	return ResNineHeavyIntegralRewardHandler;
})(MNetHandler)


//class net.handler.godClothes.ResGodClothesOperationErrorHandler extends net.MNetHandler
var ResGodClothesOperationErrorHandler=(function(_super){
	function ResGodClothesOperationErrorHandler(){
		ResGodClothesOperationErrorHandler.__super.call(this);;
	}

	__class(ResGodClothesOperationErrorHandler,'net.handler.godClothes.ResGodClothesOperationErrorHandler',_super);
	var __proto=ResGodClothesOperationErrorHandler.prototype;
	// 操作神装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GodClothesOperationErrorHandler" ,msg.error);
	}

	return ResGodClothesOperationErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*时装升星
*/
//class net.message.skin.SkinStarBean extends engine.base.data.Bean
var SkinStarBean=(function(_super){
	function SkinStarBean(){
		/**ID */
		this._id=0;
		/**资质星 */
		this._star=0;
		/**资质经验 */
		this._starExp=null;
		SkinStarBean.__super.call(this);
	}

	__class(SkinStarBean,'net.message.skin.SkinStarBean',_super);
	var __proto=SkinStarBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._star);
		this.writeLong(_buf,this._starExp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._starExp=this.readLong(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**资质星 */
	/**资质星 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**资质经验 */
	/**资质经验 */
	__getset(0,__proto,'starExp',function(){
		return this._starExp;
		},function(value){
		this._starExp=value;
	});

	return SkinStarBean;
})(Bean)


//class net.handler.gb.ResLegionBattleAttackPlayerHandler extends net.MNetHandler
var ResLegionBattleAttackPlayerHandler=(function(_super){
	function ResLegionBattleAttackPlayerHandler(){
		ResLegionBattleAttackPlayerHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackPlayerHandler,'net.handler.gb.ResLegionBattleAttackPlayerHandler',_super);
	var __proto=ResLegionBattleAttackPlayerHandler.prototype;
	// 请求攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackPlayerHandler" ,msg);
	}

	return ResLegionBattleAttackPlayerHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取的进度对象
*/
//class net.message.marriage.ProgressBean extends engine.base.data.Bean
var ProgressBean=(function(_super){
	function ProgressBean(){
		/**可领取的值 */
		this._value=0;
		/**生成时间 */
		this._time=null;
		ProgressBean.__super.call(this);
	}

	__class(ProgressBean,'net.message.marriage.ProgressBean',_super);
	var __proto=ProgressBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._value);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._value=this.readInt(_buf);
		this._time=this.readLong(_buf);
	}

	/**可领取的值 */
	/**可领取的值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	/**生成时间 */
	/**生成时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ProgressBean;
})(Bean)


//class net.handler.login.ResLoginForTypeHandler extends net.MNetHandler
var ResLoginForTypeHandler=(function(_super){
	function ResLoginForTypeHandler(){
		ResLoginForTypeHandler.__super.call(this);;
	}

	__class(ResLoginForTypeHandler,'net.handler.login.ResLoginForTypeHandler',_super);
	var __proto=ResLoginForTypeHandler.prototype;
	// 登录(本地)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LoginForTypeHandler",msg);
	}

	return ResLoginForTypeHandler;
})(MNetHandler)


//class net.handler.official.ResReceiveOfficialYesterdayRewardHandler extends net.MNetHandler
var ResReceiveOfficialYesterdayRewardHandler=(function(_super){
	function ResReceiveOfficialYesterdayRewardHandler(){
		ResReceiveOfficialYesterdayRewardHandler.__super.call(this);;
	}

	__class(ResReceiveOfficialYesterdayRewardHandler,'net.handler.official.ResReceiveOfficialYesterdayRewardHandler',_super);
	var __proto=ResReceiveOfficialYesterdayRewardHandler.prototype;
	// 找回官位昨日奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveOfficialYesterdayRewardHandler",msg);
	}

	return ResReceiveOfficialYesterdayRewardHandler;
})(MNetHandler)


//class net.handler.tuangou.ResTuanGouGetInfoHandler extends net.MNetHandler
var ResTuanGouGetInfoHandler=(function(_super){
	function ResTuanGouGetInfoHandler(){
		ResTuanGouGetInfoHandler.__super.call(this);;
	}

	__class(ResTuanGouGetInfoHandler,'net.handler.tuangou.ResTuanGouGetInfoHandler',_super);
	var __proto=ResTuanGouGetInfoHandler.prototype;
	// 获取团购信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TuanGouGetInfoHandler",msg);
	}

	return ResTuanGouGetInfoHandler;
})(MNetHandler)


//class net.handler.fight.ResFightTestHandler extends net.MNetHandler
var ResFightTestHandler=(function(_super){
	function ResFightTestHandler(){
		ResFightTestHandler.__super.call(this);;
	}

	__class(ResFightTestHandler,'net.handler.fight.ResFightTestHandler',_super);
	var __proto=ResFightTestHandler.prototype;
	// 战斗测试
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightTestHandler" ,msg.bean);
	}

	return ResFightTestHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*官位找回
*/
//class net.message.official.OfficialRetrieveBean extends engine.base.data.Bean
var OfficialRetrieveBean=(function(_super){
	function OfficialRetrieveBean(){
		/**官位id */
		this._id=0;
		/**可找回数量 */
		this._num=0;
		OfficialRetrieveBean.__super.call(this);
	}

	__class(OfficialRetrieveBean,'net.message.official.OfficialRetrieveBean',_super);
	var __proto=OfficialRetrieveBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	/**官位id */
	/**官位id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**可找回数量 */
	/**可找回数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return OfficialRetrieveBean;
})(Bean)


//class net.handler.marriage.ResMarriagePataInviteUpdateHandler extends net.MNetHandler
var ResMarriagePataInviteUpdateHandler=(function(_super){
	function ResMarriagePataInviteUpdateHandler(){
		ResMarriagePataInviteUpdateHandler.__super.call(this);;
	}

	__class(ResMarriagePataInviteUpdateHandler,'net.handler.marriage.ResMarriagePataInviteUpdateHandler',_super);
	var __proto=ResMarriagePataInviteUpdateHandler.prototype;
	// 爬塔邀请
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResMarriagePataInviteUpdateHandler;
})(MNetHandler)


//class net.handler.activities.ResActTurntableTimesUpdateHandler extends net.MNetHandler
var ResActTurntableTimesUpdateHandler=(function(_super){
	function ResActTurntableTimesUpdateHandler(){
		ResActTurntableTimesUpdateHandler.__super.call(this);;
	}

	__class(ResActTurntableTimesUpdateHandler,'net.handler.activities.ResActTurntableTimesUpdateHandler',_super);
	var __proto=ResActTurntableTimesUpdateHandler.prototype;
	// 更新活动转盘状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResActTurntableTimesUpdateHandler ",msg);
	}

	return ResActTurntableTimesUpdateHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*全服boss排行榜
*/
//class net.message.quanfuboss.QuanFuBossRankBean extends engine.base.data.Bean
var QuanFuBossRankBean=(function(_super){
	function QuanFuBossRankBean(){
		/**uid */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**伤害 */
		this._damage=null;
		/**月卡 */
		this._yueKa=false;
		/**终生卡 */
		this._zhongshengKa=false;
		QuanFuBossRankBean.__super.call(this);
	}

	__class(QuanFuBossRankBean,'net.message.quanfuboss.QuanFuBossRankBean',_super);
	var __proto=QuanFuBossRankBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._damage);
		this.writeBoolean(_buf,this._yueKa);
		this.writeBoolean(_buf,this._zhongshengKa);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._damage=this.readLong(_buf);
		this._yueKa=this.readBoolean(_buf);
		this._zhongshengKa=this.readBoolean(_buf);
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**月卡 */
	/**月卡 */
	__getset(0,__proto,'yueKa',function(){
		return this._yueKa;
		},function(value){
		this._yueKa=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**终生卡 */
	/**终生卡 */
	__getset(0,__proto,'zhongshengKa',function(){
		return this._zhongshengKa;
		},function(value){
		this._zhongshengKa=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'damage',function(){
		return this._damage;
		},function(value){
		this._damage=value;
	});

	return QuanFuBossRankBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将
*/
//class net.message.general.GeneralBean extends engine.base.data.Bean
var GeneralBean=(function(_super){
	function GeneralBean(){
		/**id */
		this._id=0;
		/**进度 */
		this._progress=0;
		/**等级 */
		this._lv=0;
		/**突破 */
		this._surmount=0;
		/**是否激活 */
		this._isActive=false;
		/**星级 */
		this._start=0;
		/**蛮器等级 */
		this._weapon=0;
		GeneralBean.__super.call(this);
		this._skill=[];
	}

	__class(GeneralBean,'net.message.general.GeneralBean',_super);
	var __proto=GeneralBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._surmount);
		this.writeBoolean(_buf,this._isActive);
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._start);
		this.writeInt(_buf,this._weapon);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._surmount=this.readInt(_buf);
		this._isActive=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._start=this.readInt(_buf);
		this._weapon=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**星级 */
	/**星级 */
	__getset(0,__proto,'start',function(){
		return this._start;
		},function(value){
		this._start=value;
	});

	/**是否激活 */
	/**是否激活 */
	__getset(0,__proto,'isActive',function(){
		return this._isActive;
		},function(value){
		this._isActive=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**突破 */
	/**突破 */
	__getset(0,__proto,'surmount',function(){
		return this._surmount;
		},function(value){
		this._surmount=value;
	});

	/**蛮器等级 */
	/**蛮器等级 */
	__getset(0,__proto,'weapon',function(){
		return this._weapon;
		},function(value){
		this._weapon=value;
	});

	return GeneralBean;
})(Bean)


//class net.handler.pata.ResGetCBTInfoErrorHandler extends net.MNetHandler
var ResGetCBTInfoErrorHandler=(function(_super){
	function ResGetCBTInfoErrorHandler(){
		ResGetCBTInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetCBTInfoErrorHandler,'net.handler.pata.ResGetCBTInfoErrorHandler',_super);
	var __proto=ResGetCBTInfoErrorHandler.prototype;
	// 获取藏宝图信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetCBTInfoErrorHandler",msg.error);
	}

	return ResGetCBTInfoErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChangeBossOwnerErrorHandler extends net.MNetHandler
var ResChangeBossOwnerErrorHandler=(function(_super){
	function ResChangeBossOwnerErrorHandler(){
		ResChangeBossOwnerErrorHandler.__super.call(this);;
	}

	__class(ResChangeBossOwnerErrorHandler,'net.handler.dungeon.ResChangeBossOwnerErrorHandler',_super);
	var __proto=ResChangeBossOwnerErrorHandler.prototype;
	// 改变归属
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeBossOwnerErrorHandler",msg.error);
	}

	return ResChangeBossOwnerErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackMonsterErrorHandler extends net.MNetHandler
var ResLegionBattleAttackMonsterErrorHandler=(function(_super){
	function ResLegionBattleAttackMonsterErrorHandler(){
		ResLegionBattleAttackMonsterErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackMonsterErrorHandler,'net.handler.gb.ResLegionBattleAttackMonsterErrorHandler',_super);
	var __proto=ResLegionBattleAttackMonsterErrorHandler.prototype;
	// 请求怪物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackMonsterErrorHandler " ,msg);
	}

	return ResLegionBattleAttackMonsterErrorHandler;
})(MNetHandler)


//class net.handler.fight.ResOtherPlayerFightTeamErrorHandler extends net.MNetHandler
var ResOtherPlayerFightTeamErrorHandler=(function(_super){
	function ResOtherPlayerFightTeamErrorHandler(){
		ResOtherPlayerFightTeamErrorHandler.__super.call(this);;
	}

	__class(ResOtherPlayerFightTeamErrorHandler,'net.handler.fight.ResOtherPlayerFightTeamErrorHandler',_super);
	var __proto=ResOtherPlayerFightTeamErrorHandler.prototype;
	// 查看其他玩家信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OtherPlayerFightTeamErrorHandler" ,msg);
	}

	return ResOtherPlayerFightTeamErrorHandler;
})(MNetHandler)


//class net.handler.chat.ResChatHelpHandler extends net.MNetHandler
var ResChatHelpHandler=(function(_super){
	function ResChatHelpHandler(){
		ResChatHelpHandler.__super.call(this);;
	}

	__class(ResChatHelpHandler,'net.handler.chat.ResChatHelpHandler',_super);
	var __proto=ResChatHelpHandler.prototype;
	// 帮助关卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatHelpHandler",msg);
	}

	return ResChatHelpHandler;
})(MNetHandler)


//class net.handler.activities.ResFlushActivitiesHandler extends net.MNetHandler
var ResFlushActivitiesHandler=(function(_super){
	function ResFlushActivitiesHandler(){
		ResFlushActivitiesHandler.__super.call(this);;
	}

	__class(ResFlushActivitiesHandler,'net.handler.activities.ResFlushActivitiesHandler',_super);
	var __proto=ResFlushActivitiesHandler.prototype;
	// 推送每天的活动状态变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ACTIVITY_HANDLER",msg);
	}

	return ResFlushActivitiesHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildDismissErrorHandler extends net.MNetHandler
var ResGuildDismissErrorHandler=(function(_super){
	function ResGuildDismissErrorHandler(){
		ResGuildDismissErrorHandler.__super.call(this);;
	}

	__class(ResGuildDismissErrorHandler,'net.handler.guild.ResGuildDismissErrorHandler',_super);
	var __proto=ResGuildDismissErrorHandler.prototype;
	// 解散军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildDismissErrorHandler",msg);
	}

	return ResGuildDismissErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*副本挑战次数数据
*/
//class net.message.dungeon.DungeonTimesBean extends engine.base.data.Bean
var DungeonTimesBean=(function(_super){
	function DungeonTimesBean(){
		/**副本ID */
		this._id=0;
		/**已经挑战次数 */
		this._times=0;
		DungeonTimesBean.__super.call(this);
	}

	__class(DungeonTimesBean,'net.message.dungeon.DungeonTimesBean',_super);
	var __proto=DungeonTimesBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._times=this.readInt(_buf);
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**已经挑战次数 */
	/**已经挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return DungeonTimesBean;
})(Bean)


//class net.handler.lieming.ResUpdateLieMingLevelSucessHandler extends net.MNetHandler
var ResUpdateLieMingLevelSucessHandler=(function(_super){
	function ResUpdateLieMingLevelSucessHandler(){
		ResUpdateLieMingLevelSucessHandler.__super.call(this);;
	}

	__class(ResUpdateLieMingLevelSucessHandler,'net.handler.lieming.ResUpdateLieMingLevelSucessHandler',_super);
	var __proto=ResUpdateLieMingLevelSucessHandler.prototype;
	// 更新猎命等级成功
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateLieMingLevelSucessHandler",[msg.name,msg.level]);
	}

	return ResUpdateLieMingLevelSucessHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengTaskRewardMessageHandler extends net.MNetHandler
var ResInvestmengTaskRewardMessageHandler=(function(_super){
	function ResInvestmengTaskRewardMessageHandler(){
		ResInvestmengTaskRewardMessageHandler.__super.call(this);;
	}

	__class(ResInvestmengTaskRewardMessageHandler,'net.handler.investment.ResInvestmengTaskRewardMessageHandler',_super);
	var __proto=ResInvestmengTaskRewardMessageHandler.prototype;
	// 请求领取透支计划奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengTaskRewardMessageHandler",msg);
	}

	return ResInvestmengTaskRewardMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物
*/
//class net.message.pet.PetBean extends engine.base.data.Bean
var PetBean=(function(_super){
	function PetBean(){
		/**ID */
		this._id=0;
		/**名字 */
		this._name=null;
		/**等级 */
		this._level=0;
		/**经验 */
		this._exp=null;
		/**资质星 */
		this._star=0;
		/**资质经验 */
		this._starExp=null;
		/**洗练数据 */
		this._xilian=null;
		/**觉醒重数 */
		this._awakeOrder=0;
		/**觉醒星级 */
		this._awakeStar=0;
		PetBean.__super.call(this);
		this._skills=[];
	}

	__class(PetBean,'net.message.pet.PetBean',_super);
	var __proto=PetBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._star);
		this.writeLong(_buf,this._starExp);
		this.writeBean(_buf,this._xilian);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._awakeOrder);
		this.writeInt(_buf,this._awakeStar);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._star=this.readInt(_buf);
		this._starExp=this.readLong(_buf);
		this._xilian=this.readBean(_buf,XiLianBean);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._awakeOrder=this.readInt(_buf);
		this._awakeStar=this.readInt(_buf);
	}

	/**经验 */
	/**经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**资质星 */
	/**资质星 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**资质经验 */
	/**资质经验 */
	__getset(0,__proto,'starExp',function(){
		return this._starExp;
		},function(value){
		this._starExp=value;
	});

	/**觉醒重数 */
	/**觉醒重数 */
	__getset(0,__proto,'awakeOrder',function(){
		return this._awakeOrder;
		},function(value){
		this._awakeOrder=value;
	});

	/**洗练数据 */
	/**洗练数据 */
	__getset(0,__proto,'xilian',function(){
		return this._xilian;
		},function(value){
		this._xilian=value;
	});

	/**宠物技能 */
	/**宠物技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**觉醒星级 */
	/**觉醒星级 */
	__getset(0,__proto,'awakeStar',function(){
		return this._awakeStar;
		},function(value){
		this._awakeStar=value;
	});

	return PetBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*红包系统
*/
//class net.message.redEnvelopes.SingleRedEnvelopes extends engine.base.data.Bean
var SingleRedEnvelopes=(function(_super){
	function SingleRedEnvelopes(){
		/**id */
		this._id=0;
		/**总额 */
		this._amount=0;
		/**玩家名称 */
		this._userName=null;
		/**红包生成时间 */
		this._time=null;
		/**已经抢完 */
		this._empty=false;
		SingleRedEnvelopes.__super.call(this);
		this._userList=[];
	}

	__class(SingleRedEnvelopes,'net.message.redEnvelopes.SingleRedEnvelopes',_super);
	var __proto=SingleRedEnvelopes.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._amount);
		this.writeString(_buf,this._userName);
		this.writeInt(_buf,this._userList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._userList.length;++i_am_tmp_i){
			this.writeLong(_buf,this._userList[i_am_tmp_i]);
		}
		this.writeLong(_buf,this._time);
		this.writeBoolean(_buf,this._empty);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._amount=this.readInt(_buf);
		this._userName=this.readString(_buf);
		size52413035=this.readInt(_buf);
		this._userList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._userList[i_am_tmp_i]=this.readLong(_buf);
		}
		this._time=this.readLong(_buf);
		this._empty=this.readBoolean(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**玩家名称 */
	/**玩家名称 */
	__getset(0,__proto,'userName',function(){
		return this._userName;
		},function(value){
		this._userName=value;
	});

	/**总额 */
	/**总额 */
	__getset(0,__proto,'amount',function(){
		return this._amount;
		},function(value){
		this._amount=value;
	});

	/**已经抢完 */
	/**已经抢完 */
	__getset(0,__proto,'empty',function(){
		return this._empty;
		},function(value){
		this._empty=value;
	});

	/**领取过的玩家 */
	/**领取过的玩家 */
	__getset(0,__proto,'userList',function(){
		return this._userList;
		},function(value){
		this._userList=value;
	});

	/**红包生成时间 */
	/**红包生成时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return SingleRedEnvelopes;
})(Bean)


//class net.handler.legion.ResLegionExchangeItemMessageHandler extends net.MNetHandler
var ResLegionExchangeItemMessageHandler=(function(_super){
	function ResLegionExchangeItemMessageHandler(){
		ResLegionExchangeItemMessageHandler.__super.call(this);;
	}

	__class(ResLegionExchangeItemMessageHandler,'net.handler.legion.ResLegionExchangeItemMessageHandler',_super);
	var __proto=ResLegionExchangeItemMessageHandler.prototype;
	// 请求兑换商品
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionExchangeItemMessageHandler",msg);
	}

	return ResLegionExchangeItemMessageHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateRecordsHandler extends net.MNetHandler
var ResLegionBattleUpdateRecordsHandler=(function(_super){
	function ResLegionBattleUpdateRecordsHandler(){
		ResLegionBattleUpdateRecordsHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateRecordsHandler,'net.handler.gb.ResLegionBattleUpdateRecordsHandler',_super);
	var __proto=ResLegionBattleUpdateRecordsHandler.prototype;
	// 更新拉取战斗日志
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateRecordsHandler" ,msg);
	}

	return ResLegionBattleUpdateRecordsHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*竞技场玩家
*/
//class net.message.arena.ArenaTargetBean extends engine.base.data.Bean
var ArenaTargetBean=(function(_super){
	function ArenaTargetBean(){
		/**排名 */
		this._rank=0;
		/**id */
		this._uid=null;
		/**账号名 */
		this._userName=null;
		/**战力 */
		this._fightPower=null;
		/**英雄列表 */
		this._appearanceBean=null;
		/**robotID */
		this._robotID=0;
		/**服务器序号 */
		this._sno=0;
		ArenaTargetBean.__super.call(this);
	}

	__class(ArenaTargetBean,'net.message.arena.ArenaTargetBean',_super);
	var __proto=ArenaTargetBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank);
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._userName);
		this.writeLong(_buf,this._fightPower);
		this.writeBean(_buf,this._appearanceBean);
		this.writeInt(_buf,this._robotID);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rank=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._userName=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
		this._robotID=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	/**排名 */
	/**排名 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**id */
	/**id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**英雄列表 */
	/**英雄列表 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	/**账号名 */
	/**账号名 */
	__getset(0,__proto,'userName',function(){
		return this._userName;
		},function(value){
		this._userName=value;
	});

	/**robotID */
	/**robotID */
	__getset(0,__proto,'robotID',function(){
		return this._robotID;
		},function(value){
		this._robotID=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ArenaTargetBean;
})(Bean)


//class net.handler.fit.ResFitUpgradePositionHandler extends net.MNetHandler
var ResFitUpgradePositionHandler=(function(_super){
	function ResFitUpgradePositionHandler(){
		ResFitUpgradePositionHandler.__super.call(this);;
	}

	__class(ResFitUpgradePositionHandler,'net.handler.fit.ResFitUpgradePositionHandler',_super);
	var __proto=ResFitUpgradePositionHandler.prototype;
	// 升级武器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpgradePositionHandler" ,msg);
	}

	return ResFitUpgradePositionHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossOtherJoinHandler extends net.MNetHandler
var ResWorldBossOtherJoinHandler=(function(_super){
	function ResWorldBossOtherJoinHandler(){
		ResWorldBossOtherJoinHandler.__super.call(this);;
	}

	__class(ResWorldBossOtherJoinHandler,'net.handler.worldboss.ResWorldBossOtherJoinHandler',_super);
	var __proto=ResWorldBossOtherJoinHandler.prototype;
	// 其他人加入军团首领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossOtherJoinHandler",msg);
	}

	return ResWorldBossOtherJoinHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*塔站位
*/
//class net.message.towerFight.TowerPosiTion extends engine.base.data.Bean
var TowerPosiTion=(function(_super){
	function TowerPosiTion(){
		/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
		this._type=0;
		/**当前通关的塔层数 */
		this._lower=0;
		TowerPosiTion.__super.call(this);
		this._fightPositions=[];
	}

	__class(TowerPosiTion,'net.message.towerFight.TowerPosiTion',_super);
	var __proto=TowerPosiTion.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lower);
		this.writeInt(_buf,this._fightPositions.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fightPositions.length;++i_am_tmp_i){
			this._fightPositions[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._lower=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._fightPositions=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fightPositions[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionBean);
		}
	}

	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**当前通关的塔层数 */
	/**当前通关的塔层数 */
	__getset(0,__proto,'lower',function(){
		return this._lower;
		},function(value){
		this._lower=value;
	});

	/**站位信息 */
	/**站位信息 */
	__getset(0,__proto,'fightPositions',function(){
		return this._fightPositions;
		},function(value){
		this._fightPositions=value;
	});

	return TowerPosiTion;
})(Bean)


//class net.handler.xuannv.ResReplaceXiLianFaQiErrorHandler extends net.MNetHandler
var ResReplaceXiLianFaQiErrorHandler=(function(_super){
	function ResReplaceXiLianFaQiErrorHandler(){
		ResReplaceXiLianFaQiErrorHandler.__super.call(this);;
	}

	__class(ResReplaceXiLianFaQiErrorHandler,'net.handler.xuannv.ResReplaceXiLianFaQiErrorHandler',_super);
	var __proto=ResReplaceXiLianFaQiErrorHandler.prototype;
	// 更换洗练技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceXiLianFaQiErrorHandler",msg.error);
	}

	return ResReplaceXiLianFaQiErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarStartFightErrorHandler extends net.MNetHandler
var ResKingWarStartFightErrorHandler=(function(_super){
	function ResKingWarStartFightErrorHandler(){
		ResKingWarStartFightErrorHandler.__super.call(this);;
	}

	__class(ResKingWarStartFightErrorHandler,'net.handler.kingwar.ResKingWarStartFightErrorHandler',_super);
	var __proto=ResKingWarStartFightErrorHandler.prototype;
	// 王者争霸请求战斗
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarStartFightErrorHandler",msg);
	}

	return ResKingWarStartFightErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamCreateCDHandler extends net.MNetHandler
var ResTeamCreateCDHandler=(function(_super){
	function ResTeamCreateCDHandler(){
		ResTeamCreateCDHandler.__super.call(this);;
	}

	__class(ResTeamCreateCDHandler,'net.handler.team.ResTeamCreateCDHandler',_super);
	var __proto=ResTeamCreateCDHandler.prototype;
	// 请求创建队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamCreateCDHandler",msg);
	}

	return ResTeamCreateCDHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildInviteReplyErrorHandler extends net.MNetHandler
var ResGuildInviteReplyErrorHandler=(function(_super){
	function ResGuildInviteReplyErrorHandler(){
		ResGuildInviteReplyErrorHandler.__super.call(this);;
	}

	__class(ResGuildInviteReplyErrorHandler,'net.handler.guild.ResGuildInviteReplyErrorHandler',_super);
	var __proto=ResGuildInviteReplyErrorHandler.prototype;
	// 回应邀请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildInviteReplyErrorHandler",msg);
	}

	return ResGuildInviteReplyErrorHandler;
})(MNetHandler)


//class net.handler.shimen.ResTakeShiMenTaskHandler extends net.MNetHandler
var ResTakeShiMenTaskHandler=(function(_super){
	function ResTakeShiMenTaskHandler(){
		ResTakeShiMenTaskHandler.__super.call(this);;
	}

	__class(ResTakeShiMenTaskHandler,'net.handler.shimen.ResTakeShiMenTaskHandler',_super);
	var __proto=ResTakeShiMenTaskHandler.prototype;
	// 领取师门任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeShiMenTaskHandler",msg);
	}

	return ResTakeShiMenTaskHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*套装信息
*/
//class net.message.equip.EquipSuitBean extends engine.base.data.Bean
var EquipSuitBean=(function(_super){
	function EquipSuitBean(){
		/**阶数 */
		this._id=0;
		/**件数 */
		this._count=0;
		EquipSuitBean.__super.call(this);
		this._equips=[];
	}

	__class(EquipSuitBean,'net.message.equip.EquipSuitBean',_super);
	var __proto=EquipSuitBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this.writeInt(_buf,this._equips[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._count=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**件数 */
	/**件数 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	/**阶数 */
	/**阶数 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**件数 */
	/**件数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return EquipSuitBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*Vip对象
*/
//class net.message.vip.VipBean extends engine.base.data.Bean
var VipBean=(function(_super){
	function VipBean(){
		/**等级 */
		this._lv=0;
		/**经验 */
		this._exp=0;
		VipBean.__super.call(this);
		this._rewarded=[];
		this._freeRewarded=[];
	}

	__class(VipBean,'net.message.vip.VipBean',_super);
	var __proto=VipBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._exp);
		this.writeInt(_buf,this._rewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewarded[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._freeRewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._freeRewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._freeRewarded[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewarded[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._freeRewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._freeRewarded[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**经验 */
	/**经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**已经领取的礼包 */
	/**已经领取的礼包 */
	__getset(0,__proto,'rewarded',function(){
		return this._rewarded;
		},function(value){
		this._rewarded=value;
	});

	/**已经领取的礼包 */
	/**已经领取的礼包 */
	__getset(0,__proto,'freeRewarded',function(){
		return this._freeRewarded;
		},function(value){
		this._freeRewarded=value;
	});

	return VipBean;
})(Bean)


//class net.handler.guild.ResGetLeginMemberInfoErrorHandler extends net.MNetHandler
var ResGetLeginMemberInfoErrorHandler=(function(_super){
	function ResGetLeginMemberInfoErrorHandler(){
		ResGetLeginMemberInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetLeginMemberInfoErrorHandler,'net.handler.guild.ResGetLeginMemberInfoErrorHandler',_super);
	var __proto=ResGetLeginMemberInfoErrorHandler.prototype;
	// 帮会成员信息刷新
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetLeginMemberInfoErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildApplyReplyHandler extends net.MNetHandler
var ResGuildApplyReplyHandler=(function(_super){
	function ResGuildApplyReplyHandler(){
		ResGuildApplyReplyHandler.__super.call(this);;
	}

	__class(ResGuildApplyReplyHandler,'net.handler.guild.ResGuildApplyReplyHandler',_super);
	var __proto=ResGuildApplyReplyHandler.prototype;
	// 回应申请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildApplyReplyHandler",msg);
	}

	return ResGuildApplyReplyHandler;
})(MNetHandler)


//class net.handler.misc.ResOnHookRewardInfoHandler extends net.MNetHandler
var ResOnHookRewardInfoHandler=(function(_super){
	function ResOnHookRewardInfoHandler(){
		ResOnHookRewardInfoHandler.__super.call(this);;
	}

	__class(ResOnHookRewardInfoHandler,'net.handler.misc.ResOnHookRewardInfoHandler',_super);
	var __proto=ResOnHookRewardInfoHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OnHookRewardInfoHandler",msg);
	}

	return ResOnHookRewardInfoHandler;
})(MNetHandler)


//class net.handler.pata.ResGetPFITInfoHandler extends net.MNetHandler
var ResGetPFITInfoHandler=(function(_super){
	function ResGetPFITInfoHandler(){
		ResGetPFITInfoHandler.__super.call(this);;
	}

	__class(ResGetPFITInfoHandler,'net.handler.pata.ResGetPFITInfoHandler',_super);
	var __proto=ResGetPFITInfoHandler.prototype;
	// 获取合体爬塔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetPFITInfoHandler",msg);
	}

	return ResGetPFITInfoHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackPlayerErrorHandler extends net.MNetHandler
var ResLegionBattleAttackPlayerErrorHandler=(function(_super){
	function ResLegionBattleAttackPlayerErrorHandler(){
		ResLegionBattleAttackPlayerErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackPlayerErrorHandler,'net.handler.gb.ResLegionBattleAttackPlayerErrorHandler',_super);
	var __proto=ResLegionBattleAttackPlayerErrorHandler.prototype;
	// 请求攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackPlayerErrorHandler" ,msg);
	}

	return ResLegionBattleAttackPlayerErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*键值对象
*/
//class net.message.soulboy.SoulMatch extends engine.base.data.Bean
var SoulMatch=(function(_super){
	function SoulMatch(){
		/**ID */
		this._id=0;
		/**值 */
		this._value=0;
		SoulMatch.__super.call(this);
	}

	__class(SoulMatch,'net.message.soulboy.SoulMatch',_super);
	var __proto=SoulMatch.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._value=this.readInt(_buf);
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**值 */
	/**值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return SoulMatch;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军师出战列表
*/
//class net.message.setting.SettingAdviserBean extends engine.base.data.Bean
var SettingAdviserBean=(function(_super){
	function SettingAdviserBean(){
		SettingAdviserBean.__super.call(this);
		this._fights=[];
	}

	__class(SettingAdviserBean,'net.message.setting.SettingAdviserBean',_super);
	var __proto=SettingAdviserBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fights.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fights.length;++i_am_tmp_i){
			this.writeInt(_buf,this._fights[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._fights=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fights[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**出战列表 */
	/**出战列表 */
	__getset(0,__proto,'fights',function(){
		return this._fights;
		},function(value){
		this._fights=value;
	});

	return SettingAdviserBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*镇守对象
*/
//class net.message.garrison.GarrisonBean extends engine.base.data.Bean
var GarrisonBean=(function(_super){
	function GarrisonBean(){
		/**积分 */
		this._integral=0;
		/**可以挑战次数 */
		this._count=0;
		/**今日已搜索次数 */
		this._daySearchCount=0;
		/**购买次数 */
		this._buyCount=0;
		/**下一次挑战次数恢复的时间戳 */
		this._nextRecoverTime=null;
		/**已经搜索到的目标 */
		this._target=null;
		/**是否已经膜拜 */
		this._isStore=false;
		/**是否可以领奖 个人 */
		this._singleReward=false;
		/**是否可以领奖 帮会 */
		this._legionReward=false;
		GarrisonBean.__super.call(this);
		this._doors=[];
		this._revenges=[];
	}

	__class(GarrisonBean,'net.message.garrison.GarrisonBean',_super);
	var __proto=GarrisonBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._doors.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._doors.length;++i_am_tmp_i){
			this._doors[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._integral);
		this.writeInt(_buf,this._revenges.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._revenges.length;++i_am_tmp_i){
			this._revenges[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._daySearchCount);
		this.writeInt(_buf,this._buyCount);
		this.writeLong(_buf,this._nextRecoverTime);
		this.writeBean(_buf,this._target);
		this.writeBoolean(_buf,this._isStore);
		this.writeBoolean(_buf,this._singleReward);
		this.writeBoolean(_buf,this._legionReward);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._doors=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._doors[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonDoorBean);
		}
		this._integral=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._revenges=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._revenges[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonRevengeBean);
		}
		this._count=this.readInt(_buf);
		this._daySearchCount=this.readInt(_buf);
		this._buyCount=this.readInt(_buf);
		this._nextRecoverTime=this.readLong(_buf);
		this._target=this.readBean(_buf,GarrisonTargetBean);
		this._isStore=this.readBoolean(_buf);
		this._singleReward=this.readBoolean(_buf);
		this._legionReward=this.readBoolean(_buf);
	}

	/**是否已经膜拜 */
	/**是否已经膜拜 */
	__getset(0,__proto,'isStore',function(){
		return this._isStore;
		},function(value){
		this._isStore=value;
	});

	/**门 */
	/**门 */
	__getset(0,__proto,'doors',function(){
		return this._doors;
		},function(value){
		this._doors=value;
	});

	/**下一次挑战次数恢复的时间戳 */
	/**下一次挑战次数恢复的时间戳 */
	__getset(0,__proto,'nextRecoverTime',function(){
		return this._nextRecoverTime;
		},function(value){
		this._nextRecoverTime=value;
	});

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**购买次数 */
	/**购买次数 */
	__getset(0,__proto,'buyCount',function(){
		return this._buyCount;
		},function(value){
		this._buyCount=value;
	});

	/**复仇对象 */
	/**复仇对象 */
	__getset(0,__proto,'revenges',function(){
		return this._revenges;
		},function(value){
		this._revenges=value;
	});

	/**可以挑战次数 */
	/**可以挑战次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**已经搜索到的目标 */
	/**已经搜索到的目标 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**今日已搜索次数 */
	/**今日已搜索次数 */
	__getset(0,__proto,'daySearchCount',function(){
		return this._daySearchCount;
		},function(value){
		this._daySearchCount=value;
	});

	/**是否可以领奖 个人 */
	/**是否可以领奖 个人 */
	__getset(0,__proto,'singleReward',function(){
		return this._singleReward;
		},function(value){
		this._singleReward=value;
	});

	/**是否可以领奖 帮会 */
	/**是否可以领奖 帮会 */
	__getset(0,__proto,'legionReward',function(){
		return this._legionReward;
		},function(value){
		this._legionReward=value;
	});

	return GarrisonBean;
})(Bean)


//class net.handler.activities.ResActTurntableErrorHandler extends net.MNetHandler
var ResActTurntableErrorHandler=(function(_super){
	function ResActTurntableErrorHandler(){
		ResActTurntableErrorHandler.__super.call(this);;
	}

	__class(ResActTurntableErrorHandler,'net.handler.activities.ResActTurntableErrorHandler',_super);
	var __proto=ResActTurntableErrorHandler.prototype;
	// 活动转盘
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResActTurntableErrorHandler ",msg);
	}

	return ResActTurntableErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的帮会对象
*/
//class net.message.gb.LegionBattleDoorRankBean extends engine.base.data.Bean
var LegionBattleDoorRankBean=(function(_super){
	function LegionBattleDoorRankBean(){
		/**帮派名字 */
		this._name=null;
		/**伤害 */
		this._damage=null;
		/**服务器序号 */
		this._sno=0;
		LegionBattleDoorRankBean.__super.call(this);
	}

	__class(LegionBattleDoorRankBean,'net.message.gb.LegionBattleDoorRankBean',_super);
	var __proto=LegionBattleDoorRankBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._damage);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._damage=this.readLong(_buf);
		this._sno=this.readInt(_buf);
	}

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'damage',function(){
		return this._damage;
		},function(value){
		this._damage=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return LegionBattleDoorRankBean;
})(Bean)


//class net.handler.guild.ResGuildChangeFightPowerErrorHandler extends net.MNetHandler
var ResGuildChangeFightPowerErrorHandler=(function(_super){
	function ResGuildChangeFightPowerErrorHandler(){
		ResGuildChangeFightPowerErrorHandler.__super.call(this);;
	}

	__class(ResGuildChangeFightPowerErrorHandler,'net.handler.guild.ResGuildChangeFightPowerErrorHandler',_super);
	var __proto=ResGuildChangeFightPowerErrorHandler.prototype;
	// 帮会修改战力条件
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeFightPowerErrorHandler",msg);
	}

	return ResGuildChangeFightPowerErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyPlayerJoinErrorHandler extends net.MNetHandler
var ResNineHeavyPlayerJoinErrorHandler=(function(_super){
	function ResNineHeavyPlayerJoinErrorHandler(){
		ResNineHeavyPlayerJoinErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyPlayerJoinErrorHandler,'net.handler.nineHeavy.ResNineHeavyPlayerJoinErrorHandler',_super);
	var __proto=ResNineHeavyPlayerJoinErrorHandler.prototype;
	// 请求进入九重天活动
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyPlayerJoinErrorHandler",msg);
	}

	return ResNineHeavyPlayerJoinErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackDoorHandler extends net.MNetHandler
var ResLegionBattleAttackDoorHandler=(function(_super){
	function ResLegionBattleAttackDoorHandler(){
		ResLegionBattleAttackDoorHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackDoorHandler,'net.handler.gb.ResLegionBattleAttackDoorHandler',_super);
	var __proto=ResLegionBattleAttackDoorHandler.prototype;
	// 请求攻击城门
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackDoorHandler" ,msg);
	}

	return ResLegionBattleAttackDoorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildInviteReplyHandler extends net.MNetHandler
var ResGuildInviteReplyHandler=(function(_super){
	function ResGuildInviteReplyHandler(){
		ResGuildInviteReplyHandler.__super.call(this);;
	}

	__class(ResGuildInviteReplyHandler,'net.handler.guild.ResGuildInviteReplyHandler',_super);
	var __proto=ResGuildInviteReplyHandler.prototype;
	// 回应邀请加入军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildInviteReplyHandler",msg);
	}

	return ResGuildInviteReplyHandler;
})(MNetHandler)


//class net.handler.scene.ResSceneUpdatePositionHandler extends net.MNetHandler
var ResSceneUpdatePositionHandler=(function(_super){
	function ResSceneUpdatePositionHandler(){
		ResSceneUpdatePositionHandler.__super.call(this);;
	}

	__class(ResSceneUpdatePositionHandler,'net.handler.scene.ResSceneUpdatePositionHandler',_super);
	var __proto=ResSceneUpdatePositionHandler.prototype;
	// 更新场景对象位置
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneUpdatePositionHandler",msg);
	}

	return ResSceneUpdatePositionHandler;
})(MNetHandler)


//class net.handler.misc.ResCommandHandler extends net.MNetHandler
var ResCommandHandler=(function(_super){
	function ResCommandHandler(){
		ResCommandHandler.__super.call(this);;
	}

	__class(ResCommandHandler,'net.handler.misc.ResCommandHandler',_super);
	var __proto=ResCommandHandler.prototype;
	// 指令
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommandHandler",msg);
	}

	return ResCommandHandler;
})(MNetHandler)


//class net.handler.hero.ResCreateMainHeroHandler extends net.MNetHandler
var ResCreateMainHeroHandler=(function(_super){
	function ResCreateMainHeroHandler(){
		ResCreateMainHeroHandler.__super.call(this);;
	}

	__class(ResCreateMainHeroHandler,'net.handler.hero.ResCreateMainHeroHandler',_super);
	var __proto=ResCreateMainHeroHandler.prototype;
	// 创建主英雄
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CreateMainHeroHandler",msg);
	}

	return ResCreateMainHeroHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildExitErrorHandler extends net.MNetHandler
var ResGuildExitErrorHandler=(function(_super){
	function ResGuildExitErrorHandler(){
		ResGuildExitErrorHandler.__super.call(this);;
	}

	__class(ResGuildExitErrorHandler,'net.handler.guild.ResGuildExitErrorHandler',_super);
	var __proto=ResGuildExitErrorHandler.prototype;
	// 退出军团
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildExitErrorHandler",msg);
	}

	return ResGuildExitErrorHandler;
})(MNetHandler)


//class net.handler.zhuansheng.ResReduceLevelErrorHandler extends net.MNetHandler
var ResReduceLevelErrorHandler=(function(_super){
	function ResReduceLevelErrorHandler(){
		ResReduceLevelErrorHandler.__super.call(this);;
	}

	__class(ResReduceLevelErrorHandler,'net.handler.zhuansheng.ResReduceLevelErrorHandler',_super);
	var __proto=ResReduceLevelErrorHandler.prototype;
	// 降低等级(增加修为)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReduceLevelErrorHandler",msg);
	}

	return ResReduceLevelErrorHandler;
})(MNetHandler)


//class net.handler.user.ResUpdateNameHandler extends net.MNetHandler
var ResUpdateNameHandler=(function(_super){
	function ResUpdateNameHandler(){
		ResUpdateNameHandler.__super.call(this);;
	}

	__class(ResUpdateNameHandler,'net.handler.user.ResUpdateNameHandler',_super);
	var __proto=ResUpdateNameHandler.prototype;
	// 更改名字
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateNameHandler",msg);
	}

	return ResUpdateNameHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateSweepAwayErrorHandler extends net.MNetHandler
var ResTeamDuplicateSweepAwayErrorHandler=(function(_super){
	function ResTeamDuplicateSweepAwayErrorHandler(){
		ResTeamDuplicateSweepAwayErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateSweepAwayErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateSweepAwayErrorHandler',_super);
	var __proto=ResTeamDuplicateSweepAwayErrorHandler.prototype;
	// 请求扫荡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateSweepAwayErrorHandler",msg);
	}

	return ResTeamDuplicateSweepAwayErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级对象
*/
//class net.message.upgrade.UpgradeBean extends engine.base.data.Bean
var UpgradeBean=(function(_super){
	function UpgradeBean(){
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**等级 */
		this._level=0;
		/**经验 */
		this._exp=null;
		/**幻化 */
		this._illusion=0;
		UpgradeBean.__super.call(this);
		this._equips=[];
		this._skills=[];
		this._attributeGoods=[];
	}

	__class(UpgradeBean,'net.message.upgrade.UpgradeBean',_super);
	var __proto=UpgradeBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this._equips[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._illusion);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._attributeGoods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributeGoods.length;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._illusion=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		size52413035=this.readInt(_buf);
		this._attributeGoods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**装备 */
	/**装备 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	/**经验 */
	/**经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**幻化 */
	/**幻化 */
	__getset(0,__proto,'illusion',function(){
		return this._illusion;
		},function(value){
		this._illusion=value;
	});

	/**属性丹 */
	/**属性丹 */
	__getset(0,__proto,'attributeGoods',function(){
		return this._attributeGoods;
		},function(value){
		this._attributeGoods=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return UpgradeBean;
})(Bean)


//class net.handler.packet.ResUpdateItemInPacketHandler extends net.MNetHandler
var ResUpdateItemInPacketHandler=(function(_super){
	function ResUpdateItemInPacketHandler(){
		ResUpdateItemInPacketHandler.__super.call(this);;
	}

	__class(ResUpdateItemInPacketHandler,'net.handler.packet.ResUpdateItemInPacketHandler',_super);
	var __proto=ResUpdateItemInPacketHandler.prototype;
	// 更新包裹中的道具
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateItemInPacketHandler",msg);
	}

	return ResUpdateItemInPacketHandler;
})(MNetHandler)


//class net.handler.fit.ResFitSetParticipantErrorHandler extends net.MNetHandler
var ResFitSetParticipantErrorHandler=(function(_super){
	function ResFitSetParticipantErrorHandler(){
		ResFitSetParticipantErrorHandler.__super.call(this);;
	}

	__class(ResFitSetParticipantErrorHandler,'net.handler.fit.ResFitSetParticipantErrorHandler',_super);
	var __proto=ResFitSetParticipantErrorHandler.prototype;
	// 设置合体参与者
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSetParticipantErrorHandler" ,msg);
	}

	return ResFitSetParticipantErrorHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageUpdateProposeHandler extends net.MNetHandler
var ResMarriageUpdateProposeHandler=(function(_super){
	function ResMarriageUpdateProposeHandler(){
		ResMarriageUpdateProposeHandler.__super.call(this);;
	}

	__class(ResMarriageUpdateProposeHandler,'net.handler.marriage.ResMarriageUpdateProposeHandler',_super);
	var __proto=ResMarriageUpdateProposeHandler.prototype;
	// 更新求婚列表
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageUpdateProposeHandler",msg);
	}

	return ResMarriageUpdateProposeHandler;
})(MNetHandler)


//class net.handler.escort.ResFlushEscortLvErrorHandler extends net.MNetHandler
var ResFlushEscortLvErrorHandler=(function(_super){
	function ResFlushEscortLvErrorHandler(){
		ResFlushEscortLvErrorHandler.__super.call(this);;
	}

	__class(ResFlushEscortLvErrorHandler,'net.handler.escort.ResFlushEscortLvErrorHandler',_super);
	var __proto=ResFlushEscortLvErrorHandler.prototype;
	// 刷新镖车等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FlushEscortLvErrorHandler" ,msg);
	}

	return ResFlushEscortLvErrorHandler;
})(MNetHandler)


//class net.handler.team.ResTeamApplyErrorHandler extends net.MNetHandler
var ResTeamApplyErrorHandler=(function(_super){
	function ResTeamApplyErrorHandler(){
		ResTeamApplyErrorHandler.__super.call(this);;
	}

	__class(ResTeamApplyErrorHandler,'net.handler.team.ResTeamApplyErrorHandler',_super);
	var __proto=ResTeamApplyErrorHandler.prototype;
	// 申请加入队伍
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamApplyErrorHandler",msg);
	}

	return ResTeamApplyErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossAttackPlayerErrorHandler extends net.MNetHandler
var ResWorldBossAttackPlayerErrorHandler=(function(_super){
	function ResWorldBossAttackPlayerErrorHandler(){
		ResWorldBossAttackPlayerErrorHandler.__super.call(this);;
	}

	__class(ResWorldBossAttackPlayerErrorHandler,'net.handler.worldboss.ResWorldBossAttackPlayerErrorHandler',_super);
	var __proto=ResWorldBossAttackPlayerErrorHandler.prototype;
	// 玩家攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossAttackPlayerErrorHandler",msg);
	}

	return ResWorldBossAttackPlayerErrorHandler;
})(MNetHandler)


//class net.handler.lieming.ResGetXiYouMingGeHandler extends net.MNetHandler
var ResGetXiYouMingGeHandler=(function(_super){
	function ResGetXiYouMingGeHandler(){
		ResGetXiYouMingGeHandler.__super.call(this);;
	}

	__class(ResGetXiYouMingGeHandler,'net.handler.lieming.ResGetXiYouMingGeHandler',_super);
	var __proto=ResGetXiYouMingGeHandler.prototype;
	// 获得稀有命格
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetXiYouMingGeHandler",[msg.name,msg.goodId]);
	}

	return ResGetXiYouMingGeHandler;
})(MNetHandler)


//class net.handler.garrison.ResGarrisonBuyTimesHandler extends net.MNetHandler
var ResGarrisonBuyTimesHandler=(function(_super){
	function ResGarrisonBuyTimesHandler(){
		ResGarrisonBuyTimesHandler.__super.call(this);;
	}

	__class(ResGarrisonBuyTimesHandler,'net.handler.garrison.ResGarrisonBuyTimesHandler',_super);
	var __proto=ResGarrisonBuyTimesHandler.prototype;
	// 购买次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GarrisonBuyTimesHandler" ,msg);
	}

	return ResGarrisonBuyTimesHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackMonsterHandler extends net.MNetHandler
var ResLegionBattleAttackMonsterHandler=(function(_super){
	function ResLegionBattleAttackMonsterHandler(){
		ResLegionBattleAttackMonsterHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackMonsterHandler,'net.handler.gb.ResLegionBattleAttackMonsterHandler',_super);
	var __proto=ResLegionBattleAttackMonsterHandler.prototype;
	// 请求怪物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackMonsterHandler" ,msg);
	}

	return ResLegionBattleAttackMonsterHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*格子
*/
//class net.message.miji.MijiGridBean extends engine.base.data.Bean
var MijiGridBean=(function(_super){
	function MijiGridBean(){
		/**格子是否可用 */
		this._useable=false;
		/**格子是否上锁了 */
		this._locked=false;
		/**当前格子镶嵌的道具,如果为null表示未镶嵌 */
		this._goods=null;
		MijiGridBean.__super.call(this);
	}

	__class(MijiGridBean,'net.message.miji.MijiGridBean',_super);
	var __proto=MijiGridBean.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._useable);
		this.writeBoolean(_buf,this._locked);
		this.writeBean(_buf,this._goods);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._useable=this.readBoolean(_buf);
		this._locked=this.readBoolean(_buf);
		this._goods=this.readBean(_buf,GoodsBean);
	}

	/**格子是否可用 */
	/**格子是否可用 */
	__getset(0,__proto,'useable',function(){
		return this._useable;
		},function(value){
		this._useable=value;
	});

	/**格子是否上锁了 */
	/**格子是否上锁了 */
	__getset(0,__proto,'locked',function(){
		return this._locked;
		},function(value){
		this._locked=value;
	});

	/**当前格子镶嵌的道具,如果为null表示未镶嵌 */
	/**当前格子镶嵌的道具,如果为null表示未镶嵌 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	return MijiGridBean;
})(Bean)


//class net.handler.worldboss.ResWorldBossChangeStateHandler extends net.MNetHandler
var ResWorldBossChangeStateHandler=(function(_super){
	function ResWorldBossChangeStateHandler(){
		ResWorldBossChangeStateHandler.__super.call(this);;
	}

	__class(ResWorldBossChangeStateHandler,'net.handler.worldboss.ResWorldBossChangeStateHandler',_super);
	var __proto=ResWorldBossChangeStateHandler.prototype;
	// 通知世界BOSS状态变化
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossChangeStateHandler",msg.state);
	}

	return ResWorldBossChangeStateHandler;
})(MNetHandler)


//class net.handler.dungeon.ResClickQuanMinBossDungeonErrorHandler extends net.MNetHandler
var ResClickQuanMinBossDungeonErrorHandler=(function(_super){
	function ResClickQuanMinBossDungeonErrorHandler(){
		ResClickQuanMinBossDungeonErrorHandler.__super.call(this);;
	}

	__class(ResClickQuanMinBossDungeonErrorHandler,'net.handler.dungeon.ResClickQuanMinBossDungeonErrorHandler',_super);
	var __proto=ResClickQuanMinBossDungeonErrorHandler.prototype;
	// 点击全民BOSS(查看排名/击杀者)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ClickQuanMinBossDungeonErrorHandler",msg.error);
	}

	return ResClickQuanMinBossDungeonErrorHandler;
})(MNetHandler)


//class net.handler.official.ResUpgradeOfficialLvHandler extends net.MNetHandler
var ResUpgradeOfficialLvHandler=(function(_super){
	function ResUpgradeOfficialLvHandler(){
		ResUpgradeOfficialLvHandler.__super.call(this);;
	}

	__class(ResUpgradeOfficialLvHandler,'net.handler.official.ResUpgradeOfficialLvHandler',_super);
	var __proto=ResUpgradeOfficialLvHandler.prototype;
	// 升级官位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeOfficialLvHandler",msg);
	}

	return ResUpgradeOfficialLvHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍简要信息
*/
//class net.message.team.TeamBriefBean extends engine.base.data.Bean
var TeamBriefBean=(function(_super){
	function TeamBriefBean(){
		/**队伍ID */
		this._uid=null;
		/**入队战力要求 */
		this._fightPower=null;
		/**是否申请过 */
		this._applied=false;
		TeamBriefBean.__super.call(this);
		this._members=[];
	}

	__class(TeamBriefBean,'net.message.team.TeamBriefBean',_super);
	var __proto=TeamBriefBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._members.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._members.length;++i_am_tmp_i){
			this._members[i_am_tmp_i].write(_buf);
		}
		this.writeBoolean(_buf,this._applied);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._fightPower=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._members=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._members[i_am_tmp_i]=this.readBeanInList(_buf,TeamMemberBriefBean);
		}
		this._applied=this.readBoolean(_buf);
	}

	/**队伍ID */
	/**队伍ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**是否申请过 */
	/**是否申请过 */
	__getset(0,__proto,'applied',function(){
		return this._applied;
		},function(value){
		this._applied=value;
	});

	/**入队战力要求 */
	/**入队战力要求 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**队员列表 */
	/**队员列表 */
	__getset(0,__proto,'members',function(){
		return this._members;
		},function(value){
		this._members=value;
	});

	return TeamBriefBean;
})(Bean)


//class net.handler.pata.ResGetMarryPataInfoErrorHandler extends net.MNetHandler
var ResGetMarryPataInfoErrorHandler$1=(function(_super){
	function ResGetMarryPataInfoErrorHandler(){
		ResGetMarryPataInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetMarryPataInfoErrorHandler,'net.handler.pata.ResGetMarryPataInfoErrorHandler',_super,'ResGetMarryPataInfoErrorHandler$1');
	var __proto=ResGetMarryPataInfoErrorHandler.prototype;
	// 获取结婚爬塔信息
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGetMarryPataInfoErrorHandler;
})(MNetHandler)


//class net.handler.soulboy.ResSoulBoyXilianErrorHandler extends net.MNetHandler
var ResSoulBoyXilianErrorHandler=(function(_super){
	function ResSoulBoyXilianErrorHandler(){
		ResSoulBoyXilianErrorHandler.__super.call(this);;
	}

	__class(ResSoulBoyXilianErrorHandler,'net.handler.soulboy.ResSoulBoyXilianErrorHandler',_super);
	var __proto=ResSoulBoyXilianErrorHandler.prototype;
	// 灵童被动技能洗练
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SoulBoyXilianErrorHandler",msg);
	}

	return ResSoulBoyXilianErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResZhiJianShareSucErrorHandler extends net.MNetHandler
var ResZhiJianShareSucErrorHandler=(function(_super){
	function ResZhiJianShareSucErrorHandler(){
		ResZhiJianShareSucErrorHandler.__super.call(this);;
	}

	__class(ResZhiJianShareSucErrorHandler,'net.handler.misc.ResZhiJianShareSucErrorHandler',_super);
	var __proto=ResZhiJianShareSucErrorHandler.prototype;
	// 通知服务端指尖玩家成功分享
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResZhiJianShareSucErrorHandler",msg);
	}

	return ResZhiJianShareSucErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResReplaceXiLianPetHandler extends net.MNetHandler
var ResReplaceXiLianPetHandler=(function(_super){
	function ResReplaceXiLianPetHandler(){
		ResReplaceXiLianPetHandler.__super.call(this);;
	}

	__class(ResReplaceXiLianPetHandler,'net.handler.pet.ResReplaceXiLianPetHandler',_super);
	var __proto=ResReplaceXiLianPetHandler.prototype;
	// 更换洗练技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceXiLianPetHandler",msg);
	}

	return ResReplaceXiLianPetHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyIntegralRewardErrorHandler extends net.MNetHandler
var ResNineHeavyIntegralRewardErrorHandler=(function(_super){
	function ResNineHeavyIntegralRewardErrorHandler(){
		ResNineHeavyIntegralRewardErrorHandler.__super.call(this);;
	}

	__class(ResNineHeavyIntegralRewardErrorHandler,'net.handler.nineHeavy.ResNineHeavyIntegralRewardErrorHandler',_super);
	var __proto=ResNineHeavyIntegralRewardErrorHandler.prototype;
	// 玩家领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyIntegralRewardErrorHandler",msg);
	}

	return ResNineHeavyIntegralRewardErrorHandler;
})(MNetHandler)


//class net.handler.task.ResTaskPingDingAnBangPayHandler extends net.MNetHandler
var ResTaskPingDingAnBangPayHandler=(function(_super){
	function ResTaskPingDingAnBangPayHandler(){
		ResTaskPingDingAnBangPayHandler.__super.call(this);;
	}

	__class(ResTaskPingDingAnBangPayHandler,'net.handler.task.ResTaskPingDingAnBangPayHandler',_super);
	var __proto=ResTaskPingDingAnBangPayHandler.prototype;
	// 付费完成平定安邦
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskPingDingAnBangPayHandler",msg);
	}

	return ResTaskPingDingAnBangPayHandler;
})(MNetHandler)


//class net.handler.teamDuplicate.ResTeamDuplicateRoomStartFightErrorHandler extends net.MNetHandler
var ResTeamDuplicateRoomStartFightErrorHandler=(function(_super){
	function ResTeamDuplicateRoomStartFightErrorHandler(){
		ResTeamDuplicateRoomStartFightErrorHandler.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomStartFightErrorHandler,'net.handler.teamDuplicate.ResTeamDuplicateRoomStartFightErrorHandler',_super);
	var __proto=ResTeamDuplicateRoomStartFightErrorHandler.prototype;
	// 开始副本
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamDuplicateRoomStartFightErrorHandler",msg);
	}

	return ResTeamDuplicateRoomStartFightErrorHandler;
})(MNetHandler)


//class net.handler.pet.ResActivePetHandler extends net.MNetHandler
var ResActivePetHandler=(function(_super){
	function ResActivePetHandler(){
		ResActivePetHandler.__super.call(this);;
	}

	__class(ResActivePetHandler,'net.handler.pet.ResActivePetHandler',_super);
	var __proto=ResActivePetHandler.prototype;
	// 激活宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ActivePetHandler",msg.pet);
	}

	return ResActivePetHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*巡城军师
*/
//class net.message.garrison.GarrisonAdviserBean extends engine.base.data.Bean
var GarrisonAdviserBean=(function(_super){
	function GarrisonAdviserBean(){
		/**id */
		this._id=0;
		/**等级 */
		this._lv=0;
		/**资质 */
		this._intelligenceLv=0;
		/**突破 */
		this._surmount=0;
		/**战斗力 */
		this._fightPower=null;
		GarrisonAdviserBean.__super.call(this);
		this._skill=[];
	}

	__class(GarrisonAdviserBean,'net.message.garrison.GarrisonAdviserBean',_super);
	var __proto=GarrisonAdviserBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._intelligenceLv);
		this.writeInt(_buf,this._surmount);
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._intelligenceLv=this.readInt(_buf);
		this._surmount=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._fightPower=this.readLong(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**资质 */
	/**资质 */
	__getset(0,__proto,'intelligenceLv',function(){
		return this._intelligenceLv;
		},function(value){
		this._intelligenceLv=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**突破 */
	/**突破 */
	__getset(0,__proto,'surmount',function(){
		return this._surmount;
		},function(value){
		this._surmount=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return GarrisonAdviserBean;
})(Bean)


//class net.handler.marriage.ResMarriagePataInviteErrorHandler extends net.MNetHandler
var ResMarriagePataInviteErrorHandler=(function(_super){
	function ResMarriagePataInviteErrorHandler(){
		ResMarriagePataInviteErrorHandler.__super.call(this);;
	}

	__class(ResMarriagePataInviteErrorHandler,'net.handler.marriage.ResMarriagePataInviteErrorHandler',_super);
	var __proto=ResMarriagePataInviteErrorHandler.prototype;
	// 爬塔邀请
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePataInviteErrorHandler",msg);
	}

	return ResMarriagePataInviteErrorHandler;
})(MNetHandler)


//class net.handler.zhanwen.ResUpdateZhanwenLengthHandler extends net.MNetHandler
var ResUpdateZhanwenLengthHandler=(function(_super){
	function ResUpdateZhanwenLengthHandler(){
		ResUpdateZhanwenLengthHandler.__super.call(this);;
	}

	__class(ResUpdateZhanwenLengthHandler,'net.handler.zhanwen.ResUpdateZhanwenLengthHandler',_super);
	var __proto=ResUpdateZhanwenLengthHandler.prototype;
	// 更新战纹格子大小
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateZhanwenLengthHandler",msg);
	}

	return ResUpdateZhanwenLengthHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战的boss伤害排名对象
*/
//class net.message.gb.LegionBattleBossRankBean extends engine.base.data.Bean
var LegionBattleBossRankBean=(function(_super){
	function LegionBattleBossRankBean(){
		/**帮派名字 */
		this._name=null;
		/**伤害 */
		this._damage=null;
		/**服务器序号 */
		this._sno=0;
		LegionBattleBossRankBean.__super.call(this);
	}

	__class(LegionBattleBossRankBean,'net.message.gb.LegionBattleBossRankBean',_super);
	var __proto=LegionBattleBossRankBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._damage);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._damage=this.readLong(_buf);
		this._sno=this.readInt(_buf);
	}

	/**帮派名字 */
	/**帮派名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'damage',function(){
		return this._damage;
		},function(value){
		this._damage=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return LegionBattleBossRankBean;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*BUFF触发
*/
//class net.message.fight.FightBuffTriggerBean extends engine.base.data.Bean
var FightBuffTriggerBean=(function(_super){
	function FightBuffTriggerBean(){
		/**序号 */
		this._index=0;
		/**对象唯一id */
		this._uid=0;
		/**BUFF */
		this._buffID=null;
		FightBuffTriggerBean.__super.call(this);
		this._params=[];
		this._clientParams=[];
	}

	__class(FightBuffTriggerBean,'net.message.fight.FightBuffTriggerBean',_super);
	var __proto=FightBuffTriggerBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._uid);
		this.writeLong(_buf,this._buffID);
		this.writeInt(_buf,this._params.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._params.length;++i_am_tmp_i){
			this.writeInt(_buf,this._params[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._clientParams.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._clientParams.length;++i_am_tmp_i){
			this.writeInt(_buf,this._clientParams[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._uid=this.readInt(_buf);
		this._buffID=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._params=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._params[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._clientParams=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._clientParams[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**对象唯一id */
	/**对象唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**BUFF */
	/**BUFF */
	__getset(0,__proto,'buffID',function(){
		return this._buffID;
		},function(value){
		this._buffID=value;
	});

	/**纯前端参数(前端和策划约定)*/
	/**纯前端参数(前端和策划约定)*/
	__getset(0,__proto,'clientParams',function(){
		return this._clientParams;
		},function(value){
		this._clientParams=value;
	});

	return FightBuffTriggerBean;
})(Bean)


//class net.handler.fit.ResFitGemUpgradeHandler extends net.MNetHandler
var ResFitGemUpgradeHandler=(function(_super){
	function ResFitGemUpgradeHandler(){
		ResFitGemUpgradeHandler.__super.call(this);;
	}

	__class(ResFitGemUpgradeHandler,'net.handler.fit.ResFitGemUpgradeHandler',_super);
	var __proto=ResFitGemUpgradeHandler.prototype;
	// 合体宝石升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitGemUpgradeHandler" ,msg);
	}

	return ResFitGemUpgradeHandler;
})(MNetHandler)


//class net.handler.task.ResTaskGuildSquareTakePrizeErrorHandler extends net.MNetHandler
var ResTaskGuildSquareTakePrizeErrorHandler=(function(_super){
	function ResTaskGuildSquareTakePrizeErrorHandler(){
		ResTaskGuildSquareTakePrizeErrorHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquareTakePrizeErrorHandler,'net.handler.task.ResTaskGuildSquareTakePrizeErrorHandler',_super);
	var __proto=ResTaskGuildSquareTakePrizeErrorHandler.prototype;
	// 领取军团广场任务奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquareTakePrizeErrorHandler",msg);
	}

	return ResTaskGuildSquareTakePrizeErrorHandler;
})(MNetHandler)


//class net.handler.advanceReward.ResAdvancedRewardHandler extends net.MNetHandler
var ResAdvancedRewardHandler=(function(_super){
	function ResAdvancedRewardHandler(){
		ResAdvancedRewardHandler.__super.call(this);;
	}

	__class(ResAdvancedRewardHandler,'net.handler.advanceReward.ResAdvancedRewardHandler',_super);
	var __proto=ResAdvancedRewardHandler.prototype;
	// 进阶奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdvancedReward_HANDLER",msg);
	}

	return ResAdvancedRewardHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸自己
*/
//class net.message.kingwar.KingWarSelfBean extends engine.base.data.Bean
var KingWarSelfBean=(function(_super){
	function KingWarSelfBean(){
		/**玩家段位 */
		this._gradation=0;
		/**玩家的星级 */
		this._star=0;
		/**连胜场次 */
		this._continuity=0;
		/**净胜场次 */
		this._pure=0;
		/**剩余的可尝试次数 */
		this._count=0;
		/**下次自动恢复次数时间 */
		this._nextRecoveryTime=null;
		/**已经购买挑战次数 */
		this._buyCount=0;
		/**是否已经领取王者额外奖励 */
		this._wangZheRewarded=false;
		/**已经膜拜 */
		this._worship=false;
		KingWarSelfBean.__super.call(this);
	}

	__class(KingWarSelfBean,'net.message.kingwar.KingWarSelfBean',_super);
	var __proto=KingWarSelfBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gradation);
		this.writeInt(_buf,this._star);
		this.writeInt(_buf,this._continuity);
		this.writeInt(_buf,this._pure);
		this.writeInt(_buf,this._count);
		this.writeLong(_buf,this._nextRecoveryTime);
		this.writeInt(_buf,this._buyCount);
		this.writeBoolean(_buf,this._wangZheRewarded);
		this.writeBoolean(_buf,this._worship);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gradation=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._continuity=this.readInt(_buf);
		this._pure=this.readInt(_buf);
		this._count=this.readInt(_buf);
		this._nextRecoveryTime=this.readLong(_buf);
		this._buyCount=this.readInt(_buf);
		this._wangZheRewarded=this.readBoolean(_buf);
		this._worship=this.readBoolean(_buf);
	}

	/**已经购买挑战次数 */
	/**已经购买挑战次数 */
	__getset(0,__proto,'buyCount',function(){
		return this._buyCount;
		},function(value){
		this._buyCount=value;
	});

	/**玩家段位 */
	/**玩家段位 */
	__getset(0,__proto,'gradation',function(){
		return this._gradation;
		},function(value){
		this._gradation=value;
	});

	/**已经膜拜 */
	/**已经膜拜 */
	__getset(0,__proto,'worship',function(){
		return this._worship;
		},function(value){
		this._worship=value;
	});

	/**是否已经领取王者额外奖励 */
	/**是否已经领取王者额外奖励 */
	__getset(0,__proto,'wangZheRewarded',function(){
		return this._wangZheRewarded;
		},function(value){
		this._wangZheRewarded=value;
	});

	/**玩家的星级 */
	/**玩家的星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**连胜场次 */
	/**连胜场次 */
	__getset(0,__proto,'continuity',function(){
		return this._continuity;
		},function(value){
		this._continuity=value;
	});

	/**净胜场次 */
	/**净胜场次 */
	__getset(0,__proto,'pure',function(){
		return this._pure;
		},function(value){
		this._pure=value;
	});

	/**剩余的可尝试次数 */
	/**剩余的可尝试次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**下次自动恢复次数时间 */
	/**下次自动恢复次数时间 */
	__getset(0,__proto,'nextRecoveryTime',function(){
		return this._nextRecoveryTime;
		},function(value){
		this._nextRecoveryTime=value;
	});

	return KingWarSelfBean;
})(Bean)


//class net.handler.user.ResUpdateFightPowerHandler extends net.MNetHandler
var ResUpdateFightPowerHandler=(function(_super){
	function ResUpdateFightPowerHandler(){
		ResUpdateFightPowerHandler.__super.call(this);;
	}

	__class(ResUpdateFightPowerHandler,'net.handler.user.ResUpdateFightPowerHandler',_super);
	var __proto=ResUpdateFightPowerHandler.prototype;
	// 更新总战斗力
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateFightPowerHandler",msg);
	}

	return ResUpdateFightPowerHandler;
})(MNetHandler)


//class net.handler.racelamp.ResRaceLampHandler extends net.MNetHandler
var ResRaceLampHandler=(function(_super){
	function ResRaceLampHandler(){
		ResRaceLampHandler.__super.call(this);;
	}

	__class(ResRaceLampHandler,'net.handler.racelamp.ResRaceLampHandler',_super);
	var __proto=ResRaceLampHandler.prototype;
	// 走跑马灯
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RaceLampHandler",msg);
	}

	return ResRaceLampHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*押运对象
*/
//class net.message.escort.EscortBean extends engine.base.data.Bean
var EscortBean=(function(_super){
	function EscortBean(){
		/**当前镖车等级 */
		this._lv=0;
		/**押运的结束时间(秒)-1为没开始押运 0为押运已经结束 可以领取奖励 */
		this._endTime=0;
		/**今日可以押运次数 */
		this._escortCount=0;
		/**今日可以劫镖次数 */
		this._robberyCount=0;
		/**当前镖车剩余可被劫次数 */
		this._robbed=0;
		/**最后次刷新了劫镖对象的时间 */
		this._flushTime=null;
		/**首次押镖 */
		this._firstEscort=false;
		EscortBean.__super.call(this);
		this._records=[];
		this._revenges=[];
	}

	__class(EscortBean,'net.message.escort.EscortBean',_super);
	var __proto=EscortBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._endTime);
		this.writeInt(_buf,this._escortCount);
		this.writeInt(_buf,this._robberyCount);
		this.writeInt(_buf,this._robbed);
		this.writeInt(_buf,this._records.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._records.length;++i_am_tmp_i){
			this._records[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._revenges.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._revenges.length;++i_am_tmp_i){
			this._revenges[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._flushTime);
		this.writeBoolean(_buf,this._firstEscort);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._endTime=this.readInt(_buf);
		this._escortCount=this.readInt(_buf);
		this._robberyCount=this.readInt(_buf);
		this._robbed=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._records=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._records[i_am_tmp_i]=this.readBeanInList(_buf,EscortRecordBean);
		}
		size52413035=this.readInt(_buf);
		this._revenges=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._revenges[i_am_tmp_i]=this.readBeanInList(_buf,EscortRecordBean);
		}
		this._flushTime=this.readLong(_buf);
		this._firstEscort=this.readBoolean(_buf);
	}

	/**当前镖车等级 */
	/**当前镖车等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前镖车剩余可被劫次数 */
	/**当前镖车剩余可被劫次数 */
	__getset(0,__proto,'robbed',function(){
		return this._robbed;
		},function(value){
		this._robbed=value;
	});

	/**押运的结束时间(秒)-1为没开始押运 0为押运已经结束 可以领取奖励 */
	/**押运的结束时间(秒)-1为没开始押运 0为押运已经结束 可以领取奖励 */
	__getset(0,__proto,'endTime',function(){
		return this._endTime;
		},function(value){
		this._endTime=value;
	});

	/**今日可以劫镖次数 */
	/**今日可以劫镖次数 */
	__getset(0,__proto,'robberyCount',function(){
		return this._robberyCount;
		},function(value){
		this._robberyCount=value;
	});

	/**最后次刷新了劫镖对象的时间 */
	/**最后次刷新了劫镖对象的时间 */
	__getset(0,__proto,'flushTime',function(){
		return this._flushTime;
		},function(value){
		this._flushTime=value;
	});

	/**今日可以押运次数 */
	/**今日可以押运次数 */
	__getset(0,__proto,'escortCount',function(){
		return this._escortCount;
		},function(value){
		this._escortCount=value;
	});

	/**押镖与劫镖的记录 1 劫镖 2 被劫镖 */
	/**押镖与劫镖的记录 1 劫镖 2 被劫镖 */
	__getset(0,__proto,'records',function(){
		return this._records;
		},function(value){
		this._records=value;
	});

	/**复仇对象列表 */
	/**复仇对象列表 */
	__getset(0,__proto,'revenges',function(){
		return this._revenges;
		},function(value){
		this._revenges=value;
	});

	/**首次押镖 */
	/**首次押镖 */
	__getset(0,__proto,'firstEscort',function(){
		return this._firstEscort;
		},function(value){
		this._firstEscort=value;
	});

	return EscortBean;
})(Bean)


//class net.handler.notice.ResSendNoticeHandler extends net.MNetHandler
var ResSendNoticeHandler=(function(_super){
	function ResSendNoticeHandler(){
		ResSendNoticeHandler.__super.call(this);;
	}

	__class(ResSendNoticeHandler,'net.handler.notice.ResSendNoticeHandler',_super);
	var __proto=ResSendNoticeHandler.prototype;
	// 发送提示
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SendNoticeHandler",msg);
	}

	return ResSendNoticeHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralUpgradeStarHandler extends net.MNetHandler
var ResGeneralUpgradeStarHandler=(function(_super){
	function ResGeneralUpgradeStarHandler(){
		ResGeneralUpgradeStarHandler.__super.call(this);;
	}

	__class(ResGeneralUpgradeStarHandler,'net.handler.general.ResGeneralUpgradeStarHandler',_super);
	var __proto=ResGeneralUpgradeStarHandler.prototype;
	// 升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralUpgradeStarHandler" ,msg);
	}

	return ResGeneralUpgradeStarHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*跨服副本对象
*/
//class net.message.teamDuplicate.TeamDuplicateBean extends engine.base.data.Bean
var TeamDuplicateBean=(function(_super){
	function TeamDuplicateBean(){
		/**组队副本收益次数 */
		this._profit=0;
		/**逐鹿最大关卡ID */
		this._zhulu=0;
		/**逐鹿帮助次数 */
		this._zhuluAssist=0;
		TeamDuplicateBean.__super.call(this);
		this._teamFirstPass=[];
		this._zhuluBox=[];
		this._zhuluDaySweep=[];
	}

	__class(TeamDuplicateBean,'net.message.teamDuplicate.TeamDuplicateBean',_super);
	var __proto=TeamDuplicateBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._profit);
		this.writeInt(_buf,this._teamFirstPass.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._teamFirstPass.length;++i_am_tmp_i){
			this.writeInt(_buf,this._teamFirstPass[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._zhulu);
		this.writeInt(_buf,this._zhuluAssist);
		this.writeInt(_buf,this._zhuluBox.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._zhuluBox.length;++i_am_tmp_i){
			this.writeInt(_buf,this._zhuluBox[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._zhuluDaySweep.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._zhuluDaySweep.length;++i_am_tmp_i){
			this.writeInt(_buf,this._zhuluDaySweep[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._profit=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._teamFirstPass=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._teamFirstPass[i_am_tmp_i]=this.readInt(_buf);
		}
		this._zhulu=this.readInt(_buf);
		this._zhuluAssist=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._zhuluBox=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._zhuluBox[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._zhuluDaySweep=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._zhuluDaySweep[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**逐鹿每日扫荡的关卡 */
	/**逐鹿每日扫荡的关卡 */
	__getset(0,__proto,'zhuluDaySweep',function(){
		return this._zhuluDaySweep;
		},function(value){
		this._zhuluDaySweep=value;
	});

	/**组队副本收益次数 */
	/**组队副本收益次数 */
	__getset(0,__proto,'profit',function(){
		return this._profit;
		},function(value){
		this._profit=value;
	});

	/**组队副本通关记录 */
	/**组队副本通关记录 */
	__getset(0,__proto,'teamFirstPass',function(){
		return this._teamFirstPass;
		},function(value){
		this._teamFirstPass=value;
	});

	/**逐鹿最大关卡ID */
	/**逐鹿最大关卡ID */
	__getset(0,__proto,'zhulu',function(){
		return this._zhulu;
		},function(value){
		this._zhulu=value;
	});

	/**逐鹿帮助次数 */
	/**逐鹿帮助次数 */
	__getset(0,__proto,'zhuluAssist',function(){
		return this._zhuluAssist;
		},function(value){
		this._zhuluAssist=value;
	});

	/**逐鹿开启宝箱记录 */
	/**逐鹿开启宝箱记录 */
	__getset(0,__proto,'zhuluBox',function(){
		return this._zhuluBox;
		},function(value){
		this._zhuluBox=value;
	});

	return TeamDuplicateBean;
})(Bean)


//class net.handler.fit.ResFitSynthesisErrorHandler extends net.MNetHandler
var ResFitSynthesisErrorHandler=(function(_super){
	function ResFitSynthesisErrorHandler(){
		ResFitSynthesisErrorHandler.__super.call(this);;
	}

	__class(ResFitSynthesisErrorHandler,'net.handler.fit.ResFitSynthesisErrorHandler',_super);
	var __proto=ResFitSynthesisErrorHandler.prototype;
	// 合体
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitSynthesisErrorHandler" ,msg);
	}

	return ResFitSynthesisErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarFightGetWorshipRewardHandler extends net.MNetHandler
var ResKingWarFightGetWorshipRewardHandler=(function(_super){
	function ResKingWarFightGetWorshipRewardHandler(){
		ResKingWarFightGetWorshipRewardHandler.__super.call(this);;
	}

	__class(ResKingWarFightGetWorshipRewardHandler,'net.handler.kingwar.ResKingWarFightGetWorshipRewardHandler',_super);
	var __proto=ResKingWarFightGetWorshipRewardHandler.prototype;
	// 王者争霸获取膜拜奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarFightGetWorshipRewardHandler",msg.reward);
	}

	return ResKingWarFightGetWorshipRewardHandler;
})(MNetHandler)


//class net.handler.tuangou.ResTuanGouTakePrizeErrorHandler extends net.MNetHandler
var ResTuanGouTakePrizeErrorHandler=(function(_super){
	function ResTuanGouTakePrizeErrorHandler(){
		ResTuanGouTakePrizeErrorHandler.__super.call(this);;
	}

	__class(ResTuanGouTakePrizeErrorHandler,'net.handler.tuangou.ResTuanGouTakePrizeErrorHandler',_super);
	var __proto=ResTuanGouTakePrizeErrorHandler.prototype;
	// 团购领奖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TuanGouTakePrizeErrorHandler",msg);
	}

	return ResTuanGouTakePrizeErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveGuanQiaChapterPrizeHandler extends net.MNetHandler
var ResReceiveGuanQiaChapterPrizeHandler=(function(_super){
	function ResReceiveGuanQiaChapterPrizeHandler(){
		ResReceiveGuanQiaChapterPrizeHandler.__super.call(this);;
	}

	__class(ResReceiveGuanQiaChapterPrizeHandler,'net.handler.dungeon.ResReceiveGuanQiaChapterPrizeHandler',_super);
	var __proto=ResReceiveGuanQiaChapterPrizeHandler.prototype;
	// 领取关卡章节奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveGuanQiaChapterPrizeHandler",msg);
	}

	return ResReceiveGuanQiaChapterPrizeHandler;
})(MNetHandler)


//class net.handler.redEnvelopes.ResRemoveRedEnvelopesHandler extends net.MNetHandler
var ResRemoveRedEnvelopesHandler=(function(_super){
	function ResRemoveRedEnvelopesHandler(){
		ResRemoveRedEnvelopesHandler.__super.call(this);;
	}

	__class(ResRemoveRedEnvelopesHandler,'net.handler.redEnvelopes.ResRemoveRedEnvelopesHandler',_super);
	var __proto=ResRemoveRedEnvelopesHandler.prototype;
	// 删除红包
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RemoveRedEnvelopesHandler",msg.id);
	}

	return ResRemoveRedEnvelopesHandler;
})(MNetHandler)


//class net.handler.misc.ResOnHookRewardHandler extends net.MNetHandler
var ResOnHookRewardHandler=(function(_super){
	function ResOnHookRewardHandler(){
		ResOnHookRewardHandler.__super.call(this);;
	}

	__class(ResOnHookRewardHandler,'net.handler.misc.ResOnHookRewardHandler',_super);
	var __proto=ResOnHookRewardHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("OnHookRewardHandler",msg);
	}

	return ResOnHookRewardHandler;
})(MNetHandler)


//class net.handler.misc.ResFastOnHookRewardHandler extends net.MNetHandler
var ResFastOnHookRewardHandler=(function(_super){
	function ResFastOnHookRewardHandler(){
		ResFastOnHookRewardHandler.__super.call(this);;
	}

	__class(ResFastOnHookRewardHandler,'net.handler.misc.ResFastOnHookRewardHandler',_super);
	var __proto=ResFastOnHookRewardHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FastOnHookRewardHandler",msg);
	}

	return ResFastOnHookRewardHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将
*/
//class net.message.general.GeneralsBean extends engine.base.data.Bean
var GeneralsBean=(function(_super){
	function GeneralsBean(){
		/**觉悟 */
		this._juewu=0;
		/**元脉 */
		this._yuanmai=0;
		GeneralsBean.__super.call(this);
		this._generaBeans=[];
	}

	__class(GeneralsBean,'net.message.general.GeneralsBean',_super);
	var __proto=GeneralsBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._generaBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._generaBeans.length;++i_am_tmp_i){
			this._generaBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._juewu);
		this.writeInt(_buf,this._yuanmai);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._generaBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._generaBeans[i_am_tmp_i]=this.readBeanInList(_buf,GeneralBean);
		}
		this._juewu=this.readInt(_buf);
		this._yuanmai=this.readInt(_buf);
	}

	/**蛮将 */
	/**蛮将 */
	__getset(0,__proto,'generaBeans',function(){
		return this._generaBeans;
		},function(value){
		this._generaBeans=value;
	});

	/**觉悟 */
	/**觉悟 */
	__getset(0,__proto,'juewu',function(){
		return this._juewu;
		},function(value){
		this._juewu=value;
	});

	/**元脉 */
	/**元脉 */
	__getset(0,__proto,'yuanmai',function(){
		return this._yuanmai;
		},function(value){
		this._yuanmai=value;
	});

	return GeneralsBean;
})(Bean)


//class net.handler.scene.ResSceneInitHandler extends net.MNetHandler
var ResSceneInitHandler=(function(_super){
	function ResSceneInitHandler(){
		ResSceneInitHandler.__super.call(this);;
	}

	__class(ResSceneInitHandler,'net.handler.scene.ResSceneInitHandler',_super);
	var __proto=ResSceneInitHandler.prototype;
	// 初始化场景对象
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SceneInitHandler",msg);
	}

	return ResSceneInitHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResHuntStartHandler extends net.MNetHandler
var ResHuntStartHandler=(function(_super){
	function ResHuntStartHandler(){
		ResHuntStartHandler.__super.call(this);;
	}

	__class(ResHuntStartHandler,'net.handler.textureHunt.ResHuntStartHandler',_super);
	var __proto=ResHuntStartHandler.prototype;
	// 请求寻宝
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntStartHandler",msg);
	}

	return ResHuntStartHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeWakeUpErrorHandler extends net.MNetHandler
var ResAdviserUpgradeWakeUpErrorHandler=(function(_super){
	function ResAdviserUpgradeWakeUpErrorHandler(){
		ResAdviserUpgradeWakeUpErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeWakeUpErrorHandler,'net.handler.adviser.ResAdviserUpgradeWakeUpErrorHandler',_super);
	var __proto=ResAdviserUpgradeWakeUpErrorHandler.prototype;
	// 升级觉醒
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeWakeUpErrorHandler",msg.error);
	}

	return ResAdviserUpgradeWakeUpErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiStartTaskErrorHandler extends net.MNetHandler
var ResChibiStartTaskErrorHandler=(function(_super){
	function ResChibiStartTaskErrorHandler(){
		ResChibiStartTaskErrorHandler.__super.call(this);;
	}

	__class(ResChibiStartTaskErrorHandler,'net.handler.chibi.ResChibiStartTaskErrorHandler',_super);
	var __proto=ResChibiStartTaskErrorHandler.prototype;
	// 开始赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiStartTaskErrorHandler",msg);
	}

	return ResChibiStartTaskErrorHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiNotifyHandler extends net.MNetHandler
var ResQunYingHuiNotifyHandler=(function(_super){
	function ResQunYingHuiNotifyHandler(){
		ResQunYingHuiNotifyHandler.__super.call(this);;
	}

	__class(ResQunYingHuiNotifyHandler,'net.handler.qunyinghui.ResQunYingHuiNotifyHandler',_super);
	var __proto=ResQunYingHuiNotifyHandler.prototype;
	// 同步群英会状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiNotifyHandler",msg);
	}

	return ResQunYingHuiNotifyHandler;
})(MNetHandler)


//class net.handler.pet.ResUpgradePetLevelErrorHandler extends net.MNetHandler
var ResUpgradePetLevelErrorHandler=(function(_super){
	function ResUpgradePetLevelErrorHandler(){
		ResUpgradePetLevelErrorHandler.__super.call(this);;
	}

	__class(ResUpgradePetLevelErrorHandler,'net.handler.pet.ResUpgradePetLevelErrorHandler',_super);
	var __proto=ResUpgradePetLevelErrorHandler.prototype;
	// 宠物升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradePetLevelErrorHandler",msg.error);
	}

	return ResUpgradePetLevelErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*英雄数据
*/
//class net.message.hero.HeroBean extends engine.base.data.Bean
var HeroBean=(function(_super){
	function HeroBean(){
		/**英雄ID */
		this._id=0;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**战力 */
		this._fightPower=null;
		/**战纹 */
		this._zhanwen=null;
		/**神装 */
		this._godClothesBean=null;
		/**经脉等级 */
		this._jingmai=0;
		/**创建时间 */
		this._createTime=0;
		HeroBean.__super.call(this);
		this._attributes=[];
		this._mijiGrids=[];
		this._skills=[];
		this._duanzao=[];
		this._equips=[];
		this._upgradeObjects=[];
		this._wakeUpBeans=[];
		this._attributeGoods=[];
		this._skinList=[];
		this._skinIdList=[];
		this._skinStarBean=[];
	}

	__class(HeroBean,'net.message.hero.HeroBean',_super);
	var __proto=HeroBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._mijiGrids.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._mijiGrids.length;++i_am_tmp_i){
			this._mijiGrids[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._zhanwen);
		this.writeInt(_buf,this._duanzao.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._duanzao.length;++i_am_tmp_i){
			this._duanzao[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this._equips[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._godClothesBean);
		this.writeInt(_buf,this._upgradeObjects.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._upgradeObjects.length;++i_am_tmp_i){
			this._upgradeObjects[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._wakeUpBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._wakeUpBeans.length;++i_am_tmp_i){
			this._wakeUpBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._attributeGoods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributeGoods.length;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._jingmai);
		this.writeInt(_buf,this._skinList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._createTime);
		this.writeInt(_buf,this._skinIdList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinIdList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinIdList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skinStarBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinStarBean.length;++i_am_tmp_i){
			this._skinStarBean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
		this._fightPower=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._mijiGrids=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._mijiGrids[i_am_tmp_i]=this.readBeanInList(_buf,MijiGridBean);
		}
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._zhanwen=this.readBean(_buf,ZhanwenBean);
		size52413035=this.readInt(_buf);
		this._duanzao=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._duanzao[i_am_tmp_i]=this.readBeanInList(_buf,DuanZaoBean);
		}
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._godClothesBean=this.readBean(_buf,GodClothesBean);
		size52413035=this.readInt(_buf);
		this._upgradeObjects=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._upgradeObjects[i_am_tmp_i]=this.readBeanInList(_buf,UpgradeBean);
		}
		size52413035=this.readInt(_buf);
		this._wakeUpBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._wakeUpBeans[i_am_tmp_i]=this.readBeanInList(_buf,WakeUpBean);
		}
		size52413035=this.readInt(_buf);
		this._attributeGoods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributeGoods[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
		this._jingmai=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinList[i_am_tmp_i]=this.readInt(_buf);
		}
		this._createTime=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinIdList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinIdList[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._skinStarBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinStarBean[i_am_tmp_i]=this.readBeanInList(_buf,SkinStarBean);
		}
	}

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**已经激活的时装列表 */
	/**已经激活的时装列表 */
	__getset(0,__proto,'skinList',function(){
		return this._skinList;
		},function(value){
		this._skinList=value;
	});

	/**装备 */
	/**装备 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**属性道具 */
	/**属性道具 */
	__getset(0,__proto,'attributeGoods',function(){
		return this._attributeGoods;
		},function(value){
		this._attributeGoods=value;
	});

	/**秘籍格子列表 */
	/**秘籍格子列表 */
	__getset(0,__proto,'mijiGrids',function(){
		return this._mijiGrids;
		},function(value){
		this._mijiGrids=value;
	});

	/**属性列表 */
	/**属性列表 */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**战纹 */
	/**战纹 */
	__getset(0,__proto,'zhanwen',function(){
		return this._zhanwen;
		},function(value){
		this._zhanwen=value;
	});

	/**锻造信息 */
	/**锻造信息 */
	__getset(0,__proto,'duanzao',function(){
		return this._duanzao;
		},function(value){
		this._duanzao=value;
	});

	/**升级对象 */
	/**升级对象 */
	__getset(0,__proto,'upgradeObjects',function(){
		return this._upgradeObjects;
		},function(value){
		this._upgradeObjects=value;
	});

	/**神装 */
	/**神装 */
	__getset(0,__proto,'godClothesBean',function(){
		return this._godClothesBean;
		},function(value){
		this._godClothesBean=value;
	});

	/**觉醒对象 */
	/**觉醒对象 */
	__getset(0,__proto,'wakeUpBeans',function(){
		return this._wakeUpBeans;
		},function(value){
		this._wakeUpBeans=value;
	});

	/**经脉等级 */
	/**经脉等级 */
	__getset(0,__proto,'jingmai',function(){
		return this._jingmai;
		},function(value){
		this._jingmai=value;
	});

	/**创建时间 */
	/**创建时间 */
	__getset(0,__proto,'createTime',function(){
		return this._createTime;
		},function(value){
		this._createTime=value;
	});

	/**各部位时装id列表[1衣服 2武器 3坐骑 4精灵，5称号，6翅膀，7光环，8守护,9机关符文] */
	/**各部位时装id列表[1衣服 2武器 3坐骑 4精灵，5称号，6翅膀，7光环，8守护,9机关符文] */
	__getset(0,__proto,'skinIdList',function(){
		return this._skinIdList;
		},function(value){
		this._skinIdList=value;
	});

	/**时装升星 */
	/**时装升星 */
	__getset(0,__proto,'skinStarBean',function(){
		return this._skinStarBean;
		},function(value){
		this._skinStarBean=value;
	});

	return HeroBean;
})(Bean)


//class net.handler.auction.ResAuctionContendErrorHandler extends net.MNetHandler
var ResAuctionContendErrorHandler=(function(_super){
	function ResAuctionContendErrorHandler(){
		ResAuctionContendErrorHandler.__super.call(this);;
	}

	__class(ResAuctionContendErrorHandler,'net.handler.auction.ResAuctionContendErrorHandler',_super);
	var __proto=ResAuctionContendErrorHandler.prototype;
	// 参与拍卖
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AuctionContendErrorHandler",msg);
	}

	return ResAuctionContendErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*目标对象
*/
//class net.message.garrison.GarrisonTargetBean extends engine.base.data.Bean
var GarrisonTargetBean=(function(_super){
	function GarrisonTargetBean(){
		/**uid */
		this._uid=null;
		/**类型[1:][2:][3:][4:] */
		this._type=0;
		/**等级 */
		this._lv=0;
		/**名字 */
		this._name=null;
		/**积分 */
		this._integral=0;
		/**战斗力 */
		this._fightPower=null;
		/**所属区段 */
		this._rank=0;
		/**外形 */
		this._appearance=null;
		/**匹配到对象删除时间戳 */
		this._time=null;
		GarrisonTargetBean.__super.call(this);
	}

	__class(GarrisonTargetBean,'net.message.garrison.GarrisonTargetBean',_super);
	var __proto=GarrisonTargetBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lv);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._integral);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._rank);
		this.writeBean(_buf,this._appearance);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._integral=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._rank=this.readInt(_buf);
		this._appearance=this.readBean(_buf,AppearanceBean);
		this._time=this.readLong(_buf);
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**类型[1:][2:][3:][4:] */
	/**类型[1:][2:][3:][4:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'appearance',function(){
		return this._appearance;
		},function(value){
		this._appearance=value;
	});

	/**所属区段 */
	/**所属区段 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**匹配到对象删除时间戳 */
	/**匹配到对象删除时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return GarrisonTargetBean;
})(Bean)


//class net.handler.handbook.ResHandBookFastUpStarHandler extends net.MNetHandler
var ResHandBookFastUpStarHandler=(function(_super){
	function ResHandBookFastUpStarHandler(){
		ResHandBookFastUpStarHandler.__super.call(this);;
	}

	__class(ResHandBookFastUpStarHandler,'net.handler.handbook.ResHandBookFastUpStarHandler',_super);
	var __proto=ResHandBookFastUpStarHandler.prototype;
	// 图鉴一键升星
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookFastUpStarHandler",msg);
	}

	return ResHandBookFastUpStarHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练
*/
//class net.message.xilian.XiLianBean extends engine.base.data.Bean
var XiLianBean=(function(_super){
	function XiLianBean(){
		/**洗练次数 */
		this._xilianTimes=0;
		XiLianBean.__super.call(this);
		this._skills=[];
		this._xilianSkills=[];
	}

	__class(XiLianBean,'net.message.xilian.XiLianBean',_super);
	var __proto=XiLianBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._xilianSkills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._xilianSkills.length;++i_am_tmp_i){
			this._xilianSkills[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._xilianTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		size52413035=this.readInt(_buf);
		this._xilianSkills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._xilianSkills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._xilianTimes=this.readInt(_buf);
	}

	/**技能列表 */
	/**技能列表 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**洗练次数 */
	/**洗练次数 */
	__getset(0,__proto,'xilianTimes',function(){
		return this._xilianTimes;
		},function(value){
		this._xilianTimes=value;
	});

	/**洗练技能列表 */
	/**洗练技能列表 */
	__getset(0,__proto,'xilianSkills',function(){
		return this._xilianSkills;
		},function(value){
		this._xilianSkills=value;
	});

	return XiLianBean;
})(Bean)


//class net.handler.guild.ResGuildMemberRemoveHandler extends net.MNetHandler
var ResGuildMemberRemoveHandler=(function(_super){
	function ResGuildMemberRemoveHandler(){
		ResGuildMemberRemoveHandler.__super.call(this);;
	}

	__class(ResGuildMemberRemoveHandler,'net.handler.guild.ResGuildMemberRemoveHandler',_super);
	var __proto=ResGuildMemberRemoveHandler.prototype;
	// 帮派移除成员
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildMemberRemoveHandler",msg);
	}

	return ResGuildMemberRemoveHandler;
})(MNetHandler)


//class net.handler.xuannv.ResUpdateXuanNvSkillHandler extends net.MNetHandler
var ResUpdateXuanNvSkillHandler=(function(_super){
	function ResUpdateXuanNvSkillHandler(){
		ResUpdateXuanNvSkillHandler.__super.call(this);;
	}

	__class(ResUpdateXuanNvSkillHandler,'net.handler.xuannv.ResUpdateXuanNvSkillHandler',_super);
	var __proto=ResUpdateXuanNvSkillHandler.prototype;
	// 更新机关技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateXuanNvSkillHandler",msg);
	}

	return ResUpdateXuanNvSkillHandler;
})(MNetHandler)


//class net.handler.xuannv.ResXuanNvFeiShengQiangHuaHandler extends net.MNetHandler
var ResXuanNvFeiShengQiangHuaHandler=(function(_super){
	function ResXuanNvFeiShengQiangHuaHandler(){
		ResXuanNvFeiShengQiangHuaHandler.__super.call(this);;
	}

	__class(ResXuanNvFeiShengQiangHuaHandler,'net.handler.xuannv.ResXuanNvFeiShengQiangHuaHandler',_super);
	var __proto=ResXuanNvFeiShengQiangHuaHandler.prototype;
	// 玄女飞升强化
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XuanNvFeiShengQiangHuaHandler",msg);
	}

	return ResXuanNvFeiShengQiangHuaHandler;
})(MNetHandler)


;
//class net.handler.upgrade.ResUpgradeCommonSkillLevelErrorHandler extends net.MNetHandler
var ResUpgradeCommonSkillLevelErrorHandler=(function(_super){
	function ResUpgradeCommonSkillLevelErrorHandler(){
		ResUpgradeCommonSkillLevelErrorHandler.__super.call(this);;
	}

	__class(ResUpgradeCommonSkillLevelErrorHandler,'net.handler.upgrade.ResUpgradeCommonSkillLevelErrorHandler',_super);
	var __proto=ResUpgradeCommonSkillLevelErrorHandler.prototype;
	// 升级通用进阶技能
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUpgradeCommonSkillLevelErrorHandler;
})(MNetHandler)


//class net.handler.login.ResLogin37ErrorHandler extends net.MNetHandler
var ResLogin37ErrorHandler=(function(_super){
	function ResLogin37ErrorHandler(){
		ResLogin37ErrorHandler.__super.call(this);;
	}

	__class(ResLogin37ErrorHandler,'net.handler.login.ResLogin37ErrorHandler',_super);
	var __proto=ResLogin37ErrorHandler.prototype;
	// 登录(37)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("Login37ErrorHandler",msg);
	}

	return ResLogin37ErrorHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipMakingHandler extends net.MNetHandler
var ResEquipMakingHandler=(function(_super){
	function ResEquipMakingHandler(){
		ResEquipMakingHandler.__super.call(this);;
	}

	__class(ResEquipMakingHandler,'net.handler.equip.ResEquipMakingHandler',_super);
	var __proto=ResEquipMakingHandler.prototype;
	// 打造装备
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EquipMakingHandler",msg);
	}

	return ResEquipMakingHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*复仇对象
*/
//class net.message.garrison.GarrisonRevengeBean extends engine.base.data.Bean
var GarrisonRevengeBean=(function(_super){
	function GarrisonRevengeBean(){
		/**目标UID */
		this._uid=null;
		/**名字 */
		this._name=null;
		/**帮会名字 */
		this._lengionName=null;
		/**等级 */
		this._lv=0;
		/**积分 */
		this._integral=0;
		/**时间 */
		this._time=null;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**战斗力 */
		this._fightPower=null;
		/**门类型[1:][2:][3:][4:] */
		this._type=0;
		/**门lv */
		this._doorLv=0;
		GarrisonRevengeBean.__super.call(this);
	}

	__class(GarrisonRevengeBean,'net.message.garrison.GarrisonRevengeBean',_super);
	var __proto=GarrisonRevengeBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeString(_buf,this._name);
		this.writeString(_buf,this._lengionName);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._integral);
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._doorLv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._name=this.readString(_buf);
		this._lengionName=this.readString(_buf);
		this._lv=this.readInt(_buf);
		this._integral=this.readInt(_buf);
		this._time=this.readLong(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._doorLv=this.readInt(_buf);
	}

	/**门类型[1:][2:][3:][4:] */
	/**门类型[1:][2:][3:][4:] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**目标UID */
	/**目标UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**帮会名字 */
	/**帮会名字 */
	__getset(0,__proto,'lengionName',function(){
		return this._lengionName;
		},function(value){
		this._lengionName=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**时间 */
	/**时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**门lv */
	/**门lv */
	__getset(0,__proto,'doorLv',function(){
		return this._doorLv;
		},function(value){
		this._doorLv=value;
	});

	return GarrisonRevengeBean;
})(Bean)


//class net.handler.legion.ResLegionUpdateExchangeMessageHandler extends net.MNetHandler
var ResLegionUpdateExchangeMessageHandler=(function(_super){
	function ResLegionUpdateExchangeMessageHandler(){
		ResLegionUpdateExchangeMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateExchangeMessageHandler,'net.handler.legion.ResLegionUpdateExchangeMessageHandler',_super);
	var __proto=ResLegionUpdateExchangeMessageHandler.prototype;
	// 通知更新兑换购买记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateExchangeMessageHandler",msg);
	}

	return ResLegionUpdateExchangeMessageHandler;
})(MNetHandler)


//class net.handler.vip.ResGetVipRewardErrorHandler extends net.MNetHandler
var ResGetVipRewardErrorHandler=(function(_super){
	function ResGetVipRewardErrorHandler(){
		ResGetVipRewardErrorHandler.__super.call(this);;
	}

	__class(ResGetVipRewardErrorHandler,'net.handler.vip.ResGetVipRewardErrorHandler',_super);
	var __proto=ResGetVipRewardErrorHandler.prototype;
	// 领取VIP礼包
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetVipRewardErrorHandler",msg);
	}

	return ResGetVipRewardErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveQuanMinBossDungeonPrizeHandler extends net.MNetHandler
var ResReceiveQuanMinBossDungeonPrizeHandler=(function(_super){
	function ResReceiveQuanMinBossDungeonPrizeHandler(){
		ResReceiveQuanMinBossDungeonPrizeHandler.__super.call(this);;
	}

	__class(ResReceiveQuanMinBossDungeonPrizeHandler,'net.handler.dungeon.ResReceiveQuanMinBossDungeonPrizeHandler',_super);
	var __proto=ResReceiveQuanMinBossDungeonPrizeHandler.prototype;
	// 领取副本奖励(全民BOSS)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveQuanMinBossDungeonPrizeHandlerr",msg);
	}

	return ResReceiveQuanMinBossDungeonPrizeHandler;
})(MNetHandler)


//class net.handler.gongCe.ResGetJunTuanInfoErrorHandler extends net.MNetHandler
var ResGetJunTuanInfoErrorHandler=(function(_super){
	function ResGetJunTuanInfoErrorHandler(){
		ResGetJunTuanInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetJunTuanInfoErrorHandler,'net.handler.gongCe.ResGetJunTuanInfoErrorHandler',_super);
	var __proto=ResGetJunTuanInfoErrorHandler.prototype;
	// 发送军团战排名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetJunTuanInfoErrorHandler",msg);
	}

	return ResGetJunTuanInfoErrorHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildMemberAddHandler extends net.MNetHandler
var ResGuildMemberAddHandler=(function(_super){
	function ResGuildMemberAddHandler(){
		ResGuildMemberAddHandler.__super.call(this);;
	}

	__class(ResGuildMemberAddHandler,'net.handler.guild.ResGuildMemberAddHandler',_super);
	var __proto=ResGuildMemberAddHandler.prototype;
	// 帮派添加成员
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildMemberAddHandler",msg);
	}

	return ResGuildMemberAddHandler;
})(MNetHandler)


//class net.handler.chat.ResChatHelpErrorHandler extends net.MNetHandler
var ResChatHelpErrorHandler=(function(_super){
	function ResChatHelpErrorHandler(){
		ResChatHelpErrorHandler.__super.call(this);;
	}

	__class(ResChatHelpErrorHandler,'net.handler.chat.ResChatHelpErrorHandler',_super);
	var __proto=ResChatHelpErrorHandler.prototype;
	// 帮助关卡
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatHelpErrorHandler",msg.error);
	}

	return ResChatHelpErrorHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserSurmountHandler extends net.MNetHandler
var ResAdviserSurmountHandler=(function(_super){
	function ResAdviserSurmountHandler(){
		ResAdviserSurmountHandler.__super.call(this);;
	}

	__class(ResAdviserSurmountHandler,'net.handler.adviser.ResAdviserSurmountHandler',_super);
	var __proto=ResAdviserSurmountHandler.prototype;
	// 突破
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserSurmountHandler",msg.adviserBean);
	}

	return ResAdviserSurmountHandler;
})(MNetHandler)


//class net.handler.login.ResVersionCheckErrorHandler extends net.MNetHandler
var ResVersionCheckErrorHandler=(function(_super){
	function ResVersionCheckErrorHandler(){
		ResVersionCheckErrorHandler.__super.call(this);;
	}

	__class(ResVersionCheckErrorHandler,'net.handler.login.ResVersionCheckErrorHandler',_super);
	var __proto=ResVersionCheckErrorHandler.prototype;
	// 版本验证
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("VersionCheckErrorHandler",msg);
	}

	return ResVersionCheckErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossRebornHandler extends net.MNetHandler
var ResWorldBossRebornHandler=(function(_super){
	function ResWorldBossRebornHandler(){
		ResWorldBossRebornHandler.__super.call(this);;
	}

	__class(ResWorldBossRebornHandler,'net.handler.worldboss.ResWorldBossRebornHandler',_super);
	var __proto=ResWorldBossRebornHandler.prototype;
	// 通知BOSS重生
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossRebornHandler",msg);
	}

	return ResWorldBossRebornHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionUpdateMoneyMessageHandler extends net.MNetHandler
var ResLegionUpdateMoneyMessageHandler=(function(_super){
	function ResLegionUpdateMoneyMessageHandler(){
		ResLegionUpdateMoneyMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateMoneyMessageHandler,'net.handler.legion.ResLegionUpdateMoneyMessageHandler',_super);
	var __proto=ResLegionUpdateMoneyMessageHandler.prototype;
	// 帮会资金变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateMoneyMessageHandler",msg);
	}

	return ResLegionUpdateMoneyMessageHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyOtherPlayerJoinHandler extends net.MNetHandler
var ResNineHeavyOtherPlayerJoinHandler=(function(_super){
	function ResNineHeavyOtherPlayerJoinHandler(){
		ResNineHeavyOtherPlayerJoinHandler.__super.call(this);;
	}

	__class(ResNineHeavyOtherPlayerJoinHandler,'net.handler.nineHeavy.ResNineHeavyOtherPlayerJoinHandler',_super);
	var __proto=ResNineHeavyOtherPlayerJoinHandler.prototype;
	// 其他玩家加入九重天
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyOtherPlayerJoinHandler",msg);
	}

	return ResNineHeavyOtherPlayerJoinHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军师天命
*/
//class net.message.adviser.AdviserDestinyBean extends engine.base.data.Bean
var AdviserDestinyBean=(function(_super){
	function AdviserDestinyBean(){
		/**天命等级 */
		this._lv=0;
		/**天命进度 */
		this._progress=0;
		AdviserDestinyBean.__super.call(this);
	}

	__class(AdviserDestinyBean,'net.message.adviser.AdviserDestinyBean',_super);
	var __proto=AdviserDestinyBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	/**天命等级 */
	/**天命等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**天命进度 */
	/**天命进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return AdviserDestinyBean;
})(Bean)


//class net.handler.team.ResTeamMemberPositionUpdateHandler extends net.MNetHandler
var ResTeamMemberPositionUpdateHandler=(function(_super){
	function ResTeamMemberPositionUpdateHandler(){
		ResTeamMemberPositionUpdateHandler.__super.call(this);;
	}

	__class(ResTeamMemberPositionUpdateHandler,'net.handler.team.ResTeamMemberPositionUpdateHandler',_super);
	var __proto=ResTeamMemberPositionUpdateHandler.prototype;
	// 变更队伍成员职位
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamMemberPositionUpdateHandler",msg);
	}

	return ResTeamMemberPositionUpdateHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*BOSS刷新提醒配置
*/
//class net.message.setting.SettingBossRefreshBean extends engine.base.data.Bean
var SettingBossRefreshBean=(function(_super){
	function SettingBossRefreshBean(){
		SettingBossRefreshBean.__super.call(this);
		this._refresh=[];
	}

	__class(SettingBossRefreshBean,'net.message.setting.SettingBossRefreshBean',_super);
	var __proto=SettingBossRefreshBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._refresh.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._refresh.length;++i_am_tmp_i){
			this.writeInt(_buf,this._refresh[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._refresh=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._refresh[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	/**刷新配置 最高位表示是否提示 低31位 表示副本id */
	/**刷新配置 最高位表示是否提示 低31位 表示副本id */
	__getset(0,__proto,'refresh',function(){
		return this._refresh;
		},function(value){
		this._refresh=value;
	});

	return SettingBossRefreshBean;
})(Bean)


//class net.handler.misc.ResFastOnHookRewardErrorHandler extends net.MNetHandler
var ResFastOnHookRewardErrorHandler=(function(_super){
	function ResFastOnHookRewardErrorHandler(){
		ResFastOnHookRewardErrorHandler.__super.call(this);;
	}

	__class(ResFastOnHookRewardErrorHandler,'net.handler.misc.ResFastOnHookRewardErrorHandler',_super);
	var __proto=ResFastOnHookRewardErrorHandler.prototype;
	// 挂机奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FastOnHookRewardErrorHandler",msg);
	}

	return ResFastOnHookRewardErrorHandler;
})(MNetHandler)


//class net.handler.hero.ResCreateViceHeroErrorHandler extends net.MNetHandler
var ResCreateViceHeroErrorHandler=(function(_super){
	function ResCreateViceHeroErrorHandler(){
		ResCreateViceHeroErrorHandler.__super.call(this);;
	}

	__class(ResCreateViceHeroErrorHandler,'net.handler.hero.ResCreateViceHeroErrorHandler',_super);
	var __proto=ResCreateViceHeroErrorHandler.prototype;
	// 创建副英雄
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResCreateViceHeroErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResTeamSkipHandler extends net.MNetHandler
var ResTeamSkipHandler=(function(_super){
	function ResTeamSkipHandler(){
		ResTeamSkipHandler.__super.call(this);;
	}

	__class(ResTeamSkipHandler,'net.handler.legion.ResTeamSkipHandler',_super);
	var __proto=ResTeamSkipHandler.prototype;
	// 请求团队跳过
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TeamSkipHandler");
	}

	return ResTeamSkipHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriagePataInviteHandler extends net.MNetHandler
var ResMarriagePataInviteHandler=(function(_super){
	function ResMarriagePataInviteHandler(){
		ResMarriagePataInviteHandler.__super.call(this);;
	}

	__class(ResMarriagePataInviteHandler,'net.handler.marriage.ResMarriagePataInviteHandler',_super);
	var __proto=ResMarriagePataInviteHandler.prototype;
	// 爬塔邀请
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriagePataInviteHandler",msg.roomId);
	}

	return ResMarriagePataInviteHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserUpgradeHandler extends net.MNetHandler
var ResAdviserUpgradeHandler=(function(_super){
	function ResAdviserUpgradeHandler(){
		ResAdviserUpgradeHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeHandler,'net.handler.adviser.ResAdviserUpgradeHandler',_super);
	var __proto=ResAdviserUpgradeHandler.prototype;
	// 升级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeHandler",msg.adviserBean);
	}

	return ResAdviserUpgradeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵数据
*/
//class net.message.fight.FightPositionAddBean extends engine.base.data.Bean
var FightPositionAddBean=(function(_super){
	function FightPositionAddBean(){
		/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
		this._type=0;
		/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		/**对象 */
		this._object=null;
		/**战斗NPC类型[1:宠物][2:机关][3:英雄][4:宝物] */
		this._fightNpcType=0;
		FightPositionAddBean.__super.call(this);
	}

	__class(FightPositionAddBean,'net.message.fight.FightPositionAddBean',_super);
	var __proto=FightPositionAddBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._position);
		this.writeBean(_buf,this._object);
		this.writeInt(_buf,this._fightNpcType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._position=this.readInt(_buf);
		this._object=this.readBean(_buf,FightObjectInPositionBean);
		this._fightNpcType=this.readInt(_buf);
	}

	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**对象 */
	/**对象 */
	__getset(0,__proto,'object',function(){
		return this._object;
		},function(value){
		this._object=value;
	});

	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**战斗NPC类型[1:宠物][2:机关][3:英雄][4:宝物] */
	/**战斗NPC类型[1:宠物][2:机关][3:英雄][4:宝物] */
	__getset(0,__proto,'fightNpcType',function(){
		return this._fightNpcType;
		},function(value){
		this._fightNpcType=value;
	});

	return FightPositionAddBean;
})(Bean)


//class net.handler.examination.ResKejuNowExaminationErrorHandler extends net.MNetHandler
var ResKejuNowExaminationErrorHandler=(function(_super){
	function ResKejuNowExaminationErrorHandler(){
		ResKejuNowExaminationErrorHandler.__super.call(this);;
	}

	__class(ResKejuNowExaminationErrorHandler,'net.handler.examination.ResKejuNowExaminationErrorHandler',_super);
	var __proto=ResKejuNowExaminationErrorHandler.prototype;
	// 进入科举答题活动(打开面板时发送)
	__proto.action=function(){
		var msg=(this.message);
		console.log("Now.handle.error");
	}

	return ResKejuNowExaminationErrorHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonSynthesisErrorHandler extends net.MNetHandler
var ResCommonSynthesisErrorHandler=(function(_super){
	function ResCommonSynthesisErrorHandler(){
		ResCommonSynthesisErrorHandler.__super.call(this);;
	}

	__class(ResCommonSynthesisErrorHandler,'net.handler.upgrade.ResCommonSynthesisErrorHandler',_super);
	var __proto=ResCommonSynthesisErrorHandler.prototype;
	// 通用合成
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonSynthesisErrorHandler",msg);
	}

	return ResCommonSynthesisErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*位置对象
*/
//class net.message.nineHeavy.Point extends engine.base.data.Bean
var Point=(function(_super){
	function Point(){
		/**X轴位置 这里代表网格位置 */
		this._x=0;
		/**Y轴位置 这里代表网格位置 */
		this._y=0;
		Point.__super.call(this);
	}

	__class(Point,'net.message.nineHeavy.Point',_super);
	var __proto=Point.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._x);
		this.writeInt(_buf,this._y);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._x=this.readInt(_buf);
		this._y=this.readInt(_buf);
	}

	/**X轴位置 这里代表网格位置 */
	/**X轴位置 这里代表网格位置 */
	__getset(0,__proto,'x',function(){
		return this._x;
		},function(value){
		this._x=value;
	});

	/**Y轴位置 这里代表网格位置 */
	/**Y轴位置 这里代表网格位置 */
	__getset(0,__proto,'y',function(){
		return this._y;
		},function(value){
		this._y=value;
	});

	return Point;
})(Bean)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝器
*/
//class net.message.general.TreasureBean extends engine.base.data.Bean
var TreasureBean$1=(function(_super){
	function TreasureBean(){
		/**id */
		this._id=0;
		/**等级 */
		this._lv=0;
		/**进度 */
		this._progress=0;
		TreasureBean.__super.call(this);
	}

	__class(TreasureBean,'net.message.general.TreasureBean',_super,'TreasureBean$1');
	var __proto=TreasureBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return TreasureBean;
})(Bean)


//class net.handler.adviser.ResAdviserUpgradeDestinyErrorHandler extends net.MNetHandler
var ResAdviserUpgradeDestinyErrorHandler=(function(_super){
	function ResAdviserUpgradeDestinyErrorHandler(){
		ResAdviserUpgradeDestinyErrorHandler.__super.call(this);;
	}

	__class(ResAdviserUpgradeDestinyErrorHandler,'net.handler.adviser.ResAdviserUpgradeDestinyErrorHandler',_super);
	var __proto=ResAdviserUpgradeDestinyErrorHandler.prototype;
	// 升级天命
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserUpgradeDestinyErrorHandler",msg.error);
	}

	return ResAdviserUpgradeDestinyErrorHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengReliveErrorHandler extends net.MNetHandler
var ResYuanZhengReliveErrorHandler=(function(_super){
	function ResYuanZhengReliveErrorHandler(){
		ResYuanZhengReliveErrorHandler.__super.call(this);;
	}

	__class(ResYuanZhengReliveErrorHandler,'net.handler.yuanzheng.ResYuanZhengReliveErrorHandler',_super);
	var __proto=ResYuanZhengReliveErrorHandler.prototype;
	// 远征复活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengReliveErrorHandler",msg);
	}

	return ResYuanZhengReliveErrorHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleUpdateThroneHandler extends net.MNetHandler
var ResLegionBattleUpdateThroneHandler=(function(_super){
	function ResLegionBattleUpdateThroneHandler(){
		ResLegionBattleUpdateThroneHandler.__super.call(this);;
	}

	__class(ResLegionBattleUpdateThroneHandler,'net.handler.gb.ResLegionBattleUpdateThroneHandler',_super);
	var __proto=ResLegionBattleUpdateThroneHandler.prototype;
	// 更新占领王座的帮会
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleUpdateThroneHandler" ,msg);
	}

	return ResLegionBattleUpdateThroneHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonWakeUpHandler extends net.MNetHandler
var ResCommonWakeUpHandler=(function(_super){
	function ResCommonWakeUpHandler(){
		ResCommonWakeUpHandler.__super.call(this);;
	}

	__class(ResCommonWakeUpHandler,'net.handler.upgrade.ResCommonWakeUpHandler',_super);
	var __proto=ResCommonWakeUpHandler.prototype;
	// 通用觉醒
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonWakeUpHandler",msg);
	}

	return ResCommonWakeUpHandler;
})(MNetHandler)


//class net.handler.pet.ResXiLianPetHandler extends net.MNetHandler
var ResXiLianPetHandler=(function(_super){
	function ResXiLianPetHandler(){
		ResXiLianPetHandler.__super.call(this);;
	}

	__class(ResXiLianPetHandler,'net.handler.pet.ResXiLianPetHandler',_super);
	var __proto=ResXiLianPetHandler.prototype;
	// 洗练宠物
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XiLianPetHandler",msg);
	}

	return ResXiLianPetHandler;
})(MNetHandler)


//class net.handler.xuannv.ResReplaceXiLianFaQiHandler extends net.MNetHandler
var ResReplaceXiLianFaQiHandler=(function(_super){
	function ResReplaceXiLianFaQiHandler(){
		ResReplaceXiLianFaQiHandler.__super.call(this);;
	}

	__class(ResReplaceXiLianFaQiHandler,'net.handler.xuannv.ResReplaceXiLianFaQiHandler',_super);
	var __proto=ResReplaceXiLianFaQiHandler.prototype;
	// 更换洗练技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReplaceXiLianFaQiHandler",msg);
	}

	return ResReplaceXiLianFaQiHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionUpdateGuardTaskMessageHandler extends net.MNetHandler
var ResLegionUpdateGuardTaskMessageHandler=(function(_super){
	function ResLegionUpdateGuardTaskMessageHandler(){
		ResLegionUpdateGuardTaskMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateGuardTaskMessageHandler,'net.handler.legion.ResLegionUpdateGuardTaskMessageHandler',_super);
	var __proto=ResLegionUpdateGuardTaskMessageHandler.prototype;
	// 通知更新守护任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateGuardTaskMessageHandler",msg);
	}

	return ResLegionUpdateGuardTaskMessageHandler;
})(MNetHandler)


//class net.handler.pata.ResGetXYCMInfoHandler extends net.MNetHandler
var ResGetXYCMInfoHandler=(function(_super){
	function ResGetXYCMInfoHandler(){
		ResGetXYCMInfoHandler.__super.call(this);;
	}

	__class(ResGetXYCMInfoHandler,'net.handler.pata.ResGetXYCMInfoHandler',_super);
	var __proto=ResGetXYCMInfoHandler.prototype;
	// 获取降妖除魔信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetXYCMInfoHandler",msg);
	}

	return ResGetXYCMInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍信息
*/
//class net.message.team.TeamBean extends engine.base.data.Bean
var TeamBean=(function(_super){
	function TeamBean(){
		/**队伍ID */
		this._uid=null;
		/**战力要求 */
		this._fightPower=null;
		TeamBean.__super.call(this);
		this._inviteeList=[];
		this._applicantList=[];
		this._memberList=[];
	}

	__class(TeamBean,'net.message.team.TeamBean',_super);
	var __proto=TeamBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._inviteeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._inviteeList.length;++i_am_tmp_i){
			this._inviteeList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._applicantList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._applicantList.length;++i_am_tmp_i){
			this._applicantList[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._memberList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._memberList.length;++i_am_tmp_i){
			this._memberList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._fightPower=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._inviteeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._inviteeList[i_am_tmp_i]=this.readBeanInList(_buf,TeamMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._applicantList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._applicantList[i_am_tmp_i]=this.readBeanInList(_buf,TeamMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._memberList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._memberList[i_am_tmp_i]=this.readBeanInList(_buf,TeamMemberBean);
		}
	}

	/**申请者列表 */
	/**申请者列表 */
	__getset(0,__proto,'applicantList',function(){
		return this._applicantList;
		},function(value){
		this._applicantList=value;
	});

	/**队伍ID */
	/**队伍ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**战力要求 */
	/**战力要求 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**受邀者列表 */
	/**受邀者列表 */
	__getset(0,__proto,'inviteeList',function(){
		return this._inviteeList;
		},function(value){
		this._inviteeList=value;
	});

	/**成员列表 */
	/**成员列表 */
	__getset(0,__proto,'memberList',function(){
		return this._memberList;
		},function(value){
		this._memberList=value;
	});

	return TeamBean;
})(Bean)


//class net.handler.examination.ResKejuExitHandler extends net.MNetHandler
var ResKejuExitHandler=(function(_super){
	function ResKejuExitHandler(){
		ResKejuExitHandler.__super.call(this);;
	}

	__class(ResKejuExitHandler,'net.handler.examination.ResKejuExitHandler',_super);
	var __proto=ResKejuExitHandler.prototype;
	// 退出答题
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResKejuExitHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleIntegralRewardHandler extends net.MNetHandler
var ResLegionBattleIntegralRewardHandler=(function(_super){
	function ResLegionBattleIntegralRewardHandler(){
		ResLegionBattleIntegralRewardHandler.__super.call(this);;
	}

	__class(ResLegionBattleIntegralRewardHandler,'net.handler.gb.ResLegionBattleIntegralRewardHandler',_super);
	var __proto=ResLegionBattleIntegralRewardHandler.prototype;
	// 请求领取积分奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleIntegralRewardHandler" ,msg);
	}

	return ResLegionBattleIntegralRewardHandler;
})(MNetHandler)


//class net.handler.wartoken.ResUpdateWarTokenHandler extends net.MNetHandler
var ResUpdateWarTokenHandler=(function(_super){
	function ResUpdateWarTokenHandler(){
		ResUpdateWarTokenHandler.__super.call(this);;
	}

	__class(ResUpdateWarTokenHandler,'net.handler.wartoken.ResUpdateWarTokenHandler',_super);
	var __proto=ResUpdateWarTokenHandler.prototype;
	// 更新三国令
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpdateWarTokenHandler",msg);
	}

	return ResUpdateWarTokenHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetInfoHandler extends net.MNetHandler
var ResArenaGetInfoHandler=(function(_super){
	function ResArenaGetInfoHandler(){
		ResArenaGetInfoHandler.__super.call(this);;
	}

	__class(ResArenaGetInfoHandler,'net.handler.arena.ResArenaGetInfoHandler',_super);
	var __proto=ResArenaGetInfoHandler.prototype;
	// 获取竞技场信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetInfoHandler",msg);
	}

	return ResArenaGetInfoHandler;
})(MNetHandler)


//class net.handler.skin.ResWearSkinErrorHandler extends net.MNetHandler
var ResWearSkinErrorHandler=(function(_super){
	function ResWearSkinErrorHandler(){
		ResWearSkinErrorHandler.__super.call(this);;
	}

	__class(ResWearSkinErrorHandler,'net.handler.skin.ResWearSkinErrorHandler',_super);
	var __proto=ResWearSkinErrorHandler.prototype;
	// 激活时装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WearSkinErrorHandler",msg);
	}

	return ResWearSkinErrorHandler;
})(MNetHandler)


//class net.handler.fight.ResFightPositionAddHandler extends net.MNetHandler
var ResFightPositionAddHandler=(function(_super){
	function ResFightPositionAddHandler(){
		ResFightPositionAddHandler.__super.call(this);;
	}

	__class(ResFightPositionAddHandler,'net.handler.fight.ResFightPositionAddHandler',_super);
	var __proto=ResFightPositionAddHandler.prototype;
	// 上阵
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FightPositionAddHandler" ,msg);
	}

	return ResFightPositionAddHandler;
})(MNetHandler)


//class net.handler.upgrade.ResCommonUpgradeErrorHandler extends net.MNetHandler
var ResCommonUpgradeErrorHandler=(function(_super){
	function ResCommonUpgradeErrorHandler(){
		ResCommonUpgradeErrorHandler.__super.call(this);;
	}

	__class(ResCommonUpgradeErrorHandler,'net.handler.upgrade.ResCommonUpgradeErrorHandler',_super);
	var __proto=ResCommonUpgradeErrorHandler.prototype;
	// 通用进阶
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("CommonUpgradeErrorHandler",msg.error);
	}

	return ResCommonUpgradeErrorHandler;
})(MNetHandler)


//class net.handler.worldboss.ResWorldBossJoinHandler extends net.MNetHandler
var ResWorldBossJoinHandler=(function(_super){
	function ResWorldBossJoinHandler(){
		ResWorldBossJoinHandler.__super.call(this);;
	}

	__class(ResWorldBossJoinHandler,'net.handler.worldboss.ResWorldBossJoinHandler',_super);
	var __proto=ResWorldBossJoinHandler.prototype;
	// 请求加入军团首领
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("WorldBossJoinHandler",msg);
	}

	return ResWorldBossJoinHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengGetInfoHandler extends net.MNetHandler
var ResYuanZhengGetInfoHandler=(function(_super){
	function ResYuanZhengGetInfoHandler(){
		ResYuanZhengGetInfoHandler.__super.call(this);;
	}

	__class(ResYuanZhengGetInfoHandler,'net.handler.yuanzheng.ResYuanZhengGetInfoHandler',_super);
	var __proto=ResYuanZhengGetInfoHandler.prototype;
	// 获取远征信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengGetInfoHandler",msg);
	}

	return ResYuanZhengGetInfoHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleAttackThroneErrorHandler extends net.MNetHandler
var ResLegionBattleAttackThroneErrorHandler=(function(_super){
	function ResLegionBattleAttackThroneErrorHandler(){
		ResLegionBattleAttackThroneErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleAttackThroneErrorHandler,'net.handler.gb.ResLegionBattleAttackThroneErrorHandler',_super);
	var __proto=ResLegionBattleAttackThroneErrorHandler.prototype;
	// 请求攻击传国玉玺
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleAttackThroneErrorHandler " ,msg);
	}

	return ResLegionBattleAttackThroneErrorHandler;
})(MNetHandler)


//class net.handler.chibi.ResChibiFinishTaskHandler extends net.MNetHandler
var ResChibiFinishTaskHandler=(function(_super){
	function ResChibiFinishTaskHandler(){
		ResChibiFinishTaskHandler.__super.call(this);;
	}

	__class(ResChibiFinishTaskHandler,'net.handler.chibi.ResChibiFinishTaskHandler',_super);
	var __proto=ResChibiFinishTaskHandler.prototype;
	// 完成赤壁任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChibiFinishTaskHandler",msg);
	}

	return ResChibiFinishTaskHandler;
})(MNetHandler)


//class net.handler.goods.ResUseGoodsHandler extends net.MNetHandler
var ResUseGoodsHandler=(function(_super){
	function ResUseGoodsHandler(){
		ResUseGoodsHandler.__super.call(this);;
	}

	__class(ResUseGoodsHandler,'net.handler.goods.ResUseGoodsHandler',_super);
	var __proto=ResUseGoodsHandler.prototype;
	// 背包使用道具(使用类型道具)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event(" UseGoodsHandler",msg);
	}

	return ResUseGoodsHandler;
})(MNetHandler)


//class net.handler.equip.ResEquipFuLingErrorHandler extends net.MNetHandler
var ResEquipFuLingErrorHandler=(function(_super){
	function ResEquipFuLingErrorHandler(){
		ResEquipFuLingErrorHandler.__super.call(this);;
	}

	__class(ResEquipFuLingErrorHandler,'net.handler.equip.ResEquipFuLingErrorHandler',_super);
	var __proto=ResEquipFuLingErrorHandler.prototype;
	// 装备附灵
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResEquipFuLingErrorHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyGetDataHandler extends net.MNetHandler
var ResEmptyGetDataHandler=(function(_super){
	function ResEmptyGetDataHandler(){
		ResEmptyGetDataHandler.__super.call(this);;
	}

	__class(ResEmptyGetDataHandler,'net.handler.emptycity.ResEmptyGetDataHandler',_super);
	var __proto=ResEmptyGetDataHandler.prototype;
	// 获得空城计状态
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyGetDataHandler",msg);
	}

	return ResEmptyGetDataHandler;
})(MNetHandler)


//class net.handler.dungeon.ResReceiveGuanQiaChapterPrizeErrorHandler extends net.MNetHandler
var ResReceiveGuanQiaChapterPrizeErrorHandler=(function(_super){
	function ResReceiveGuanQiaChapterPrizeErrorHandler(){
		ResReceiveGuanQiaChapterPrizeErrorHandler.__super.call(this);;
	}

	__class(ResReceiveGuanQiaChapterPrizeErrorHandler,'net.handler.dungeon.ResReceiveGuanQiaChapterPrizeErrorHandler',_super);
	var __proto=ResReceiveGuanQiaChapterPrizeErrorHandler.prototype;
	// 领取关卡章节奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ReceiveGuanQiaChapterPrizeErrorHandler",msg.error);
	}

	return ResReceiveGuanQiaChapterPrizeErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChallengeGuanQiaHandler extends net.MNetHandler
var ResChallengeGuanQiaHandler=(function(_super){
	function ResChallengeGuanQiaHandler(){
		ResChallengeGuanQiaHandler.__super.call(this);;
	}

	__class(ResChallengeGuanQiaHandler,'net.handler.dungeon.ResChallengeGuanQiaHandler',_super);
	var __proto=ResChallengeGuanQiaHandler.prototype;
	// 挑战挂机关卡(领奖)
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChallengeGuanQiaHandler",msg);
	}

	return ResChallengeGuanQiaHandler;
})(MNetHandler)


//class net.handler.guild.ResGuildChangeAutoAgreeApplyHandler extends net.MNetHandler
var ResGuildChangeAutoAgreeApplyHandler=(function(_super){
	function ResGuildChangeAutoAgreeApplyHandler(){
		ResGuildChangeAutoAgreeApplyHandler.__super.call(this);;
	}

	__class(ResGuildChangeAutoAgreeApplyHandler,'net.handler.guild.ResGuildChangeAutoAgreeApplyHandler',_super);
	var __proto=ResGuildChangeAutoAgreeApplyHandler.prototype;
	// 修改是否允许自动入帮
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GuildChangeAutoAgreeApplyHandler",msg);
	}

	return ResGuildChangeAutoAgreeApplyHandler;
})(MNetHandler)


//class net.handler.investment.ResGuanQiaInvestmentUpdateMessageHandler extends net.MNetHandler
var ResGuanQiaInvestmentUpdateMessageHandler=(function(_super){
	function ResGuanQiaInvestmentUpdateMessageHandler(){
		ResGuanQiaInvestmentUpdateMessageHandler.__super.call(this);;
	}

	__class(ResGuanQiaInvestmentUpdateMessageHandler,'net.handler.investment.ResGuanQiaInvestmentUpdateMessageHandler',_super);
	var __proto=ResGuanQiaInvestmentUpdateMessageHandler.prototype;
	// 更新关卡投资计划
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResGuanQiaInvestmentUpdateMessageHandler;
})(MNetHandler)


//class net.handler.handbook.ResHandBookActivateHandler extends net.MNetHandler
var ResHandBookActivateHandler=(function(_super){
	function ResHandBookActivateHandler(){
		ResHandBookActivateHandler.__super.call(this);;
	}

	__class(ResHandBookActivateHandler,'net.handler.handbook.ResHandBookActivateHandler',_super);
	var __proto=ResHandBookActivateHandler.prototype;
	// 图鉴激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HandBookActivateHandler",msg.configId);
	}

	return ResHandBookActivateHandler;
})(MNetHandler)


//class net.handler.gb.ResLegionBattleGetLegalKingGuildHandler extends net.MNetHandler
var ResLegionBattleGetLegalKingGuildHandler=(function(_super){
	function ResLegionBattleGetLegalKingGuildHandler(){
		ResLegionBattleGetLegalKingGuildHandler.__super.call(this);;
	}

	__class(ResLegionBattleGetLegalKingGuildHandler,'net.handler.gb.ResLegionBattleGetLegalKingGuildHandler',_super);
	var __proto=ResLegionBattleGetLegalKingGuildHandler.prototype;
	// 获取可夺取玉玺的帮会
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleGetLegalKingGuildHandler" ,msg);
	}

	return ResLegionBattleGetLegalKingGuildHandler;
})(MNetHandler)


//class net.handler.marriage.ResMarriageRenovationHouseErrorHandler extends net.MNetHandler
var ResMarriageRenovationHouseErrorHandler=(function(_super){
	function ResMarriageRenovationHouseErrorHandler(){
		ResMarriageRenovationHouseErrorHandler.__super.call(this);;
	}

	__class(ResMarriageRenovationHouseErrorHandler,'net.handler.marriage.ResMarriageRenovationHouseErrorHandler',_super);
	var __proto=ResMarriageRenovationHouseErrorHandler.prototype;
	// 升阶房子
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("MarriageRenovationHouseErrorHandler",msg);
	}

	return ResMarriageRenovationHouseErrorHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionGuardUpgradeMessageErrorHandler extends net.MNetHandler
var ResLegionGuardUpgradeMessageErrorHandler=(function(_super){
	function ResLegionGuardUpgradeMessageErrorHandler(){
		ResLegionGuardUpgradeMessageErrorHandler.__super.call(this);;
	}

	__class(ResLegionGuardUpgradeMessageErrorHandler,'net.handler.legion.ResLegionGuardUpgradeMessageErrorHandler',_super);
	var __proto=ResLegionGuardUpgradeMessageErrorHandler.prototype;
	// 请求升级守护
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionGuardUpgradeMessageErrorHandler" ,msg);
	}

	return ResLegionGuardUpgradeMessageErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*御魂对象
*/
//class net.message.soulboy.SoulMatchHun extends engine.base.data.Bean
var SoulMatchHun=(function(_super){
	function SoulMatchHun(){
		/**位置 */
		this._index=0;
		/**道具 */
		this._item=0;
		/**等级 */
		this._lv=0;
		SoulMatchHun.__super.call(this);
	}

	__class(SoulMatchHun,'net.message.soulboy.SoulMatchHun',_super);
	var __proto=SoulMatchHun.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._item);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._item=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	/**位置 */
	/**位置 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**道具 */
	/**道具 */
	__getset(0,__proto,'item',function(){
		return this._item;
		},function(value){
		this._item=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return SoulMatchHun;
})(Bean)


//class net.handler.shimen.ResTakeShiMenTaskErrorHandler extends net.MNetHandler
var ResTakeShiMenTaskErrorHandler=(function(_super){
	function ResTakeShiMenTaskErrorHandler(){
		ResTakeShiMenTaskErrorHandler.__super.call(this);;
	}

	__class(ResTakeShiMenTaskErrorHandler,'net.handler.shimen.ResTakeShiMenTaskErrorHandler',_super);
	var __proto=ResTakeShiMenTaskErrorHandler.prototype;
	// 领取师门任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeShiMenTaskErrorHandler",msg.error);
	}

	return ResTakeShiMenTaskErrorHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpgradeWeaponErrorHandler extends net.MNetHandler
var ResFitUpgradeWeaponErrorHandler=(function(_super){
	function ResFitUpgradeWeaponErrorHandler(){
		ResFitUpgradeWeaponErrorHandler.__super.call(this);;
	}

	__class(ResFitUpgradeWeaponErrorHandler,'net.handler.fit.ResFitUpgradeWeaponErrorHandler',_super);
	var __proto=ResFitUpgradeWeaponErrorHandler.prototype;
	// 升级武器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpgradeWeaponErrorHandler" ,msg);
	}

	return ResFitUpgradeWeaponErrorHandler;
})(MNetHandler)


//class net.handler.zhanwen.ResUpgradeZhanwenHandler extends net.MNetHandler
var ResUpgradeZhanwenHandler=(function(_super){
	function ResUpgradeZhanwenHandler(){
		ResUpgradeZhanwenHandler.__super.call(this);;
	}

	__class(ResUpgradeZhanwenHandler,'net.handler.zhanwen.ResUpgradeZhanwenHandler',_super);
	var __proto=ResUpgradeZhanwenHandler.prototype;
	// 升级战纹
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("UpgradeZhanwenHandler",msg);
	}

	return ResUpgradeZhanwenHandler;
})(MNetHandler)


//class net.handler.adviser.ResAdviserActiveHandler extends net.MNetHandler
var ResAdviserActiveHandler=(function(_super){
	function ResAdviserActiveHandler(){
		ResAdviserActiveHandler.__super.call(this);;
	}

	__class(ResAdviserActiveHandler,'net.handler.adviser.ResAdviserActiveHandler',_super);
	var __proto=ResAdviserActiveHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("AdviserActiveHandler",msg.adviserBean);
	}

	return ResAdviserActiveHandler;
})(MNetHandler)


//class net.handler.goods.ResDisposeErrorHandler extends net.MNetHandler
var ResDisposeErrorHandler=(function(_super){
	function ResDisposeErrorHandler(){
		ResDisposeErrorHandler.__super.call(this);;
	}

	__class(ResDisposeErrorHandler,'net.handler.goods.ResDisposeErrorHandler',_super);
	var __proto=ResDisposeErrorHandler.prototype;
	// 分解道具
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("DisposeErrorHandler" ,msg.error);
	}

	return ResDisposeErrorHandler;
})(MNetHandler)


//class net.handler.dungeon.ResChangeBossOwnerHandler extends net.MNetHandler
var ResChangeBossOwnerHandler=(function(_super){
	function ResChangeBossOwnerHandler(){
		ResChangeBossOwnerHandler.__super.call(this);;
	}

	__class(ResChangeBossOwnerHandler,'net.handler.dungeon.ResChangeBossOwnerHandler',_super);
	var __proto=ResChangeBossOwnerHandler.prototype;
	// 改变归属
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChangeBossOwnerHandler",msg.data);
	}

	return ResChangeBossOwnerHandler;
})(MNetHandler)


//class net.handler.pet.ResUpdatePetAttributeHandler extends net.MNetHandler
var ResUpdatePetAttributeHandler=(function(_super){
	function ResUpdatePetAttributeHandler(){
		ResUpdatePetAttributeHandler.__super.call(this);;
	}

	__class(ResUpdatePetAttributeHandler,'net.handler.pet.ResUpdatePetAttributeHandler',_super);
	var __proto=ResUpdatePetAttributeHandler.prototype;
	// 更新宠物属性
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResUpdatePetAttributeHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarStartFightHandler extends net.MNetHandler
var ResKingWarStartFightHandler=(function(_super){
	function ResKingWarStartFightHandler(){
		ResKingWarStartFightHandler.__super.call(this);;
	}

	__class(ResKingWarStartFightHandler,'net.handler.kingwar.ResKingWarStartFightHandler',_super);
	var __proto=ResKingWarStartFightHandler.prototype;
	// 王者争霸请求战斗
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarStartFightHandler",msg);
	}

	return ResKingWarStartFightHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*BUFF添加
*/
//class net.message.fight.FightBuffAddBean extends engine.base.data.Bean
var FightBuffAddBean=(function(_super){
	function FightBuffAddBean(){
		/**序号 */
		this._index=0;
		/**对象唯一id */
		this._uid=0;
		/**BUFF */
		this._buffID=null;
		FightBuffAddBean.__super.call(this);
	}

	__class(FightBuffAddBean,'net.message.fight.FightBuffAddBean',_super);
	var __proto=FightBuffAddBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._uid);
		this.writeLong(_buf,this._buffID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._uid=this.readInt(_buf);
		this._buffID=this.readLong(_buf);
	}

	/**序号 */
	/**序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**对象唯一id */
	/**对象唯一id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**BUFF */
	/**BUFF */
	__getset(0,__proto,'buffID',function(){
		return this._buffID;
		},function(value){
		this._buffID=value;
	});

	return FightBuffAddBean;
})(Bean)


//class net.handler.gb.ResLegionBattleLeaveErrorHandler extends net.MNetHandler
var ResLegionBattleLeaveErrorHandler=(function(_super){
	function ResLegionBattleLeaveErrorHandler(){
		ResLegionBattleLeaveErrorHandler.__super.call(this);;
	}

	__class(ResLegionBattleLeaveErrorHandler,'net.handler.gb.ResLegionBattleLeaveErrorHandler',_super);
	var __proto=ResLegionBattleLeaveErrorHandler.prototype;
	// 请求攻击玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionBattleLeaveErrorHandler" ,msg);
	}

	return ResLegionBattleLeaveErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*寻宝中奖玩家
*/
//class net.message.textureHunt.HuntLuckyPlayer extends engine.base.data.Bean
var HuntLuckyPlayer=(function(_super){
	function HuntLuckyPlayer(){
		/**幸运值 */
		this._luckyNum=0;
		/**玩家名称 */
		this._userName=null;
		/**时间戳 */
		this._time=null;
		HuntLuckyPlayer.__super.call(this);
	}

	__class(HuntLuckyPlayer,'net.message.textureHunt.HuntLuckyPlayer',_super);
	var __proto=HuntLuckyPlayer.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._luckyNum);
		this.writeString(_buf,this._userName);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._luckyNum=this.readInt(_buf);
		this._userName=this.readString(_buf);
		this._time=this.readLong(_buf);
	}

	/**玩家名称 */
	/**玩家名称 */
	__getset(0,__proto,'userName',function(){
		return this._userName;
		},function(value){
		this._userName=value;
	});

	/**幸运值 */
	/**幸运值 */
	__getset(0,__proto,'luckyNum',function(){
		return this._luckyNum;
		},function(value){
		this._luckyNum=value;
	});

	/**时间戳 */
	/**时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return HuntLuckyPlayer;
})(Bean)


//class net.handler.miji.ResExchangeMijiHandler extends net.MNetHandler
var ResExchangeMijiHandler=(function(_super){
	function ResExchangeMijiHandler(){
		ResExchangeMijiHandler.__super.call(this);;
	}

	__class(ResExchangeMijiHandler,'net.handler.miji.ResExchangeMijiHandler',_super);
	var __proto=ResExchangeMijiHandler.prototype;
	// 置换秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResExchangeMijiHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征守关对象
*/
//class net.message.yuanzheng.YuanZhengUserBean extends engine.base.data.Bean
var YuanZhengUserBean=(function(_super){
	function YuanZhengUserBean(){
		/**名字 */
		this._name=null;
		/**战力 */
		this._fightPower=null;
		/**等级 */
		this._level=0;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		/**服务器序号 */
		this._sno=0;
		YuanZhengUserBean.__super.call(this);
		this._list=[];
	}

	__class(YuanZhengUserBean,'net.message.yuanzheng.YuanZhengUserBean',_super);
	var __proto=YuanZhengUserBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._level);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._level=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,YuanzhengMemberBean);
		}
		this._sno=this.readInt(_buf);
	}

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**战斗对象列表 */
	/**战斗对象列表 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return YuanZhengUserBean;
})(Bean)


//class net.handler.pata.ResGetYCTTInfoErrorHandler extends net.MNetHandler
var ResGetYCTTInfoErrorHandler=(function(_super){
	function ResGetYCTTInfoErrorHandler(){
		ResGetYCTTInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetYCTTInfoErrorHandler,'net.handler.pata.ResGetYCTTInfoErrorHandler',_super);
	var __proto=ResGetYCTTInfoErrorHandler.prototype;
	// 获取勇闯天庭信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetYCTTInfoErrorHandler",msg.error);
	}

	return ResGetYCTTInfoErrorHandler;
})(MNetHandler)


//class net.handler.welfare.ResYaoQianErrorHandler extends net.MNetHandler
var ResYaoQianErrorHandler=(function(_super){
	function ResYaoQianErrorHandler(){
		ResYaoQianErrorHandler.__super.call(this);;
	}

	__class(ResYaoQianErrorHandler,'net.handler.welfare.ResYaoQianErrorHandler',_super);
	var __proto=ResYaoQianErrorHandler.prototype;
	// 摇钱树
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YaoQianErrorHandler",msg);
	}

	return ResYaoQianErrorHandler;
})(MNetHandler)


//class net.handler.nineHeavy.ResNineHeavyUpdateIntegralHandler extends net.MNetHandler
var ResNineHeavyUpdateIntegralHandler=(function(_super){
	function ResNineHeavyUpdateIntegralHandler(){
		ResNineHeavyUpdateIntegralHandler.__super.call(this);;
	}

	__class(ResNineHeavyUpdateIntegralHandler,'net.handler.nineHeavy.ResNineHeavyUpdateIntegralHandler',_super);
	var __proto=ResNineHeavyUpdateIntegralHandler.prototype;
	// 积分变更
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("NineHeavyUpdateIntegralHandler",msg);
	}

	return ResNineHeavyUpdateIntegralHandler;
})(MNetHandler)


//class net.handler.chat.ResChatHandler extends net.MNetHandler
var ResChatHandler=(function(_super){
	function ResChatHandler(){
		ResChatHandler.__super.call(this);;
	}

	__class(ResChatHandler,'net.handler.chat.ResChatHandler',_super);
	var __proto=ResChatHandler.prototype;
	// 发送聊天信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ChatHandler",msg);
	}

	return ResChatHandler;
})(MNetHandler)


//class net.handler.emptycity.ResEmptyUpdatePlayerHandler extends net.MNetHandler
var ResEmptyUpdatePlayerHandler=(function(_super){
	function ResEmptyUpdatePlayerHandler(){
		ResEmptyUpdatePlayerHandler.__super.call(this);;
	}

	__class(ResEmptyUpdatePlayerHandler,'net.handler.emptycity.ResEmptyUpdatePlayerHandler',_super);
	var __proto=ResEmptyUpdatePlayerHandler.prototype;
	// 更新空城计玩家
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EmptyUpdatePlayerHandler",msg);
	}

	return ResEmptyUpdatePlayerHandler;
})(MNetHandler)


//class net.handler.escort.ResEscortRevengeRewardErrorHandler extends net.MNetHandler
var ResEscortRevengeRewardErrorHandler=(function(_super){
	function ResEscortRevengeRewardErrorHandler(){
		ResEscortRevengeRewardErrorHandler.__super.call(this);;
	}

	__class(ResEscortRevengeRewardErrorHandler,'net.handler.escort.ResEscortRevengeRewardErrorHandler',_super);
	var __proto=ResEscortRevengeRewardErrorHandler.prototype;
	// 请求复仇的奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("EscortRevengeRewardErrorHandler ",msg);
	}

	return ResEscortRevengeRewardErrorHandler;
})(MNetHandler)


//class net.handler.xuannv.ResXiLianFaQiErrorHandler extends net.MNetHandler
var ResXiLianFaQiErrorHandler=(function(_super){
	function ResXiLianFaQiErrorHandler(){
		ResXiLianFaQiErrorHandler.__super.call(this);;
	}

	__class(ResXiLianFaQiErrorHandler,'net.handler.xuannv.ResXiLianFaQiErrorHandler',_super);
	var __proto=ResXiLianFaQiErrorHandler.prototype;
	// 洗练法器
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("XiLianFaQiErrorHandler",msg.error);
	}

	return ResXiLianFaQiErrorHandler;
})(MNetHandler)


//class net.handler.misc.ResRechargeHandler extends net.MNetHandler
var ResRechargeHandler=(function(_super){
	function ResRechargeHandler(){
		ResRechargeHandler.__super.call(this);;
	}

	__class(ResRechargeHandler,'net.handler.misc.ResRechargeHandler',_super);
	var __proto=ResRechargeHandler.prototype;
	// 充值
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("RechargeHandler",msg);
	}

	return ResRechargeHandler;
})(MNetHandler)


//class net.handler.shimen.ResGetShiMenInfoHandler extends net.MNetHandler
var ResGetShiMenInfoHandler=(function(_super){
	function ResGetShiMenInfoHandler(){
		ResGetShiMenInfoHandler.__super.call(this);;
	}

	__class(ResGetShiMenInfoHandler,'net.handler.shimen.ResGetShiMenInfoHandler',_super);
	var __proto=ResGetShiMenInfoHandler.prototype;
	// 获取师门信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetShiMenInfoHandler",msg);
	}

	return ResGetShiMenInfoHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*世界BOSS宝箱
*/
//class net.message.worldboss.WorldBossRewardBox extends engine.base.data.Bean
var WorldBossRewardBox=(function(_super){
	function WorldBossRewardBox(){
		/**宝箱ID */
		this._id=0;
		/**位置Point */
		this._point=null;
		/**有效时间 */
		this._effectTime=null;
		WorldBossRewardBox.__super.call(this);
	}

	__class(WorldBossRewardBox,'net.message.worldboss.WorldBossRewardBox',_super);
	var __proto=WorldBossRewardBox.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBean(_buf,this._point);
		this.writeLong(_buf,this._effectTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
		this._effectTime=this.readLong(_buf);
	}

	/**宝箱ID */
	/**宝箱ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**位置Point */
	/**位置Point */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	/**有效时间 */
	/**有效时间 */
	__getset(0,__proto,'effectTime',function(){
		return this._effectTime;
		},function(value){
		this._effectTime=value;
	});

	return WorldBossRewardBox;
})(Bean)


//class net.handler.task.ResTaskGuildSquareResetErrorHandler extends net.MNetHandler
var ResTaskGuildSquareResetErrorHandler=(function(_super){
	function ResTaskGuildSquareResetErrorHandler(){
		ResTaskGuildSquareResetErrorHandler.__super.call(this);;
	}

	__class(ResTaskGuildSquareResetErrorHandler,'net.handler.task.ResTaskGuildSquareResetErrorHandler',_super);
	var __proto=ResTaskGuildSquareResetErrorHandler.prototype;
	// 重置军团广场任务
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TaskGuildSquareResetErrorHandler",msg);
	}

	return ResTaskGuildSquareResetErrorHandler;
})(MNetHandler)


//class net.handler.general.ResGeneralActiveErrorHandler extends net.MNetHandler
var ResGeneralActiveErrorHandler=(function(_super){
	function ResGeneralActiveErrorHandler(){
		ResGeneralActiveErrorHandler.__super.call(this);;
	}

	__class(ResGeneralActiveErrorHandler,'net.handler.general.ResGeneralActiveErrorHandler',_super);
	var __proto=ResGeneralActiveErrorHandler.prototype;
	// 激活
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GeneralActiveErrorHandler" ,msg);
	}

	return ResGeneralActiveErrorHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetHuntInfoErrorHandler extends net.MNetHandler
var ResGetHuntInfoErrorHandler=(function(_super){
	function ResGetHuntInfoErrorHandler(){
		ResGetHuntInfoErrorHandler.__super.call(this);;
	}

	__class(ResGetHuntInfoErrorHandler,'net.handler.textureHunt.ResGetHuntInfoErrorHandler',_super);
	var __proto=ResGetHuntInfoErrorHandler.prototype;
	// 获取寻宝信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetHuntInfoErrorHandler",msg);
	}

	return ResGetHuntInfoErrorHandler;
})(MNetHandler)


//class net.handler.mail.ResReadMailErrorHandler extends net.MNetHandler
var ResReadMailErrorHandler=(function(_super){
	function ResReadMailErrorHandler(){
		ResReadMailErrorHandler.__super.call(this);;
	}

	__class(ResReadMailErrorHandler,'net.handler.mail.ResReadMailErrorHandler',_super);
	var __proto=ResReadMailErrorHandler.prototype;
	// 读取邮件
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResReadMailErrorHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*押运记录对象
*/
//class net.message.escort.EscortRecordBean extends engine.base.data.Bean
var EscortRecordBean=(function(_super){
	function EscortRecordBean(){
		/**ID */
		this._uid=null;
		/**类型 1 劫镖 2 被劫镖 */
		this._type=0;
		/**等级 劫镖或者被劫镖的等级 */
		this._lv=0;
		/**对方名字 */
		this._name=null;
		/**对方战斗力 */
		this._fightPower=null;
		/**复仇结果 0 未复仇 1 成功 2 失败 */
		this._revenge=0;
		/**职业 */
		this._profession=0;
		/**性别 */
		this._gender=0;
		/**帮会 */
		this._legion=null;
		/**战斗id */
		this._fightId=null;
		EscortRecordBean.__super.call(this);
		this._reward=[];
	}

	__class(EscortRecordBean,'net.message.escort.EscortRecordBean',_super);
	var __proto=EscortRecordBean.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._revenge);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._gender);
		this.writeString(_buf,this._legion);
		this.writeString(_buf,this._fightId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
		this._name=this.readString(_buf);
		this._fightPower=this.readLong(_buf);
		this._revenge=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._gender=this.readInt(_buf);
		this._legion=this.readString(_buf);
		this._fightId=this.readString(_buf);
	}

	/**复仇结果 0 未复仇 1 成功 2 失败 */
	/**复仇结果 0 未复仇 1 成功 2 失败 */
	__getset(0,__proto,'revenge',function(){
		return this._revenge;
		},function(value){
		this._revenge=value;
	});

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**类型 1 劫镖 2 被劫镖 */
	/**类型 1 劫镖 2 被劫镖 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**职业 */
	/**职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**等级 劫镖或者被劫镖的等级 */
	/**等级 劫镖或者被劫镖的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**对方战斗力 */
	/**对方战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**收获或者损失 */
	/**收获或者损失 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	/**对方名字 */
	/**对方名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**性别 */
	/**性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**帮会 */
	/**帮会 */
	__getset(0,__proto,'legion',function(){
		return this._legion;
		},function(value){
		this._legion=value;
	});

	/**战斗id */
	/**战斗id */
	__getset(0,__proto,'fightId',function(){
		return this._fightId;
		},function(value){
		this._fightId=value;
	});

	return EscortRecordBean;
})(Bean)


//class net.handler.login.ResKickHandler extends net.MNetHandler
var ResKickHandler=(function(_super){
	function ResKickHandler(){
		ResKickHandler.__super.call(this);;
	}

	__class(ResKickHandler,'net.handler.login.ResKickHandler',_super);
	var __proto=ResKickHandler.prototype;
	// 踢人
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KickHandler",msg);
	}

	return ResKickHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战纹数据数据
*/
//class net.message.zhanwen.ZhanwenBean extends engine.base.data.Bean
var ZhanwenBean=(function(_super){
	function ZhanwenBean(){
		/**已开启格子数量 */
		this._length=0;
		ZhanwenBean.__super.call(this);
		this._zhanwen=[];
	}

	__class(ZhanwenBean,'net.message.zhanwen.ZhanwenBean',_super);
	var __proto=ZhanwenBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._zhanwen.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._zhanwen.length;++i_am_tmp_i){
			this._zhanwen[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._length);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._zhanwen=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._zhanwen[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._length=this.readInt(_buf);
	}

	/**战纹,index表示在第几个格子，0开始 */
	/**战纹,index表示在第几个格子，0开始 */
	__getset(0,__proto,'zhanwen',function(){
		return this._zhanwen;
		},function(value){
		this._zhanwen=value;
	});

	/**已开启格子数量 */
	/**已开启格子数量 */
	__getset(0,__proto,'length',function(){
		return this._length;
		},function(value){
		this._length=value;
	});

	return ZhanwenBean;
})(Bean)


//class net.handler.yuanzheng.ResYuanZhengRefreshSkillHandler extends net.MNetHandler
var ResYuanZhengRefreshSkillHandler=(function(_super){
	function ResYuanZhengRefreshSkillHandler(){
		ResYuanZhengRefreshSkillHandler.__super.call(this);;
	}

	__class(ResYuanZhengRefreshSkillHandler,'net.handler.yuanzheng.ResYuanZhengRefreshSkillHandler',_super);
	var __proto=ResYuanZhengRefreshSkillHandler.prototype;
	// 远征刷新技能
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengRefreshSkillHandler",msg);
	}

	return ResYuanZhengRefreshSkillHandler;
})(MNetHandler)


//class net.handler.fit.ResFitUpdateArtHandler extends net.MNetHandler
var ResFitUpdateArtHandler=(function(_super){
	function ResFitUpdateArtHandler(){
		ResFitUpdateArtHandler.__super.call(this);;
	}

	__class(ResFitUpdateArtHandler,'net.handler.fit.ResFitUpdateArtHandler',_super);
	var __proto=ResFitUpdateArtHandler.prototype;
	// 更新战争艺术等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("FitUpdateArtHandler" ,msg);
	}

	return ResFitUpdateArtHandler;
})(MNetHandler)


//class net.handler.miji.ResLockMijiHandler extends net.MNetHandler
var ResLockMijiHandler=(function(_super){
	function ResLockMijiHandler(){
		ResLockMijiHandler.__super.call(this);;
	}

	__class(ResLockMijiHandler,'net.handler.miji.ResLockMijiHandler',_super);
	var __proto=ResLockMijiHandler.prototype;
	// 加锁/解锁秘籍
	__proto.action=function(){
		var msg=(this.message);
	}

	return ResLockMijiHandler;
})(MNetHandler)


//class net.handler.investment.ResInvestmengTaskRewardMessageErrorHandler extends net.MNetHandler
var ResInvestmengTaskRewardMessageErrorHandler=(function(_super){
	function ResInvestmengTaskRewardMessageErrorHandler(){
		ResInvestmengTaskRewardMessageErrorHandler.__super.call(this);;
	}

	__class(ResInvestmengTaskRewardMessageErrorHandler,'net.handler.investment.ResInvestmengTaskRewardMessageErrorHandler',_super);
	var __proto=ResInvestmengTaskRewardMessageErrorHandler.prototype;
	// 请求领取透支计划奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("InvestmengTaskRewardMessageErrorHandler",msg);
	}

	return ResInvestmengTaskRewardMessageErrorHandler;
})(MNetHandler)


//class net.handler.user.ResTakeActiveGameSystemRewardErrorHandler extends net.MNetHandler
var ResTakeActiveGameSystemRewardErrorHandler=(function(_super){
	function ResTakeActiveGameSystemRewardErrorHandler(){
		ResTakeActiveGameSystemRewardErrorHandler.__super.call(this);;
	}

	__class(ResTakeActiveGameSystemRewardErrorHandler,'net.handler.user.ResTakeActiveGameSystemRewardErrorHandler',_super);
	var __proto=ResTakeActiveGameSystemRewardErrorHandler.prototype;
	// 激活系统
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("TakeActiveGameSystemRewardErrorHandler",msg);
	}

	return ResTakeActiveGameSystemRewardErrorHandler;
})(MNetHandler)


//class net.handler.textureHunt.ResGetTimeInfoHandler extends net.MNetHandler
var ResGetTimeInfoHandler=(function(_super){
	function ResGetTimeInfoHandler(){
		ResGetTimeInfoHandler.__super.call(this);;
	}

	__class(ResGetTimeInfoHandler,'net.handler.textureHunt.ResGetTimeInfoHandler',_super);
	var __proto=ResGetTimeInfoHandler.prototype;
	// 获取寻宝时间
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("HuntMsgGetTimeHandler",msg);
	}

	return ResGetTimeInfoHandler;
})(MNetHandler)


//class net.handler.yuanzheng.ResYuanZhengResetHandler extends net.MNetHandler
var ResYuanZhengResetHandler=(function(_super){
	function ResYuanZhengResetHandler(){
		ResYuanZhengResetHandler.__super.call(this);;
	}

	__class(ResYuanZhengResetHandler,'net.handler.yuanzheng.ResYuanZhengResetHandler',_super);
	var __proto=ResYuanZhengResetHandler.prototype;
	// 远征重置
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("YuanZhengResetHandler",msg);
	}

	return ResYuanZhengResetHandler;
})(MNetHandler)


//class net.handler.godClothes.ResSaveLastQuenchingAttrHandler extends net.MNetHandler
var ResSaveLastQuenchingAttrHandler=(function(_super){
	function ResSaveLastQuenchingAttrHandler(){
		ResSaveLastQuenchingAttrHandler.__super.call(this);;
	}

	__class(ResSaveLastQuenchingAttrHandler,'net.handler.godClothes.ResSaveLastQuenchingAttrHandler',_super);
	var __proto=ResSaveLastQuenchingAttrHandler.prototype;
	// 保存上次淬炼属性
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("SaveLastQuenchingAttrHandler" ,msg);
	}

	return ResSaveLastQuenchingAttrHandler;
})(MNetHandler)


//class net.handler.gongCe.ResMeiWuHuntErrorHandler extends net.MNetHandler
var ResMeiWuHuntErrorHandler=(function(_super){
	function ResMeiWuHuntErrorHandler(){
		ResMeiWuHuntErrorHandler.__super.call(this);;
	}

	__class(ResMeiWuHuntErrorHandler,'net.handler.gongCe.ResMeiWuHuntErrorHandler',_super);
	var __proto=ResMeiWuHuntErrorHandler.prototype;
	// 媚坞寻宝
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ResMeiWuHuntError",msg);
	}

	return ResMeiWuHuntErrorHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiSignUpRecordHandler extends net.MNetHandler
var ResQunYingHuiSignUpRecordHandler=(function(_super){
	function ResQunYingHuiSignUpRecordHandler(){
		ResQunYingHuiSignUpRecordHandler.__super.call(this);;
	}

	__class(ResQunYingHuiSignUpRecordHandler,'net.handler.qunyinghui.ResQunYingHuiSignUpRecordHandler',_super);
	var __proto=ResQunYingHuiSignUpRecordHandler.prototype;
	// 群英会报名记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiSignUpRecordHandler",msg);
	}

	return ResQunYingHuiSignUpRecordHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*全民Boss排行榜成员
*/
//class net.message.dungeon.QuanMinRankUserBean extends engine.base.data.Bean
var QuanMinRankUserBean=(function(_super){
	function QuanMinRankUserBean(){
		/**名字 */
		this._name=null;
		/**伤害 */
		this._damage=0;
		/**月卡 */
		this._yueKa=false;
		/**终生卡 */
		this._zhongshengKa=false;
		/**终生卡[1:男性][2:女性] */
		this._gender=0;
		QuanMinRankUserBean.__super.call(this);
	}

	__class(QuanMinRankUserBean,'net.message.dungeon.QuanMinRankUserBean',_super);
	var __proto=QuanMinRankUserBean.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._damage);
		this.writeBoolean(_buf,this._yueKa);
		this.writeBoolean(_buf,this._zhongshengKa);
		this.writeInt(_buf,this._gender);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._damage=this.readInt(_buf);
		this._yueKa=this.readBoolean(_buf);
		this._zhongshengKa=this.readBoolean(_buf);
		this._gender=this.readInt(_buf);
	}

	/**月卡 */
	/**月卡 */
	__getset(0,__proto,'yueKa',function(){
		return this._yueKa;
		},function(value){
		this._yueKa=value;
	});

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**终生卡[1:男性][2:女性] */
	/**终生卡[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**终生卡 */
	/**终生卡 */
	__getset(0,__proto,'zhongshengKa',function(){
		return this._zhongshengKa;
		},function(value){
		this._zhongshengKa=value;
	});

	/**伤害 */
	/**伤害 */
	__getset(0,__proto,'damage',function(){
		return this._damage;
		},function(value){
		this._damage=value;
	});

	return QuanMinRankUserBean;
})(Bean)


//class net.handler.pata.ResGetXXHJInfoHandler extends net.MNetHandler
var ResGetXXHJInfoHandler=(function(_super){
	function ResGetXXHJInfoHandler(){
		ResGetXXHJInfoHandler.__super.call(this);;
	}

	__class(ResGetXXHJInfoHandler,'net.handler.pata.ResGetXXHJInfoHandler',_super);
	var __proto=ResGetXXHJInfoHandler.prototype;
	// 获取星宿幻境信息
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("GetXXHJInfoHandler",msg);
	}

	return ResGetXXHJInfoHandler;
})(MNetHandler)


//class net.handler.pata.ResBuyXXHJChallengeTimeErrorHandler extends net.MNetHandler
var ResBuyXXHJChallengeTimeErrorHandler=(function(_super){
	function ResBuyXXHJChallengeTimeErrorHandler(){
		ResBuyXXHJChallengeTimeErrorHandler.__super.call(this);;
	}

	__class(ResBuyXXHJChallengeTimeErrorHandler,'net.handler.pata.ResBuyXXHJChallengeTimeErrorHandler',_super);
	var __proto=ResBuyXXHJChallengeTimeErrorHandler.prototype;
	// 购买星宿幻境挑战次数
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyXXHJChallengeTimeErrorHandler",msg);
	}

	return ResBuyXXHJChallengeTimeErrorHandler;
})(MNetHandler)


//class net.handler.godClothes.ResPutOnGodClothesHandler extends net.MNetHandler
var ResPutOnGodClothesHandler=(function(_super){
	function ResPutOnGodClothesHandler(){
		ResPutOnGodClothesHandler.__super.call(this);;
	}

	__class(ResPutOnGodClothesHandler,'net.handler.godClothes.ResPutOnGodClothesHandler',_super);
	var __proto=ResPutOnGodClothesHandler.prototype;
	// 穿戴神装
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("PutOnGodClothesHandler" ,msg);
	}

	return ResPutOnGodClothesHandler;
})(MNetHandler)


//class net.handler.legion.ResLegionUpdateShopMessageHandler extends net.MNetHandler
var ResLegionUpdateShopMessageHandler=(function(_super){
	function ResLegionUpdateShopMessageHandler(){
		ResLegionUpdateShopMessageHandler.__super.call(this);;
	}

	__class(ResLegionUpdateShopMessageHandler,'net.handler.legion.ResLegionUpdateShopMessageHandler',_super);
	var __proto=ResLegionUpdateShopMessageHandler.prototype;
	// 通知更新商店购买记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("LegionUpdateShopMessageHandler",msg);
	}

	return ResLegionUpdateShopMessageHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军师
*/
//class net.message.adviser.AdviserBean extends engine.base.data.Bean
var AdviserBean=(function(_super){
	function AdviserBean(){
		/**id */
		this._id=0;
		/**等级 */
		this._lv=0;
		/**进度 */
		this._progress=0;
		/**资质等级 */
		this._intelligenceLv=0;
		/**资质进度 */
		this._intelligenceProgress=0;
		/**突破 */
		this._surmount=0;
		/**天命 */
		this._destiny=null;
		AdviserBean.__super.call(this);
		this._skill=[];
	}

	__class(AdviserBean,'net.message.adviser.AdviserBean',_super);
	var __proto=AdviserBean.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
		this.writeInt(_buf,this._intelligenceLv);
		this.writeInt(_buf,this._intelligenceProgress);
		this.writeInt(_buf,this._surmount);
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._destiny);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
		this._intelligenceLv=this.readInt(_buf);
		this._intelligenceProgress=this.readInt(_buf);
		this._surmount=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._destiny=this.readBean(_buf,AdviserDestinyBean);
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	/**进度 */
	/**进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	/**资质等级 */
	/**资质等级 */
	__getset(0,__proto,'intelligenceLv',function(){
		return this._intelligenceLv;
		},function(value){
		this._intelligenceLv=value;
	});

	/**天命 */
	/**天命 */
	__getset(0,__proto,'destiny',function(){
		return this._destiny;
		},function(value){
		this._destiny=value;
	});

	/**资质进度 */
	/**资质进度 */
	__getset(0,__proto,'intelligenceProgress',function(){
		return this._intelligenceProgress;
		},function(value){
		this._intelligenceProgress=value;
	});

	/**突破 */
	/**突破 */
	__getset(0,__proto,'surmount',function(){
		return this._surmount;
		},function(value){
		this._surmount=value;
	});

	return AdviserBean;
})(Bean)


//class net.handler.wartoken.ResBuyWarTokenLevelErrorHandler extends net.MNetHandler
var ResBuyWarTokenLevelErrorHandler=(function(_super){
	function ResBuyWarTokenLevelErrorHandler(){
		ResBuyWarTokenLevelErrorHandler.__super.call(this);;
	}

	__class(ResBuyWarTokenLevelErrorHandler,'net.handler.wartoken.ResBuyWarTokenLevelErrorHandler',_super);
	var __proto=ResBuyWarTokenLevelErrorHandler.prototype;
	// 购买三国令等级
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("BuyWarTokenLevelErrorHandler",msg);
	}

	return ResBuyWarTokenLevelErrorHandler;
})(MNetHandler)


//class net.handler.arena.ResArenaGetFightRecordHandler extends net.MNetHandler
var ResArenaGetFightRecordHandler=(function(_super){
	function ResArenaGetFightRecordHandler(){
		ResArenaGetFightRecordHandler.__super.call(this);;
	}

	__class(ResArenaGetFightRecordHandler,'net.handler.arena.ResArenaGetFightRecordHandler',_super);
	var __proto=ResArenaGetFightRecordHandler.prototype;
	// 获取竞技场战斗记录
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("ArenaGetFightRecordHandler ",msg);
	}

	return ResArenaGetFightRecordHandler;
})(MNetHandler)


//class net.handler.qunyinghui.ResQunYingHuiSignUpErrorHandler extends net.MNetHandler
var ResQunYingHuiSignUpErrorHandler=(function(_super){
	function ResQunYingHuiSignUpErrorHandler(){
		ResQunYingHuiSignUpErrorHandler.__super.call(this);;
	}

	__class(ResQunYingHuiSignUpErrorHandler,'net.handler.qunyinghui.ResQunYingHuiSignUpErrorHandler',_super);
	var __proto=ResQunYingHuiSignUpErrorHandler.prototype;
	// 群英会报名
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("QunYingHuiSignUpErrorHandler",msg);
	}

	return ResQunYingHuiSignUpErrorHandler;
})(MNetHandler)


//class net.handler.kingwar.ResKingWarGetExtPrizeHandler extends net.MNetHandler
var ResKingWarGetExtPrizeHandler=(function(_super){
	function ResKingWarGetExtPrizeHandler(){
		ResKingWarGetExtPrizeHandler.__super.call(this);;
	}

	__class(ResKingWarGetExtPrizeHandler,'net.handler.kingwar.ResKingWarGetExtPrizeHandler',_super);
	var __proto=ResKingWarGetExtPrizeHandler.prototype;
	// 领取王者额外奖励
	__proto.action=function(){
		var msg=(this.message);
		EventCenter.Event("KingWarGetExtPrizeHandler",msg);
	}

	return ResKingWarGetExtPrizeHandler;
})(MNetHandler)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体装备宝石
*/
//class net.message.fit.ResFitSetEquipGemMessage extends net.Message
var ResFitSetEquipGemMessage=(function(_super){
	function ResFitSetEquipGemMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
		this._equipType=0;
		/**合体装备类型 */
		this._fitGemBean=null;
		ResFitSetEquipGemMessage.__super.call(this);
	}

	__class(ResFitSetEquipGemMessage,'net.message.fit.ResFitSetEquipGemMessage',_super);
	var __proto=ResFitSetEquipGemMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equipType);
		this.writeBean(_buf,this._fitGemBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._equipType=this.readInt(_buf);
		this._fitGemBean=this.readBean(_buf,FitGemBean);
	}

	__proto.getId=function(){
		return 1138;
	}

	/**合体装备类型 */
	/**合体装备类型 */
	__getset(0,__proto,'fitGemBean',function(){
		return this._fitGemBean;
		},function(value){
		this._fitGemBean=value;
	});

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	__getset(0,__proto,'equipType',function(){
		return this._equipType;
		},function(value){
		this._equipType=value;
	});

	return ResFitSetEquipGemMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求兑换商品
*/
//class net.message.legion.ResLegionExchangeItemMessageMessage extends net.Message
var ResLegionExchangeItemMessageMessage=(function(_super){
	function ResLegionExchangeItemMessageMessage(){
		/**id */
		this._id=0;
		ResLegionExchangeItemMessageMessage.__super.call(this);
	}

	__class(ResLegionExchangeItemMessageMessage,'net.message.legion.ResLegionExchangeItemMessageMessage',_super);
	var __proto=ResLegionExchangeItemMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 639;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResLegionExchangeItemMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改师门星级
*/
//class net.message.shimen.ReqChangeShiMenStarMessage extends net.Message
var ReqChangeShiMenStarMessage=(function(_super){
	function ReqChangeShiMenStarMessage(){
		ReqChangeShiMenStarMessage.__super.call(this);;
	}

	__class(ReqChangeShiMenStarMessage,'net.message.shimen.ReqChangeShiMenStarMessage',_super);
	var __proto=ReqChangeShiMenStarMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 136;
	}

	return ReqChangeShiMenStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全民boss挑战次数
*/
//class net.message.dungeon.ReqBuyQuanMinBossTimesMessage extends net.Message
var ReqBuyQuanMinBossTimesMessage=(function(_super){
	function ReqBuyQuanMinBossTimesMessage(){
		ReqBuyQuanMinBossTimesMessage.__super.call(this);;
	}

	__class(ReqBuyQuanMinBossTimesMessage,'net.message.dungeon.ReqBuyQuanMinBossTimesMessage',_super);
	var __proto=ReqBuyQuanMinBossTimesMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 219;
	}

	return ReqBuyQuanMinBossTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活灵童
*/
//class net.message.soulboy.ResSoulBoyActivationMessage extends net.Message
var ResSoulBoyActivationMessage=(function(_super){
	function ResSoulBoyActivationMessage(){
		/**新的灵童 */
		this._bean=null;
		ResSoulBoyActivationMessage.__super.call(this);
	}

	__class(ResSoulBoyActivationMessage,'net.message.soulboy.ResSoulBoyActivationMessage',_super);
	var __proto=ResSoulBoyActivationMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,SoulBoyBean);
	}

	__proto.getId=function(){
		return 442;
	}

	/**新的灵童 */
	/**新的灵童 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResSoulBoyActivationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新合体对象技能
*/
//class net.message.fit.ResFitUnclockMessage extends net.Message
var ResFitUnclockMessage=(function(_super){
	function ResFitUnclockMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体对象 */
		this._bean=null;
		ResFitUnclockMessage.__super.call(this);
	}

	__class(ResFitUnclockMessage,'net.message.fit.ResFitUnclockMessage',_super);
	var __proto=ResFitUnclockMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._bean=this.readBean(_buf,FitBean);
	}

	__proto.getId=function(){
		return 1149;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体对象 */
	/**合体对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResFitUnclockMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级战纹
*/
//class net.message.zhanwen.ReqUpgradeZhanwenMessage extends net.Message
var ReqUpgradeZhanwenMessage=(function(_super){
	function ReqUpgradeZhanwenMessage(){
		/**英雄ID */
		this._heroID=0;
		/**战纹格子位置 */
		this._grid=0;
		ReqUpgradeZhanwenMessage.__super.call(this);
	}

	__class(ReqUpgradeZhanwenMessage,'net.message.zhanwen.ReqUpgradeZhanwenMessage',_super);
	var __proto=ReqUpgradeZhanwenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._grid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 101;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**战纹格子位置 */
	/**战纹格子位置 */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ReqUpgradeZhanwenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*其他玩家加入九重天
*/
//class net.message.nineHeavy.ResNineHeavyOtherPlayerJoinMessage extends net.Message
var ResNineHeavyOtherPlayerJoinMessage=(function(_super){
	function ResNineHeavyOtherPlayerJoinMessage(){
		/**其他玩家加入 */
		this._bean=null;
		ResNineHeavyOtherPlayerJoinMessage.__super.call(this);
	}

	__class(ResNineHeavyOtherPlayerJoinMessage,'net.message.nineHeavy.ResNineHeavyOtherPlayerJoinMessage',_super);
	var __proto=ResNineHeavyOtherPlayerJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,NineHeavyPlayerBean);
	}

	__proto.getId=function(){
		return 374;
	}

	/**其他玩家加入 */
	/**其他玩家加入 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResNineHeavyOtherPlayerJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取团购信息错误
*/
//class net.message.tuangou.ResTuanGouGetInfoErrorMessage extends net.Message
var ResTuanGouGetInfoErrorMessage=(function(_super){
	function ResTuanGouGetInfoErrorMessage(){
		/**1:活动未开启;*/
		this._error=0;
		ResTuanGouGetInfoErrorMessage.__super.call(this);
	}

	__class(ResTuanGouGetInfoErrorMessage,'net.message.tuangou.ResTuanGouGetInfoErrorMessage',_super);
	var __proto=ResTuanGouGetInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1397;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTuanGouGetInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*跨天首次登陆
*/
//class net.message.misc.ResFirstDayEndLoginMessage extends net.Message
var ResFirstDayEndLoginMessage=(function(_super){
	function ResFirstDayEndLoginMessage(){
		/**是否首次登陆 */
		this._isFirstLogin=false;
		ResFirstDayEndLoginMessage.__super.call(this);
	}

	__class(ResFirstDayEndLoginMessage,'net.message.misc.ResFirstDayEndLoginMessage',_super);
	var __proto=ResFirstDayEndLoginMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isFirstLogin);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isFirstLogin=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1461;
	}

	/**是否首次登陆 */
	/**是否首次登陆 */
	__getset(0,__proto,'isFirstLogin',function(){
		return this._isFirstLogin;
		},function(value){
		this._isFirstLogin=value;
	});

	return ResFirstDayEndLoginMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门任务
*/
//class net.message.shimen.ReqTakeShiMenTaskMessage extends net.Message
var ReqTakeShiMenTaskMessage=(function(_super){
	function ReqTakeShiMenTaskMessage(){
		ReqTakeShiMenTaskMessage.__super.call(this);;
	}

	__class(ReqTakeShiMenTaskMessage,'net.message.shimen.ReqTakeShiMenTaskMessage',_super);
	var __proto=ReqTakeShiMenTaskMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 145;
	}

	return ReqTakeShiMenTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.dungeon.ReqQuanMinBossMoveMessage extends net.Message
var ReqQuanMinBossMoveMessage=(function(_super){
	function ReqQuanMinBossMoveMessage(){
		/**副本id */
		this._dungeonId=0;
		/**移动的位置 */
		this._point=null;
		ReqQuanMinBossMoveMessage.__super.call(this);
	}

	__class(ReqQuanMinBossMoveMessage,'net.message.dungeon.ReqQuanMinBossMoveMessage',_super);
	var __proto=ReqQuanMinBossMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonId);
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonId=this.readInt(_buf);
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 1472;
	}

	/**副本id */
	/**副本id */
	__getset(0,__proto,'dungeonId',function(){
		return this._dungeonId;
		},function(value){
		this._dungeonId=value;
	});

	/**移动的位置 */
	/**移动的位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ReqQuanMinBossMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送军团战排名
*/
//class net.message.gongCe.ResGetJunTuanInfoMessage extends net.Message
var ResGetJunTuanInfoMessage=(function(_super){
	function ResGetJunTuanInfoMessage(){
		/**我的军团战力排名 */
		this._rank=0;
		ResGetJunTuanInfoMessage.__super.call(this);
		this._list=[];
	}

	__class(ResGetJunTuanInfoMessage,'net.message.gongCe.ResGetJunTuanInfoMessage',_super);
	var __proto=ResGetJunTuanInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._rank);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,JunTuanRankInfo);
		}
		this._rank=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1650;
	}

	/**军团战力排名信息 */
	/**军团战力排名信息 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	/**我的军团战力排名 */
	/**我的军团战力排名 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	return ResGetJunTuanInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(本地)
*/
//class net.message.login.ResLoginLocalMessage extends net.Message
var ResLoginLocalMessage=(function(_super){
	function ResLoginLocalMessage(){
		/**初始化信息 */
		this._init=null;
		/**前端unix时间戳 */
		this._ctime=null;
		/**后端unix时间戳 */
		this._stime=null;
		ResLoginLocalMessage.__super.call(this);
	}

	__class(ResLoginLocalMessage,'net.message.login.ResLoginLocalMessage',_super);
	var __proto=ResLoginLocalMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._init);
		this.writeLong(_buf,this._ctime);
		this.writeLong(_buf,this._stime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._init=this.readBean(_buf,InitBean);
		this._ctime=this.readLong(_buf);
		this._stime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 3;
	}

	/**后端unix时间戳 */
	/**后端unix时间戳 */
	__getset(0,__proto,'stime',function(){
		return this._stime;
		},function(value){
		this._stime=value;
	});

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'ctime',function(){
		return this._ctime;
		},function(value){
		this._ctime=value;
	});

	/**初始化信息 */
	/**初始化信息 */
	__getset(0,__proto,'init',function(){
		return this._init;
		},function(value){
		this._init=value;
	});

	return ResLoginLocalMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能错误
*/
//class net.message.pet.ResReplaceXiLianPetErrorMessage extends net.Message
var ResReplaceXiLianPetErrorMessage=(function(_super){
	function ResReplaceXiLianPetErrorMessage(){
		/**1:找不到宠物;2:没有洗练技能可替换;*/
		this._error=0;
		ResReplaceXiLianPetErrorMessage.__super.call(this);
	}

	__class(ResReplaceXiLianPetErrorMessage,'net.message.pet.ResReplaceXiLianPetErrorMessage',_super);
	var __proto=ResReplaceXiLianPetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 156;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReplaceXiLianPetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买寻宝特权
*/
//class net.message.gongCe.ResBuyHuntTreasureMessage extends net.Message
var ResBuyHuntTreasureMessage=(function(_super){
	function ResBuyHuntTreasureMessage(){
		/**当前处于的状态 0-5=已激活并且剩余的次数-1=未激活 */
		this._status=0;
		/**购买是否成功 只有购买成功的那一次会发一次true 其他都是false */
		this._isSuccess=false;
		ResBuyHuntTreasureMessage.__super.call(this);
	}

	__class(ResBuyHuntTreasureMessage,'net.message.gongCe.ResBuyHuntTreasureMessage',_super);
	var __proto=ResBuyHuntTreasureMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._status);
		this.writeBoolean(_buf,this._isSuccess);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._status=this.readInt(_buf);
		this._isSuccess=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1632;
	}

	/**当前处于的状态 0-5=已激活并且剩余的次数-1=未激活 */
	/**当前处于的状态 0-5=已激活并且剩余的次数-1=未激活 */
	__getset(0,__proto,'status',function(){
		return this._status;
		},function(value){
		this._status=value;
	});

	/**购买是否成功 只有购买成功的那一次会发一次true 其他都是false */
	/**购买是否成功 只有购买成功的那一次会发一次true 其他都是false */
	__getset(0,__proto,'isSuccess',function(){
		return this._isSuccess;
		},function(value){
		this._isSuccess=value;
	});

	return ResBuyHuntTreasureMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离婚
*/
//class net.message.marriage.ReqMarriageRdivorceMessage extends net.Message
var ReqMarriageRdivorceMessage=(function(_super){
	function ReqMarriageRdivorceMessage(){
		ReqMarriageRdivorceMessage.__super.call(this);;
	}

	__class(ReqMarriageRdivorceMessage,'net.message.marriage.ReqMarriageRdivorceMessage',_super);
	var __proto=ReqMarriageRdivorceMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 566;
	}

	return ReqMarriageRdivorceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取透支计划奖励
*/
//class net.message.investment.ReqInvestmengTaskRewardMessageMessage extends net.Message
var ReqInvestmengTaskRewardMessageMessage=(function(_super){
	function ReqInvestmengTaskRewardMessageMessage(){
		/**uid */
		this._id=0;
		ReqInvestmengTaskRewardMessageMessage.__super.call(this);
	}

	__class(ReqInvestmengTaskRewardMessageMessage,'net.message.investment.ReqInvestmengTaskRewardMessageMessage',_super);
	var __proto=ReqInvestmengTaskRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 677;
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqInvestmengTaskRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家领取积分奖励
*/
//class net.message.nineHeavy.ResNineHeavyIntegralRewardMessage extends net.Message
var ResNineHeavyIntegralRewardMessage=(function(_super){
	function ResNineHeavyIntegralRewardMessage(){
		/**领取成功 返回下标 */
		this._index=0;
		ResNineHeavyIntegralRewardMessage.__super.call(this);
	}

	__class(ResNineHeavyIntegralRewardMessage,'net.message.nineHeavy.ResNineHeavyIntegralRewardMessage',_super);
	var __proto=ResNineHeavyIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 389;
	}

	/**领取成功 返回下标 */
	/**领取成功 返回下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResNineHeavyIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统
*/
//class net.message.user.ReqTakeActiveGameSystemRewardMessage extends net.Message
var ReqTakeActiveGameSystemRewardMessage=(function(_super){
	function ReqTakeActiveGameSystemRewardMessage(){
		/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
		this._system=0;
		ReqTakeActiveGameSystemRewardMessage.__super.call(this);
	}

	__class(ReqTakeActiveGameSystemRewardMessage,'net.message.user.ReqTakeActiveGameSystemRewardMessage',_super);
	var __proto=ReqTakeActiveGameSystemRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._system);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._system=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 879;
	}

	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	__getset(0,__proto,'system',function(){
		return this._system;
		},function(value){
		this._system=value;
	});

	return ReqTakeActiveGameSystemRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会下注
*/
//class net.message.qunyinghui.ReqQunYingHuiBetMessage extends net.Message
var ReqQunYingHuiBetMessage=(function(_super){
	function ReqQunYingHuiBetMessage(){
		/**战斗ID */
		this._fightID=0;
		/**下注类型 0 1 2 */
		this._type=0;
		/**被下注人 */
		this._uid=null;
		ReqQunYingHuiBetMessage.__super.call(this);
	}

	__class(ReqQunYingHuiBetMessage,'net.message.qunyinghui.ReqQunYingHuiBetMessage',_super);
	var __proto=ReqQunYingHuiBetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightID);
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 476;
	}

	/**战斗ID */
	/**战斗ID */
	__getset(0,__proto,'fightID',function(){
		return this._fightID;
		},function(value){
		this._fightID=value;
	});

	/**被下注人 */
	/**被下注人 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**下注类型 0 1 2 */
	/**下注类型 0 1 2 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqQunYingHuiBetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*展示离线奖励
*/
//class net.message.misc.ResShowOfflinePrizeMessage extends net.Message
var ResShowOfflinePrizeMessage=(function(_super){
	function ResShowOfflinePrizeMessage(){
		/**上次挑战关卡时间 */
		this._guanQiaTime=0;
		/**离线秒数 */
		this._offlineSec=0;
		/**分解次数 */
		this._disposeCount=0;
		ResShowOfflinePrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResShowOfflinePrizeMessage,'net.message.misc.ResShowOfflinePrizeMessage',_super);
	var __proto=ResShowOfflinePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanQiaTime);
		this.writeInt(_buf,this._offlineSec);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._disposeCount);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanQiaTime=this.readInt(_buf);
		this._offlineSec=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._disposeCount=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 198;
	}

	/**上次挑战关卡时间 */
	/**上次挑战关卡时间 */
	__getset(0,__proto,'guanQiaTime',function(){
		return this._guanQiaTime;
		},function(value){
		this._guanQiaTime=value;
	});

	/**分解次数 */
	/**分解次数 */
	__getset(0,__proto,'disposeCount',function(){
		return this._disposeCount;
		},function(value){
		this._disposeCount=value;
	});

	/**离线秒数 */
	/**离线秒数 */
	__getset(0,__proto,'offlineSec',function(){
		return this._offlineSec;
		},function(value){
		this._offlineSec=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResShowOfflinePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入队伍
*/
//class net.message.team.ResTeamApplyMessage extends net.Message
var ResTeamApplyMessage=(function(_super){
	function ResTeamApplyMessage(){
		ResTeamApplyMessage.__super.call(this);;
	}

	__class(ResTeamApplyMessage,'net.message.team.ResTeamApplyMessage',_super);
	var __proto=ResTeamApplyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1255;
	}

	return ResTeamApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级经脉
*/
//class net.message.jingmai.ResJingMaiUpgradeMessage extends net.Message
var ResJingMaiUpgradeMessage=(function(_super){
	function ResJingMaiUpgradeMessage(){
		/**英雄ID */
		this._heroID=0;
		/**等级 */
		this._lv=0;
		ResJingMaiUpgradeMessage.__super.call(this);
	}

	__class(ResJingMaiUpgradeMessage,'net.message.jingmai.ResJingMaiUpgradeMessage',_super);
	var __proto=ResJingMaiUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 486;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResJingMaiUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取官位活跃度宝箱
*/
//class net.message.official.ReqReceiveOfficialBoxMessage extends net.Message
var ReqReceiveOfficialBoxMessage=(function(_super){
	function ReqReceiveOfficialBoxMessage(){
		/**宝箱下标 0开始 */
		this._index=0;
		ReqReceiveOfficialBoxMessage.__super.call(this);
	}

	__class(ReqReceiveOfficialBoxMessage,'net.message.official.ReqReceiveOfficialBoxMessage',_super);
	var __proto=ReqReceiveOfficialBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 322;
	}

	/**宝箱下标 0开始 */
	/**宝箱下标 0开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqReceiveOfficialBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升星
*/
//class net.message.pet.ResUpgradePetStarMessage extends net.Message
var ResUpgradePetStarMessage=(function(_super){
	function ResUpgradePetStarMessage(){
		/**宠物ID */
		this._petID=0;
		/**星 */
		this._star=0;
		/**星经验 */
		this._starExp=null;
		ResUpgradePetStarMessage.__super.call(this);
	}

	__class(ResUpgradePetStarMessage,'net.message.pet.ResUpgradePetStarMessage',_super);
	var __proto=ResUpgradePetStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._star);
		this.writeLong(_buf,this._starExp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._starExp=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 161;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**星 */
	/**星 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**星经验 */
	/**星经验 */
	__getset(0,__proto,'starExp',function(){
		return this._starExp;
		},function(value){
		this._starExp=value;
	});

	return ResUpgradePetStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家错误
*/
//class net.message.gb.ResLegionBattleAttackPlayerErrorMessage extends net.Message
var ResLegionBattleAttackPlayerErrorMessage=(function(_super){
	function ResLegionBattleAttackPlayerErrorMessage(){
		/**1:未开启;2:你不在活动中;3:不能攻击同帮派成员;4:没有找到玩家;5:目标或者你自己在死亡状态;6:不是队长;*/
		this._error=0;
		ResLegionBattleAttackPlayerErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackPlayerErrorMessage,'net.message.gb.ResLegionBattleAttackPlayerErrorMessage',_super);
	var __proto=ResLegionBattleAttackPlayerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1339;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleAttackPlayerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成军团广场任务错误
*/
//class net.message.task.ResTaskGuildSquarePayErrorMessage extends net.Message
var ResTaskGuildSquarePayErrorMessage=(function(_super){
	function ResTaskGuildSquarePayErrorMessage(){
		/**1:找不到任务;2:已经完成;3:穷;*/
		this._error=0;
		ResTaskGuildSquarePayErrorMessage.__super.call(this);
	}

	__class(ResTaskGuildSquarePayErrorMessage,'net.message.task.ResTaskGuildSquarePayErrorMessage',_super);
	var __proto=ResTaskGuildSquarePayErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1304;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTaskGuildSquarePayErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取藏宝图奖励
*/
//class net.message.pata.ReqTakeCBTPrizeMessage extends net.Message
var ReqTakeCBTPrizeMessage=(function(_super){
	function ReqTakeCBTPrizeMessage(){
		/**页 */
		this._page=0;
		/**星 */
		this._star=0;
		ReqTakeCBTPrizeMessage.__super.call(this);
	}

	__class(ReqTakeCBTPrizeMessage,'net.message.pata.ReqTakeCBTPrizeMessage',_super);
	var __proto=ReqTakeCBTPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._page);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._page=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 242;
	}

	/**页 */
	/**页 */
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	/**星 */
	/**星 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ReqTakeCBTPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团求助
*/
//class net.message.gongCe.ResArmyForHelpMessage extends net.Message
var ResArmyForHelpMessage=(function(_super){
	function ResArmyForHelpMessage(){
		/**当前用户名 */
		this._userName=null;
		/**复仇对象名 */
		this._furyUserName=null;
		/**复仇对象战力 */
		this._furyFightPower=null;
		ResArmyForHelpMessage.__super.call(this);
	}

	__class(ResArmyForHelpMessage,'net.message.gongCe.ResArmyForHelpMessage',_super);
	var __proto=ResArmyForHelpMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._userName);
		this.writeString(_buf,this._furyUserName);
		this.writeLong(_buf,this._furyFightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._userName=this.readString(_buf);
		this._furyUserName=this.readString(_buf);
		this._furyFightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1661;
	}

	/**当前用户名 */
	/**当前用户名 */
	__getset(0,__proto,'userName',function(){
		return this._userName;
		},function(value){
		this._userName=value;
	});

	/**复仇对象名 */
	/**复仇对象名 */
	__getset(0,__proto,'furyUserName',function(){
		return this._furyUserName;
		},function(value){
		this._furyUserName=value;
	});

	/**复仇对象战力 */
	/**复仇对象战力 */
	__getset(0,__proto,'furyFightPower',function(){
		return this._furyFightPower;
		},function(value){
		this._furyFightPower=value;
	});

	return ResArmyForHelpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看玩家
*/
//class net.message.chat.ReqLookPlayerMessage extends net.Message
var ReqLookPlayerMessage=(function(_super){
	function ReqLookPlayerMessage(){
		/**查看对象ID */
		this._targetId=null;
		ReqLookPlayerMessage.__super.call(this);
	}

	__class(ReqLookPlayerMessage,'net.message.chat.ReqLookPlayerMessage',_super);
	var __proto=ReqLookPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._targetId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._targetId=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 792;
	}

	/**查看对象ID */
	/**查看对象ID */
	__getset(0,__proto,'targetId',function(){
		return this._targetId;
		},function(value){
		this._targetId=value;
	});

	return ReqLookPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求加入军团首领错误
*/
//class net.message.worldboss.ResWorldBossJoinErrorMessage extends net.Message
var ResWorldBossJoinErrorMessage=(function(_super){
	function ResWorldBossJoinErrorMessage(){
		/**1:活动未开始;*/
		this._error=0;
		ResWorldBossJoinErrorMessage.__super.call(this);
	}

	__class(ResWorldBossJoinErrorMessage,'net.message.worldboss.ResWorldBossJoinErrorMessage',_super);
	var __proto=ResWorldBossJoinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 502;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossJoinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*录像点赞
*/
//class net.message.video.ReqLikeVideoMessage extends net.Message
var ReqLikeVideoMessage=(function(_super){
	function ReqLikeVideoMessage(){
		/**录像唯一id */
		this._videoId=null;
		ReqLikeVideoMessage.__super.call(this);
	}

	__class(ReqLikeVideoMessage,'net.message.video.ReqLikeVideoMessage',_super);
	var __proto=ReqLikeVideoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._videoId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._videoId=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1423;
	}

	/**录像唯一id */
	/**录像唯一id */
	__getset(0,__proto,'videoId',function(){
		return this._videoId;
		},function(value){
		this._videoId=value;
	});

	return ReqLikeVideoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*其他玩家进入广场
*/
//class net.message.legion.ResLegionOtherIntoSquareMessageMessage extends net.Message
var ResLegionOtherIntoSquareMessageMessage=(function(_super){
	function ResLegionOtherIntoSquareMessageMessage(){
		/**进入的玩家 */
		this._target=null;
		ResLegionOtherIntoSquareMessageMessage.__super.call(this);
	}

	__class(ResLegionOtherIntoSquareMessageMessage,'net.message.legion.ResLegionOtherIntoSquareMessageMessage',_super);
	var __proto=ResLegionOtherIntoSquareMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._target);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readBean(_buf,LegionPlayerBean);
	}

	__proto.getId=function(){
		return 650;
	}

	/**进入的玩家 */
	/**进入的玩家 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	return ResLegionOtherIntoSquareMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出答题错误
*/
//class net.message.examination.ResKejuExitErrorMessage extends net.Message
var ResKejuExitErrorMessage=(function(_super){
	function ResKejuExitErrorMessage(){
		/**1:活动未开启或者已经结束;*/
		this._error=0;
		ResKejuExitErrorMessage.__super.call(this);
	}

	__class(ResKejuExitErrorMessage,'net.message.examination.ResKejuExitErrorMessage',_super);
	var __proto=ResKejuExitErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1374;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKejuExitErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*神秘商店
*/
//class net.message.shop.ResMysteriousShopMessage extends net.Message
var ResMysteriousShopMessage=(function(_super){
	function ResMysteriousShopMessage(){
		/**商城子类型 */
		this._shopSonTypes=0;
		/**免费次数 */
		this._free=0;
		/**刷新时间 */
		this._refreshTime=0;
		ResMysteriousShopMessage.__super.call(this);
		this._goods=[];
	}

	__class(ResMysteriousShopMessage,'net.message.shop.ResMysteriousShopMessage',_super);
	var __proto=ResMysteriousShopMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopSonTypes);
		this.writeInt(_buf,this._goods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goods.length;++i_am_tmp_i){
			this._goods[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._free);
		this.writeInt(_buf,this._refreshTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopSonTypes=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._goods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goods[i_am_tmp_i]=this.readBeanInList(_buf,ShopGoodsBuyTimesBean);
		}
		this._free=this.readInt(_buf);
		this._refreshTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1430;
	}

	/**商城子类型 */
	/**商城子类型 */
	__getset(0,__proto,'shopSonTypes',function(){
		return this._shopSonTypes;
		},function(value){
		this._shopSonTypes=value;
	});

	/**商品 */
	/**商品 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	/**免费次数 */
	/**免费次数 */
	__getset(0,__proto,'free',function(){
		return this._free;
		},function(value){
		this._free=value;
	});

	/**刷新时间 */
	/**刷新时间 */
	__getset(0,__proto,'refreshTime',function(){
		return this._refreshTime;
		},function(value){
		this._refreshTime=value;
	});

	return ResMysteriousShopMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*福利大厅更新
*/
//class net.message.welfare.ResUpdateWelfareMessage extends net.Message
var ResUpdateWelfareMessage=(function(_super){
	function ResUpdateWelfareMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResUpdateWelfareMessage.__super.call(this);
	}

	__class(ResUpdateWelfareMessage,'net.message.welfare.ResUpdateWelfareMessage',_super);
	var __proto=ResUpdateWelfareMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,WelfareBean);
	}

	__proto.getId=function(){
		return 749;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResUpdateWelfareMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级灵童天赋
*/
//class net.message.soulboy.ReqSoulBoyTaletUpgradeMessage extends net.Message
var ReqSoulBoyTaletUpgradeMessage=(function(_super){
	function ReqSoulBoyTaletUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		ReqSoulBoyTaletUpgradeMessage.__super.call(this);
	}

	__class(ReqSoulBoyTaletUpgradeMessage,'net.message.soulboy.ReqSoulBoyTaletUpgradeMessage',_super);
	var __proto=ReqSoulBoyTaletUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 457;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqSoulBoyTaletUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征复活错误
*/
//class net.message.yuanzheng.ResYuanZhengReliveErrorMessage extends net.Message
var ResYuanZhengReliveErrorMessage=(function(_super){
	function ResYuanZhengReliveErrorMessage(){
		/**1:参数错误;2:穷;3:无死亡对象;*/
		this._error=0;
		ResYuanZhengReliveErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengReliveErrorMessage,'net.message.yuanzheng.ResYuanZhengReliveErrorMessage',_super);
	var __proto=ResYuanZhengReliveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 297;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengReliveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击BOSS的结果错误
*/
//class net.message.worldboss.ResWorldBossAttackResultErrorMessage extends net.Message
var ResWorldBossAttackResultErrorMessage=(function(_super){
	function ResWorldBossAttackResultErrorMessage(){
		/**1:活动未开始;2:你已经死了 或者离开副本;3:BOSS已死亡;*/
		this._error=0;
		ResWorldBossAttackResultErrorMessage.__super.call(this);
	}

	__class(ResWorldBossAttackResultErrorMessage,'net.message.worldboss.ResWorldBossAttackResultErrorMessage',_super);
	var __proto=ResWorldBossAttackResultErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 515;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossAttackResultErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备幻化错误
*/
//class net.message.equip.ResEquipIllusionErrorMessage extends net.Message
var ResEquipIllusionErrorMessage=(function(_super){
	function ResEquipIllusionErrorMessage(){
		/**1:没有可幻化的装备;2:没有英雄;*/
		this._error=0;
		ResEquipIllusionErrorMessage.__super.call(this);
	}

	__class(ResEquipIllusionErrorMessage,'net.message.equip.ResEquipIllusionErrorMessage',_super);
	var __proto=ResEquipIllusionErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 952;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipIllusionErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升星
*/
//class net.message.general.ReqGeneralUpgradeStarMessage extends net.Message
var ReqGeneralUpgradeStarMessage=(function(_super){
	function ReqGeneralUpgradeStarMessage(){
		/**蛮将id */
		this._id=0;
		ReqGeneralUpgradeStarMessage.__super.call(this);
	}

	__class(ReqGeneralUpgradeStarMessage,'net.message.general.ReqGeneralUpgradeStarMessage',_super);
	var __proto=ReqGeneralUpgradeStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1408;
	}

	/**蛮将id */
	/**蛮将id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqGeneralUpgradeStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求付费刷新兑换商品错误
*/
//class net.message.legion.ResLegionFlushExchangeItemMessageErrorMessage extends net.Message
var ResLegionFlushExchangeItemMessageErrorMessage=(function(_super){
	function ResLegionFlushExchangeItemMessageErrorMessage(){
		/**1:你木有军团;2:穷;*/
		this._error=0;
		ResLegionFlushExchangeItemMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionFlushExchangeItemMessageErrorMessage,'net.message.legion.ResLegionFlushExchangeItemMessageErrorMessage',_super);
	var __proto=ResLegionFlushExchangeItemMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 681;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionFlushExchangeItemMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出队伍
*/
//class net.message.team.ResTeamExitMessage extends net.Message
var ResTeamExitMessage=(function(_super){
	function ResTeamExitMessage(){
		ResTeamExitMessage.__super.call(this);;
	}

	__class(ResTeamExitMessage,'net.message.team.ResTeamExitMessage',_super);
	var __proto=ResTeamExitMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1267;
	}

	return ResTeamExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求扫荡
*/
//class net.message.teamDuplicate.ResTeamDuplicateSweepAwayMessage extends net.Message
var ResTeamDuplicateSweepAwayMessage=(function(_super){
	function ResTeamDuplicateSweepAwayMessage(){
		ResTeamDuplicateSweepAwayMessage.__super.call(this);
		this._qid=[];
		this._reward=[];
	}

	__class(ResTeamDuplicateSweepAwayMessage,'net.message.teamDuplicate.ResTeamDuplicateSweepAwayMessage',_super);
	var __proto=ResTeamDuplicateSweepAwayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 439;
	}

	/**扫荡成功返回的副本ID */
	/**扫荡成功返回的副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResTeamDuplicateSweepAwayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取巡城数据错误
*/
//class net.message.garrison.ResGarrisonGetDataErrorMessage extends net.Message
var ResGarrisonGetDataErrorMessage=(function(_super){
	function ResGarrisonGetDataErrorMessage(){
		/**1:系统未开启;*/
		this._error=0;
		ResGarrisonGetDataErrorMessage.__super.call(this);
	}

	__class(ResGarrisonGetDataErrorMessage,'net.message.garrison.ResGarrisonGetDataErrorMessage',_super);
	var __proto=ResGarrisonGetDataErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1387;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonGetDataErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团踢人
*/
//class net.message.guild.ReqGuildKickMessage extends net.Message
var ReqGuildKickMessage=(function(_super){
	function ReqGuildKickMessage(){
		/**玩家唯一ID */
		this._uid=null;
		ReqGuildKickMessage.__super.call(this);
	}

	__class(ReqGuildKickMessage,'net.message.guild.ReqGuildKickMessage',_super);
	var __proto=ReqGuildKickMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1243;
	}

	/**玩家唯一ID */
	/**玩家唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqGuildKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会修改战力条件错误
*/
//class net.message.guild.ResGuildChangeFightPowerErrorMessage extends net.Message
var ResGuildChangeFightPowerErrorMessage=(function(_super){
	function ResGuildChangeFightPowerErrorMessage(){
		/**1:无权限;2:没有帮会;*/
		this._error=0;
		ResGuildChangeFightPowerErrorMessage.__super.call(this);
	}

	__class(ResGuildChangeFightPowerErrorMessage,'net.message.guild.ResGuildChangeFightPowerErrorMessage',_super);
	var __proto=ResGuildChangeFightPowerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1214;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildChangeFightPowerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入队伍错误
*/
//class net.message.team.ResTeamApplyReplyErrorMessage extends net.Message
var ResTeamApplyReplyErrorMessage=(function(_super){
	function ResTeamApplyReplyErrorMessage(){
		/**1:无权限;2:队伍满;3:无队伍;4:不在队伍中;5:未申请;6:在其他队伍中;*/
		this._error=0;
		ResTeamApplyReplyErrorMessage.__super.call(this);
	}

	__class(ResTeamApplyReplyErrorMessage,'net.message.team.ResTeamApplyReplyErrorMessage',_super);
	var __proto=ResTeamApplyReplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1259;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamApplyReplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取可夺取玉玺的帮会
*/
//class net.message.gb.ReqLegionBattleGetLegalKingGuildMessage extends net.Message
var ReqLegionBattleGetLegalKingGuildMessage=(function(_super){
	function ReqLegionBattleGetLegalKingGuildMessage(){
		ReqLegionBattleGetLegalKingGuildMessage.__super.call(this);;
	}

	__class(ReqLegionBattleGetLegalKingGuildMessage,'net.message.gb.ReqLegionBattleGetLegalKingGuildMessage',_super);
	var __proto=ReqLegionBattleGetLegalKingGuildMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1327;
	}

	return ReqLegionBattleGetLegalKingGuildMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*准点登陆
*/
//class net.message.gongCe.ResZhunDianMessage extends net.Message
var ResZhunDianMessage=(function(_super){
	function ResZhunDianMessage(){
		/**状态 0=未领取 1=已领取 */
		this._status=0;
		ResZhunDianMessage.__super.call(this);
	}

	__class(ResZhunDianMessage,'net.message.gongCe.ResZhunDianMessage',_super);
	var __proto=ResZhunDianMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._status);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._status=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1644;
	}

	/**状态 0=未领取 1=已领取 */
	/**状态 0=未领取 1=已领取 */
	__getset(0,__proto,'status',function(){
		return this._status;
		},function(value){
		this._status=value;
	});

	return ResZhunDianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团踢人错误
*/
//class net.message.guild.ResGuildKickErrorMessage extends net.Message
var ResGuildKickErrorMessage=(function(_super){
	function ResGuildKickErrorMessage(){
		/**1:不在军团中;2:无权限;3:不能踢自己;4:目标不在军团中;5:目标不能被踢;*/
		this._error=0;
		ResGuildKickErrorMessage.__super.call(this);
	}

	__class(ResGuildKickErrorMessage,'net.message.guild.ResGuildKickErrorMessage',_super);
	var __proto=ResGuildKickErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1245;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildKickErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战错误
*/
//class net.message.arena.ResArenaChallengeErrorMessage extends net.Message
var ResArenaChallengeErrorMessage=(function(_super){
	function ResArenaChallengeErrorMessage(){
		/**1:参数错误;2:次数不足;3:数据变更;4:未开启;*/
		this._error=0;
		ResArenaChallengeErrorMessage.__super.call(this);
	}

	__class(ResArenaChallengeErrorMessage,'net.message.arena.ResArenaChallengeErrorMessage',_super);
	var __proto=ResArenaChallengeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 279;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResArenaChallengeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*解散军团
*/
//class net.message.guild.ResGuildDismissMessage extends net.Message
var ResGuildDismissMessage=(function(_super){
	function ResGuildDismissMessage(){
		ResGuildDismissMessage.__super.call(this);;
	}

	__class(ResGuildDismissMessage,'net.message.guild.ResGuildDismissMessage',_super);
	var __proto=ResGuildDismissMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1228;
	}

	return ResGuildDismissMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取单身的玩家错误
*/
//class net.message.marriage.ResMarriageTakeSinglePlayerErrorMessage extends net.Message
var ResMarriageTakeSinglePlayerErrorMessage=(function(_super){
	function ResMarriageTakeSinglePlayerErrorMessage(){
		/**1:已经结婚不要骚动;2:等级未达标;3:频繁拉取;*/
		this._error=0;
		ResMarriageTakeSinglePlayerErrorMessage.__super.call(this);
	}

	__class(ResMarriageTakeSinglePlayerErrorMessage,'net.message.marriage.ResMarriageTakeSinglePlayerErrorMessage',_super);
	var __proto=ResMarriageTakeSinglePlayerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 530;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageTakeSinglePlayerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新拉取战斗日志
*/
//class net.message.gb.ReqLegionBattleUpdateRecordsMessage extends net.Message
var ReqLegionBattleUpdateRecordsMessage=(function(_super){
	function ReqLegionBattleUpdateRecordsMessage(){
		ReqLegionBattleUpdateRecordsMessage.__super.call(this);;
	}

	__class(ReqLegionBattleUpdateRecordsMessage,'net.message.gb.ReqLegionBattleUpdateRecordsMessage',_super);
	var __proto=ReqLegionBattleUpdateRecordsMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1368;
	}

	return ReqLegionBattleUpdateRecordsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童洗练技能覆盖
*/
//class net.message.soulboy.ResSoulBoyXilianReplaceMessage extends net.Message
var ResSoulBoyXilianReplaceMessage=(function(_super){
	function ResSoulBoyXilianReplaceMessage(){
		/**灵童ID */
		this._id=0;
		ResSoulBoyXilianReplaceMessage.__super.call(this);
		this._skill=[];
	}

	__class(ResSoulBoyXilianReplaceMessage,'net.message.soulboy.ResSoulBoyXilianReplaceMessage',_super);
	var __proto=ResSoulBoyXilianReplaceMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 551;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**灵童的技能 */
	/**灵童的技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return ResSoulBoyXilianReplaceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物升星错误
*/
//class net.message.treasure.ResTreasureStarUpErrorMessage extends net.Message
var ResTreasureStarUpErrorMessage=(function(_super){
	function ResTreasureStarUpErrorMessage(){
		/**1:没有配置;2:达到上限;3:物品不足;*/
		this._error=0;
		ResTreasureStarUpErrorMessage.__super.call(this);
	}

	__class(ResTreasureStarUpErrorMessage,'net.message.treasure.ResTreasureStarUpErrorMessage',_super);
	var __proto=ResTreasureStarUpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1630;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTreasureStarUpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*革职宠物
*/
//class net.message.pet.ResFirePetMessage extends net.Message
var ResFirePetMessage=(function(_super){
	function ResFirePetMessage(){
		/**宠物ID */
		this._petID=0;
		/**宠物信息 */
		this._petBean=null;
		ResFirePetMessage.__super.call(this);
		this._goodsBean=[];
	}

	__class(ResFirePetMessage,'net.message.pet.ResFirePetMessage',_super);
	var __proto=ResFirePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._goodsBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goodsBean.length;++i_am_tmp_i){
			this._goodsBean[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._petBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._goodsBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goodsBean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		this._petBean=this.readBean(_buf,PetBean);
	}

	__proto.getId=function(){
		return 1439;
	}

	/**返还道具 */
	/**返还道具 */
	__getset(0,__proto,'goodsBean',function(){
		return this._goodsBean;
		},function(value){
		this._goodsBean=value;
	});

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**宠物信息 */
	/**宠物信息 */
	__getset(0,__proto,'petBean',function(){
		return this._petBean;
		},function(value){
		this._petBean=value;
	});

	return ResFirePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*接受或者拒绝求婚错误
*/
//class net.message.marriage.ResMarriageOperationProposeErrorMessage extends net.Message
var ResMarriageOperationProposeErrorMessage=(function(_super){
	function ResMarriageOperationProposeErrorMessage(){
		/**1:已经结婚不要骚动;2:等级未达标;3:次数不足;4:你来晚了;*/
		this._error=0;
		ResMarriageOperationProposeErrorMessage.__super.call(this);
	}

	__class(ResMarriageOperationProposeErrorMessage,'net.message.marriage.ResMarriageOperationProposeErrorMessage',_super);
	var __proto=ResMarriageOperationProposeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 537;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageOperationProposeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖
*/
//class net.message.escort.ReqEscortRobberyBackMessage extends net.Message
var ReqEscortRobberyBackMessage=(function(_super){
	function ReqEscortRobberyBackMessage(){
		/**录像下标 */
		this._index=0;
		ReqEscortRobberyBackMessage.__super.call(this);
	}

	__class(ReqEscortRobberyBackMessage,'net.message.escort.ReqEscortRobberyBackMessage',_super);
	var __proto=ReqEscortRobberyBackMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1487;
	}

	/**录像下标 */
	/**录像下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqEscortRobberyBackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新赤壁
*/
//class net.message.chibi.ResChibiUpdateMessage extends net.Message
var ResChibiUpdateMessage=(function(_super){
	function ResChibiUpdateMessage(){
		/**赤壁对象 */
		this._bean=null;
		ResChibiUpdateMessage.__super.call(this);
	}

	__class(ResChibiUpdateMessage,'net.message.chibi.ResChibiUpdateMessage',_super);
	var __proto=ResChibiUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,ChibiBean);
	}

	__proto.getId=function(){
		return 394;
	}

	/**赤壁对象 */
	/**赤壁对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResChibiUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器错误
*/
//class net.message.fit.ResFitUpgradePositionErrorMessage extends net.Message
var ResFitUpgradePositionErrorMessage=(function(_super){
	function ResFitUpgradePositionErrorMessage(){
		/**1:不满足条件;2:穷;*/
		this._error=0;
		ResFitUpgradePositionErrorMessage.__super.call(this);
	}

	__class(ResFitUpgradePositionErrorMessage,'net.message.fit.ResFitUpgradePositionErrorMessage',_super);
	var __proto=ResFitUpgradePositionErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1156;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitUpgradePositionErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用合成
*/
//class net.message.upgrade.ReqCommonSynthesisMessage extends net.Message
var ReqCommonSynthesisMessage=(function(_super){
	function ReqCommonSynthesisMessage(){
		/**物品id */
		this._id=0;
		/**合成数量 */
		this._num=0;
		ReqCommonSynthesisMessage.__super.call(this);
	}

	__class(ReqCommonSynthesisMessage,'net.message.upgrade.ReqCommonSynthesisMessage',_super);
	var __proto=ReqCommonSynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1037;
	}

	/**物品id */
	/**物品id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**合成数量 */
	/**合成数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqCommonSynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会获取战斗信息
*/
//class net.message.qunyinghui.ReqQunYingHuiGetFightInfoMessage extends net.Message
var ReqQunYingHuiGetFightInfoMessage=(function(_super){
	function ReqQunYingHuiGetFightInfoMessage(){
		/**战斗ID */
		this._fightID=0;
		ReqQunYingHuiGetFightInfoMessage.__super.call(this);
	}

	__class(ReqQunYingHuiGetFightInfoMessage,'net.message.qunyinghui.ReqQunYingHuiGetFightInfoMessage',_super);
	var __proto=ReqQunYingHuiGetFightInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1388;
	}

	/**战斗ID */
	/**战斗ID */
	__getset(0,__proto,'fightID',function(){
		return this._fightID;
		},function(value){
		this._fightID=value;
	});

	return ReqQunYingHuiGetFightInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会报名
*/
//class net.message.qunyinghui.ResQunYingHuiSignUpMessage extends net.Message
var ResQunYingHuiSignUpMessage=(function(_super){
	function ResQunYingHuiSignUpMessage(){
		ResQunYingHuiSignUpMessage.__super.call(this);;
	}

	__class(ResQunYingHuiSignUpMessage,'net.message.qunyinghui.ResQunYingHuiSignUpMessage',_super);
	var __proto=ResQunYingHuiSignUpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 471;
	}

	return ResQunYingHuiSignUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*同步点将转盘活动期间玩家点将次数
*/
//class net.message.activities.ResActDianJiangTurntableUpdateMessage extends net.Message
var ResActDianJiangTurntableUpdateMessage=(function(_super){
	function ResActDianJiangTurntableUpdateMessage(){
		/**点将次数 */
		this._dianJiangTimes=0;
		ResActDianJiangTurntableUpdateMessage.__super.call(this);
	}

	__class(ResActDianJiangTurntableUpdateMessage,'net.message.activities.ResActDianJiangTurntableUpdateMessage',_super);
	var __proto=ResActDianJiangTurntableUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dianJiangTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dianJiangTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1609;
	}

	/**点将次数 */
	/**点将次数 */
	__getset(0,__proto,'dianJiangTimes',function(){
		return this._dianJiangTimes;
		},function(value){
		this._dianJiangTimes=value;
	});

	return ResActDianJiangTurntableUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*看别人装逼
*/
//class net.message.chat.ReqChatKanZhuangBiMessage extends net.Message
var ReqChatKanZhuangBiMessage=(function(_super){
	function ReqChatKanZhuangBiMessage(){
		/**用户UID */
		this._uid=null;
		/**类型 0武将 1红颜 2装备 */
		this._type=0;
		/**该类型的ID */
		this._id=0;
		ReqChatKanZhuangBiMessage.__super.call(this);
	}

	__class(ReqChatKanZhuangBiMessage,'net.message.chat.ReqChatKanZhuangBiMessage',_super);
	var __proto=ReqChatKanZhuangBiMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 778;
	}

	/**类型 0武将 1红颜 2装备 */
	/**类型 0武将 1红颜 2装备 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**用户UID */
	/**用户UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**该类型的ID */
	/**该类型的ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqChatKanZhuangBiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物
*/
//class net.message.pet.ReqActivePetMessage extends net.Message
var ReqActivePetMessage=(function(_super){
	function ReqActivePetMessage(){
		/**宠物ID */
		this._petID=0;
		ReqActivePetMessage.__super.call(this);
	}

	__class(ReqActivePetMessage,'net.message.pet.ReqActivePetMessage',_super);
	var __proto=ReqActivePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 148;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	return ReqActivePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励错误
*/
//class net.message.escort.ResEscortRevengeRecordErrorMessage extends net.Message
var ResEscortRevengeRecordErrorMessage=(function(_super){
	function ResEscortRevengeRecordErrorMessage(){
		/**1:目标状态发生变化 复仇目标不存在;*/
		this._error=0;
		ResEscortRevengeRecordErrorMessage.__super.call(this);
	}

	__class(ResEscortRevengeRecordErrorMessage,'net.message.escort.ResEscortRevengeRecordErrorMessage',_super);
	var __proto=ResEscortRevengeRecordErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1133;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEscortRevengeRecordErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新时装错误
*/
//class net.message.skin.ResUpdateSkinErrorMessage extends net.Message
var ResUpdateSkinErrorMessage=(function(_super){
	function ResUpdateSkinErrorMessage(){
		/**1:英雄不存在;*/
		this._error=0;
		ResUpdateSkinErrorMessage.__super.call(this);
	}

	__class(ResUpdateSkinErrorMessage,'net.message.skin.ResUpdateSkinErrorMessage',_super);
	var __proto=ResUpdateSkinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1179;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpdateSkinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔战斗
*/
//class net.message.pata.ResPataFightMessage extends net.Message
var ResPataFightMessage=(function(_super){
	function ResPataFightMessage(){
		/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
		this._type=0;
		/**层 */
		this._layer=0;
		/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
		this._param=0;
		/**数据 */
		this._data=null;
		ResPataFightMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResPataFightMessage,'net.message.pata.ResPataFightMessage',_super);
	var __proto=ResPataFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._param);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		this._type=this.readInt(_buf);
		this._layer=this.readInt(_buf);
		this._param=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 246;
	}

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
	/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
	/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
	__getset(0,__proto,'param',function(){
		return this._param;
		},function(value){
		this._param=value;
	});

	return ResPataFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新状态
*/
//class net.message.pata.ResPataUpdateStateMessage extends net.Message
var ResPataUpdateStateMessage=(function(_super){
	function ResPataUpdateStateMessage(){
		ResPataUpdateStateMessage.__super.call(this);
		this._invisibleTypes=[];
	}

	__class(ResPataUpdateStateMessage,'net.message.pata.ResPataUpdateStateMessage',_super);
	var __proto=ResPataUpdateStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._invisibleTypes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._invisibleTypes.length;++i_am_tmp_i){
			this.writeInt(_buf,this._invisibleTypes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._invisibleTypes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._invisibleTypes[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1391;
	}

	/**未开放的类型(REASON:未开放的比较少)*/
	/**未开放的类型(REASON:未开放的比较少)*/
	__getset(0,__proto,'invisibleTypes',function(){
		return this._invisibleTypes;
		},function(value){
		this._invisibleTypes=value;
	});

	return ResPataUpdateStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名
*/
//class net.message.guild.ResGuildChangeNoticeMessage extends net.Message
var ResGuildChangeNoticeMessage=(function(_super){
	function ResGuildChangeNoticeMessage(){
		/**修改的公告 */
		this._notice=null;
		ResGuildChangeNoticeMessage.__super.call(this);
	}

	__class(ResGuildChangeNoticeMessage,'net.message.guild.ResGuildChangeNoticeMessage',_super);
	var __proto=ResGuildChangeNoticeMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._notice);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._notice=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1219;
	}

	/**修改的公告 */
	/**修改的公告 */
	__getset(0,__proto,'notice',function(){
		return this._notice;
		},function(value){
		this._notice=value;
	});

	return ResGuildChangeNoticeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有队伍的简要信息
*/
//class net.message.team.ReqTeamGetAllMessage extends net.Message
var ReqTeamGetAllMessage=(function(_super){
	function ReqTeamGetAllMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		ReqTeamGetAllMessage.__super.call(this);
	}

	__class(ReqTeamGetAllMessage,'net.message.team.ReqTeamGetAllMessage',_super);
	var __proto=ReqTeamGetAllMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1269;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTeamGetAllMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取积分奖励
*/
//class net.message.todayrecommend.ResRecommendTaskIntegralRewardMessage extends net.Message
var ResRecommendTaskIntegralRewardMessage=(function(_super){
	function ResRecommendTaskIntegralRewardMessage(){
		/**索引 */
		this._index=0;
		ResRecommendTaskIntegralRewardMessage.__super.call(this);
	}

	__class(ResRecommendTaskIntegralRewardMessage,'net.message.todayrecommend.ResRecommendTaskIntegralRewardMessage',_super);
	var __proto=ResRecommendTaskIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1505;
	}

	/**索引 */
	/**索引 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResRecommendTaskIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*其他人加入全民首领
*/
//class net.message.dungeon.ResQuanMinBossOtherJoinMessage extends net.Message
var ResQuanMinBossOtherJoinMessage=(function(_super){
	function ResQuanMinBossOtherJoinMessage(){
		/**加入的玩家 */
		this._self=null;
		ResQuanMinBossOtherJoinMessage.__super.call(this);
	}

	__class(ResQuanMinBossOtherJoinMessage,'net.message.dungeon.ResQuanMinBossOtherJoinMessage',_super);
	var __proto=ResQuanMinBossOtherJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._self);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._self=this.readBean(_buf,QuanMinBossBean);
	}

	__proto.getId=function(){
		return 1474;
	}

	/**加入的玩家 */
	/**加入的玩家 */
	__getset(0,__proto,'self',function(){
		return this._self;
		},function(value){
		this._self=value;
	});

	return ResQuanMinBossOtherJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级英雄技能
*/
//class net.message.skill.ResUpgradeHeroSkillMessage extends net.Message
var ResUpgradeHeroSkillMessage=(function(_super){
	function ResUpgradeHeroSkillMessage(){
		/**英雄ID */
		this._heroID=0;
		/**技能 */
		this._skill=null;
		ResUpgradeHeroSkillMessage.__super.call(this);
	}

	__class(ResUpgradeHeroSkillMessage,'net.message.skill.ResUpgradeHeroSkillMessage',_super);
	var __proto=ResUpgradeHeroSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._skill);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._skill=this.readBean(_buf,SkillBean);
	}

	__proto.getId=function(){
		return 187;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return ResUpgradeHeroSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级圣甲圣武
*/
//class net.message.equip.ResUpGradeEquipMessage extends net.Message
var ResUpGradeEquipMessage=(function(_super){
	function ResUpGradeEquipMessage(){
		/**道具 */
		this._equip=null;
		/**英雄ID */
		this._heroID=0;
		ResUpGradeEquipMessage.__super.call(this);
	}

	__class(ResUpGradeEquipMessage,'net.message.equip.ResUpGradeEquipMessage',_super);
	var __proto=ResUpGradeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._equip);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._equip=this.readBean(_buf,GoodsBean);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 948;
	}

	/**道具 */
	/**道具 */
	__getset(0,__proto,'equip',function(){
		return this._equip;
		},function(value){
		this._equip=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ResUpGradeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家
*/
//class net.message.gb.ResLegionBattleLeaveMessage extends net.Message
var ResLegionBattleLeaveMessage=(function(_super){
	function ResLegionBattleLeaveMessage(){
		ResLegionBattleLeaveMessage.__super.call(this);;
	}

	__class(ResLegionBattleLeaveMessage,'net.message.gb.ResLegionBattleLeaveMessage',_super);
	var __proto=ResLegionBattleLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1332;
	}

	return ResLegionBattleLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡错误
*/
//class net.message.chat.ResChatNeedHelpErrorMessage extends net.Message
var ResChatNeedHelpErrorMessage=(function(_super){
	function ResChatNeedHelpErrorMessage(){
		/**1:没有求助次数了;2:求助cd中;*/
		this._error=0;
		ResChatNeedHelpErrorMessage.__super.call(this);
	}

	__class(ResChatNeedHelpErrorMessage,'net.message.chat.ResChatNeedHelpErrorMessage',_super);
	var __proto=ResChatNeedHelpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 876;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatNeedHelpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家退出九重天
*/
//class net.message.nineHeavy.ReqNineHeavyPlayerLeaveMessage extends net.Message
var ReqNineHeavyPlayerLeaveMessage=(function(_super){
	function ReqNineHeavyPlayerLeaveMessage(){
		/**玩家退出 */
		this._uid=null;
		ReqNineHeavyPlayerLeaveMessage.__super.call(this);
	}

	__class(ReqNineHeavyPlayerLeaveMessage,'net.message.nineHeavy.ReqNineHeavyPlayerLeaveMessage',_super);
	var __proto=ReqNineHeavyPlayerLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 376;
	}

	/**玩家退出 */
	/**玩家退出 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqNineHeavyPlayerLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战组队招募
*/
//class net.message.gb.ReqLegionBattleHireMessage extends net.Message
var ReqLegionBattleHireMessage=(function(_super){
	function ReqLegionBattleHireMessage(){
		ReqLegionBattleHireMessage.__super.call(this);;
	}

	__class(ReqLegionBattleHireMessage,'net.message.gb.ReqLegionBattleHireMessage',_super);
	var __proto=ReqLegionBattleHireMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1324;
	}

	return ReqLegionBattleHireMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战师门任务错误
*/
//class net.message.shimen.ResChallengeShiMenErrorMessage extends net.Message
var ResChallengeShiMenErrorMessage=(function(_super){
	function ResChallengeShiMenErrorMessage(){
		/**1:没有任务;*/
		this._error=0;
		ResChallengeShiMenErrorMessage.__super.call(this);
	}

	__class(ResChallengeShiMenErrorMessage,'net.message.shimen.ResChallengeShiMenErrorMessage',_super);
	var __proto=ResChallengeShiMenErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 135;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChallengeShiMenErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿领取
*/
//class net.message.activities.ResWeekendXuYuanGetMessage extends net.Message
var ResWeekendXuYuanGetMessage=(function(_super){
	function ResWeekendXuYuanGetMessage(){
		ResWeekendXuYuanGetMessage.__super.call(this);;
	}

	__class(ResWeekendXuYuanGetMessage,'net.message.activities.ResWeekendXuYuanGetMessage',_super);
	var __proto=ResWeekendXuYuanGetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1653;
	}

	return ResWeekendXuYuanGetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请错误
*/
//class net.message.marriage.ResMarriagePataInviteErrorMessage extends net.Message
var ResMarriagePataInviteErrorMessage=(function(_super){
	function ResMarriagePataInviteErrorMessage(){
		/**1:没有结婚;2:没钱了;3:最大等级;4:离线;*/
		this._error=0;
		ResMarriagePataInviteErrorMessage.__super.call(this);
	}

	__class(ResMarriagePataInviteErrorMessage,'net.message.marriage.ResMarriagePataInviteErrorMessage',_super);
	var __proto=ResMarriagePataInviteErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1494;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriagePataInviteErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴升星错误
*/
//class net.message.handbook.ResHandBookUpStarErrorMessage extends net.Message
var ResHandBookUpStarErrorMessage=(function(_super){
	function ResHandBookUpStarErrorMessage(){
		/**1:未激活;2:消耗不足;3:最大等级;4:其他错误;*/
		this._error=0;
		ResHandBookUpStarErrorMessage.__super.call(this);
	}

	__class(ResHandBookUpStarErrorMessage,'net.message.handbook.ResHandBookUpStarErrorMessage',_super);
	var __proto=ResHandBookUpStarErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1127;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResHandBookUpStarErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*许愿
*/
//class net.message.gongCe.ResXuYuanMessage extends net.Message
var ResXuYuanMessage=(function(_super){
	function ResXuYuanMessage(){
		/**是否成功 1=是 0=否 */
		this._isSuccess=0;
		ResXuYuanMessage.__super.call(this);
	}

	__class(ResXuYuanMessage,'net.message.gongCe.ResXuYuanMessage',_super);
	var __proto=ResXuYuanMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._isSuccess);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isSuccess=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1636;
	}

	/**是否成功 1=是 0=否 */
	/**是否成功 1=是 0=否 */
	__getset(0,__proto,'isSuccess',function(){
		return this._isSuccess;
		},function(value){
		this._isSuccess=value;
	});

	return ResXuYuanMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶
*/
//class net.message.upgrade.ReqCommonIllusionMessage extends net.Message
var ReqCommonIllusionMessage=(function(_super){
	function ReqCommonIllusionMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**幻化外形 */
		this._illusion=0;
		ReqCommonIllusionMessage.__super.call(this);
	}

	__class(ReqCommonIllusionMessage,'net.message.upgrade.ReqCommonIllusionMessage',_super);
	var __proto=ReqCommonIllusionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._illusion);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._illusion=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 883;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**幻化外形 */
	/**幻化外形 */
	__getset(0,__proto,'illusion',function(){
		return this._illusion;
		},function(value){
		this._illusion=value;
	});

	return ReqCommonIllusionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始赤壁任务
*/
//class net.message.chibi.ReqChibiStartTaskMessage extends net.Message
var ReqChibiStartTaskMessage=(function(_super){
	function ReqChibiStartTaskMessage(){
		/**任务ID */
		this._qid=0;
		ReqChibiStartTaskMessage.__super.call(this);
		this._heroid=[];
	}

	__class(ReqChibiStartTaskMessage,'net.message.chibi.ReqChibiStartTaskMessage',_super);
	var __proto=ReqChibiStartTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
		this.writeInt(_buf,this._heroid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._heroid.length;++i_am_tmp_i){
			this._heroid[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._heroid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._heroid[i_am_tmp_i]=this.readBeanInList(_buf,ChibiHeroBean);
		}
	}

	__proto.getId=function(){
		return 391;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**英雄队列 */
	/**英雄队列 */
	__getset(0,__proto,'heroid',function(){
		return this._heroid;
		},function(value){
		this._heroid=value;
	});

	return ReqChibiStartTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刀币翻倍活动
*/
//class net.message.activities.ResGoldDoubleActMessage extends net.Message
var ResGoldDoubleActMessage=(function(_super){
	function ResGoldDoubleActMessage(){
		/**最后投入刀币的索引 */
		this._lastCfgIndex=0;
		/**获得的刀币 */
		this._getNum=0;
		ResGoldDoubleActMessage.__super.call(this);
	}

	__class(ResGoldDoubleActMessage,'net.message.activities.ResGoldDoubleActMessage',_super);
	var __proto=ResGoldDoubleActMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lastCfgIndex);
		this.writeInt(_buf,this._getNum);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lastCfgIndex=this.readInt(_buf);
		this._getNum=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1549;
	}

	/**最后投入刀币的索引 */
	/**最后投入刀币的索引 */
	__getset(0,__proto,'lastCfgIndex',function(){
		return this._lastCfgIndex;
		},function(value){
		this._lastCfgIndex=value;
	});

	/**获得的刀币 */
	/**获得的刀币 */
	__getset(0,__proto,'getNum',function(){
		return this._getNum;
		},function(value){
		this._getNum=value;
	});

	return ResGoldDoubleActMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔主界面
*/
//class net.message.towerFight.ResEnterTowerMessage extends net.Message
var ResEnterTowerMessage=(function(_super){
	function ResEnterTowerMessage(){
		ResEnterTowerMessage.__super.call(this);
		this._towerInfoList=[];
	}

	__class(ResEnterTowerMessage,'net.message.towerFight.ResEnterTowerMessage',_super);
	var __proto=ResEnterTowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._towerInfoList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._towerInfoList.length;++i_am_tmp_i){
			this._towerInfoList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._towerInfoList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._towerInfoList[i_am_tmp_i]=this.readBeanInList(_buf,TowerInfo);
		}
	}

	__proto.getId=function(){
		return 1611;
	}

	/**塔信息 */
	/**塔信息 */
	__getset(0,__proto,'towerInfoList',function(){
		return this._towerInfoList;
		},function(value){
		this._towerInfoList=value;
	});

	return ResEnterTowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升星错误
*/
//class net.message.pet.ResUpgradePetStarErrorMessage extends net.Message
var ResUpgradePetStarErrorMessage=(function(_super){
	function ResUpgradePetStarErrorMessage(){
		/**1:没有宠物;2:等级达到上限;3:没有道具;*/
		this._error=0;
		ResUpgradePetStarErrorMessage.__super.call(this);
	}

	__class(ResUpgradePetStarErrorMessage,'net.message.pet.ResUpgradePetStarErrorMessage',_super);
	var __proto=ResUpgradePetStarErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 162;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradePetStarErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取三国令等级奖励
*/
//class net.message.wartoken.ReqGetWarTokenRewardMessage extends net.Message
var ReqGetWarTokenRewardMessage=(function(_super){
	function ReqGetWarTokenRewardMessage(){
		/**configId */
		this._configId=0;
		/**是否普通奖励？0：1 */
		this._isChuanqiTie=0;
		ReqGetWarTokenRewardMessage.__super.call(this);
	}

	__class(ReqGetWarTokenRewardMessage,'net.message.wartoken.ReqGetWarTokenRewardMessage',_super);
	var __proto=ReqGetWarTokenRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
		this.writeInt(_buf,this._isChuanqiTie);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
		this._isChuanqiTie=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 890;
	}

	/**configId */
	/**configId */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	/**是否普通奖励？0：1 */
	/**是否普通奖励？0：1 */
	__getset(0,__proto,'isChuanqiTie',function(){
		return this._isChuanqiTie;
		},function(value){
		this._isChuanqiTie=value;
	});

	return ReqGetWarTokenRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入九重天活动
*/
//class net.message.nineHeavy.ResNineHeavyPlayerJoinMessage extends net.Message
var ResNineHeavyPlayerJoinMessage=(function(_super){
	function ResNineHeavyPlayerJoinMessage(){
		/**你自己的对象 */
		this._bean=null;
		ResNineHeavyPlayerJoinMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerJoinMessage,'net.message.nineHeavy.ResNineHeavyPlayerJoinMessage',_super);
	var __proto=ResNineHeavyPlayerJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,NineHeavyPlayerBean);
	}

	__proto.getId=function(){
		return 366;
	}

	/**你自己的对象 */
	/**你自己的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResNineHeavyPlayerJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取全服boss信息
*/
//class net.message.quanfuboss.ReqQuanFuBossGetInfoMessage extends net.Message
var ReqQuanFuBossGetInfoMessage=(function(_super){
	function ReqQuanFuBossGetInfoMessage(){
		/**副本ID */
		this._dungeonID=0;
		ReqQuanFuBossGetInfoMessage.__super.call(this);
	}

	__class(ReqQuanFuBossGetInfoMessage,'net.message.quanfuboss.ReqQuanFuBossGetInfoMessage',_super);
	var __proto=ReqQuanFuBossGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1107;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	return ReqQuanFuBossGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*读取邮件
*/
//class net.message.mail.ReqReadMailMessage extends net.Message
var ReqReadMailMessage=(function(_super){
	function ReqReadMailMessage(){
		/**邮件ID */
		this._mailID=0;
		ReqReadMailMessage.__super.call(this);
	}

	__class(ReqReadMailMessage,'net.message.mail.ReqReadMailMessage',_super);
	var __proto=ReqReadMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 46;
	}

	/**邮件ID */
	/**邮件ID */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	return ReqReadMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战
*/
//class net.message.arena.ReqArenaChallengeMessage extends net.Message
var ReqArenaChallengeMessage=(function(_super){
	function ReqArenaChallengeMessage(){
		/**目标id */
		this._dstUid=null;
		/**目标名次 */
		this._dstRank=0;
		/**自己名次 */
		this._myRank=0;
		ReqArenaChallengeMessage.__super.call(this);
	}

	__class(ReqArenaChallengeMessage,'net.message.arena.ReqArenaChallengeMessage',_super);
	var __proto=ReqArenaChallengeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._dstUid);
		this.writeInt(_buf,this._dstRank);
		this.writeInt(_buf,this._myRank);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dstUid=this.readLong(_buf);
		this._dstRank=this.readInt(_buf);
		this._myRank=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 277;
	}

	/**目标id */
	/**目标id */
	__getset(0,__proto,'dstUid',function(){
		return this._dstUid;
		},function(value){
		this._dstUid=value;
	});

	/**目标名次 */
	/**目标名次 */
	__getset(0,__proto,'dstRank',function(){
		return this._dstRank;
		},function(value){
		this._dstRank=value;
	});

	/**自己名次 */
	/**自己名次 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	return ReqArenaChallengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团首领信息错误
*/
//class net.message.worldboss.ResGetWorldBossInfoErrorMessage extends net.Message
var ResGetWorldBossInfoErrorMessage=(function(_super){
	function ResGetWorldBossInfoErrorMessage(){
		/**1:活动未开始;*/
		this._error=0;
		ResGetWorldBossInfoErrorMessage.__super.call(this);
	}

	__class(ResGetWorldBossInfoErrorMessage,'net.message.worldboss.ResGetWorldBossInfoErrorMessage',_super);
	var __proto=ResGetWorldBossInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1517;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetWorldBossInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*pvp战斗结束请求解锁
*/
//class net.message.fight.ResPVPFightOverUnlockMessage extends net.Message
var ResPVPFightOverUnlockMessage=(function(_super){
	function ResPVPFightOverUnlockMessage(){
		/**目前是否锁定 */
		this._lock=false;
		ResPVPFightOverUnlockMessage.__super.call(this);
	}

	__class(ResPVPFightOverUnlockMessage,'net.message.fight.ResPVPFightOverUnlockMessage',_super);
	var __proto=ResPVPFightOverUnlockMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._lock);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lock=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1287;
	}

	/**目前是否锁定 */
	/**目前是否锁定 */
	__getset(0,__proto,'lock',function(){
		return this._lock;
		},function(value){
		this._lock=value;
	});

	return ResPVPFightOverUnlockMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录参数修改
*/
//class net.message.login.ReqLoginParamUpdateMessage extends net.Message
var ReqLoginParamUpdateMessage=(function(_super){
	function ReqLoginParamUpdateMessage(){
		/**更新类型1分享 2关注 3 微端下载 4实名认证 5保存桌面 */
		this._type=0;
		/**更新参数 */
		this._params=null;
		ReqLoginParamUpdateMessage.__super.call(this);
	}

	__class(ReqLoginParamUpdateMessage,'net.message.login.ReqLoginParamUpdateMessage',_super);
	var __proto=ReqLoginParamUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1453;
	}

	/**更新类型1分享 2关注 3 微端下载 4实名认证 5保存桌面 */
	/**更新类型1分享 2关注 3 微端下载 4实名认证 5保存桌面 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**更新参数 */
	/**更新参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ReqLoginParamUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新玄女属性
*/
//class net.message.xuannv.ResUpdateXuanNvAttributeMessage extends net.Message
var ResUpdateXuanNvAttributeMessage=(function(_super){
	function ResUpdateXuanNvAttributeMessage(){
		ResUpdateXuanNvAttributeMessage.__super.call(this);
		this._attributes=[];
	}

	__class(ResUpdateXuanNvAttributeMessage,'net.message.xuannv.ResUpdateXuanNvAttributeMessage',_super);
	var __proto=ResUpdateXuanNvAttributeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	__proto.getId=function(){
		return 254;
	}

	/**属性列表,见AttributeType */
	/**属性列表,见AttributeType */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	return ResUpdateXuanNvAttributeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔具体某个塔
*/
//class net.message.towerFight.ResselectTowerMessage extends net.Message
var ResselectTowerMessage=(function(_super){
	function ResselectTowerMessage(){
		/**该层层数信息 */
		this._lower=0;
		ResselectTowerMessage.__super.call(this);
		this._fightPositionBeans=[];
	}

	__class(ResselectTowerMessage,'net.message.towerFight.ResselectTowerMessage',_super);
	var __proto=ResselectTowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightPositionBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fightPositionBeans.length;++i_am_tmp_i){
			this._fightPositionBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._lower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._fightPositionBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fightPositionBeans[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionBean);
		}
		this._lower=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1617;
	}

	/**塔阵容信息 */
	/**塔阵容信息 */
	__getset(0,__proto,'fightPositionBeans',function(){
		return this._fightPositionBeans;
		},function(value){
		this._fightPositionBeans=value;
	});

	/**该层层数信息 */
	/**该层层数信息 */
	__getset(0,__proto,'lower',function(){
		return this._lower;
		},function(value){
		this._lower=value;
	});

	return ResselectTowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求给钱复活错误
*/
//class net.message.gb.ResLegionBattlePayRebornErrorMessage extends net.Message
var ResLegionBattlePayRebornErrorMessage=(function(_super){
	function ResLegionBattlePayRebornErrorMessage(){
		/**1:未开启;2:不在活动中;3:不是队长;4:穷;5:没人死亡;*/
		this._error=0;
		ResLegionBattlePayRebornErrorMessage.__super.call(this);
	}

	__class(ResLegionBattlePayRebornErrorMessage,'net.message.gb.ResLegionBattlePayRebornErrorMessage',_super);
	var __proto=ResLegionBattlePayRebornErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1336;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattlePayRebornErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求战斗结果错误
*/
//class net.message.kingwar.ResKingWarFightRewardErrorMessage extends net.Message
var ResKingWarFightRewardErrorMessage=(function(_super){
	function ResKingWarFightRewardErrorMessage(){
		/**1:战斗超时 没找到战斗记录;*/
		this._error=0;
		ResKingWarFightRewardErrorMessage.__super.call(this);
	}

	__class(ResKingWarFightRewardErrorMessage,'net.message.kingwar.ResKingWarFightRewardErrorMessage',_super);
	var __proto=ResKingWarFightRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 494;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarFightRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送聊天信息
*/
//class net.message.chat.ResChatMessage extends net.Message
var ResChatMessage=(function(_super){
	function ResChatMessage(){
		/**频道 */
		this._channel=0;
		/**bean */
		this._bean=null;
		/**对方在线状态[0离线 1在线 2未知] */
		this._onLineFlag=0;
		ResChatMessage.__super.call(this);
	}

	__class(ResChatMessage,'net.message.chat.ResChatMessage',_super);
	var __proto=ResChatMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._channel);
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._onLineFlag);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._channel=this.readInt(_buf);
		this._bean=this.readBean(_buf,ChatBean);
		this._onLineFlag=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 689;
	}

	/**对方在线状态[0离线 1在线 2未知] */
	/**对方在线状态[0离线 1在线 2未知] */
	__getset(0,__proto,'onLineFlag',function(){
		return this._onLineFlag;
		},function(value){
		this._onLineFlag=value;
	});

	/**频道 */
	/**频道 */
	__getset(0,__proto,'channel',function(){
		return this._channel;
		},function(value){
		this._channel=value;
	});

	/**bean */
	/**bean */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResChatMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家
*/
//class net.message.gb.ReqLegionBattleAttackPlayerMessage extends net.Message
var ReqLegionBattleAttackPlayerMessage=(function(_super){
	function ReqLegionBattleAttackPlayerMessage(){
		/**发玩家ID就行 我会判断他是不是在一个队伍中 */
		this._uid=null;
		ReqLegionBattleAttackPlayerMessage.__super.call(this);
	}

	__class(ReqLegionBattleAttackPlayerMessage,'net.message.gb.ReqLegionBattleAttackPlayerMessage',_super);
	var __proto=ReqLegionBattleAttackPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1337;
	}

	/**发玩家ID就行 我会判断他是不是在一个队伍中 */
	/**发玩家ID就行 我会判断他是不是在一个队伍中 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqLegionBattleAttackPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战挂机关卡(领奖)错误
*/
//class net.message.dungeon.ResChallengeGuanQiaErrorMessage extends net.Message
var ResChallengeGuanQiaErrorMessage=(function(_super){
	function ResChallengeGuanQiaErrorMessage(){
		/**1:挑战CD中;2:背包已满;*/
		this._error=0;
		ResChallengeGuanQiaErrorMessage.__super.call(this);
	}

	__class(ResChallengeGuanQiaErrorMessage,'net.message.dungeon.ResChallengeGuanQiaErrorMessage',_super);
	var __proto=ResChallengeGuanQiaErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 113;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChallengeGuanQiaErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*重置军团广场任务错误
*/
//class net.message.task.ResTaskGuildSquareResetErrorMessage extends net.Message
var ResTaskGuildSquareResetErrorMessage=(function(_super){
	function ResTaskGuildSquareResetErrorMessage(){
		/**1:参数错误;2:没钱;*/
		this._error=0;
		ResTaskGuildSquareResetErrorMessage.__super.call(this);
	}

	__class(ResTaskGuildSquareResetErrorMessage,'net.message.task.ResTaskGuildSquareResetErrorMessage',_super);
	var __proto=ResTaskGuildSquareResetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1309;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTaskGuildSquareResetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取珍稀宝物剩余次数信息
*/
//class net.message.textureHunt.ResGetBaoWuRestTimesMessage extends net.Message
var ResGetBaoWuRestTimesMessage=(function(_super){
	function ResGetBaoWuRestTimesMessage(){
		/**当前第N轮 */
		this._times=0;
		ResGetBaoWuRestTimesMessage.__super.call(this);
	}

	__class(ResGetBaoWuRestTimesMessage,'net.message.textureHunt.ResGetBaoWuRestTimesMessage',_super);
	var __proto=ResGetBaoWuRestTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1641;
	}

	/**当前第N轮 */
	/**当前第N轮 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResGetBaoWuRestTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会信息
*/
//class net.message.qunyinghui.ResQunYingHuiSignUpRecordMessage extends net.Message
var ResQunYingHuiSignUpRecordMessage=(function(_super){
	function ResQunYingHuiSignUpRecordMessage(){
		/**是否报名 */
		this._signed=false;
		/**状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
		this._state=0;
		/**根节点 */
		this._root=null;
		/**上届冠军 */
		this._preKing=null;
		/**上届冠军对手 */
		this._preTarget=null;
		/**当前阶段的开始时间戳,秒 */
		this._startTime=0;
		ResQunYingHuiSignUpRecordMessage.__super.call(this);
		this._all=[];
		this._preHistory=[];
	}

	__class(ResQunYingHuiSignUpRecordMessage,'net.message.qunyinghui.ResQunYingHuiSignUpRecordMessage',_super);
	var __proto=ResQunYingHuiSignUpRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._signed);
		this.writeInt(_buf,this._state);
		this.writeBean(_buf,this._root);
		this.writeInt(_buf,this._all.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._all.length;++i_am_tmp_i){
			this._all[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._preKing);
		this.writeBean(_buf,this._preTarget);
		this.writeInt(_buf,this._preHistory.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._preHistory.length;++i_am_tmp_i){
			this._preHistory[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._startTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._signed=this.readBoolean(_buf);
		this._state=this.readInt(_buf);
		this._root=this.readBean(_buf,QunYingHuiFighterBean);
		size52413035=this.readInt(_buf);
		this._all=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._all[i_am_tmp_i]=this.readBeanInList(_buf,QunYingHuiFighterBriefBean);
		}
		this._preKing=this.readBean(_buf,QunYingHuiFighterDetailBean);
		this._preTarget=this.readBean(_buf,QunYingHuiFighterDetailBean);
		size52413035=this.readInt(_buf);
		this._preHistory=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._preHistory[i_am_tmp_i]=this.readBeanInList(_buf,FightBean);
		}
		this._startTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 474;
	}

	/**根节点 */
	/**根节点 */
	__getset(0,__proto,'root',function(){
		return this._root;
		},function(value){
		this._root=value;
	});

	/**是否报名 */
	/**是否报名 */
	__getset(0,__proto,'signed',function(){
		return this._signed;
		},function(value){
		this._signed=value;
	});

	/**当前阶段的开始时间戳,秒 */
	/**当前阶段的开始时间戳,秒 */
	__getset(0,__proto,'startTime',function(){
		return this._startTime;
		},function(value){
		this._startTime=value;
	});

	/**上届冠军战斗历史 */
	/**上届冠军战斗历史 */
	__getset(0,__proto,'preHistory',function(){
		return this._preHistory;
		},function(value){
		this._preHistory=value;
	});

	/**状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
	/**状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
	__getset(0,__proto,'state',function(){
		return this._state;
		},function(value){
		this._state=value;
	});

	/**所有参赛玩家 */
	/**所有参赛玩家 */
	__getset(0,__proto,'all',function(){
		return this._all;
		},function(value){
		this._all=value;
	});

	/**上届冠军 */
	/**上届冠军 */
	__getset(0,__proto,'preKing',function(){
		return this._preKing;
		},function(value){
		this._preKing=value;
	});

	/**上届冠军对手 */
	/**上届冠军对手 */
	__getset(0,__proto,'preTarget',function(){
		return this._preTarget;
		},function(value){
		this._preTarget=value;
	});

	return ResQunYingHuiSignUpRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取远征信息
*/
//class net.message.yuanzheng.ReqYuanZhengGetInfoMessage extends net.Message
var ReqYuanZhengGetInfoMessage=(function(_super){
	function ReqYuanZhengGetInfoMessage(){
		ReqYuanZhengGetInfoMessage.__super.call(this);;
	}

	__class(ReqYuanZhengGetInfoMessage,'net.message.yuanzheng.ReqYuanZhengGetInfoMessage',_super);
	var __proto=ReqYuanZhengGetInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 292;
	}

	return ReqYuanZhengGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*推送每天的活动状态变更
*/
//class net.message.activities.ResFlushActivitiesMessage extends net.Message
var ResFlushActivitiesMessage=(function(_super){
	function ResFlushActivitiesMessage(){
		ResFlushActivitiesMessage.__super.call(this);
		this._onActive=[];
	}

	__class(ResFlushActivitiesMessage,'net.message.activities.ResFlushActivitiesMessage',_super);
	var __proto=ResFlushActivitiesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._onActive.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._onActive.length;++i_am_tmp_i){
			this.writeInt(_buf,this._onActive[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._onActive=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._onActive[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 356;
	}

	/**当前活动中的 */
	/**当前活动中的 */
	__getset(0,__proto,'onActive',function(){
		return this._onActive;
		},function(value){
		this._onActive=value;
	});

	return ResFlushActivitiesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新猎命等级错误
*/
//class net.message.lieming.ResUpdateLieMingLevelErrorMessage extends net.Message
var ResUpdateLieMingLevelErrorMessage=(function(_super){
	function ResUpdateLieMingLevelErrorMessage(){
		/**1:货币不足;2:请先完成1次命格猎命;*/
		this._error=0;
		ResUpdateLieMingLevelErrorMessage.__super.call(this);
	}

	__class(ResUpdateLieMingLevelErrorMessage,'net.message.lieming.ResUpdateLieMingLevelErrorMessage',_super);
	var __proto=ResUpdateLieMingLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 734;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpdateLieMingLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求怪物
*/
//class net.message.gb.ReqLegionBattleAttackMonsterMessage extends net.Message
var ReqLegionBattleAttackMonsterMessage=(function(_super){
	function ReqLegionBattleAttackMonsterMessage(){
		/**怪物序号 */
		this._monsterIndex=0;
		ReqLegionBattleAttackMonsterMessage.__super.call(this);
	}

	__class(ReqLegionBattleAttackMonsterMessage,'net.message.gb.ReqLegionBattleAttackMonsterMessage',_super);
	var __proto=ReqLegionBattleAttackMonsterMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._monsterIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._monsterIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1343;
	}

	/**怪物序号 */
	/**怪物序号 */
	__getset(0,__proto,'monsterIndex',function(){
		return this._monsterIndex;
		},function(value){
		this._monsterIndex=value;
	});

	return ReqLegionBattleAttackMonsterMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求排行榜
*/
//class net.message.nineHeavy.ResNineHeavyPlayerRankMessage extends net.Message
var ResNineHeavyPlayerRankMessage=(function(_super){
	function ResNineHeavyPlayerRankMessage(){
		/**1 本周 2 上周 */
		this._type=0;
		ResNineHeavyPlayerRankMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResNineHeavyPlayerRankMessage,'net.message.nineHeavy.ResNineHeavyPlayerRankMessage',_super);
	var __proto=ResNineHeavyPlayerRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,NineHeavyIntegralRankBean);
		}
	}

	__proto.getId=function(){
		return 386;
	}

	/**1 本周 2 上周 */
	/**1 本周 2 上周 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**排行榜 */
	/**排行榜 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	return ResNineHeavyPlayerRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体技能
*/
//class net.message.fit.ReqFitSetSkillMessage extends net.Message
var ReqFitSetSkillMessage=(function(_super){
	function ReqFitSetSkillMessage(){
		/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
		this._type=0;
		/**合体技能ID 传0代表删除 */
		this._id=0;
		ReqFitSetSkillMessage.__super.call(this);
	}

	__class(ReqFitSetSkillMessage,'net.message.fit.ReqFitSetSkillMessage',_super);
	var __proto=ReqFitSetSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1174;
	}

	/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体技能ID 传0代表删除 */
	/**合体技能ID 传0代表删除 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqFitSetSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升级
*/
//class net.message.pet.ResUpgradePetLevelMessage extends net.Message
var ResUpgradePetLevelMessage=(function(_super){
	function ResUpgradePetLevelMessage(){
		/**宠物ID */
		this._petID=0;
		/**宠物等级 */
		this._level=0;
		/**宠物经验 */
		this._exp=null;
		ResUpgradePetLevelMessage.__super.call(this);
	}

	__class(ResUpgradePetLevelMessage,'net.message.pet.ResUpgradePetLevelMessage',_super);
	var __proto=ResUpgradePetLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 158;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**宠物等级 */
	/**宠物等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**宠物经验 */
	/**宠物经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResUpgradePetLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取透支计划奖励
*/
//class net.message.investment.ResInvestmengTaskRewardMessageMessage extends net.Message
var ResInvestmengTaskRewardMessageMessage=(function(_super){
	function ResInvestmengTaskRewardMessageMessage(){
		/**uid */
		this._id=0;
		ResInvestmengTaskRewardMessageMessage.__super.call(this);
	}

	__class(ResInvestmengTaskRewardMessageMessage,'net.message.investment.ResInvestmengTaskRewardMessageMessage',_super);
	var __proto=ResInvestmengTaskRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 678;
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResInvestmengTaskRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树额外奖励
*/
//class net.message.welfare.ResGetYaoQianRewardAdditionallyMessage extends net.Message
var ResGetYaoQianRewardAdditionallyMessage=(function(_super){
	function ResGetYaoQianRewardAdditionallyMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResGetYaoQianRewardAdditionallyMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResGetYaoQianRewardAdditionallyMessage,'net.message.welfare.ResGetYaoQianRewardAdditionallyMessage',_super);
	var __proto=ResGetYaoQianRewardAdditionallyMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,WelfareBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 744;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResGetYaoQianRewardAdditionallyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖行上架物品错误
*/
//class net.message.auction.ResAuctionUpperErrorMessage extends net.Message
var ResAuctionUpperErrorMessage=(function(_super){
	function ResAuctionUpperErrorMessage(){
		/**1:参数错误;2:道具不足;*/
		this._error=0;
		ResAuctionUpperErrorMessage.__super.call(this);
	}

	__class(ResAuctionUpperErrorMessage,'net.message.auction.ResAuctionUpperErrorMessage',_super);
	var __proto=ResAuctionUpperErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1381;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAuctionUpperErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*怪物刷新
*/
//class net.message.nineHeavy.ResNineHeavyMonsterFlushMessage extends net.Message
var ResNineHeavyMonsterFlushMessage=(function(_super){
	function ResNineHeavyMonsterFlushMessage(){
		/**怪物对象 */
		this._bean=null;
		ResNineHeavyMonsterFlushMessage.__super.call(this);
	}

	__class(ResNineHeavyMonsterFlushMessage,'net.message.nineHeavy.ResNineHeavyMonsterFlushMessage',_super);
	var __proto=ResNineHeavyMonsterFlushMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,NineHeavyMonsterBean);
	}

	__proto.getId=function(){
		return 364;
	}

	/**怪物对象 */
	/**怪物对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResNineHeavyMonsterFlushMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取藏宝图奖励
*/
//class net.message.pata.ResTakeCBTPrizeMessage extends net.Message
var ResTakeCBTPrizeMessage=(function(_super){
	function ResTakeCBTPrizeMessage(){
		/**页 */
		this._page=0;
		/**星 */
		this._star=0;
		ResTakeCBTPrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResTakeCBTPrizeMessage,'net.message.pata.ResTakeCBTPrizeMessage',_super);
	var __proto=ResTakeCBTPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._page);
		this.writeInt(_buf,this._star);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._page=this.readInt(_buf);
		this._star=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 243;
	}

	/**页 */
	/**页 */
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	/**星 */
	/**星 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResTakeCBTPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成灵童卡
*/
//class net.message.soulboy.ReqSoulBoySynthesisMessage extends net.Message
var ReqSoulBoySynthesisMessage=(function(_super){
	function ReqSoulBoySynthesisMessage(){
		/**灵童ID */
		this._id=0;
		ReqSoulBoySynthesisMessage.__super.call(this);
	}

	__class(ReqSoulBoySynthesisMessage,'net.message.soulboy.ReqSoulBoySynthesisMessage',_super);
	var __proto=ReqSoulBoySynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 464;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqSoulBoySynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新可捕获的宠物
*/
//class net.message.pet.ResUpdateWildPetMessage extends net.Message
var ResUpdateWildPetMessage=(function(_super){
	function ResUpdateWildPetMessage(){
		/**宠物ID */
		this._petID=0;
		ResUpdateWildPetMessage.__super.call(this);
	}

	__class(ResUpdateWildPetMessage,'net.message.pet.ResUpdateWildPetMessage',_super);
	var __proto=ResUpdateWildPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 194;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	return ResUpdateWildPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买星宿幻境挑战次数错误
*/
//class net.message.pata.ResBuyXXHJChallengeTimeErrorMessage extends net.Message
var ResBuyXXHJChallengeTimeErrorMessage=(function(_super){
	function ResBuyXXHJChallengeTimeErrorMessage(){
		/**1:参数错误;2:穷;3:最大次数;*/
		this._error=0;
		ResBuyXXHJChallengeTimeErrorMessage.__super.call(this);
	}

	__class(ResBuyXXHJChallengeTimeErrorMessage,'net.message.pata.ResBuyXXHJChallengeTimeErrorMessage',_super);
	var __proto=ResBuyXXHJChallengeTimeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1030;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResBuyXXHJChallengeTimeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.worldboss.ResWorldBossMoveMessage extends net.Message
var ResWorldBossMoveMessage=(function(_super){
	function ResWorldBossMoveMessage(){
		/**移动者的UID */
		this._uid=null;
		/**移动的位置 */
		this._point=null;
		ResWorldBossMoveMessage.__super.call(this);
	}

	__class(ResWorldBossMoveMessage,'net.message.worldboss.ResWorldBossMoveMessage',_super);
	var __proto=ResWorldBossMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 505;
	}

	/**移动者的UID */
	/**移动者的UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**移动的位置 */
	/**移动的位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ResWorldBossMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级
*/
//class net.message.juewei.ReqUpdateNewJueWeiLevelMessage extends net.Message
var ReqUpdateNewJueWeiLevelMessage=(function(_super){
	function ReqUpdateNewJueWeiLevelMessage(){
		ReqUpdateNewJueWeiLevelMessage.__super.call(this);;
	}

	__class(ReqUpdateNewJueWeiLevelMessage,'net.message.juewei.ReqUpdateNewJueWeiLevelMessage',_super);
	var __proto=ReqUpdateNewJueWeiLevelMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1489;
	}

	return ReqUpdateNewJueWeiLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用战令领奖消息错误
*/
//class net.message.wartoken.ResGetCommonWarTokenRewardErrorMessage extends net.Message
var ResGetCommonWarTokenRewardErrorMessage=(function(_super){
	function ResGetCommonWarTokenRewardErrorMessage(){
		/**1:配置错误;2:已经领取;3:条件未达成;4:没有高级资格;5:背包已满;6:其他错误;*/
		this._error=0;
		ResGetCommonWarTokenRewardErrorMessage.__super.call(this);
	}

	__class(ResGetCommonWarTokenRewardErrorMessage,'net.message.wartoken.ResGetCommonWarTokenRewardErrorMessage',_super);
	var __proto=ResGetCommonWarTokenRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1583;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetCommonWarTokenRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知竞技场开启/关闭
*/
//class net.message.arena.ResNotifyArenaOpenMessage extends net.Message
var ResNotifyArenaOpenMessage=(function(_super){
	function ResNotifyArenaOpenMessage(){
		/**是否开启 */
		this._open=false;
		/**本次开放，结束毫秒时间戳 */
		this._endTime=null;
		ResNotifyArenaOpenMessage.__super.call(this);
	}

	__class(ResNotifyArenaOpenMessage,'net.message.arena.ResNotifyArenaOpenMessage',_super);
	var __proto=ResNotifyArenaOpenMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._open);
		this.writeLong(_buf,this._endTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._open=this.readBoolean(_buf);
		this._endTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1619;
	}

	/**是否开启 */
	/**是否开启 */
	__getset(0,__proto,'open',function(){
		return this._open;
		},function(value){
		this._open=value;
	});

	/**本次开放，结束毫秒时间戳 */
	/**本次开放，结束毫秒时间戳 */
	__getset(0,__proto,'endTime',function(){
		return this._endTime;
		},function(value){
		this._endTime=value;
	});

	return ResNotifyArenaOpenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知更新商店购买记录
*/
//class net.message.legion.ResLegionUpdateShopMessageMessage extends net.Message
var ResLegionUpdateShopMessageMessage=(function(_super){
	function ResLegionUpdateShopMessageMessage(){
		ResLegionUpdateShopMessageMessage.__super.call(this);
		this._items=[];
	}

	__class(ResLegionUpdateShopMessageMessage,'net.message.legion.ResLegionUpdateShopMessageMessage',_super);
	var __proto=ResLegionUpdateShopMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 624;
	}

	/**购买记录 ID是商品 num是购买次数 */
	/**购买记录 ID是商品 num是购买次数 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	return ResLegionUpdateShopMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买三国令等级错误
*/
//class net.message.wartoken.ResBuyWarTokenLevelErrorMessage extends net.Message
var ResBuyWarTokenLevelErrorMessage=(function(_super){
	function ResBuyWarTokenLevelErrorMessage(){
		/**1:穷;2:配置有问题;3:最大等级;*/
		this._error=0;
		ResBuyWarTokenLevelErrorMessage.__super.call(this);
	}

	__class(ResBuyWarTokenLevelErrorMessage,'net.message.wartoken.ResBuyWarTokenLevelErrorMessage',_super);
	var __proto=ResBuyWarTokenLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 896;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResBuyWarTokenLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移除商店
*/
//class net.message.shop.ResRemoveShopMessage extends net.Message
var ResRemoveShopMessage=(function(_super){
	function ResRemoveShopMessage(){
		/**类型 */
		this._type=0;
		/**子类型 */
		this._tabType=0;
		ResRemoveShopMessage.__super.call(this);
	}

	__class(ResRemoveShopMessage,'net.message.shop.ResRemoveShopMessage',_super);
	var __proto=ResRemoveShopMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._tabType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._tabType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1393;
	}

	/**类型 */
	/**类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**子类型 */
	/**子类型 */
	__getset(0,__proto,'tabType',function(){
		return this._tabType;
		},function(value){
		this._tabType=value;
	});

	return ResRemoveShopMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*某个玩家离开广场
*/
//class net.message.legion.ResLegionOutSquareMessageMessage extends net.Message
var ResLegionOutSquareMessageMessage=(function(_super){
	function ResLegionOutSquareMessageMessage(){
		/**其他加入的玩家 */
		this._uid=null;
		ResLegionOutSquareMessageMessage.__super.call(this);
	}

	__class(ResLegionOutSquareMessageMessage,'net.message.legion.ResLegionOutSquareMessageMessage',_super);
	var __proto=ResLegionOutSquareMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 654;
	}

	/**其他加入的玩家 */
	/**其他加入的玩家 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResLegionOutSquareMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求公开招募错误
*/
//class net.message.legion.ResLegionHireMessageErrorMessage extends net.Message
var ResLegionHireMessageErrorMessage=(function(_super){
	function ResLegionHireMessageErrorMessage(){
		/**1:时间没到;*/
		this._error=0;
		ResLegionHireMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionHireMessageErrorMessage,'net.message.legion.ResLegionHireMessageErrorMessage',_super);
	var __proto=ResLegionHireMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 774;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionHireMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置镇守
*/
//class net.message.garrison.ResGarrisonSetGuardMessage extends net.Message
var ResGarrisonSetGuardMessage=(function(_super){
	function ResGarrisonSetGuardMessage(){
		/**更新门数据 */
		this._door=null;
		ResGarrisonSetGuardMessage.__super.call(this);
	}

	__class(ResGarrisonSetGuardMessage,'net.message.garrison.ResGarrisonSetGuardMessage',_super);
	var __proto=ResGarrisonSetGuardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._door);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._door=this.readBean(_buf,GarrisonDoorBean);
	}

	__proto.getId=function(){
		return 1054;
	}

	/**更新门数据 */
	/**更新门数据 */
	__getset(0,__proto,'door',function(){
		return this._door;
		},function(value){
		this._door=value;
	});

	return ResGarrisonSetGuardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击世界BOSS的数据
*/
//class net.message.worldboss.ResWorldBossAttackBattleDataMessage extends net.Message
var ResWorldBossAttackBattleDataMessage=(function(_super){
	function ResWorldBossAttackBattleDataMessage(){
		/**战斗数据 */
		this._data=null;
		ResWorldBossAttackBattleDataMessage.__super.call(this);
	}

	__class(ResWorldBossAttackBattleDataMessage,'net.message.worldboss.ResWorldBossAttackBattleDataMessage',_super);
	var __proto=ResWorldBossAttackBattleDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 971;
	}

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResWorldBossAttackBattleDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸购买战斗次数
*/
//class net.message.kingwar.ResKingWarBuyCountMessage extends net.Message
var ResKingWarBuyCountMessage=(function(_super){
	function ResKingWarBuyCountMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResKingWarBuyCountMessage.__super.call(this);
	}

	__class(ResKingWarBuyCountMessage,'net.message.kingwar.ResKingWarBuyCountMessage',_super);
	var __proto=ResKingWarBuyCountMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,KingWarSelfBean);
	}

	__proto.getId=function(){
		return 496;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResKingWarBuyCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*限定武将活动错误
*/
//class net.message.activities.ResLimitWuJiangHuntActErrorMessage extends net.Message
var ResLimitWuJiangHuntActErrorMessage=(function(_super){
	function ResLimitWuJiangHuntActErrorMessage(){
		/**1:活动未开启;2:错误;3:消耗不足;4:空间不足;*/
		this._error=0;
		ResLimitWuJiangHuntActErrorMessage.__super.call(this);
	}

	__class(ResLimitWuJiangHuntActErrorMessage,'net.message.activities.ResLimitWuJiangHuntActErrorMessage',_super);
	var __proto=ResLimitWuJiangHuntActErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1580;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLimitWuJiangHuntActErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新秘籍可用格子数量
*/
//class net.message.miji.ResUpdateMijiUsableGridMessage extends net.Message
var ResUpdateMijiUsableGridMessage=(function(_super){
	function ResUpdateMijiUsableGridMessage(){
		/**可用秘籍格子数量 */
		this._count=0;
		ResUpdateMijiUsableGridMessage.__super.call(this);
	}

	__class(ResUpdateMijiUsableGridMessage,'net.message.miji.ResUpdateMijiUsableGridMessage',_super);
	var __proto=ResUpdateMijiUsableGridMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 89;
	}

	/**可用秘籍格子数量 */
	/**可用秘籍格子数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResUpdateMijiUsableGridMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*点击全民BOSS(查看排名/击杀者)
*/
//class net.message.dungeon.ReqClickQuanMinBossDungeonMessage extends net.Message
var ReqClickQuanMinBossDungeonMessage=(function(_super){
	function ReqClickQuanMinBossDungeonMessage(){
		/**副本ID */
		this._dungeonID=0;
		ReqClickQuanMinBossDungeonMessage.__super.call(this);
	}

	__class(ReqClickQuanMinBossDungeonMessage,'net.message.dungeon.ReqClickQuanMinBossDungeonMessage',_super);
	var __proto=ReqClickQuanMinBossDungeonMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 222;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	return ReqClickQuanMinBossDungeonMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换主公错误
*/
//class net.message.gongCe.ResTongShuaiJinJianErrorMessage extends net.Message
var ResTongShuaiJinJianErrorMessage=(function(_super){
	function ResTongShuaiJinJianErrorMessage(){
		/**1:兑换材料不足;2:活动未开启;*/
		this._error=0;
		ResTongShuaiJinJianErrorMessage.__super.call(this);
	}

	__class(ResTongShuaiJinJianErrorMessage,'net.message.gongCe.ResTongShuaiJinJianErrorMessage',_super);
	var __proto=ResTongShuaiJinJianErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1660;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTongShuaiJinJianErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到错误
*/
//class net.message.legion.ResLegionSignRewardMessageErrorMessage extends net.Message
var ResLegionSignRewardMessageErrorMessage=(function(_super){
	function ResLegionSignRewardMessageErrorMessage(){
		/**1:你木有军团;2:还没签到签过了;3:已经领取过了;*/
		this._error=0;
		ResLegionSignRewardMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionSignRewardMessageErrorMessage,'net.message.legion.ResLegionSignRewardMessageErrorMessage',_super);
	var __proto=ResLegionSignRewardMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 646;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionSignRewardMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级
*/
//class net.message.juewei.ResUpdateJueWeiLevelMessage extends net.Message
var ResUpdateJueWeiLevelMessage=(function(_super){
	function ResUpdateJueWeiLevelMessage(){
		/**当前等级 */
		this._lv=0;
		/**当前战力 */
		this._fightPower=null;
		ResUpdateJueWeiLevelMessage.__super.call(this);
	}

	__class(ResUpdateJueWeiLevelMessage,'net.message.juewei.ResUpdateJueWeiLevelMessage',_super);
	var __proto=ResUpdateJueWeiLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 726;
	}

	/**当前等级 */
	/**当前等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前战力 */
	/**当前战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ResUpdateJueWeiLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*操作神装
*/
//class net.message.godClothes.ReqGodClothesOperationMessage extends net.Message
var ReqGodClothesOperationMessage=(function(_super){
	function ReqGodClothesOperationMessage(){
		/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._equipGrid=0;
		/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
		this._godClothesOperationType=0;
		/**是否高级 */
		this._isHigher=false;
		/**英雄Id */
		this._heroId=0;
		/**词条Id */
		this._ciTiaoId=0;
		ReqGodClothesOperationMessage.__super.call(this);
	}

	__class(ReqGodClothesOperationMessage,'net.message.godClothes.ReqGodClothesOperationMessage',_super);
	var __proto=ReqGodClothesOperationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._equipGrid);
		this.writeInt(_buf,this._godClothesOperationType);
		this.writeBoolean(_buf,this._isHigher);
		this.writeInt(_buf,this._heroId);
		this.writeInt(_buf,this._ciTiaoId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._equipGrid=this.readInt(_buf);
		this._godClothesOperationType=this.readInt(_buf);
		this._isHigher=this.readBoolean(_buf);
		this._heroId=this.readInt(_buf);
		this._ciTiaoId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 852;
	}

	/**词条Id */
	/**词条Id */
	__getset(0,__proto,'ciTiaoId',function(){
		return this._ciTiaoId;
		},function(value){
		this._ciTiaoId=value;
	});

	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'equipGrid',function(){
		return this._equipGrid;
		},function(value){
		this._equipGrid=value;
	});

	/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
	/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
	__getset(0,__proto,'godClothesOperationType',function(){
		return this._godClothesOperationType;
		},function(value){
		this._godClothesOperationType=value;
	});

	/**是否高级 */
	/**是否高级 */
	__getset(0,__proto,'isHigher',function(){
		return this._isHigher;
		},function(value){
		this._isHigher=value;
	});

	/**英雄Id */
	/**英雄Id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	return ReqGodClothesOperationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ResMarriagePataOtherFightSkipMessage extends net.Message
var ResMarriagePataOtherFightSkipMessage=(function(_super){
	function ResMarriagePataOtherFightSkipMessage(){
		ResMarriagePataOtherFightSkipMessage.__super.call(this);;
	}

	__class(ResMarriagePataOtherFightSkipMessage,'net.message.marriage.ResMarriagePataOtherFightSkipMessage',_super);
	var __proto=ResMarriagePataOtherFightSkipMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1499;
	}

	return ResMarriagePataOtherFightSkipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买关卡投资高级资格成功
*/
//class net.message.investment.ResGuanQiaInvestmentBuyBestMessageMessage extends net.Message
var ResGuanQiaInvestmentBuyBestMessageMessage=(function(_super){
	function ResGuanQiaInvestmentBuyBestMessageMessage(){
		ResGuanQiaInvestmentBuyBestMessageMessage.__super.call(this);;
	}

	__class(ResGuanQiaInvestmentBuyBestMessageMessage,'net.message.investment.ResGuanQiaInvestmentBuyBestMessageMessage',_super);
	var __proto=ResGuanQiaInvestmentBuyBestMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1521;
	}

	return ResGuanQiaInvestmentBuyBestMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇
*/
//class net.message.escort.ResEscortRevengeMessage extends net.Message
var ResEscortRevengeMessage=(function(_super){
	function ResEscortRevengeMessage(){
		ResEscortRevengeMessage.__super.call(this);;
	}

	__class(ResEscortRevengeMessage,'net.message.escort.ResEscortRevengeMessage',_super);
	var __proto=ResEscortRevengeMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 350;
	}

	return ResEscortRevengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝
*/
//class net.message.textureHunt.ReqHuntStartMessage extends net.Message
var ReqHuntStartMessage=(function(_super){
	function ReqHuntStartMessage(){
		/**寻宝类型 */
		this._type=0;
		/**寻宝多少次 */
		this._type_count=0;
		ReqHuntStartMessage.__super.call(this);
	}

	__class(ReqHuntStartMessage,'net.message.textureHunt.ReqHuntStartMessage',_super);
	var __proto=ReqHuntStartMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._type_count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._type_count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 698;
	}

	/**寻宝多少次 */
	/**寻宝多少次 */
	__getset(0,__proto,'type_count',function(){
		return this._type_count;
		},function(value){
		this._type_count=value;
	});

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqHuntStartMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关注/取消关注拍卖行物品错误
*/
//class net.message.auction.ResAuctionAttentionErrorMessage extends net.Message
var ResAuctionAttentionErrorMessage=(function(_super){
	function ResAuctionAttentionErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResAuctionAttentionErrorMessage.__super.call(this);
	}

	__class(ResAuctionAttentionErrorMessage,'net.message.auction.ResAuctionAttentionErrorMessage',_super);
	var __proto=ResAuctionAttentionErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1377;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAuctionAttentionErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子的进度领取错误
*/
//class net.message.marriage.ResMarriagePromoteHouseReceiveErrorMessage extends net.Message
var ResMarriagePromoteHouseReceiveErrorMessage=(function(_super){
	function ResMarriagePromoteHouseReceiveErrorMessage(){
		/**1:没有结婚;*/
		this._error=0;
		ResMarriagePromoteHouseReceiveErrorMessage.__super.call(this);
	}

	__class(ResMarriagePromoteHouseReceiveErrorMessage,'net.message.marriage.ResMarriagePromoteHouseReceiveErrorMessage',_super);
	var __proto=ResMarriagePromoteHouseReceiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 562;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriagePromoteHouseReceiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练宠物
*/
//class net.message.pet.ReqXiLianPetMessage extends net.Message
var ReqXiLianPetMessage=(function(_super){
	function ReqXiLianPetMessage(){
		/**宠物ID */
		this._petID=0;
		/**是否自动购买 */
		this._autoBuy=false;
		/**是否高级洗练 */
		this._expensive=false;
		ReqXiLianPetMessage.__super.call(this);
		this._lockIndex=[];
	}

	__class(ReqXiLianPetMessage,'net.message.pet.ReqXiLianPetMessage',_super);
	var __proto=ReqXiLianPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeBoolean(_buf,this._autoBuy);
		this.writeBoolean(_buf,this._expensive);
		this.writeInt(_buf,this._lockIndex.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lockIndex.length;++i_am_tmp_i){
			this.writeInt(_buf,this._lockIndex[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
		this._expensive=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._lockIndex=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lockIndex[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 163;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**锁定哪几个？从0开始 */
	/**锁定哪几个？从0开始 */
	__getset(0,__proto,'lockIndex',function(){
		return this._lockIndex;
		},function(value){
		this._lockIndex=value;
	});

	/**是否高级洗练 */
	/**是否高级洗练 */
	__getset(0,__proto,'expensive',function(){
		return this._expensive;
		},function(value){
		this._expensive=value;
	});

	/**是否自动购买 */
	/**是否自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqXiLianPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*boss宝箱拾取删除
*/
//class net.message.worldboss.ResWorldBossBoxRemoveMessage extends net.Message
var ResWorldBossBoxRemoveMessage=(function(_super){
	function ResWorldBossBoxRemoveMessage(){
		/**宝箱ID */
		this._id=0;
		/**拾取者ID */
		this._uid=null;
		ResWorldBossBoxRemoveMessage.__super.call(this);
	}

	__class(ResWorldBossBoxRemoveMessage,'net.message.worldboss.ResWorldBossBoxRemoveMessage',_super);
	var __proto=ResWorldBossBoxRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 523;
	}

	/**宝箱ID */
	/**宝箱ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**拾取者ID */
	/**拾取者ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResWorldBossBoxRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用武将盒子错误
*/
//class net.message.packet.ResUsePetBoxErrorMessage extends net.Message
var ResUsePetBoxErrorMessage=(function(_super){
	function ResUsePetBoxErrorMessage(){
		/**1:参数错误;2:材料不足;3:配置错误;*/
		this._error=0;
		ResUsePetBoxErrorMessage.__super.call(this);
	}

	__class(ResUsePetBoxErrorMessage,'net.message.packet.ResUsePetBoxErrorMessage',_super);
	var __proto=ResUsePetBoxErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1590;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUsePetBoxErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物觉醒
*/
//class net.message.pet.ResAwakePetMessage extends net.Message
var ResAwakePetMessage=(function(_super){
	function ResAwakePetMessage(){
		/**宠物ID */
		this._petID=0;
		/**觉醒重数 */
		this._order=0;
		/**觉醒星数 */
		this._star=0;
		ResAwakePetMessage.__super.call(this);
	}

	__class(ResAwakePetMessage,'net.message.pet.ResAwakePetMessage',_super);
	var __proto=ResAwakePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._order);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._order=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1594;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**觉醒重数 */
	/**觉醒重数 */
	__getset(0,__proto,'order',function(){
		return this._order;
		},function(value){
		this._order=value;
	});

	/**觉醒星数 */
	/**觉醒星数 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResAwakePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新帮会成员职位(收到该消息时前端需要添加事件GuildBean.positionEvents)
*/
//class net.message.guild.ResGuildUpdatePositionMessage extends net.Message
var ResGuildUpdatePositionMessage=(function(_super){
	function ResGuildUpdatePositionMessage(){
		/**成员唯一ID */
		this._uid=null;
		/**职位[1:帮主][2:副帮主][3:普通成员] */
		this._position=0;
		ResGuildUpdatePositionMessage.__super.call(this);
	}

	__class(ResGuildUpdatePositionMessage,'net.message.guild.ResGuildUpdatePositionMessage',_super);
	var __proto=ResGuildUpdatePositionMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._position);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._position=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1249;
	}

	/**成员唯一ID */
	/**成员唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**职位[1:帮主][2:副帮主][3:普通成员] */
	/**职位[1:帮主][2:副帮主][3:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return ResGuildUpdatePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建副英雄
*/
//class net.message.hero.ResCreateViceHeroMessage extends net.Message
var ResCreateViceHeroMessage=(function(_super){
	function ResCreateViceHeroMessage(){
		/**英雄 */
		this._hero=null;
		ResCreateViceHeroMessage.__super.call(this);
	}

	__class(ResCreateViceHeroMessage,'net.message.hero.ResCreateViceHeroMessage',_super);
	var __proto=ResCreateViceHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._hero);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._hero=this.readBean(_buf,HeroBean);
	}

	__proto.getId=function(){
		return 55;
	}

	/**英雄 */
	/**英雄 */
	__getset(0,__proto,'hero',function(){
		return this._hero;
		},function(value){
		this._hero=value;
	});

	return ResCreateViceHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征复活
*/
//class net.message.yuanzheng.ResYuanZhengReliveMessage extends net.Message
var ResYuanZhengReliveMessage=(function(_super){
	function ResYuanZhengReliveMessage(){
		ResYuanZhengReliveMessage.__super.call(this);
		this._myFightObjects=[];
	}

	__class(ResYuanZhengReliveMessage,'net.message.yuanzheng.ResYuanZhengReliveMessage',_super);
	var __proto=ResYuanZhengReliveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._myFightObjects.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._myFightObjects.length;++i_am_tmp_i){
			this._myFightObjects[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._myFightObjects=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._myFightObjects[i_am_tmp_i]=this.readBeanInList(_buf,YuanzhengMemberBean);
		}
	}

	__proto.getId=function(){
		return 296;
	}

	/**战斗对象列表(自己)*/
	/**战斗对象列表(自己)*/
	__getset(0,__proto,'myFightObjects',function(){
		return this._myFightObjects;
		},function(value){
		this._myFightObjects=value;
	});

	return ResYuanZhengReliveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备错误
*/
//class net.message.equip.ResEquipMakingErrorMessage extends net.Message
var ResEquipMakingErrorMessage=(function(_super){
	function ResEquipMakingErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResEquipMakingErrorMessage.__super.call(this);
	}

	__class(ResEquipMakingErrorMessage,'net.message.equip.ResEquipMakingErrorMessage',_super);
	var __proto=ResEquipMakingErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1477;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipMakingErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒元素错误
*/
//class net.message.adviser.ResAdviserUpgradeElementErrorMessage extends net.Message
var ResAdviserUpgradeElementErrorMessage=(function(_super){
	function ResAdviserUpgradeElementErrorMessage(){
		/**1:穷;2:没达到条件;3:元素不存在;4:最大等级;5:最大进度;*/
		this._error=0;
		ResAdviserUpgradeElementErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeElementErrorMessage,'net.message.adviser.ResAdviserUpgradeElementErrorMessage',_super);
	var __proto=ResAdviserUpgradeElementErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1024;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeElementErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*攻击城市错误
*/
//class net.message.emptycity.ResEmptyCityAttackErrorMessage extends net.Message
var ResEmptyCityAttackErrorMessage=(function(_super){
	function ResEmptyCityAttackErrorMessage(){
		/**1:尚未开启;2:你已经占领过了;3:占领位已满;4:目标不存在;5:城市不存在;*/
		this._error=0;
		ResEmptyCityAttackErrorMessage.__super.call(this);
	}

	__class(ResEmptyCityAttackErrorMessage,'net.message.emptycity.ResEmptyCityAttackErrorMessage',_super);
	var __proto=ResEmptyCityAttackErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1095;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEmptyCityAttackErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家给钱复活错误
*/
//class net.message.nineHeavy.ResNineHeavyReliveErrorMessage extends net.Message
var ResNineHeavyReliveErrorMessage=(function(_super){
	function ResNineHeavyReliveErrorMessage(){
		/**1:你没死;2:穷;*/
		this._error=0;
		ResNineHeavyReliveErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyReliveErrorMessage,'net.message.nineHeavy.ResNineHeavyReliveErrorMessage',_super);
	var __proto=ResNineHeavyReliveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1115;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyReliveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新合体对象技能
*/
//class net.message.fit.ResFitUpdateSkillMessage extends net.Message
var ResFitUpdateSkillMessage=(function(_super){
	function ResFitUpdateSkillMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体对象 */
		this._bean=null;
		ResFitUpdateSkillMessage.__super.call(this);
	}

	__class(ResFitUpdateSkillMessage,'net.message.fit.ResFitUpdateSkillMessage',_super);
	var __proto=ResFitUpdateSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._bean=this.readBean(_buf,FitBean);
	}

	__proto.getId=function(){
		return 1153;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体对象 */
	/**合体对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResFitUpdateSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入广场错误
*/
//class net.message.legion.ResLegionIntoSquareMessageErrorMessage extends net.Message
var ResLegionIntoSquareMessageErrorMessage=(function(_super){
	function ResLegionIntoSquareMessageErrorMessage(){
		/**1:你木有军团;2:在广场中;*/
		this._error=0;
		ResLegionIntoSquareMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionIntoSquareMessageErrorMessage,'net.message.legion.ResLegionIntoSquareMessageErrorMessage',_super);
	var __proto=ResLegionIntoSquareMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 649;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionIntoSquareMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级经脉错误
*/
//class net.message.jingmai.ResJingMaiUpgradeErrorMessage extends net.Message
var ResJingMaiUpgradeErrorMessage=(function(_super){
	function ResJingMaiUpgradeErrorMessage(){
		/**1:英雄不存在;2:材料不足;*/
		this._error=0;
		ResJingMaiUpgradeErrorMessage.__super.call(this);
	}

	__class(ResJingMaiUpgradeErrorMessage,'net.message.jingmai.ResJingMaiUpgradeErrorMessage',_super);
	var __proto=ResJingMaiUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 487;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResJingMaiUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍修改战力条件
*/
//class net.message.team.ResTeamChangeFightPowerMessage extends net.Message
var ResTeamChangeFightPowerMessage=(function(_super){
	function ResTeamChangeFightPowerMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**战力 */
		this._fightPower=null;
		ResTeamChangeFightPowerMessage.__super.call(this);
	}

	__class(ResTeamChangeFightPowerMessage,'net.message.team.ResTeamChangeFightPowerMessage',_super);
	var __proto=ResTeamChangeFightPowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1261;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ResTeamChangeFightPowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵错误
*/
//class net.message.fight.ResFightPositionAddErrorMessage extends net.Message
var ResFightPositionAddErrorMessage=(function(_super){
	function ResFightPositionAddErrorMessage(){
		/**1:位置不存在;2:参数错误;3:找不到对象;4:找不到对应配置;5:不能被修改;*/
		this._error=0;
		ResFightPositionAddErrorMessage.__super.call(this);
	}

	__class(ResFightPositionAddErrorMessage,'net.message.fight.ResFightPositionAddErrorMessage',_super);
	var __proto=ResFightPositionAddErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1198;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFightPositionAddErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移动
*/
//class net.message.scene.ReqSceneMoveMessage extends net.Message
var ReqSceneMoveMessage=(function(_super){
	function ReqSceneMoveMessage(){
		/**x */
		this._x=0;
		/**y */
		this._y=0;
		ReqSceneMoveMessage.__super.call(this);
	}

	__class(ReqSceneMoveMessage,'net.message.scene.ReqSceneMoveMessage',_super);
	var __proto=ReqSceneMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._x);
		this.writeInt(_buf,this._y);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._x=this.readInt(_buf);
		this._y=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1314;
	}

	/**x */
	/**x */
	__getset(0,__proto,'x',function(){
		return this._x;
		},function(value){
		this._x=value;
	});

	/**y */
	/**y */
	__getset(0,__proto,'y',function(){
		return this._y;
		},function(value){
		this._y=value;
	});

	return ReqSceneMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶错误
*/
//class net.message.upgrade.ResCommonIllusionErrorMessage extends net.Message
var ResCommonIllusionErrorMessage=(function(_super){
	function ResCommonIllusionErrorMessage(){
		/**1:功能未开放;2:错误的类型;*/
		this._error=0;
		ResCommonIllusionErrorMessage.__super.call(this);
	}

	__class(ResCommonIllusionErrorMessage,'net.message.upgrade.ResCommonIllusionErrorMessage',_super);
	var __proto=ResCommonIllusionErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 885;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCommonIllusionErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体参与者错误
*/
//class net.message.fit.ResFitSetParticipantErrorMessage extends net.Message
var ResFitSetParticipantErrorMessage=(function(_super){
	function ResFitSetParticipantErrorMessage(){
		/**1:已经在队列中;2:不满足条件;*/
		this._error=0;
		ResFitSetParticipantErrorMessage.__super.call(this);
	}

	__class(ResFitSetParticipantErrorMessage,'net.message.fit.ResFitSetParticipantErrorMessage',_super);
	var __proto=ResFitSetParticipantErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1142;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitSetParticipantErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物觉醒错误
*/
//class net.message.pet.ResAwakePetErrorMessage extends net.Message
var ResAwakePetErrorMessage=(function(_super){
	function ResAwakePetErrorMessage(){
		/**1:没有宠物;2:等级达到上限;3:没有道具;*/
		this._error=0;
		ResAwakePetErrorMessage.__super.call(this);
	}

	__class(ResAwakePetErrorMessage,'net.message.pet.ResAwakePetErrorMessage',_super);
	var __proto=ResAwakePetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1595;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAwakePetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*超值补给活动
*/
//class net.message.activities.ReqSuperSupplyActMessage extends net.Message
var ReqSuperSupplyActMessage=(function(_super){
	function ReqSuperSupplyActMessage(){
		/**领取类型,1普通，2高级，3一键领取 */
		this._type=0;
		/**要领奖的配置id */
		this._cfgId=0;
		ReqSuperSupplyActMessage.__super.call(this);
	}

	__class(ReqSuperSupplyActMessage,'net.message.activities.ReqSuperSupplyActMessage',_super);
	var __proto=ReqSuperSupplyActMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._cfgId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._cfgId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1552;
	}

	/**领取类型,1普通，2高级，3一键领取 */
	/**领取类型,1普通，2高级，3一键领取 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**要领奖的配置id */
	/**要领奖的配置id */
	__getset(0,__proto,'cfgId',function(){
		return this._cfgId;
		},function(value){
		this._cfgId=value;
	});

	return ReqSuperSupplyActMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新场景对象死亡状态
*/
//class net.message.scene.ResSceneUpdateDeadMessage extends net.Message
var ResSceneUpdateDeadMessage=(function(_super){
	function ResSceneUpdateDeadMessage(){
		/**场景玩家 */
		this._uid=null;
		/**自动复活时间，0表示未死亡 */
		this._reliveTime=null;
		ResSceneUpdateDeadMessage.__super.call(this);
	}

	__class(ResSceneUpdateDeadMessage,'net.message.scene.ResSceneUpdateDeadMessage',_super);
	var __proto=ResSceneUpdateDeadMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._reliveTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._reliveTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1317;
	}

	/**场景玩家 */
	/**场景玩家 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**自动复活时间，0表示未死亡 */
	/**自动复活时间，0表示未死亡 */
	__getset(0,__proto,'reliveTime',function(){
		return this._reliveTime;
		},function(value){
		this._reliveTime=value;
	});

	return ResSceneUpdateDeadMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征购买物品
*/
//class net.message.yuanzheng.ReqYuanZhengBuyGoodsMessage extends net.Message
var ReqYuanZhengBuyGoodsMessage=(function(_super){
	function ReqYuanZhengBuyGoodsMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		ReqYuanZhengBuyGoodsMessage.__super.call(this);
	}

	__class(ReqYuanZhengBuyGoodsMessage,'net.message.yuanzheng.ReqYuanZhengBuyGoodsMessage',_super);
	var __proto=ReqYuanZhengBuyGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 286;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	return ReqYuanZhengBuyGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*许愿
*/
//class net.message.gongCe.ReqXuYuanMessage extends net.Message
var ReqXuYuanMessage=(function(_super){
	function ReqXuYuanMessage(){
		/**操作 1=许愿 2=领取 */
		this._type=0;
		ReqXuYuanMessage.__super.call(this);
		this._itemBean=[];
	}

	__class(ReqXuYuanMessage,'net.message.gongCe.ReqXuYuanMessage',_super);
	var __proto=ReqXuYuanMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._itemBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBean.length;++i_am_tmp_i){
			this.writeInt(_buf,this._itemBean[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._itemBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBean[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1635;
	}

	/**操作 1=许愿 2=领取 */
	/**操作 1=许愿 2=领取 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**许愿的道具 如果为2则是为空 */
	/**许愿的道具 如果为2则是为空 */
	__getset(0,__proto,'itemBean',function(){
		return this._itemBean;
		},function(value){
		this._itemBean=value;
	});

	return ReqXuYuanMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击传国玉玺错误
*/
//class net.message.gb.ResLegionBattleAttackThroneErrorMessage extends net.Message
var ResLegionBattleAttackThroneErrorMessage=(function(_super){
	function ResLegionBattleAttackThroneErrorMessage(){
		/**1:未开启;2:你不在活动中;3:不能攻击同帮派成员;4:没有找到玩家;5:目标或者你自己在死亡状态;6:不是队长;7:没有帮会;*/
		this._error=0;
		ResLegionBattleAttackThroneErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackThroneErrorMessage,'net.message.gb.ResLegionBattleAttackThroneErrorMessage',_super);
	var __proto=ResLegionBattleAttackThroneErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1349;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleAttackThroneErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*添加邮件
*/
//class net.message.mail.ResAddMailMessage extends net.Message
var ResAddMailMessage=(function(_super){
	function ResAddMailMessage(){
		/**邮件 */
		this._mail=null;
		ResAddMailMessage.__super.call(this);
	}

	__class(ResAddMailMessage,'net.message.mail.ResAddMailMessage',_super);
	var __proto=ResAddMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._mail);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mail=this.readBean(_buf,MailBean);
	}

	__proto.getId=function(){
		return 42;
	}

	/**邮件 */
	/**邮件 */
	__getset(0,__proto,'mail',function(){
		return this._mail;
		},function(value){
		this._mail=value;
	});

	return ResAddMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练法器
*/
//class net.message.xuannv.ResXiLianFaQiMessage extends net.Message
var ResXiLianFaQiMessage=(function(_super){
	function ResXiLianFaQiMessage(){
		/**法器ID */
		this._faqiID=0;
		/**洗练数据 */
		this._xilian=null;
		ResXiLianFaQiMessage.__super.call(this);
	}

	__class(ResXiLianFaQiMessage,'net.message.xuannv.ResXiLianFaQiMessage',_super);
	var __proto=ResXiLianFaQiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._faqiID);
		this.writeBean(_buf,this._xilian);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._faqiID=this.readInt(_buf);
		this._xilian=this.readBean(_buf,XiLianBean);
	}

	__proto.getId=function(){
		return 260;
	}

	/**法器ID */
	/**法器ID */
	__getset(0,__proto,'faqiID',function(){
		return this._faqiID;
		},function(value){
		this._faqiID=value;
	});

	/**洗练数据 */
	/**洗练数据 */
	__getset(0,__proto,'xilian',function(){
		return this._xilian;
		},function(value){
		this._xilian=value;
	});

	return ResXiLianFaQiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树额外奖励
*/
//class net.message.welfare.ReqGetYaoQianRewardAdditionallyMessage extends net.Message
var ReqGetYaoQianRewardAdditionallyMessage=(function(_super){
	function ReqGetYaoQianRewardAdditionallyMessage(){
		ReqGetYaoQianRewardAdditionallyMessage.__super.call(this);;
	}

	__class(ReqGetYaoQianRewardAdditionallyMessage,'net.message.welfare.ReqGetYaoQianRewardAdditionallyMessage',_super);
	var __proto=ReqGetYaoQianRewardAdditionallyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 743;
	}

	return ReqGetYaoQianRewardAdditionallyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级官位
*/
//class net.message.official.ResUpgradeOfficialLvMessage extends net.Message
var ResUpgradeOfficialLvMessage=(function(_super){
	function ResUpgradeOfficialLvMessage(){
		/**新的等级 */
		this._lv=0;
		/**新的EXP */
		this._exp=0;
		ResUpgradeOfficialLvMessage.__super.call(this);
	}

	__class(ResUpgradeOfficialLvMessage,'net.message.official.ResUpgradeOfficialLvMessage',_super);
	var __proto=ResUpgradeOfficialLvMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._exp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 319;
	}

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**新的EXP */
	/**新的EXP */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResUpgradeOfficialLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级城门
*/
//class net.message.garrison.ResGarrisonUpgradeMessage extends net.Message
var ResGarrisonUpgradeMessage=(function(_super){
	function ResGarrisonUpgradeMessage(){
		/**门数据 */
		this._door=null;
		ResGarrisonUpgradeMessage.__super.call(this);
	}

	__class(ResGarrisonUpgradeMessage,'net.message.garrison.ResGarrisonUpgradeMessage',_super);
	var __proto=ResGarrisonUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._door);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._door=this.readBean(_buf,GarrisonDoorBean);
	}

	__proto.getId=function(){
		return 1075;
	}

	/**门数据 */
	/**门数据 */
	__getset(0,__proto,'door',function(){
		return this._door;
		},function(value){
		this._door=value;
	});

	return ResGarrisonUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用激活码
*/
//class net.message.card.ResUseCardMessage extends net.Message
var ResUseCardMessage=(function(_super){
	function ResUseCardMessage(){
		ResUseCardMessage.__super.call(this);
		this._prizes=[];
	}

	__class(ResUseCardMessage,'net.message.card.ResUseCardMessage',_super);
	var __proto=ResUseCardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prizes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizes.length;++i_am_tmp_i){
			this._prizes[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prizes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizes[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 757;
	}

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prizes',function(){
		return this._prizes;
		},function(value){
		this._prizes=value;
	});

	return ResUseCardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新活动积分
*/
//class net.message.activities.ResActScoreUpdateMessage extends net.Message
var ResActScoreUpdateMessage=(function(_super){
	function ResActScoreUpdateMessage(){
		ResActScoreUpdateMessage.__super.call(this);
		this._list=[];
	}

	__class(ResActScoreUpdateMessage,'net.message.activities.ResActScoreUpdateMessage',_super);
	var __proto=ResActScoreUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,ActScoreBean);
		}
	}

	__proto.getId=function(){
		return 1577;
	}

	/**活动积分值，只会同步部分变更的 */
	/**活动积分值，只会同步部分变更的 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResActScoreUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取结婚爬塔信息错误
*/
//class net.message.pata.ResGetMarryPataInfoErrorMessage extends net.Message
var ResGetMarryPataInfoErrorMessage=(function(_super){
	function ResGetMarryPataInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetMarryPataInfoErrorMessage.__super.call(this);
	}

	__class(ResGetMarryPataInfoErrorMessage,'net.message.pata.ResGetMarryPataInfoErrorMessage',_super);
	var __proto=ResGetMarryPataInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1502;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetMarryPataInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改师门星级
*/
//class net.message.shimen.ResChangeShiMenStarMessage extends net.Message
var ResChangeShiMenStarMessage=(function(_super){
	function ResChangeShiMenStarMessage(){
		/**已领取的师门任务的星级，0表示尚未领取 */
		this._star=0;
		ResChangeShiMenStarMessage.__super.call(this);
	}

	__class(ResChangeShiMenStarMessage,'net.message.shimen.ResChangeShiMenStarMessage',_super);
	var __proto=ResChangeShiMenStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 137;
	}

	/**已领取的师门任务的星级，0表示尚未领取 */
	/**已领取的师门任务的星级，0表示尚未领取 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResChangeShiMenStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送贺礼
*/
//class net.message.marriage.ReqMarriageGiftMessage extends net.Message
var ReqMarriageGiftMessage=(function(_super){
	function ReqMarriageGiftMessage(){
		/**贺礼等级 */
		this._type=0;
		ReqMarriageGiftMessage.__super.call(this);
		this._uids=[];
	}

	__class(ReqMarriageGiftMessage,'net.message.marriage.ReqMarriageGiftMessage',_super);
	var __proto=ReqMarriageGiftMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._uids.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._uids.length;++i_am_tmp_i){
			this.writeLong(_buf,this._uids[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._uids=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._uids[i_am_tmp_i]=this.readLong(_buf);
		}
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 547;
	}

	/**婚姻两人的ID */
	/**婚姻两人的ID */
	__getset(0,__proto,'uids',function(){
		return this._uids;
		},function(value){
		this._uids=value;
	});

	/**贺礼等级 */
	/**贺礼等级 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqMarriageGiftMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取透支计划奖励错误
*/
//class net.message.investment.ResInvestmengTaskRewardMessageErrorMessage extends net.Message
var ResInvestmengTaskRewardMessageErrorMessage=(function(_super){
	function ResInvestmengTaskRewardMessageErrorMessage(){
		/**1:你还没买;2:任务不存在;3:已经领取;4:没达到领取条件;*/
		this._error=0;
		ResInvestmengTaskRewardMessageErrorMessage.__super.call(this);
	}

	__class(ResInvestmengTaskRewardMessageErrorMessage,'net.message.investment.ResInvestmengTaskRewardMessageErrorMessage',_super);
	var __proto=ResInvestmengTaskRewardMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 679;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResInvestmengTaskRewardMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童被动技能洗练错误
*/
//class net.message.soulboy.ResSoulBoyXilianErrorMessage extends net.Message
var ResSoulBoyXilianErrorMessage=(function(_super){
	function ResSoulBoyXilianErrorMessage(){
		/**1:灵童不存在;2:材料不足;*/
		this._error=0;
		ResSoulBoyXilianErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyXilianErrorMessage,'net.message.soulboy.ResSoulBoyXilianErrorMessage',_super);
	var __proto=ResSoulBoyXilianErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 469;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyXilianErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*置换秘籍错误
*/
//class net.message.miji.ResExchangeMijiErrorMessage extends net.Message
var ResExchangeMijiErrorMessage=(function(_super){
	function ResExchangeMijiErrorMessage(){
		/**1:没有道具;2:参数错误;3:背包已经满了;*/
		this._error=0;
		ResExchangeMijiErrorMessage.__super.call(this);
	}

	__class(ResExchangeMijiErrorMessage,'net.message.miji.ResExchangeMijiErrorMessage',_super);
	var __proto=ResExchangeMijiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 82;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResExchangeMijiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*删除邮件
*/
//class net.message.mail.ResRemoveMailMessage extends net.Message
var ResRemoveMailMessage=(function(_super){
	function ResRemoveMailMessage(){
		/**邮件ID */
		this._mailID=0;
		ResRemoveMailMessage.__super.call(this);
	}

	__class(ResRemoveMailMessage,'net.message.mail.ResRemoveMailMessage',_super);
	var __proto=ResRemoveMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 49;
	}

	/**邮件ID */
	/**邮件ID */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	return ResRemoveMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取藏宝图信息
*/
//class net.message.pata.ResGetCBTInfoMessage extends net.Message
var ResGetCBTInfoMessage=(function(_super){
	function ResGetCBTInfoMessage(){
		/**页码 */
		this._page=0;
		/**奖励预览 */
		this._previewPrize=null;
		/**奖励预览的层数 */
		this._previewLayer=0;
		/**历史最高层数 */
		this._layer=0;
		/**可扫荡的层数 */
		this._yesterdayLayer=0;
		/**是否可以扫荡 */
		this._isMopUp=false;
		ResGetCBTInfoMessage.__super.call(this);
		this._layers=[];
		this._pagePrizes=[];
	}

	__class(ResGetCBTInfoMessage,'net.message.pata.ResGetCBTInfoMessage',_super);
	var __proto=ResGetCBTInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._page);
		this.writeInt(_buf,this._layers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._layers.length;++i_am_tmp_i){
			this._layers[i_am_tmp_i].write(_buf);
		}
		this.writeString(_buf,this._previewPrize);
		this.writeInt(_buf,this._previewLayer);
		this.writeInt(_buf,this._pagePrizes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pagePrizes.length;++i_am_tmp_i){
			this._pagePrizes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._yesterdayLayer);
		this.writeBoolean(_buf,this._isMopUp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._page=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._layers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._layers[i_am_tmp_i]=this.readBeanInList(_buf,CBTLayerBean);
		}
		this._previewPrize=this.readString(_buf);
		this._previewLayer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._pagePrizes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pagePrizes[i_am_tmp_i]=this.readBeanInList(_buf,CBTPagePrizeBean);
		}
		this._layer=this.readInt(_buf);
		this._yesterdayLayer=this.readInt(_buf);
		this._isMopUp=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 231;
	}

	/**历史最高层数 */
	/**历史最高层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**页码 */
	/**页码 */
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	/**分层信息 */
	/**分层信息 */
	__getset(0,__proto,'layers',function(){
		return this._layers;
		},function(value){
		this._layers=value;
	});

	/**奖励预览 */
	/**奖励预览 */
	__getset(0,__proto,'previewPrize',function(){
		return this._previewPrize;
		},function(value){
		this._previewPrize=value;
	});

	/**可扫荡的层数 */
	/**可扫荡的层数 */
	__getset(0,__proto,'yesterdayLayer',function(){
		return this._yesterdayLayer;
		},function(value){
		this._yesterdayLayer=value;
	});

	/**奖励预览的层数 */
	/**奖励预览的层数 */
	__getset(0,__proto,'previewLayer',function(){
		return this._previewLayer;
		},function(value){
		this._previewLayer=value;
	});

	/**页奖励 */
	/**页奖励 */
	__getset(0,__proto,'pagePrizes',function(){
		return this._pagePrizes;
		},function(value){
		this._pagePrizes=value;
	});

	/**是否可以扫荡 */
	/**是否可以扫荡 */
	__getset(0,__proto,'isMopUp',function(){
		return this._isMopUp;
		},function(value){
		this._isMopUp=value;
	});

	return ResGetCBTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能错误
*/
//class net.message.xuannv.ResReplaceXiLianFaQiErrorMessage extends net.Message
var ResReplaceXiLianFaQiErrorMessage=(function(_super){
	function ResReplaceXiLianFaQiErrorMessage(){
		/**1:找不到法器;2:没有洗练技能可替换;*/
		this._error=0;
		ResReplaceXiLianFaQiErrorMessage.__super.call(this);
	}

	__class(ResReplaceXiLianFaQiErrorMessage,'net.message.xuannv.ResReplaceXiLianFaQiErrorMessage',_super);
	var __proto=ResReplaceXiLianFaQiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 264;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReplaceXiLianFaQiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树
*/
//class net.message.welfare.ResYaoQianMessage extends net.Message
var ResYaoQianMessage=(function(_super){
	function ResYaoQianMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResYaoQianMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResYaoQianMessage,'net.message.welfare.ResYaoQianMessage',_super);
	var __proto=ResYaoQianMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,WelfareBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 751;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResYaoQianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成平定安邦
*/
//class net.message.task.ResTaskPingDingAnBangPayMessage extends net.Message
var ResTaskPingDingAnBangPayMessage=(function(_super){
	function ResTaskPingDingAnBangPayMessage(){
		ResTaskPingDingAnBangPayMessage.__super.call(this);;
	}

	__class(ResTaskPingDingAnBangPayMessage,'net.message.task.ResTaskPingDingAnBangPayMessage',_super);
	var __proto=ResTaskPingDingAnBangPayMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1293;
	}

	return ResTaskPingDingAnBangPayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*御魂和灵分解
*/
//class net.message.soulboy.ReqSoulBoyXilianTranslateMessage extends net.Message
var ReqSoulBoyXilianTranslateMessage=(function(_super){
	function ReqSoulBoyXilianTranslateMessage(){
		ReqSoulBoyXilianTranslateMessage.__super.call(this);
		this._items=[];
	}

	__class(ReqSoulBoyXilianTranslateMessage,'net.message.soulboy.ReqSoulBoyXilianTranslateMessage',_super);
	var __proto=ReqSoulBoyXilianTranslateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,GoodsIdAndIndexBean);
		}
	}

	__proto.getId=function(){
		return 553;
	}

	/**道具 传道具的下标 */
	/**道具 传道具的下标 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	return ReqSoulBoyXilianTranslateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒
*/
//class net.message.adviser.ResAdviserUpgradeWakeUpMessage extends net.Message
var ResAdviserUpgradeWakeUpMessage=(function(_super){
	function ResAdviserUpgradeWakeUpMessage(){
		/**新的等级 */
		this._lv=0;
		ResAdviserUpgradeWakeUpMessage.__super.call(this);
		this._elements=[];
	}

	__class(ResAdviserUpgradeWakeUpMessage,'net.message.adviser.ResAdviserUpgradeWakeUpMessage',_super);
	var __proto=ResAdviserUpgradeWakeUpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._elements.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._elements.length;++i_am_tmp_i){
			this._elements[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._elements=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._elements[i_am_tmp_i]=this.readBeanInList(_buf,AdviserElementBean);
		}
	}

	__proto.getId=function(){
		return 1026;
	}

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**元素列表 */
	/**元素列表 */
	__getset(0,__proto,'elements',function(){
		return this._elements;
		},function(value){
		this._elements=value;
	});

	return ResAdviserUpgradeWakeUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取官位活跃度宝箱
*/
//class net.message.official.ResReceiveOfficialBoxMessage extends net.Message
var ResReceiveOfficialBoxMessage=(function(_super){
	function ResReceiveOfficialBoxMessage(){
		/**领取成功 返回下标 */
		this._index=0;
		ResReceiveOfficialBoxMessage.__super.call(this);
	}

	__class(ResReceiveOfficialBoxMessage,'net.message.official.ResReceiveOfficialBoxMessage',_super);
	var __proto=ResReceiveOfficialBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 323;
	}

	/**领取成功 返回下标 */
	/**领取成功 返回下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResReceiveOfficialBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离婚
*/
//class net.message.marriage.ResMarriageRdivorceMessage extends net.Message
var ResMarriageRdivorceMessage=(function(_super){
	function ResMarriageRdivorceMessage(){
		/**对象 */
		this._bean=null;
		/**对方名字 */
		this._name=null;
		ResMarriageRdivorceMessage.__super.call(this);
	}

	__class(ResMarriageRdivorceMessage,'net.message.marriage.ResMarriageRdivorceMessage',_super);
	var __proto=ResMarriageRdivorceMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,MarriageBean);
		this._name=this.readString(_buf);
	}

	__proto.getId=function(){
		return 567;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**对方名字 */
	/**对方名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ResMarriageRdivorceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*捕获宠物错误
*/
//class net.message.pet.ResTameWildPetErrorMessage extends net.Message
var ResTameWildPetErrorMessage=(function(_super){
	function ResTameWildPetErrorMessage(){
		/**1:没有可捕获的宠物;2:捕获失败;*/
		this._error=0;
		ResTameWildPetErrorMessage.__super.call(this);
	}

	__class(ResTameWildPetErrorMessage,'net.message.pet.ResTameWildPetErrorMessage',_super);
	var __proto=ResTameWildPetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 193;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTameWildPetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取可夺取玉玺的帮会
*/
//class net.message.gb.ResLegionBattleGetLegalKingGuildMessage extends net.Message
var ResLegionBattleGetLegalKingGuildMessage=(function(_super){
	function ResLegionBattleGetLegalKingGuildMessage(){
		ResLegionBattleGetLegalKingGuildMessage.__super.call(this);
		this._guilds=[];
	}

	__class(ResLegionBattleGetLegalKingGuildMessage,'net.message.gb.ResLegionBattleGetLegalKingGuildMessage',_super);
	var __proto=ResLegionBattleGetLegalKingGuildMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guilds.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._guilds.length;++i_am_tmp_i){
			this._guilds[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._guilds=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._guilds[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleGuildBean);
		}
	}

	__proto.getId=function(){
		return 1328;
	}

	/**帮会列表 */
	/**帮会列表 */
	__getset(0,__proto,'guilds',function(){
		return this._guilds;
		},function(value){
		this._guilds=value;
	});

	return ResLegionBattleGetLegalKingGuildMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童洗练技能覆盖
*/
//class net.message.soulboy.ReqSoulBoyXilianReplaceMessage extends net.Message
var ReqSoulBoyXilianReplaceMessage=(function(_super){
	function ReqSoulBoyXilianReplaceMessage(){
		/**灵童ID */
		this._id=0;
		ReqSoulBoyXilianReplaceMessage.__super.call(this);
	}

	__class(ReqSoulBoyXilianReplaceMessage,'net.message.soulboy.ReqSoulBoyXilianReplaceMessage',_super);
	var __proto=ReqSoulBoyXilianReplaceMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 550;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqSoulBoyXilianReplaceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名错误
*/
//class net.message.guild.ResGuildChangeNoticeErrorMessage extends net.Message
var ResGuildChangeNoticeErrorMessage=(function(_super){
	function ResGuildChangeNoticeErrorMessage(){
		/**1:无权限;2:非法;3:没有帮会;*/
		this._error=0;
		ResGuildChangeNoticeErrorMessage.__super.call(this);
	}

	__class(ResGuildChangeNoticeErrorMessage,'net.message.guild.ResGuildChangeNoticeErrorMessage',_super);
	var __proto=ResGuildChangeNoticeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1220;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildChangeNoticeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击传国玉玺
*/
//class net.message.gb.ResLegionBattleAttackThroneMessage extends net.Message
var ResLegionBattleAttackThroneMessage=(function(_super){
	function ResLegionBattleAttackThroneMessage(){
		/**胜利 */
		this._isWin=false;
		/**战斗消息 */
		this._data=null;
		ResLegionBattleAttackThroneMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackThroneMessage,'net.message.gb.ResLegionBattleAttackThroneMessage',_super);
	var __proto=ResLegionBattleAttackThroneMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isWin);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isWin=this.readBoolean(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1348;
	}

	/**胜利 */
	/**胜利 */
	__getset(0,__proto,'isWin',function(){
		return this._isWin;
		},function(value){
		this._isWin=value;
	});

	/**战斗消息 */
	/**战斗消息 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResLegionBattleAttackThroneMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取王者额外奖励
*/
//class net.message.kingwar.ReqKingWarGetExtPrizeMessage extends net.Message
var ReqKingWarGetExtPrizeMessage=(function(_super){
	function ReqKingWarGetExtPrizeMessage(){
		/**排名 */
		this._ranking=0;
		ReqKingWarGetExtPrizeMessage.__super.call(this);
	}

	__class(ReqKingWarGetExtPrizeMessage,'net.message.kingwar.ReqKingWarGetExtPrizeMessage',_super);
	var __proto=ReqKingWarGetExtPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._ranking);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._ranking=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1278;
	}

	/**排名 */
	/**排名 */
	__getset(0,__proto,'ranking',function(){
		return this._ranking;
		},function(value){
		this._ranking=value;
	});

	return ReqKingWarGetExtPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会成员信息刷新错误
*/
//class net.message.guild.ResGetLeginMemberInfoErrorMessage extends net.Message
var ResGetLeginMemberInfoErrorMessage=(function(_super){
	function ResGetLeginMemberInfoErrorMessage(){
		/**1:没有帮会;*/
		this._error=0;
		ResGetLeginMemberInfoErrorMessage.__super.call(this);
	}

	__class(ResGetLeginMemberInfoErrorMessage,'net.message.guild.ResGetLeginMemberInfoErrorMessage',_super);
	var __proto=ResGetLeginMemberInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1677;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetLeginMemberInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装逼错误
*/
//class net.message.chat.ResChatZhuangBiErrorMessage extends net.Message
var ResChatZhuangBiErrorMessage=(function(_super){
	function ResChatZhuangBiErrorMessage(){
		/**1:展示冷却中;*/
		this._error=0;
		ResChatZhuangBiErrorMessage.__super.call(this);
	}

	__class(ResChatZhuangBiErrorMessage,'net.message.chat.ResChatZhuangBiErrorMessage',_super);
	var __proto=ResChatZhuangBiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 777;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatZhuangBiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离开房间
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomLeaveMessage extends net.Message
var ResTeamDuplicateRoomLeaveMessage=(function(_super){
	function ResTeamDuplicateRoomLeaveMessage(){
		/**离开玩家的下标 */
		this._index=0;
		ResTeamDuplicateRoomLeaveMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomLeaveMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomLeaveMessage',_super);
	var __proto=ResTeamDuplicateRoomLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 423;
	}

	/**离开玩家的下标 */
	/**离开玩家的下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResTeamDuplicateRoomLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*房间解散
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomDissolutionMessage extends net.Message
var ResTeamDuplicateRoomDissolutionMessage=(function(_super){
	function ResTeamDuplicateRoomDissolutionMessage(){
		ResTeamDuplicateRoomDissolutionMessage.__super.call(this);;
	}

	__class(ResTeamDuplicateRoomDissolutionMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomDissolutionMessage',_super);
	var __proto=ResTeamDuplicateRoomDissolutionMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 425;
	}

	return ResTeamDuplicateRoomDissolutionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升星
*/
//class net.message.general.ResGeneralUpgradeStarMessage extends net.Message
var ResGeneralUpgradeStarMessage=(function(_super){
	function ResGeneralUpgradeStarMessage(){
		/**蛮将id */
		this._id=0;
		/**星级 */
		this._star=0;
		ResGeneralUpgradeStarMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeStarMessage,'net.message.general.ResGeneralUpgradeStarMessage',_super);
	var __proto=ResGeneralUpgradeStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1409;
	}

	/**蛮将id */
	/**蛮将id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**星级 */
	/**星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResGeneralUpgradeStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新赤壁任务错误
*/
//class net.message.chibi.ResChibiRefreshTaskErrorMessage extends net.Message
var ResChibiRefreshTaskErrorMessage=(function(_super){
	function ResChibiRefreshTaskErrorMessage(){
		/**1:穷;*/
		this._error=0;
		ResChibiRefreshTaskErrorMessage.__super.call(this);
	}

	__class(ResChibiRefreshTaskErrorMessage,'net.message.chibi.ResChibiRefreshTaskErrorMessage',_super);
	var __proto=ResChibiRefreshTaskErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 404;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChibiRefreshTaskErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*锻造升级
*/
//class net.message.duanzao.ReqDuanZaoUpgradeMessage extends net.Message
var ReqDuanZaoUpgradeMessage=(function(_super){
	function ReqDuanZaoUpgradeMessage(){
		/**英雄 */
		this._heroID=0;
		/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
		this._type=0;
		ReqDuanZaoUpgradeMessage.__super.call(this);
	}

	__class(ReqDuanZaoUpgradeMessage,'net.message.duanzao.ReqDuanZaoUpgradeMessage',_super);
	var __proto=ReqDuanZaoUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 195;
	}

	/**英雄 */
	/**英雄 */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
	/**类型[1:强化][2:精炼][3:锻炼][4:宝石][5:共鸣][6:战争艺术][7:合体锻造][8:战争艺术][9:战争艺术][10:战争艺术][11:战争艺术][12:战争艺术] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqDuanZaoUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*踢出玩家错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomKickErrorMessage extends net.Message
var ResTeamDuplicateRoomKickErrorMessage=(function(_super){
	function ResTeamDuplicateRoomKickErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;2:不能踢你自己;3:房间战斗中;4:你不是队长;*/
		this._error=0;
		ResTeamDuplicateRoomKickErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomKickErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomKickErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomKickErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 480;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomKickErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*扫荡副本奖励错误
*/
//class net.message.dungeon.ResReceiveAllDungeonPrizeErrorMessage extends net.Message
var ResReceiveAllDungeonPrizeErrorMessage=(function(_super){
	function ResReceiveAllDungeonPrizeErrorMessage(){
		/**1:条件不足;2:背包已满;3:不存在的配置;4:参数错误;5:次数不足;6:元宝不足;*/
		this._error=0;
		ResReceiveAllDungeonPrizeErrorMessage.__super.call(this);
	}

	__class(ResReceiveAllDungeonPrizeErrorMessage,'net.message.dungeon.ResReceiveAllDungeonPrizeErrorMessage',_super);
	var __proto=ResReceiveAllDungeonPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 767;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveAllDungeonPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器
*/
//class net.message.fit.ReqFitUpgradeWeaponMessage extends net.Message
var ReqFitUpgradeWeaponMessage=(function(_super){
	function ReqFitUpgradeWeaponMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ReqFitUpgradeWeaponMessage.__super.call(this);
	}

	__class(ReqFitUpgradeWeaponMessage,'net.message.fit.ReqFitUpgradeWeaponMessage',_super);
	var __proto=ReqFitUpgradeWeaponMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1157;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqFitUpgradeWeaponMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改宠物名字错误
*/
//class net.message.pet.ResChangePetNameErrorMessage extends net.Message
var ResChangePetNameErrorMessage=(function(_super){
	function ResChangePetNameErrorMessage(){
		/**1:名字非法;2:没有宠物;*/
		this._error=0;
		ResChangePetNameErrorMessage.__super.call(this);
	}

	__class(ResChangePetNameErrorMessage,'net.message.pet.ResChangePetNameErrorMessage',_super);
	var __proto=ResChangePetNameErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 153;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChangePetNameErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改是否允许自动入帮
*/
//class net.message.guild.ReqGuildChangeAutoAgreeApplyMessage extends net.Message
var ReqGuildChangeAutoAgreeApplyMessage=(function(_super){
	function ReqGuildChangeAutoAgreeApplyMessage(){
		/**是否自动同意 */
		this._autoAgreeApply=false;
		ReqGuildChangeAutoAgreeApplyMessage.__super.call(this);
	}

	__class(ReqGuildChangeAutoAgreeApplyMessage,'net.message.guild.ReqGuildChangeAutoAgreeApplyMessage',_super);
	var __proto=ReqGuildChangeAutoAgreeApplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._autoAgreeApply);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._autoAgreeApply=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1209;
	}

	/**是否自动同意 */
	/**是否自动同意 */
	__getset(0,__proto,'autoAgreeApply',function(){
		return this._autoAgreeApply;
		},function(value){
		this._autoAgreeApply=value;
	});

	return ReqGuildChangeAutoAgreeApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解装备
*/
//class net.message.goods.ReqDisposeEquipMessage extends net.Message
var ReqDisposeEquipMessage=(function(_super){
	function ReqDisposeEquipMessage(){
		/**英雄ID */
		this._heroID=0;
		/**需要分解的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		ReqDisposeEquipMessage.__super.call(this);
	}

	__class(ReqDisposeEquipMessage,'net.message.goods.ReqDisposeEquipMessage',_super);
	var __proto=ReqDisposeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._grid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 208;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**需要分解的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**需要分解的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ReqDisposeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取勇闯天庭奖励错误
*/
//class net.message.pata.ResTakeYCTTPrizeErrorMessage extends net.Message
var ResTakeYCTTPrizeErrorMessage=(function(_super){
	function ResTakeYCTTPrizeErrorMessage(){
		/**1:参数错误;2:超过最大层数;3:已经领过奖了;*/
		this._error=0;
		ResTakeYCTTPrizeErrorMessage.__super.call(this);
	}

	__class(ResTakeYCTTPrizeErrorMessage,'net.message.pata.ResTakeYCTTPrizeErrorMessage',_super);
	var __proto=ResTakeYCTTPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 253;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeYCTTPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新活动转盘状态
*/
//class net.message.activities.ResActTurntableTimesUpdateMessage extends net.Message
var ResActTurntableTimesUpdateMessage=(function(_super){
	function ResActTurntableTimesUpdateMessage(){
		/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
		this._type=0;
		/**剩余次数 */
		this._times=0;
		/**累计转盘次数的数值 */
		this._counter=0;
		ResActTurntableTimesUpdateMessage.__super.call(this);
		this._rewardList=[];
	}

	__class(ResActTurntableTimesUpdateMessage,'net.message.activities.ResActTurntableTimesUpdateMessage',_super);
	var __proto=ResActTurntableTimesUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._times);
		this.writeInt(_buf,this._counter);
		this.writeInt(_buf,this._rewardList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewardList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewardList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._times=this.readInt(_buf);
		this._counter=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rewardList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewardList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1608;
	}

	/**剩余次数 */
	/**剩余次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**累计转盘次数的数值 */
	/**累计转盘次数的数值 */
	__getset(0,__proto,'counter',function(){
		return this._counter;
		},function(value){
		this._counter=value;
	});

	/**已获得的奖励的序号 */
	/**已获得的奖励的序号 */
	__getset(0,__proto,'rewardList',function(){
		return this._rewardList;
		},function(value){
		this._rewardList=value;
	});

	return ResActTurntableTimesUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖奖励
*/
//class net.message.escort.ReqEscortRobberyRewardMessage extends net.Message
var ReqEscortRobberyRewardMessage=(function(_super){
	function ReqEscortRobberyRewardMessage(){
		/**抢夺的目标ID */
		this._uid=null;
		ReqEscortRobberyRewardMessage.__super.call(this);
	}

	__class(ReqEscortRobberyRewardMessage,'net.message.escort.ReqEscortRobberyRewardMessage',_super);
	var __proto=ReqEscortRobberyRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 345;
	}

	/**抢夺的目标ID */
	/**抢夺的目标ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqEscortRobberyRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.adviser.ReqAdviserSurmountMessage extends net.Message
var ReqAdviserSurmountMessage=(function(_super){
	function ReqAdviserSurmountMessage(){
		/**id */
		this._id=0;
		ReqAdviserSurmountMessage.__super.call(this);
	}

	__class(ReqAdviserSurmountMessage,'net.message.adviser.ReqAdviserSurmountMessage',_super);
	var __proto=ReqAdviserSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 801;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqAdviserSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*加入或者创建房间
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomJoinMessage extends net.Message
var ResTeamDuplicateRoomJoinMessage=(function(_super){
	function ResTeamDuplicateRoomJoinMessage(){
		/**房间 */
		this._rooms=null;
		ResTeamDuplicateRoomJoinMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomJoinMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomJoinMessage',_super);
	var __proto=ResTeamDuplicateRoomJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._rooms);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rooms=this.readBean(_buf,TeamDuplicateRoom);
	}

	__proto.getId=function(){
		return 419;
	}

	/**房间 */
	/**房间 */
	__getset(0,__proto,'rooms',function(){
		return this._rooms;
		},function(value){
		this._rooms=value;
	});

	return ResTeamDuplicateRoomJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练宠物错误
*/
//class net.message.pet.ResXiLianPetErrorMessage extends net.Message
var ResXiLianPetErrorMessage=(function(_super){
	function ResXiLianPetErrorMessage(){
		/**1:没有宠物;2:没有道具;3:没钱;4:锁定序号错误;*/
		this._error=0;
		ResXiLianPetErrorMessage.__super.call(this);
	}

	__class(ResXiLianPetErrorMessage,'net.message.pet.ResXiLianPetErrorMessage',_super);
	var __proto=ResXiLianPetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 165;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResXiLianPetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*培养
*/
//class net.message.treasure.ReqTreasurePyMessage extends net.Message
var ReqTreasurePyMessage=(function(_super){
	function ReqTreasurePyMessage(){
		/**宝物ID */
		this._treasureId=0;
		ReqTreasurePyMessage.__super.call(this);
	}

	__class(ReqTreasurePyMessage,'net.message.treasure.ReqTreasurePyMessage',_super);
	var __proto=ReqTreasurePyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._treasureId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasureId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1625;
	}

	/**宝物ID */
	/**宝物ID */
	__getset(0,__proto,'treasureId',function(){
		return this._treasureId;
		},function(value){
		this._treasureId=value;
	});

	return ReqTreasurePyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新心愿武将
*/
//class net.message.textureHunt.ReqSelectLoveHeroMessage extends net.Message
var ReqSelectLoveHeroMessage=(function(_super){
	function ReqSelectLoveHeroMessage(){
		/**武将道具id */
		this._HeroItemId=0;
		ReqSelectLoveHeroMessage.__super.call(this);
	}

	__class(ReqSelectLoveHeroMessage,'net.message.textureHunt.ReqSelectLoveHeroMessage',_super);
	var __proto=ReqSelectLoveHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._HeroItemId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._HeroItemId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1597;
	}

	/**武将道具id */
	/**武将道具id */
	__getset(0,__proto,'HeroItemId',function(){
		return this._HeroItemId;
		},function(value){
		this._HeroItemId=value;
	});

	return ReqSelectLoveHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*时装升星
*/
//class net.message.skin.ResUpgradeSkinStarMessage extends net.Message
var ResUpgradeSkinStarMessage=(function(_super){
	function ResUpgradeSkinStarMessage(){
		/**皮肤ID */
		this._skinID=0;
		/**星级 */
		this._star=0;
		ResUpgradeSkinStarMessage.__super.call(this);
	}

	__class(ResUpgradeSkinStarMessage,'net.message.skin.ResUpgradeSkinStarMessage',_super);
	var __proto=ResUpgradeSkinStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1464;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	/**星级 */
	/**星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResUpgradeSkinStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到
*/
//class net.message.legion.ResLegionSignRewardMessageMessage extends net.Message
var ResLegionSignRewardMessageMessage=(function(_super){
	function ResLegionSignRewardMessageMessage(){
		/**宝箱下标 0 1 2 */
		this._type=0;
		ResLegionSignRewardMessageMessage.__super.call(this);
	}

	__class(ResLegionSignRewardMessageMessage,'net.message.legion.ResLegionSignRewardMessageMessage',_super);
	var __proto=ResLegionSignRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 645;
	}

	/**宝箱下标 0 1 2 */
	/**宝箱下标 0 1 2 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResLegionSignRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取合体爬塔信息
*/
//class net.message.pata.ResGetPFITInfoMessage extends net.Message
var ResGetPFITInfoMessage=(function(_super){
	function ResGetPFITInfoMessage(){
		/**当前所在的的层数 */
		this._layer=0;
		/**剩余扫荡次数 */
		this._count=0;
		ResGetPFITInfoMessage.__super.call(this);
		this._prized=[];
	}

	__class(ResGetPFITInfoMessage,'net.message.pata.ResGetPFITInfoMessage',_super);
	var __proto=ResGetPFITInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._prized.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prized.length;++i_am_tmp_i){
			this.writeInt(_buf,this._prized[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._count=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prized=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prized[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1164;
	}

	/**当前所在的的层数 */
	/**当前所在的的层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**剩余扫荡次数 */
	/**剩余扫荡次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**已经领取的奖励 */
	/**已经领取的奖励 */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	return ResGetPFITInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励
*/
//class net.message.escort.ReqEscortRevengeRewardMessage extends net.Message
var ReqEscortRevengeRewardMessage=(function(_super){
	function ReqEscortRevengeRewardMessage(){
		/**复仇列表的下标 */
		this._index=0;
		ReqEscortRevengeRewardMessage.__super.call(this);
	}

	__class(ReqEscortRevengeRewardMessage,'net.message.escort.ReqEscortRevengeRewardMessage',_super);
	var __proto=ReqEscortRevengeRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 352;
	}

	/**复仇列表的下标 */
	/**复仇列表的下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqEscortRevengeRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送聊天信息错误
*/
//class net.message.chat.ResChatErrorMessage extends net.Message
var ResChatErrorMessage=(function(_super){
	function ResChatErrorMessage(){
		/**1:非法内容;2:私聊对方已离线;*/
		this._error=0;
		ResChatErrorMessage.__super.call(this);
	}

	__class(ResChatErrorMessage,'net.message.chat.ResChatErrorMessage',_super);
	var __proto=ResChatErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1370;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖行上架物品
*/
//class net.message.auction.ReqAuctionUpperMessage extends net.Message
var ReqAuctionUpperMessage=(function(_super){
	function ReqAuctionUpperMessage(){
		/**拍卖行配置id */
		this._id=0;
		/**数量 */
		this._count=0;
		ReqAuctionUpperMessage.__super.call(this);
	}

	__class(ReqAuctionUpperMessage,'net.message.auction.ReqAuctionUpperMessage',_super);
	var __proto=ReqAuctionUpperMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1379;
	}

	/**拍卖行配置id */
	/**拍卖行配置id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ReqAuctionUpperMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励
*/
//class net.message.dungeon.ResReceiveDungeonPrizeMessage extends net.Message
var ResReceiveDungeonPrizeMessage=(function(_super){
	function ResReceiveDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**数据 */
		this._data=null;
		/**金币收益 */
		this._copperPerSec=0;
		/**经验收益 */
		this._expPerSec=0;
		ResReceiveDungeonPrizeMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResReceiveDungeonPrizeMessage,'net.message.dungeon.ResReceiveDungeonPrizeMessage',_super);
	var __proto=ResReceiveDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._copperPerSec);
		this.writeInt(_buf,this._expPerSec);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._data=this.readBean(_buf,FightBean);
		this._copperPerSec=this.readInt(_buf);
		this._expPerSec=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 109;
	}

	/**经验收益 */
	/**经验收益 */
	__getset(0,__proto,'expPerSec',function(){
		return this._expPerSec;
		},function(value){
		this._expPerSec=value;
	});

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**金币收益 */
	/**金币收益 */
	__getset(0,__proto,'copperPerSec',function(){
		return this._copperPerSec;
		},function(value){
		this._copperPerSec=value;
	});

	return ResReceiveDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求给钱复活
*/
//class net.message.gb.ResLegionBattlePayRebornMessage extends net.Message
var ResLegionBattlePayRebornMessage=(function(_super){
	function ResLegionBattlePayRebornMessage(){
		ResLegionBattlePayRebornMessage.__super.call(this);;
	}

	__class(ResLegionBattlePayRebornMessage,'net.message.gb.ResLegionBattlePayRebornMessage',_super);
	var __proto=ResLegionBattlePayRebornMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1335;
	}

	return ResLegionBattlePayRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取军团广场任务奖励
*/
//class net.message.task.ReqTaskGuildSquareTakePrizeMessage extends net.Message
var ReqTaskGuildSquareTakePrizeMessage=(function(_super){
	function ReqTaskGuildSquareTakePrizeMessage(){
		/**任务ID */
		this._taskID=0;
		ReqTaskGuildSquareTakePrizeMessage.__super.call(this);
	}

	__class(ReqTaskGuildSquareTakePrizeMessage,'net.message.task.ReqTaskGuildSquareTakePrizeMessage',_super);
	var __proto=ReqTaskGuildSquareTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1299;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ReqTaskGuildSquareTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体参与者
*/
//class net.message.fit.ResFitSetParticipantMessage extends net.Message
var ResFitSetParticipantMessage=(function(_super){
	function ResFitSetParticipantMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ResFitSetParticipantMessage.__super.call(this);
		this._participant=[];
	}

	__class(ResFitSetParticipantMessage,'net.message.fit.ResFitSetParticipantMessage',_super);
	var __proto=ResFitSetParticipantMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._participant.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._participant.length;++i_am_tmp_i){
			this._participant[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._participant=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._participant[i_am_tmp_i]=this.readBeanInList(_buf,FitSetParticipantBean);
		}
	}

	__proto.getId=function(){
		return 1141;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**参与者 */
	/**参与者 */
	__getset(0,__proto,'participant',function(){
		return this._participant;
		},function(value){
		this._participant=value;
	});

	return ResFitSetParticipantMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖行拍卖品状态变更
*/
//class net.message.auction.ResAuctionStatusChangeMessage extends net.Message
var ResAuctionStatusChangeMessage=(function(_super){
	function ResAuctionStatusChangeMessage(){
		/**拍卖品 */
		this._auction=null;
		ResAuctionStatusChangeMessage.__super.call(this);
	}

	__class(ResAuctionStatusChangeMessage,'net.message.auction.ResAuctionStatusChangeMessage',_super);
	var __proto=ResAuctionStatusChangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._auction);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._auction=this.readBean(_buf,AuctionBean);
	}

	__proto.getId=function(){
		return 1415;
	}

	/**拍卖品 */
	/**拍卖品 */
	__getset(0,__proto,'auction',function(){
		return this._auction;
		},function(value){
		this._auction=value;
	});

	return ResAuctionStatusChangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*保存上次淬炼属性
*/
//class net.message.godClothes.ResSaveLastQuenchingAttrMessage extends net.Message
var ResSaveLastQuenchingAttrMessage=(function(_super){
	function ResSaveLastQuenchingAttrMessage(){
		/**玩家战力 */
		this._fightPower=null;
		/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._equipGrid=0;
		/**英雄Id */
		this._heroId=0;
		ResSaveLastQuenchingAttrMessage.__super.call(this);
		this._attribute=[];
	}

	__class(ResSaveLastQuenchingAttrMessage,'net.message.godClothes.ResSaveLastQuenchingAttrMessage',_super);
	var __proto=ResSaveLastQuenchingAttrMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._attribute.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attribute.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attribute[i_am_tmp_i]);
		}
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._equipGrid);
		this.writeInt(_buf,this._heroId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._attribute=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attribute[i_am_tmp_i]=this.readLong(_buf);
		}
		this._fightPower=this.readLong(_buf);
		this._equipGrid=this.readInt(_buf);
		this._heroId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 856;
	}

	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'equipGrid',function(){
		return this._equipGrid;
		},function(value){
		this._equipGrid=value;
	});

	/**属性 */
	/**属性 */
	__getset(0,__proto,'attribute',function(){
		return this._attribute;
		},function(value){
		this._attribute=value;
	});

	/**玩家战力 */
	/**玩家战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**英雄Id */
	/**英雄Id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	return ResSaveLastQuenchingAttrMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新参战
*/
//class net.message.nineHeavy.ResNineHeavyUpdateAppearanceMessage extends net.Message
var ResNineHeavyUpdateAppearanceMessage=(function(_super){
	function ResNineHeavyUpdateAppearanceMessage(){
		/**角色ID */
		this._uid=null;
		/**外形 */
		this._bean=null;
		ResNineHeavyUpdateAppearanceMessage.__super.call(this);
	}

	__class(ResNineHeavyUpdateAppearanceMessage,'net.message.nineHeavy.ResNineHeavyUpdateAppearanceMessage',_super);
	var __proto=ResNineHeavyUpdateAppearanceMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._bean=this.readBean(_buf,AppearanceBean);
	}

	__proto.getId=function(){
		return 1183;
	}

	/**角色ID */
	/**角色ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResNineHeavyUpdateAppearanceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励错误
*/
//class net.message.misc.ResOnHookRewardErrorMessage extends net.Message
var ResOnHookRewardErrorMessage=(function(_super){
	function ResOnHookRewardErrorMessage(){
		/**1:领取失败;*/
		this._error=0;
		ResOnHookRewardErrorMessage.__super.call(this);
	}

	__class(ResOnHookRewardErrorMessage,'net.message.misc.ResOnHookRewardErrorMessage',_super);
	var __proto=ResOnHookRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1449;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResOnHookRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴合体装备
*/
//class net.message.fit.ResFitSetEquipMessage extends net.Message
var ResFitSetEquipMessage=(function(_super){
	function ResFitSetEquipMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ResFitSetEquipMessage.__super.call(this);
		this._equips=[];
		this._indexs=[];
	}

	__class(ResFitSetEquipMessage,'net.message.fit.ResFitSetEquipMessage',_super);
	var __proto=ResFitSetEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this._equips[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._indexs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._indexs.length;++i_am_tmp_i){
			this.writeInt(_buf,this._indexs[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readBeanInList(_buf,FitEquipBean);
		}
		size52413035=this.readInt(_buf);
		this._indexs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._indexs[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1135;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**成功的下标 */
	/**成功的下标 */
	__getset(0,__proto,'indexs',function(){
		return this._indexs;
		},function(value){
		this._indexs=value;
	});

	/**出战状态 */
	/**出战状态 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	return ResFitSetEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务队列
*/
//class net.message.chibi.ReqChibiBuyQueueMessage extends net.Message
var ReqChibiBuyQueueMessage=(function(_super){
	function ReqChibiBuyQueueMessage(){
		ReqChibiBuyQueueMessage.__super.call(this);;
	}

	__class(ReqChibiBuyQueueMessage,'net.message.chibi.ReqChibiBuyQueueMessage',_super);
	var __proto=ReqChibiBuyQueueMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 399;
	}

	return ReqChibiBuyQueueMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送军团战排名错误
*/
//class net.message.gongCe.ResGetJunTuanInfoErrorMessage extends net.Message
var ResGetJunTuanInfoErrorMessage=(function(_super){
	function ResGetJunTuanInfoErrorMessage(){
		/**1:没排名;*/
		this._error=0;
		ResGetJunTuanInfoErrorMessage.__super.call(this);
	}

	__class(ResGetJunTuanInfoErrorMessage,'net.message.gongCe.ResGetJunTuanInfoErrorMessage',_super);
	var __proto=ResGetJunTuanInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1651;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetJunTuanInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新游戏系统状态
*/
//class net.message.user.ResUpdateGameSystemStatusMessage extends net.Message
var ResUpdateGameSystemStatusMessage=(function(_super){
	function ResUpdateGameSystemStatusMessage(){
		/**系统激活[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
		this._gameSystem=0;
		ResUpdateGameSystemStatusMessage.__super.call(this);
	}

	__class(ResUpdateGameSystemStatusMessage,'net.message.user.ResUpdateGameSystemStatusMessage',_super);
	var __proto=ResUpdateGameSystemStatusMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gameSystem);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gameSystem=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 41;
	}

	/**系统激活[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	/**系统激活[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	__getset(0,__proto,'gameSystem',function(){
		return this._gameSystem;
		},function(value){
		this._gameSystem=value;
	});

	return ResUpdateGameSystemStatusMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建主英雄
*/
//class net.message.hero.ReqCreateMainHeroMessage extends net.Message
var ReqCreateMainHeroMessage=(function(_super){
	function ReqCreateMainHeroMessage(){
		/**英雄名称 */
		this._name=null;
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		ReqCreateMainHeroMessage.__super.call(this);
	}

	__class(ReqCreateMainHeroMessage,'net.message.hero.ReqCreateMainHeroMessage',_super);
	var __proto=ReqCreateMainHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 10;
	}

	/**英雄名称 */
	/**英雄名称 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	return ReqCreateMainHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡
*/
//class net.message.chat.ReqChatHelpMessage extends net.Message
var ReqChatHelpMessage=(function(_super){
	function ReqChatHelpMessage(){
		/**被帮助人的ID */
		this._target=null;
		/**被帮助人的关卡 */
		this._guanqia=0;
		ReqChatHelpMessage.__super.call(this);
	}

	__class(ReqChatHelpMessage,'net.message.chat.ReqChatHelpMessage',_super);
	var __proto=ReqChatHelpMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._target);
		this.writeInt(_buf,this._guanqia);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readLong(_buf);
		this._guanqia=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 759;
	}

	/**被帮助人的ID */
	/**被帮助人的ID */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**被帮助人的关卡 */
	/**被帮助人的关卡 */
	__getset(0,__proto,'guanqia',function(){
		return this._guanqia;
		},function(value){
		this._guanqia=value;
	});

	return ReqChatHelpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(全民BOSS)
*/
//class net.message.dungeon.ResReceiveQuanMinBossDungeonPrizeMessage extends net.Message
var ResReceiveQuanMinBossDungeonPrizeMessage=(function(_super){
	function ResReceiveQuanMinBossDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**剩余血量 */
		this._hp=null;
		/**复活次数 */
		this._reliveTimes=0;
		/**战斗数据 */
		this._data=null;
		ResReceiveQuanMinBossDungeonPrizeMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResReceiveQuanMinBossDungeonPrizeMessage,'net.message.dungeon.ResReceiveQuanMinBossDungeonPrizeMessage',_super);
	var __proto=ResReceiveQuanMinBossDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._hp);
		this.writeInt(_buf,this._reliveTimes);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._hp=this.readLong(_buf);
		this._reliveTimes=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 217;
	}

	/**复活次数 */
	/**复活次数 */
	__getset(0,__proto,'reliveTimes',function(){
		return this._reliveTimes;
		},function(value){
		this._reliveTimes=value;
	});

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**剩余血量 */
	/**剩余血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	return ResReceiveQuanMinBossDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*播放录像
*/
//class net.message.video.ResPlayVideoMessage extends net.Message
var ResPlayVideoMessage=(function(_super){
	function ResPlayVideoMessage(){
		/**录像唯一id */
		this._videoId=null;
		/**录像当前播放次数 */
		this._play=0;
		ResPlayVideoMessage.__super.call(this);
	}

	__class(ResPlayVideoMessage,'net.message.video.ResPlayVideoMessage',_super);
	var __proto=ResPlayVideoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._videoId);
		this.writeInt(_buf,this._play);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._videoId=this.readLong(_buf);
		this._play=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1428;
	}

	/**录像唯一id */
	/**录像唯一id */
	__getset(0,__proto,'videoId',function(){
		return this._videoId;
		},function(value){
		this._videoId=value;
	});

	/**录像当前播放次数 */
	/**录像当前播放次数 */
	__getset(0,__proto,'play',function(){
		return this._play;
		},function(value){
		this._play=value;
	});

	return ResPlayVideoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会报名错误
*/
//class net.message.qunyinghui.ResQunYingHuiSignUpErrorMessage extends net.Message
var ResQunYingHuiSignUpErrorMessage=(function(_super){
	function ResQunYingHuiSignUpErrorMessage(){
		/**1:活动未开启;2:非报名阶段;3:已经报名;*/
		this._error=0;
		ResQunYingHuiSignUpErrorMessage.__super.call(this);
	}

	__class(ResQunYingHuiSignUpErrorMessage,'net.message.qunyinghui.ResQunYingHuiSignUpErrorMessage',_super);
	var __proto=ResQunYingHuiSignUpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 472;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQunYingHuiSignUpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励错误
*/
//class net.message.misc.ResFastOnHookRewardErrorMessage extends net.Message
var ResFastOnHookRewardErrorMessage=(function(_super){
	function ResFastOnHookRewardErrorMessage(){
		/**1:领取失败;2:没有次数了;3:时间不够;4:消耗不足;*/
		this._error=0;
		ResFastOnHookRewardErrorMessage.__super.call(this);
	}

	__class(ResFastOnHookRewardErrorMessage,'net.message.misc.ResFastOnHookRewardErrorMessage',_super);
	var __proto=ResFastOnHookRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1456;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFastOnHookRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战组队招募
*/
//class net.message.gb.ResLegionBattleHireMessage extends net.Message
var ResLegionBattleHireMessage=(function(_super){
	function ResLegionBattleHireMessage(){
		ResLegionBattleHireMessage.__super.call(this);;
	}

	__class(ResLegionBattleHireMessage,'net.message.gb.ResLegionBattleHireMessage',_super);
	var __proto=ResLegionBattleHireMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1325;
	}

	return ResLegionBattleHireMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级错误
*/
//class net.message.totem.ResTotemUpgradeErrorMessage extends net.Message
var ResTotemUpgradeErrorMessage=(function(_super){
	function ResTotemUpgradeErrorMessage(){
		/**1:不存在;2:条件不足;3:配置错误;4:最大等级;5:需要突破再升级;*/
		this._error=0;
		ResTotemUpgradeErrorMessage.__super.call(this);
	}

	__class(ResTotemUpgradeErrorMessage,'net.message.totem.ResTotemUpgradeErrorMessage',_super);
	var __proto=ResTotemUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 865;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTotemUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*寻找对手
*/
//class net.message.garrison.ResGarrisonFindTargetMessage extends net.Message
var ResGarrisonFindTargetMessage=(function(_super){
	function ResGarrisonFindTargetMessage(){
		/**当前已搜索次数 */
		this._searchCount=0;
		/**对手 */
		this._target=null;
		ResGarrisonFindTargetMessage.__super.call(this);
	}

	__class(ResGarrisonFindTargetMessage,'net.message.garrison.ResGarrisonFindTargetMessage',_super);
	var __proto=ResGarrisonFindTargetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._searchCount);
		this.writeBean(_buf,this._target);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._searchCount=this.readInt(_buf);
		this._target=this.readBean(_buf,GarrisonTargetBean);
	}

	__proto.getId=function(){
		return 1041;
	}

	/**对手 */
	/**对手 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**当前已搜索次数 */
	/**当前已搜索次数 */
	__getset(0,__proto,'searchCount',function(){
		return this._searchCount;
		},function(value){
		this._searchCount=value;
	});

	return ResGarrisonFindTargetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新英雄属性道具使用数量
*/
//class net.message.goods.ResUpdateHeroAttributeGoodsMessage extends net.Message
var ResUpdateHeroAttributeGoodsMessage=(function(_super){
	function ResUpdateHeroAttributeGoodsMessage(){
		/**英雄ID */
		this._heroID=0;
		/**道具ID */
		this._goodsID=0;
		/**使用数量 */
		this._goodsNum=0;
		ResUpdateHeroAttributeGoodsMessage.__super.call(this);
	}

	__class(ResUpdateHeroAttributeGoodsMessage,'net.message.goods.ResUpdateHeroAttributeGoodsMessage',_super);
	var __proto=ResUpdateHeroAttributeGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._goodsID);
		this.writeInt(_buf,this._goodsNum);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._goodsID=this.readInt(_buf);
		this._goodsNum=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1080;
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'goodsID',function(){
		return this._goodsID;
		},function(value){
		this._goodsID=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**使用数量 */
	/**使用数量 */
	__getset(0,__proto,'goodsNum',function(){
		return this._goodsNum;
		},function(value){
		this._goodsNum=value;
	});

	return ResUpdateHeroAttributeGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*找回官位昨日奖励
*/
//class net.message.official.ResReceiveOfficialYesterdayRewardMessage extends net.Message
var ResReceiveOfficialYesterdayRewardMessage=(function(_super){
	function ResReceiveOfficialYesterdayRewardMessage(){
		/**类型 1 为资源 2为历练 */
		this._type=0;
		/**项目的ID */
		this._id=0;
		/**找回的次数 如果是找回历练 此处无值 */
		this._num=0;
		ResReceiveOfficialYesterdayRewardMessage.__super.call(this);
	}

	__class(ResReceiveOfficialYesterdayRewardMessage,'net.message.official.ResReceiveOfficialYesterdayRewardMessage',_super);
	var __proto=ResReceiveOfficialYesterdayRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 326;
	}

	/**类型 1 为资源 2为历练 */
	/**类型 1 为资源 2为历练 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**项目的ID */
	/**项目的ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**找回的次数 如果是找回历练 此处无值 */
	/**找回的次数 如果是找回历练 此处无值 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ResReceiveOfficialYesterdayRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体装备宝石错误
*/
//class net.message.fit.ResFitSetEquipGemErrorMessage extends net.Message
var ResFitSetEquipGemErrorMessage=(function(_super){
	function ResFitSetEquipGemErrorMessage(){
		/**1:不满足条件;*/
		this._error=0;
		ResFitSetEquipGemErrorMessage.__super.call(this);
	}

	__class(ResFitSetEquipGemErrorMessage,'net.message.fit.ResFitSetEquipGemErrorMessage',_super);
	var __proto=ResFitSetEquipGemErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1139;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitSetEquipGemErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求加入军团首领
*/
//class net.message.worldboss.ReqWorldBossJoinMessage extends net.Message
var ReqWorldBossJoinMessage=(function(_super){
	function ReqWorldBossJoinMessage(){
		ReqWorldBossJoinMessage.__super.call(this);;
	}

	__class(ReqWorldBossJoinMessage,'net.message.worldboss.ReqWorldBossJoinMessage',_super);
	var __proto=ReqWorldBossJoinMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 500;
	}

	return ReqWorldBossJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关卡投资计划领奖错误
*/
//class net.message.investment.ResGuanQiaInvestmentGetRewardMessageErrorMessage extends net.Message
var ResGuanQiaInvestmentGetRewardMessageErrorMessage=(function(_super){
	function ResGuanQiaInvestmentGetRewardMessageErrorMessage(){
		/**1:配置错误;2:已经领取;3:关卡没完成;4:没有高级资格;5:背包已满;*/
		this._error=0;
		ResGuanQiaInvestmentGetRewardMessageErrorMessage.__super.call(this);
	}

	__class(ResGuanQiaInvestmentGetRewardMessageErrorMessage,'net.message.investment.ResGuanQiaInvestmentGetRewardMessageErrorMessage',_super);
	var __proto=ResGuanQiaInvestmentGetRewardMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1524;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuanQiaInvestmentGetRewardMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级觉悟
*/
//class net.message.general.ResGeneralUpgradeJueWuMessage extends net.Message
var ResGeneralUpgradeJueWuMessage=(function(_super){
	function ResGeneralUpgradeJueWuMessage(){
		/**蛮将觉悟等级 */
		this._lv=0;
		ResGeneralUpgradeJueWuMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeJueWuMessage,'net.message.general.ResGeneralUpgradeJueWuMessage',_super);
	var __proto=ResGeneralUpgradeJueWuMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1403;
	}

	/**蛮将觉悟等级 */
	/**蛮将觉悟等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResGeneralUpgradeJueWuMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*同步暴击日
*/
//class net.message.upgrade.ResUpgradeUpdateCritMessage extends net.Message
var ResUpgradeUpdateCritMessage=(function(_super){
	function ResUpgradeUpdateCritMessage(){
		ResUpgradeUpdateCritMessage.__super.call(this);
		this._id=[];
	}

	__class(ResUpgradeUpdateCritMessage,'net.message.upgrade.ResUpgradeUpdateCritMessage',_super);
	var __proto=ResUpgradeUpdateCritMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._id.length;++i_am_tmp_i){
			this.writeInt(_buf,this._id[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._id=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._id[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1401;
	}

	/**处于暴击状态的系统 */
	/**处于暴击状态的系统 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResUpgradeUpdateCritMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*加入或者创建房间错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomJoinErrorMessage extends net.Message
var ResTeamDuplicateRoomJoinErrorMessage=(function(_super){
	function ResTeamDuplicateRoomJoinErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;2:没有满足加入条件;3:你有一个未完成的副本正在战斗中;*/
		this._error=0;
		ResTeamDuplicateRoomJoinErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomJoinErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomJoinErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomJoinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 420;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomJoinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知开始冷却
*/
//class net.message.gb.ResLegionBattleColdMessage extends net.Message
var ResLegionBattleColdMessage=(function(_super){
	function ResLegionBattleColdMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**怪物序号 */
		this._monsterIndex=0;
		/**冷却到期时间 */
		this._time=null;
		ResLegionBattleColdMessage.__super.call(this);
	}

	__class(ResLegionBattleColdMessage,'net.message.gb.ResLegionBattleColdMessage',_super);
	var __proto=ResLegionBattleColdMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._monsterIndex);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._monsterIndex=this.readInt(_buf);
		this._time=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1346;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**怪物序号 */
	/**怪物序号 */
	__getset(0,__proto,'monsterIndex',function(){
		return this._monsterIndex;
		},function(value){
		this._monsterIndex=value;
	});

	/**冷却到期时间 */
	/**冷却到期时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResLegionBattleColdMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*积分变更
*/
//class net.message.nineHeavy.ResNineHeavyUpdateIntegralMessage extends net.Message
var ResNineHeavyUpdateIntegralMessage=(function(_super){
	function ResNineHeavyUpdateIntegralMessage(){
		/**积分对象 */
		this._integral=0;
		ResNineHeavyUpdateIntegralMessage.__super.call(this);
	}

	__class(ResNineHeavyUpdateIntegralMessage,'net.message.nineHeavy.ResNineHeavyUpdateIntegralMessage',_super);
	var __proto=ResNineHeavyUpdateIntegralMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._integral);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._integral=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 463;
	}

	/**积分对象 */
	/**积分对象 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	return ResNineHeavyUpdateIntegralMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子
*/
//class net.message.marriage.ResMarriagePromoteHouseLvMessage extends net.Message
var ResMarriagePromoteHouseLvMessage=(function(_super){
	function ResMarriagePromoteHouseLvMessage(){
		/**房子等级 */
		this._lv=0;
		/**房子进度 */
		this._progress=0;
		ResMarriagePromoteHouseLvMessage.__super.call(this);
	}

	__class(ResMarriagePromoteHouseLvMessage,'net.message.marriage.ResMarriagePromoteHouseLvMessage',_super);
	var __proto=ResMarriagePromoteHouseLvMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 557;
	}

	/**房子等级 */
	/**房子等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**房子进度 */
	/**房子进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return ResMarriagePromoteHouseLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取玲珑宝塔信息错误
*/
//class net.message.pata.ResGetLLBTInfoErrorMessage extends net.Message
var ResGetLLBTInfoErrorMessage=(function(_super){
	function ResGetLLBTInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetLLBTInfoErrorMessage.__super.call(this);
	}

	__class(ResGetLLBTInfoErrorMessage,'net.message.pata.ResGetLLBTInfoErrorMessage',_super);
	var __proto=ResGetLLBTInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 235;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetLLBTInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级觉悟错误
*/
//class net.message.general.ResGeneralUpgradeJueWuErrorMessage extends net.Message
var ResGeneralUpgradeJueWuErrorMessage=(function(_super){
	function ResGeneralUpgradeJueWuErrorMessage(){
		/**1:还没有蛮将;2:穷;*/
		this._error=0;
		ResGeneralUpgradeJueWuErrorMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeJueWuErrorMessage,'net.message.general.ResGeneralUpgradeJueWuErrorMessage',_super);
	var __proto=ResGeneralUpgradeJueWuErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1404;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralUpgradeJueWuErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成任务
*/
//class net.message.task.ResTaskFinishMessage extends net.Message
var ResTaskFinishMessage=(function(_super){
	function ResTaskFinishMessage(){
		/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
		this._type=0;
		/**任务ID */
		this._taskID=0;
		ResTaskFinishMessage.__super.call(this);
	}

	__class(ResTaskFinishMessage,'net.message.task.ResTaskFinishMessage',_super);
	var __proto=ResTaskFinishMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1296;
	}

	/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ResTaskFinishMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知被劫镖
*/
//class net.message.escort.ResEscortRobbedMessage extends net.Message
var ResEscortRobbedMessage=(function(_super){
	function ResEscortRobbedMessage(){
		/**要抢夺的目标ID */
		this._bean=null;
		ResEscortRobbedMessage.__super.call(this);
	}

	__class(ResEscortRobbedMessage,'net.message.escort.ResEscortRobbedMessage',_super);
	var __proto=ResEscortRobbedMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,EscortRecordBean);
	}

	__proto.getId=function(){
		return 348;
	}

	/**要抢夺的目标ID */
	/**要抢夺的目标ID */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEscortRobbedMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.general.ResGeneralActiveMessage extends net.Message
var ResGeneralActiveMessage=(function(_super){
	function ResGeneralActiveMessage(){
		/**对象 */
		this._generalBean=null;
		ResGeneralActiveMessage.__super.call(this);
	}

	__class(ResGeneralActiveMessage,'net.message.general.ResGeneralActiveMessage',_super);
	var __proto=ResGeneralActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._generalBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._generalBean=this.readBean(_buf,GeneralBean);
	}

	__proto.getId=function(){
		return 844;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'generalBean',function(){
		return this._generalBean;
		},function(value){
		this._generalBean=value;
	});

	return ResGeneralActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家通过ID获得房间列表
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomForIDMessage extends net.Message
var ResTeamDuplicateRoomForIDMessage=(function(_super){
	function ResTeamDuplicateRoomForIDMessage(){
		ResTeamDuplicateRoomForIDMessage.__super.call(this);
		this._rooms=[];
	}

	__class(ResTeamDuplicateRoomForIDMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomForIDMessage',_super);
	var __proto=ResTeamDuplicateRoomForIDMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rooms.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rooms.length;++i_am_tmp_i){
			this._rooms[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rooms=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rooms[i_am_tmp_i]=this.readBeanInList(_buf,TeamDuplicateRoom);
		}
	}

	__proto.getId=function(){
		return 416;
	}

	/**房间列表 */
	/**房间列表 */
	__getset(0,__proto,'rooms',function(){
		return this._rooms;
		},function(value){
		this._rooms=value;
	});

	return ResTeamDuplicateRoomForIDMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*团购领奖错误
*/
//class net.message.tuangou.ResTuanGouTakePrizeErrorMessage extends net.Message
var ResTuanGouTakePrizeErrorMessage=(function(_super){
	function ResTuanGouTakePrizeErrorMessage(){
		/**1:参数错误;2:活动未开启;3:人数不足;4:领过奖;*/
		this._error=0;
		ResTuanGouTakePrizeErrorMessage.__super.call(this);
	}

	__class(ResTuanGouTakePrizeErrorMessage,'net.message.tuangou.ResTuanGouTakePrizeErrorMessage',_super);
	var __proto=ResTuanGouTakePrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1400;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTuanGouTakePrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新镖车等级
*/
//class net.message.escort.ReqFlushEscortLvMessage extends net.Message
var ReqFlushEscortLvMessage=(function(_super){
	function ReqFlushEscortLvMessage(){
		/**刷新方式 1 付费刷新 2 一键刷橙 */
		this._type=0;
		ReqFlushEscortLvMessage.__super.call(this);
	}

	__class(ReqFlushEscortLvMessage,'net.message.escort.ReqFlushEscortLvMessage',_super);
	var __proto=ReqFlushEscortLvMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 329;
	}

	/**刷新方式 1 付费刷新 2 一键刷橙 */
	/**刷新方式 1 付费刷新 2 一键刷橙 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqFlushEscortLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击
*/
//class net.message.nineHeavy.ReqNineHeavyPayRebornMessage extends net.Message
var ReqNineHeavyPayRebornMessage=(function(_super){
	function ReqNineHeavyPayRebornMessage(){
		ReqNineHeavyPayRebornMessage.__super.call(this);;
	}

	__class(ReqNineHeavyPayRebornMessage,'net.message.nineHeavy.ReqNineHeavyPayRebornMessage',_super);
	var __proto=ReqNineHeavyPayRebornMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 996;
	}

	return ReqNineHeavyPayRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取录像
*/
//class net.message.video.ResGetVideosMessage extends net.Message
var ResGetVideosMessage=(function(_super){
	function ResGetVideosMessage(){
		/**今日已点赞数 */
		this._todayLike=0;
		/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
		this._pageType=0;
		ResGetVideosMessage.__super.call(this);
		this._todayLikeVideo=[];
		this._videos=[];
	}

	__class(ResGetVideosMessage,'net.message.video.ResGetVideosMessage',_super);
	var __proto=ResGetVideosMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._todayLike);
		this.writeInt(_buf,this._pageType);
		this.writeInt(_buf,this._todayLikeVideo.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._todayLikeVideo.length;++i_am_tmp_i){
			this.writeLong(_buf,this._todayLikeVideo[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._videos.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._videos.length;++i_am_tmp_i){
			this._videos[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._todayLike=this.readInt(_buf);
		this._pageType=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._todayLikeVideo=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._todayLikeVideo[i_am_tmp_i]=this.readLong(_buf);
		}
		size52413035=this.readInt(_buf);
		this._videos=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._videos[i_am_tmp_i]=this.readBeanInList(_buf,VideoBean);
		}
	}

	__proto.getId=function(){
		return 1422;
	}

	/**录像 */
	/**录像 */
	__getset(0,__proto,'videos',function(){
		return this._videos;
		},function(value){
		this._videos=value;
	});

	/**今日已点赞数 */
	/**今日已点赞数 */
	__getset(0,__proto,'todayLike',function(){
		return this._todayLike;
		},function(value){
		this._todayLike=value;
	});

	/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
	/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
	__getset(0,__proto,'pageType',function(){
		return this._pageType;
		},function(value){
		this._pageType=value;
	});

	/**今日已点赞的videoId */
	/**今日已点赞的videoId */
	__getset(0,__proto,'todayLikeVideo',function(){
		return this._todayLikeVideo;
		},function(value){
		this._todayLikeVideo=value;
	});

	return ResGetVideosMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新任务
*/
//class net.message.task.ResTaskUpdateMessage extends net.Message
var ResTaskUpdateMessage=(function(_super){
	function ResTaskUpdateMessage(){
		ResTaskUpdateMessage.__super.call(this);
		this._tasks=[];
	}

	__class(ResTaskUpdateMessage,'net.message.task.ResTaskUpdateMessage',_super);
	var __proto=ResTaskUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._tasks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._tasks.length;++i_am_tmp_i){
			this._tasks[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._tasks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._tasks[i_am_tmp_i]=this.readBeanInList(_buf,TaskBean);
		}
	}

	__proto.getId=function(){
		return 1298;
	}

	/**更新任务 */
	/**更新任务 */
	__getset(0,__proto,'tasks',function(){
		return this._tasks;
		},function(value){
		this._tasks=value;
	});

	return ResTaskUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改宠物名字
*/
//class net.message.pet.ResChangePetNameMessage extends net.Message
var ResChangePetNameMessage=(function(_super){
	function ResChangePetNameMessage(){
		/**宠物ID */
		this._petID=0;
		/**宠物名字 */
		this._petName=null;
		ResChangePetNameMessage.__super.call(this);
	}

	__class(ResChangePetNameMessage,'net.message.pet.ResChangePetNameMessage',_super);
	var __proto=ResChangePetNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeString(_buf,this._petName);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._petName=this.readString(_buf);
	}

	__proto.getId=function(){
		return 152;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**宠物名字 */
	/**宠物名字 */
	__getset(0,__proto,'petName',function(){
		return this._petName;
		},function(value){
		this._petName=value;
	});

	return ResChangePetNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*猎命
*/
//class net.message.lieming.ResLiemingMessage extends net.Message
var ResLiemingMessage=(function(_super){
	function ResLiemingMessage(){
		/**花费 */
		this._coin=null;
		/**猎命等级 */
		this._lieMingLevel=0;
		ResLiemingMessage.__super.call(this);
		this._rewardList=[];
	}

	__class(ResLiemingMessage,'net.message.lieming.ResLiemingMessage',_super);
	var __proto=ResLiemingMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._coin);
		this.writeInt(_buf,this._rewardList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewardList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewardList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._lieMingLevel);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._coin=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._rewardList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewardList[i_am_tmp_i]=this.readInt(_buf);
		}
		this._lieMingLevel=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 730;
	}

	/**花费 */
	/**花费 */
	__getset(0,__proto,'coin',function(){
		return this._coin;
		},function(value){
		this._coin=value;
	});

	/**物品id列表 */
	/**物品id列表 */
	__getset(0,__proto,'rewardList',function(){
		return this._rewardList;
		},function(value){
		this._rewardList=value;
	});

	/**猎命等级 */
	/**猎命等级 */
	__getset(0,__proto,'lieMingLevel',function(){
		return this._lieMingLevel;
		},function(value){
		this._lieMingLevel=value;
	});

	return ResLiemingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送贺礼
*/
//class net.message.marriage.ResMarriageGiftMessage extends net.Message
var ResMarriageGiftMessage=(function(_super){
	function ResMarriageGiftMessage(){
		ResMarriageGiftMessage.__super.call(this);
		this._huili=[];
	}

	__class(ResMarriageGiftMessage,'net.message.marriage.ResMarriageGiftMessage',_super);
	var __proto=ResMarriageGiftMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._huili.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._huili.length;++i_am_tmp_i){
			this._huili[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._huili=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._huili[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 548;
	}

	/**回礼 */
	/**回礼 */
	__getset(0,__proto,'huili',function(){
		return this._huili;
		},function(value){
		this._huili=value;
	});

	return ResMarriageGiftMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求战斗
*/
//class net.message.kingwar.ReqKingWarStartFightMessage extends net.Message
var ReqKingWarStartFightMessage=(function(_super){
	function ReqKingWarStartFightMessage(){
		ReqKingWarStartFightMessage.__super.call(this);;
	}

	__class(ReqKingWarStartFightMessage,'net.message.kingwar.ReqKingWarStartFightMessage',_super);
	var __proto=ReqKingWarStartFightMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 489;
	}

	return ReqKingWarStartFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看玩家错误
*/
//class net.message.chat.ResLookPlayerErrorMessage extends net.Message
var ResLookPlayerErrorMessage=(function(_super){
	function ResLookPlayerErrorMessage(){
		/**1:不存在;*/
		this._error=0;
		ResLookPlayerErrorMessage.__super.call(this);
	}

	__class(ResLookPlayerErrorMessage,'net.message.chat.ResLookPlayerErrorMessage',_super);
	var __proto=ResLookPlayerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 794;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLookPlayerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖奖励错误
*/
//class net.message.escort.ResEscortRobberyRewardErrorMessage extends net.Message
var ResEscortRobberyRewardErrorMessage=(function(_super){
	function ResEscortRobberyRewardErrorMessage(){
		/**1:目标状态发生变化 此次劫镖无效;*/
		this._error=0;
		ResEscortRobberyRewardErrorMessage.__super.call(this);
	}

	__class(ResEscortRobberyRewardErrorMessage,'net.message.escort.ResEscortRobberyRewardErrorMessage',_super);
	var __proto=ResEscortRobberyRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 347;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEscortRobberyRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全民boss挑战次数
*/
//class net.message.dungeon.ResBuyQuanMinBossTimesMessage extends net.Message
var ResBuyQuanMinBossTimesMessage=(function(_super){
	function ResBuyQuanMinBossTimesMessage(){
		/**全民boss已购买次数(跨天重置)*/
		this._quanminBuyTimes=0;
		ResBuyQuanMinBossTimesMessage.__super.call(this);
	}

	__class(ResBuyQuanMinBossTimesMessage,'net.message.dungeon.ResBuyQuanMinBossTimesMessage',_super);
	var __proto=ResBuyQuanMinBossTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._quanminBuyTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._quanminBuyTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 220;
	}

	/**全民boss已购买次数(跨天重置)*/
	/**全民boss已购买次数(跨天重置)*/
	__getset(0,__proto,'quanminBuyTimes',function(){
		return this._quanminBuyTimes;
		},function(value){
		this._quanminBuyTimes=value;
	});

	return ResBuyQuanMinBossTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶错误
*/
//class net.message.upgrade.ResCommonUpgradeErrorMessage extends net.Message
var ResCommonUpgradeErrorMessage=(function(_super){
	function ResCommonUpgradeErrorMessage(){
		/**1:已达最大等级;2:穷;3:没道具;4:子类型错误;5:概率未命中;*/
		this._error=0;
		ResCommonUpgradeErrorMessage.__super.call(this);
	}

	__class(ResCommonUpgradeErrorMessage,'net.message.upgrade.ResCommonUpgradeErrorMessage',_super);
	var __proto=ResCommonUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 173;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCommonUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取远征信息
*/
//class net.message.yuanzheng.ResYuanZhengGetInfoMessage extends net.Message
var ResYuanZhengGetInfoMessage=(function(_super){
	function ResYuanZhengGetInfoMessage(){
		/**当前可挑战关卡ID(0表示全部通关)*/
		this._guanqiaID=0;
		/**当前关卡对手信息 */
		this._target=null;
		/**远征已经重置次数 */
		this._resetCount=0;
		/**远征VIP已经重置次数 */
		this._vipResetCount=0;
		ResYuanZhengGetInfoMessage.__super.call(this);
		this._myFightObjects=[];
		this._shusheng=[];
		this._jingling=[];
		this._prize=[];
	}

	__class(ResYuanZhengGetInfoMessage,'net.message.yuanzheng.ResYuanZhengGetInfoMessage',_super);
	var __proto=ResYuanZhengGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeBean(_buf,this._target);
		this.writeInt(_buf,this._myFightObjects.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._myFightObjects.length;++i_am_tmp_i){
			this._myFightObjects[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._shusheng.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._shusheng.length;++i_am_tmp_i){
			this._shusheng[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._jingling.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._jingling.length;++i_am_tmp_i){
			this._jingling[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._resetCount);
		this.writeInt(_buf,this._vipResetCount);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this.writeInt(_buf,this._prize[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._target=this.readBean(_buf,YuanZhengUserBean);
		size52413035=this.readInt(_buf);
		this._myFightObjects=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._myFightObjects[i_am_tmp_i]=this.readBeanInList(_buf,YuanzhengMemberBean);
		}
		size52413035=this.readInt(_buf);
		this._shusheng=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._shusheng[i_am_tmp_i]=this.readBeanInList(_buf,YuanZhengShuShengBean);
		}
		size52413035=this.readInt(_buf);
		this._jingling=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._jingling[i_am_tmp_i]=this.readBeanInList(_buf,YuanZhengJingLingBean);
		}
		this._resetCount=this.readInt(_buf);
		this._vipResetCount=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 293;
	}

	/**远征VIP已经重置次数 */
	/**远征VIP已经重置次数 */
	__getset(0,__proto,'vipResetCount',function(){
		return this._vipResetCount;
		},function(value){
		this._vipResetCount=value;
	});

	/**当前可挑战关卡ID(0表示全部通关)*/
	/**当前可挑战关卡ID(0表示全部通关)*/
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**当前关卡对手信息 */
	/**当前关卡对手信息 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**战斗对象列表(自己),这个可能为空，为空则表示未开始，直接取远征阵容全部满血即可 */
	/**战斗对象列表(自己),这个可能为空，为空则表示未开始，直接取远征阵容全部满血即可 */
	__getset(0,__proto,'myFightObjects',function(){
		return this._myFightObjects;
		},function(value){
		this._myFightObjects=value;
	});

	/**书生信息 */
	/**书生信息 */
	__getset(0,__proto,'shusheng',function(){
		return this._shusheng;
		},function(value){
		this._shusheng=value;
	});

	/**精灵信息信息 */
	/**精灵信息信息 */
	__getset(0,__proto,'jingling',function(){
		return this._jingling;
		},function(value){
		this._jingling=value;
	});

	/**已经领取的关卡奖励宝箱 */
	/**已经领取的关卡奖励宝箱 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**远征已经重置次数 */
	/**远征已经重置次数 */
	__getset(0,__proto,'resetCount',function(){
		return this._resetCount;
		},function(value){
		this._resetCount=value;
	});

	return ResYuanZhengGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备背包扩容
*/
//class net.message.packet.ReqEquipPacketAddCapacityMessage extends net.Message
var ReqEquipPacketAddCapacityMessage=(function(_super){
	function ReqEquipPacketAddCapacityMessage(){
		/**数量 */
		this._num=0;
		ReqEquipPacketAddCapacityMessage.__super.call(this);
	}

	__class(ReqEquipPacketAddCapacityMessage,'net.message.packet.ReqEquipPacketAddCapacityMessage',_super);
	var __proto=ReqEquipPacketAddCapacityMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 13;
	}

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqEquipPacketAddCapacityMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*替换/装备战纹
*/
//class net.message.zhanwen.ResReplaceZhanwenMessage extends net.Message
var ResReplaceZhanwenMessage=(function(_super){
	function ResReplaceZhanwenMessage(){
		/**英雄ID */
		this._heroID=0;
		/**战纹道具 */
		this._goods=null;
		ResReplaceZhanwenMessage.__super.call(this);
	}

	__class(ResReplaceZhanwenMessage,'net.message.zhanwen.ResReplaceZhanwenMessage',_super);
	var __proto=ResReplaceZhanwenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._goods);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._goods=this.readBean(_buf,GoodsBean);
	}

	__proto.getId=function(){
		return 98;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**战纹道具 */
	/**战纹道具 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	return ResReplaceZhanwenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*改变归属
*/
//class net.message.dungeon.ReqChangeBossOwnerMessage extends net.Message
var ReqChangeBossOwnerMessage=(function(_super){
	function ReqChangeBossOwnerMessage(){
		/**副本id */
		this._DungeonId=0;
		ReqChangeBossOwnerMessage.__super.call(this);
	}

	__class(ReqChangeBossOwnerMessage,'net.message.dungeon.ReqChangeBossOwnerMessage',_super);
	var __proto=ReqChangeBossOwnerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._DungeonId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._DungeonId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 781;
	}

	/**副本id */
	/**副本id */
	__getset(0,__proto,'DungeonId',function(){
		return this._DungeonId;
		},function(value){
		this._DungeonId=value;
	});

	return ReqChangeBossOwnerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取积分奖励错误
*/
//class net.message.todayrecommend.ResRecommendTaskIntegralRewardErrorMessage extends net.Message
var ResRecommendTaskIntegralRewardErrorMessage=(function(_super){
	function ResRecommendTaskIntegralRewardErrorMessage(){
		/**1:奖励已经领取;*/
		this._error=0;
		ResRecommendTaskIntegralRewardErrorMessage.__super.call(this);
	}

	__class(ResRecommendTaskIntegralRewardErrorMessage,'net.message.todayrecommend.ResRecommendTaskIntegralRewardErrorMessage',_super);
	var __proto=ResRecommendTaskIntegralRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1506;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRecommendTaskIntegralRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴升星
*/
//class net.message.handbook.ResHandBookUpStarMessage extends net.Message
var ResHandBookUpStarMessage=(function(_super){
	function ResHandBookUpStarMessage(){
		/**图鉴id */
		this._configId=0;
		/**当前星数 */
		this._star=0;
		ResHandBookUpStarMessage.__super.call(this);
	}

	__class(ResHandBookUpStarMessage,'net.message.handbook.ResHandBookUpStarMessage',_super);
	var __proto=ResHandBookUpStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1126;
	}

	/**图鉴id */
	/**图鉴id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	/**当前星数 */
	/**当前星数 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResHandBookUpStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升星错误
*/
//class net.message.general.ResGeneralUpgradeStarErrorMessage extends net.Message
var ResGeneralUpgradeStarErrorMessage=(function(_super){
	function ResGeneralUpgradeStarErrorMessage(){
		/**1:未激活;2:道具不足;*/
		this._error=0;
		ResGeneralUpgradeStarErrorMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeStarErrorMessage,'net.message.general.ResGeneralUpgradeStarErrorMessage',_super);
	var __proto=ResGeneralUpgradeStarErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1410;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralUpgradeStarErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玄女飞升强化
*/
//class net.message.xuannv.ResXuanNvFeiShengQiangHuaMessage extends net.Message
var ResXuanNvFeiShengQiangHuaMessage=(function(_super){
	function ResXuanNvFeiShengQiangHuaMessage(){
		ResXuanNvFeiShengQiangHuaMessage.__super.call(this);
		this._feishengQianghua=[];
	}

	__class(ResXuanNvFeiShengQiangHuaMessage,'net.message.xuannv.ResXuanNvFeiShengQiangHuaMessage',_super);
	var __proto=ResXuanNvFeiShengQiangHuaMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._feishengQianghua.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._feishengQianghua.length;++i_am_tmp_i){
			this.writeInt(_buf,this._feishengQianghua[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._feishengQianghua=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._feishengQianghua[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 257;
	}

	/**飞升装备强化等级 */
	/**飞升装备强化等级 */
	__getset(0,__proto,'feishengQianghua',function(){
		return this._feishengQianghua;
		},function(value){
		this._feishengQianghua=value;
	});

	return ResXuanNvFeiShengQiangHuaMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*给伴侣赠送鲜花
*/
//class net.message.marriage.ResMarriageFlowersMessage extends net.Message
var ResMarriageFlowersMessage=(function(_super){
	function ResMarriageFlowersMessage(){
		/**鲜花ID */
		this._type=0;
		/**数量 */
		this._count=0;
		/**增加的亲密度 */
		this._intimate=null;
		ResMarriageFlowersMessage.__super.call(this);
	}

	__class(ResMarriageFlowersMessage,'net.message.marriage.ResMarriageFlowersMessage',_super);
	var __proto=ResMarriageFlowersMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._count);
		this.writeLong(_buf,this._intimate);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._count=this.readInt(_buf);
		this._intimate=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 543;
	}

	/**鲜花ID */
	/**鲜花ID */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**增加的亲密度 */
	/**增加的亲密度 */
	__getset(0,__proto,'intimate',function(){
		return this._intimate;
		},function(value){
		this._intimate=value;
	});

	return ResMarriageFlowersMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成灵童卡
*/
//class net.message.soulboy.ResSoulBoySynthesisMessage extends net.Message
var ResSoulBoySynthesisMessage=(function(_super){
	function ResSoulBoySynthesisMessage(){
		/**被合成的灵童ID */
		this._id=0;
		ResSoulBoySynthesisMessage.__super.call(this);
	}

	__class(ResSoulBoySynthesisMessage,'net.message.soulboy.ResSoulBoySynthesisMessage',_super);
	var __proto=ResSoulBoySynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 465;
	}

	/**被合成的灵童ID */
	/**被合成的灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResSoulBoySynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征购买物品错误
*/
//class net.message.yuanzheng.ResYuanZhengBuyGoodsErrorMessage extends net.Message
var ResYuanZhengBuyGoodsErrorMessage=(function(_super){
	function ResYuanZhengBuyGoodsErrorMessage(){
		/**1:没有书生;2:不能购买;3:没有通关;4:穷;*/
		this._error=0;
		ResYuanZhengBuyGoodsErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengBuyGoodsErrorMessage,'net.message.yuanzheng.ResYuanZhengBuyGoodsErrorMessage',_super);
	var __proto=ResYuanZhengBuyGoodsErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 288;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengBuyGoodsErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新野外boss副本信息
*/
//class net.message.dungeon.ResUpdateYeWaiBossMessage extends net.Message
var ResUpdateYeWaiBossMessage=(function(_super){
	function ResUpdateYeWaiBossMessage(){
		/**副本 */
		this._dungeon=null;
		ResUpdateYeWaiBossMessage.__super.call(this);
	}

	__class(ResUpdateYeWaiBossMessage,'net.message.dungeon.ResUpdateYeWaiBossMessage',_super);
	var __proto=ResUpdateYeWaiBossMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._dungeon);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeon=this.readBean(_buf,YeWaiBossDungeonBean);
	}

	__proto.getId=function(){
		return 226;
	}

	/**副本 */
	/**副本 */
	__getset(0,__proto,'dungeon',function(){
		return this._dungeon;
		},function(value){
		this._dungeon=value;
	});

	return ResUpdateYeWaiBossMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值
*/
//class net.message.misc.ReqGetAttributeInfoMessage extends net.Message
var ReqGetAttributeInfoMessage=(function(_super){
	function ReqGetAttributeInfoMessage(){
		/**要查询的玩家id */
		this._uid=null;
		/**类型 1=玩家 2=机器人 */
		this._type=0;
		ReqGetAttributeInfoMessage.__super.call(this);
	}

	__class(ReqGetAttributeInfoMessage,'net.message.misc.ReqGetAttributeInfoMessage',_super);
	var __proto=ReqGetAttributeInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1682;
	}

	/**类型 1=玩家 2=机器人 */
	/**类型 1=玩家 2=机器人 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**要查询的玩家id */
	/**要查询的玩家id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqGetAttributeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍修改战力条件
*/
//class net.message.team.ReqTeamChangeFightPowerMessage extends net.Message
var ReqTeamChangeFightPowerMessage=(function(_super){
	function ReqTeamChangeFightPowerMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**战力 */
		this._fightPower=null;
		ReqTeamChangeFightPowerMessage.__super.call(this);
	}

	__class(ReqTeamChangeFightPowerMessage,'net.message.team.ReqTeamChangeFightPowerMessage',_super);
	var __proto=ReqTeamChangeFightPowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1260;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ReqTeamChangeFightPowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物错误
*/
//class net.message.rank.ResGetRankInfoErrorMessage extends net.Message
var ResGetRankInfoErrorMessage=(function(_super){
	function ResGetRankInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetRankInfoErrorMessage.__super.call(this);
	}

	__class(ResGetRankInfoErrorMessage,'net.message.rank.ResGetRankInfoErrorMessage',_super);
	var __proto=ResGetRankInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 270;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetRankInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取王者额外奖励错误
*/
//class net.message.kingwar.ResKingWarGetExtPrizeErrorMessage extends net.Message
var ResKingWarGetExtPrizeErrorMessage=(function(_super){
	function ResKingWarGetExtPrizeErrorMessage(){
		/**1:配置错误;2:已经领取;3:不能领取;*/
		this._error=0;
		ResKingWarGetExtPrizeErrorMessage.__super.call(this);
	}

	__class(ResKingWarGetExtPrizeErrorMessage,'net.message.kingwar.ResKingWarGetExtPrizeErrorMessage',_super);
	var __proto=ResKingWarGetExtPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1280;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarGetExtPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备
*/
//class net.message.equip.ReqEquipMakingMessage extends net.Message
var ReqEquipMakingMessage=(function(_super){
	function ReqEquipMakingMessage(){
		/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		ReqEquipMakingMessage.__super.call(this);
	}

	__class(ReqEquipMakingMessage,'net.message.equip.ReqEquipMakingMessage',_super);
	var __proto=ReqEquipMakingMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._grid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1475;
	}

	/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ReqEquipMakingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回答问题
*/
//class net.message.examination.ReqKejuAnswerExaminationMessage extends net.Message
var ReqKejuAnswerExaminationMessage=(function(_super){
	function ReqKejuAnswerExaminationMessage(){
		/**你的回答 */
		this._index=0;
		ReqKejuAnswerExaminationMessage.__super.call(this);
	}

	__class(ReqKejuAnswerExaminationMessage,'net.message.examination.ReqKejuAnswerExaminationMessage',_super);
	var __proto=ReqKejuAnswerExaminationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 412;
	}

	/**你的回答 */
	/**你的回答 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqKejuAnswerExaminationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶
*/
//class net.message.upgrade.ResCommonUpgradeMessage extends net.Message
var ResCommonUpgradeMessage=(function(_super){
	function ResCommonUpgradeMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**等级 */
		this._level=0;
		/**经验 */
		this._exp=null;
		/**暴击倍数 */
		this._crit=0;
		ResCommonUpgradeMessage.__super.call(this);
	}

	__class(ResCommonUpgradeMessage,'net.message.upgrade.ResCommonUpgradeMessage',_super);
	var __proto=ResCommonUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._crit);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._crit=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 172;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**暴击倍数 */
	/**暴击倍数 */
	__getset(0,__proto,'crit',function(){
		return this._crit;
		},function(value){
		this._crit=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**经验 */
	/**经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResCommonUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门任务错误
*/
//class net.message.shimen.ResTakeShiMenTaskErrorMessage extends net.Message
var ResTakeShiMenTaskErrorMessage=(function(_super){
	function ResTakeShiMenTaskErrorMessage(){
		/**1:没有可挑战次数;2:存在尚未完成的任务;3:该轮任务已满;*/
		this._error=0;
		ResTakeShiMenTaskErrorMessage.__super.call(this);
	}

	__class(ResTakeShiMenTaskErrorMessage,'net.message.shimen.ResTakeShiMenTaskErrorMessage',_super);
	var __proto=ResTakeShiMenTaskErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 147;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeShiMenTaskErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级宠物技能
*/
//class net.message.pet.ReqUpgradePetSkillMessage extends net.Message
var ReqUpgradePetSkillMessage=(function(_super){
	function ReqUpgradePetSkillMessage(){
		/**宠物ID */
		this._petID=0;
		/**升级哪个技能 */
		this._index=0;
		ReqUpgradePetSkillMessage.__super.call(this);
	}

	__class(ReqUpgradePetSkillMessage,'net.message.pet.ReqUpgradePetSkillMessage',_super);
	var __proto=ReqUpgradePetSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1189;
	}

	/**升级哪个技能 */
	/**升级哪个技能 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	return ReqUpgradePetSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级灵童天赋
*/
//class net.message.soulboy.ResSoulBoyTaletUpgradeMessage extends net.Message
var ResSoulBoyTaletUpgradeMessage=(function(_super){
	function ResSoulBoyTaletUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		/**新的天赋等级 */
		this._lv=0;
		/**新的天赋进度 */
		this._progress=0;
		ResSoulBoyTaletUpgradeMessage.__super.call(this);
	}

	__class(ResSoulBoyTaletUpgradeMessage,'net.message.soulboy.ResSoulBoyTaletUpgradeMessage',_super);
	var __proto=ResSoulBoyTaletUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 458;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**新的天赋等级 */
	/**新的天赋等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**新的天赋进度 */
	/**新的天赋进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return ResSoulBoyTaletUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新幸运寻宝次数
*/
//class net.message.textureHunt.ResHuntUpdateLuckCountMessage extends net.Message
var ResHuntUpdateLuckCountMessage=(function(_super){
	function ResHuntUpdateLuckCountMessage(){
		/**寻宝幸运值 */
		this._luckCount=0;
		ResHuntUpdateLuckCountMessage.__super.call(this);
	}

	__class(ResHuntUpdateLuckCountMessage,'net.message.textureHunt.ResHuntUpdateLuckCountMessage',_super);
	var __proto=ResHuntUpdateLuckCountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._luckCount);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._luckCount=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 701;
	}

	/**寻宝幸运值 */
	/**寻宝幸运值 */
	__getset(0,__proto,'luckCount',function(){
		return this._luckCount;
		},function(value){
		this._luckCount=value;
	});

	return ResHuntUpdateLuckCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家离开
*/
//class net.message.worldboss.ReqWorldBossLeaveMessage extends net.Message
var ReqWorldBossLeaveMessage=(function(_super){
	function ReqWorldBossLeaveMessage(){
		ReqWorldBossLeaveMessage.__super.call(this);;
	}

	__class(ReqWorldBossLeaveMessage,'net.message.worldboss.ReqWorldBossLeaveMessage',_super);
	var __proto=ReqWorldBossLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 507;
	}

	return ReqWorldBossLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解装备
*/
//class net.message.goods.ResDisposeEquipMessage extends net.Message
var ResDisposeEquipMessage=(function(_super){
	function ResDisposeEquipMessage(){
		/**英雄ID */
		this._heroID=0;
		/**需要分解的格子(前端自行将该格子的装备清除)[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		ResDisposeEquipMessage.__super.call(this);
		this._list=[];
	}

	__class(ResDisposeEquipMessage,'net.message.goods.ResDisposeEquipMessage',_super);
	var __proto=ResDisposeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._grid=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 209;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**分解获得的物品 */
	/**分解获得的物品 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	/**需要分解的格子(前端自行将该格子的装备清除)[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**需要分解的格子(前端自行将该格子的装备清除)[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ResDisposeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*变更队伍成员职位
*/
//class net.message.team.ResTeamMemberPositionUpdateMessage extends net.Message
var ResTeamMemberPositionUpdateMessage=(function(_super){
	function ResTeamMemberPositionUpdateMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._teamType=0;
		/**成员ID */
		this._uid=null;
		/**职位[1:队长][2:普通成员] */
		this._position=0;
		ResTeamMemberPositionUpdateMessage.__super.call(this);
	}

	__class(ResTeamMemberPositionUpdateMessage,'net.message.team.ResTeamMemberPositionUpdateMessage',_super);
	var __proto=ResTeamMemberPositionUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._teamType);
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._position);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._teamType=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._position=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1358;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'teamType',function(){
		return this._teamType;
		},function(value){
		this._teamType=value;
	});

	/**成员ID */
	/**成员ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**职位[1:队长][2:普通成员] */
	/**职位[1:队长][2:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return ResTeamMemberPositionUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买次数错误
*/
//class net.message.garrison.ResGarrisonBuyTimesErrorMessage extends net.Message
var ResGarrisonBuyTimesErrorMessage=(function(_super){
	function ResGarrisonBuyTimesErrorMessage(){
		/**1:系统未开启;2:次数不足;3:没钱;*/
		this._error=0;
		ResGarrisonBuyTimesErrorMessage.__super.call(this);
	}

	__class(ResGarrisonBuyTimesErrorMessage,'net.message.garrison.ResGarrisonBuyTimesErrorMessage',_super);
	var __proto=ResGarrisonBuyTimesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1384;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonBuyTimesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*一键升级觉醒元素
*/
//class net.message.adviser.ReqAdviserUpgradeElementQuickMessage extends net.Message
var ReqAdviserUpgradeElementQuickMessage=(function(_super){
	function ReqAdviserUpgradeElementQuickMessage(){
		ReqAdviserUpgradeElementQuickMessage.__super.call(this);;
	}

	__class(ReqAdviserUpgradeElementQuickMessage,'net.message.adviser.ReqAdviserUpgradeElementQuickMessage',_super);
	var __proto=ReqAdviserUpgradeElementQuickMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1192;
	}

	return ReqAdviserUpgradeElementQuickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家成功分享
*/
//class net.message.misc.ReqZhiJianShareSucMessage extends net.Message
var ReqZhiJianShareSucMessage=(function(_super){
	function ReqZhiJianShareSucMessage(){
		/**行为，1领奖，2通知服务器玩家分享成功 */
		this._action=0;
		ReqZhiJianShareSucMessage.__super.call(this);
	}

	__class(ReqZhiJianShareSucMessage,'net.message.misc.ReqZhiJianShareSucMessage',_super);
	var __proto=ReqZhiJianShareSucMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._action);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._action=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1527;
	}

	/**行为，1领奖，2通知服务器玩家分享成功 */
	/**行为，1领奖，2通知服务器玩家分享成功 */
	__getset(0,__proto,'action',function(){
		return this._action;
		},function(value){
		this._action=value;
	});

	return ReqZhiJianShareSucMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送祥瑞
*/
//class net.message.goodLuck.ResSendGoodLuckMessage extends net.Message
var ResSendGoodLuckMessage=(function(_super){
	function ResSendGoodLuckMessage(){
		/**祥瑞ID */
		this._Id=0;
		/**触发类型 1=新的 2=以前的 */
		this._type=0;
		ResSendGoodLuckMessage.__super.call(this);
	}

	__class(ResSendGoodLuckMessage,'net.message.goodLuck.ResSendGoodLuckMessage',_super);
	var __proto=ResSendGoodLuckMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._Id);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._Id=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1601;
	}

	/**祥瑞ID */
	/**祥瑞ID */
	__getset(0,__proto,'Id',function(){
		return this._Id;
		},function(value){
		this._Id=value;
	});

	/**触发类型 1=新的 2=以前的 */
	/**触发类型 1=新的 2=以前的 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResSendGoodLuckMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取可夺取玉玺的帮会错误
*/
//class net.message.gb.ResLegionBattleGetLegalKingGuildErrorMessage extends net.Message
var ResLegionBattleGetLegalKingGuildErrorMessage=(function(_super){
	function ResLegionBattleGetLegalKingGuildErrorMessage(){
		/**1:尚未开启;*/
		this._error=0;
		ResLegionBattleGetLegalKingGuildErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleGetLegalKingGuildErrorMessage,'net.message.gb.ResLegionBattleGetLegalKingGuildErrorMessage',_super);
	var __proto=ResLegionBattleGetLegalKingGuildErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1357;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleGetLegalKingGuildErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取军团广场任务奖励错误
*/
//class net.message.task.ResTaskGuildSquareTakePrizeErrorMessage extends net.Message
var ResTaskGuildSquareTakePrizeErrorMessage=(function(_super){
	function ResTaskGuildSquareTakePrizeErrorMessage(){
		/**1:找不到任务;2:并未全部完成;*/
		this._error=0;
		ResTaskGuildSquareTakePrizeErrorMessage.__super.call(this);
	}

	__class(ResTaskGuildSquareTakePrizeErrorMessage,'net.message.task.ResTaskGuildSquareTakePrizeErrorMessage',_super);
	var __proto=ResTaskGuildSquareTakePrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1301;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTaskGuildSquareTakePrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖行上架物品
*/
//class net.message.auction.ResAuctionUpperMessage extends net.Message
var ResAuctionUpperMessage=(function(_super){
	function ResAuctionUpperMessage(){
		/**拍卖行配置id */
		this._id=0;
		/**数量 */
		this._count=0;
		ResAuctionUpperMessage.__super.call(this);
	}

	__class(ResAuctionUpperMessage,'net.message.auction.ResAuctionUpperMessage',_super);
	var __proto=ResAuctionUpperMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1380;
	}

	/**拍卖行配置id */
	/**拍卖行配置id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResAuctionUpperMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换场景
*/
//class net.message.scene.ResSceneChangeMessage extends net.Message
var ResSceneChangeMessage=(function(_super){
	function ResSceneChangeMessage(){
		/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
		this._type=0;
		ResSceneChangeMessage.__super.call(this);
	}

	__class(ResSceneChangeMessage,'net.message.scene.ResSceneChangeMessage',_super);
	var __proto=ResSceneChangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1354;
	}

	/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResSceneChangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求获得守护每日奖励
*/
//class net.message.legion.ReqLegionGuardRewardMessageMessage extends net.Message
var ReqLegionGuardRewardMessageMessage=(function(_super){
	function ReqLegionGuardRewardMessageMessage(){
		/**奖励ID */
		this._id=0;
		ReqLegionGuardRewardMessageMessage.__super.call(this);
	}

	__class(ReqLegionGuardRewardMessageMessage,'net.message.legion.ReqLegionGuardRewardMessageMessage',_super);
	var __proto=ReqLegionGuardRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 621;
	}

	/**奖励ID */
	/**奖励ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqLegionGuardRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*秒杀押运时间
*/
//class net.message.escort.ResKillEscortTimeMessage extends net.Message
var ResKillEscortTimeMessage=(function(_super){
	function ResKillEscortTimeMessage(){
		/**剩余押运时间 */
		this._time=0;
		ResKillEscortTimeMessage.__super.call(this);
	}

	__class(ResKillEscortTimeMessage,'net.message.escort.ResKillEscortTimeMessage',_super);
	var __proto=ResKillEscortTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 790;
	}

	/**剩余押运时间 */
	/**剩余押运时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResKillEscortTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始押运
*/
//class net.message.escort.ReqStartEscortMessage extends net.Message
var ReqStartEscortMessage=(function(_super){
	function ReqStartEscortMessage(){
		ReqStartEscortMessage.__super.call(this);;
	}

	__class(ReqStartEscortMessage,'net.message.escort.ReqStartEscortMessage',_super);
	var __proto=ReqStartEscortMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 335;
	}

	return ReqStartEscortMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新排行榜活动
*/
//class net.message.rank.ResRankUpdateActivitiesMessage extends net.Message
var ResRankUpdateActivitiesMessage=(function(_super){
	function ResRankUpdateActivitiesMessage(){
		ResRankUpdateActivitiesMessage.__super.call(this);
		this._visibleActivities=[];
	}

	__class(ResRankUpdateActivitiesMessage,'net.message.rank.ResRankUpdateActivitiesMessage',_super);
	var __proto=ResRankUpdateActivitiesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._visibleActivities.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._visibleActivities.length;++i_am_tmp_i){
			this.writeInt(_buf,this._visibleActivities[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._visibleActivities=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._visibleActivities[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1392;
	}

	/**开启的活动 */
	/**开启的活动 */
	__getset(0,__proto,'visibleActivities',function(){
		return this._visibleActivities;
		},function(value){
		this._visibleActivities=value;
	});

	return ResRankUpdateActivitiesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*降低等级(增加修为)
*/
//class net.message.zhuansheng.ReqReduceLevelMessage extends net.Message
var ReqReduceLevelMessage=(function(_super){
	function ReqReduceLevelMessage(){
		ReqReduceLevelMessage.__super.call(this);;
	}

	__class(ReqReduceLevelMessage,'net.message.zhuansheng.ReqReduceLevelMessage',_super);
	var __proto=ReqReduceLevelMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 104;
	}

	return ReqReduceLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒
*/
//class net.message.adviser.ReqAdviserUpgradeWakeUpMessage extends net.Message
var ReqAdviserUpgradeWakeUpMessage=(function(_super){
	function ReqAdviserUpgradeWakeUpMessage(){
		ReqAdviserUpgradeWakeUpMessage.__super.call(this);;
	}

	__class(ReqAdviserUpgradeWakeUpMessage,'net.message.adviser.ReqAdviserUpgradeWakeUpMessage',_super);
	var __proto=ReqAdviserUpgradeWakeUpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1025;
	}

	return ReqAdviserUpgradeWakeUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童被动技能洗练
*/
//class net.message.soulboy.ResSoulBoyXilianMessage extends net.Message
var ResSoulBoyXilianMessage=(function(_super){
	function ResSoulBoyXilianMessage(){
		/**灵童ID */
		this._id=0;
		/**新的洗练次数 */
		this._count=0;
		ResSoulBoyXilianMessage.__super.call(this);
		this._xilianSkill=[];
	}

	__class(ResSoulBoyXilianMessage,'net.message.soulboy.ResSoulBoyXilianMessage',_super);
	var __proto=ResSoulBoyXilianMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._xilianSkill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._xilianSkill.length;++i_am_tmp_i){
			this._xilianSkill[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._xilianSkill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._xilianSkill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 468;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**灵童洗练出的技能 */
	/**灵童洗练出的技能 */
	__getset(0,__proto,'xilianSkill',function(){
		return this._xilianSkill;
		},function(value){
		this._xilianSkill=value;
	});

	/**新的洗练次数 */
	/**新的洗练次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResSoulBoyXilianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝信息
*/
//class net.message.textureHunt.ReqGetHuntInfoMessage extends net.Message
var ReqGetHuntInfoMessage=(function(_super){
	function ReqGetHuntInfoMessage(){
		/**寻宝类型 */
		this._type=0;
		ReqGetHuntInfoMessage.__super.call(this);
	}

	__class(ReqGetHuntInfoMessage,'net.message.textureHunt.ReqGetHuntInfoMessage',_super);
	var __proto=ReqGetHuntInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1180;
	}

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqGetHuntInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新门数据
*/
//class net.message.garrison.ResGarrisonUpdateGarrisonCountMessage extends net.Message
var ResGarrisonUpdateGarrisonCountMessage=(function(_super){
	function ResGarrisonUpdateGarrisonCountMessage(){
		/**剩余挑战次数 */
		this._count=0;
		/**今日已搜索次数 */
		this._searchCount=0;
		/**剩余购买次数 */
		this._buyCount=0;
		/**排行榜积分 */
		this._rank=0;
		/**是否膜拜 */
		this._isStorke=false;
		/**下一次挑战次数恢复的时间戳 */
		this._nextRecoverTime=null;
		ResGarrisonUpdateGarrisonCountMessage.__super.call(this);
	}

	__class(ResGarrisonUpdateGarrisonCountMessage,'net.message.garrison.ResGarrisonUpdateGarrisonCountMessage',_super);
	var __proto=ResGarrisonUpdateGarrisonCountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
		this.writeInt(_buf,this._searchCount);
		this.writeInt(_buf,this._buyCount);
		this.writeInt(_buf,this._rank);
		this.writeBoolean(_buf,this._isStorke);
		this.writeLong(_buf,this._nextRecoverTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
		this._searchCount=this.readInt(_buf);
		this._buyCount=this.readInt(_buf);
		this._rank=this.readInt(_buf);
		this._isStorke=this.readBoolean(_buf);
		this._nextRecoverTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1052;
	}

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**今日已搜索次数 */
	/**今日已搜索次数 */
	__getset(0,__proto,'searchCount',function(){
		return this._searchCount;
		},function(value){
		this._searchCount=value;
	});

	/**剩余购买次数 */
	/**剩余购买次数 */
	__getset(0,__proto,'buyCount',function(){
		return this._buyCount;
		},function(value){
		this._buyCount=value;
	});

	/**排行榜积分 */
	/**排行榜积分 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**是否膜拜 */
	/**是否膜拜 */
	__getset(0,__proto,'isStorke',function(){
		return this._isStorke;
		},function(value){
		this._isStorke=value;
	});

	/**下一次挑战次数恢复的时间戳 */
	/**下一次挑战次数恢复的时间戳 */
	__getset(0,__proto,'nextRecoverTime',function(){
		return this._nextRecoverTime;
		},function(value){
		this._nextRecoverTime=value;
	});

	return ResGarrisonUpdateGarrisonCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值信息
*/
//class net.message.misc.ReqGetRechargeInfoMessage extends net.Message
var ReqGetRechargeInfoMessage=(function(_super){
	function ReqGetRechargeInfoMessage(){
		ReqGetRechargeInfoMessage.__super.call(this);;
	}

	__class(ReqGetRechargeInfoMessage,'net.message.misc.ReqGetRechargeInfoMessage',_super);
	var __proto=ReqGetRechargeInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1184;
	}

	return ReqGetRechargeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取关卡章节奖励
*/
//class net.message.dungeon.ResReceiveGuanQiaChapterPrizeMessage extends net.Message
var ResReceiveGuanQiaChapterPrizeMessage=(function(_super){
	function ResReceiveGuanQiaChapterPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		ResReceiveGuanQiaChapterPrizeMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResReceiveGuanQiaChapterPrizeMessage,'net.message.dungeon.ResReceiveGuanQiaChapterPrizeMessage',_super);
	var __proto=ResReceiveGuanQiaChapterPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 115;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	return ResReceiveGuanQiaChapterPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍移除成员
*/
//class net.message.team.ResTeamMemberRemoveMessage extends net.Message
var ResTeamMemberRemoveMessage=(function(_super){
	function ResTeamMemberRemoveMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._teamType=0;
		/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
		this._type=0;
		/**成员唯一ID */
		this._uid=null;
		ResTeamMemberRemoveMessage.__super.call(this);
	}

	__class(ResTeamMemberRemoveMessage,'net.message.team.ResTeamMemberRemoveMessage',_super);
	var __proto=ResTeamMemberRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._teamType);
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._teamType=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1277;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'teamType',function(){
		return this._teamType;
		},function(value){
		this._teamType=value;
	});

	/**成员唯一ID */
	/**成员唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResTeamMemberRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备幻化
*/
//class net.message.equip.ReqEquipIllusionMessage extends net.Message
var ReqEquipIllusionMessage=(function(_super){
	function ReqEquipIllusionMessage(){
		/**英雄ID */
		this._heroID=0;
		/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		/**幻化外形 */
		this._illusion=0;
		ReqEquipIllusionMessage.__super.call(this);
	}

	__class(ReqEquipIllusionMessage,'net.message.equip.ReqEquipIllusionMessage',_super);
	var __proto=ReqEquipIllusionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._illusion);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._grid=this.readInt(_buf);
		this._illusion=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 950;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**幻化外形 */
	/**幻化外形 */
	__getset(0,__proto,'illusion',function(){
		return this._illusion;
		},function(value){
		this._illusion=value;
	});

	return ReqEquipIllusionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活错误
*/
//class net.message.general.ResGeneralActiveErrorMessage extends net.Message
var ResGeneralActiveErrorMessage=(function(_super){
	function ResGeneralActiveErrorMessage(){
		/**1:材料不足;2:配置错误;3:已激活;*/
		this._error=0;
		ResGeneralActiveErrorMessage.__super.call(this);
	}

	__class(ResGeneralActiveErrorMessage,'net.message.general.ResGeneralActiveErrorMessage',_super);
	var __proto=ResGeneralActiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 845;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralActiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励
*/
//class net.message.escort.ReqEscortRevengeRecordMessage extends net.Message
var ReqEscortRevengeRecordMessage=(function(_super){
	function ReqEscortRevengeRecordMessage(){
		/**复仇列表的下标 */
		this._index=0;
		ReqEscortRevengeRecordMessage.__super.call(this);
	}

	__class(ReqEscortRevengeRecordMessage,'net.message.escort.ReqEscortRevengeRecordMessage',_super);
	var __proto=ReqEscortRevengeRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1131;
	}

	/**复仇列表的下标 */
	/**复仇列表的下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqEscortRevengeRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知更新守护
*/
//class net.message.legion.ResLegionUpdateGuardMessageMessage extends net.Message
var ResLegionUpdateGuardMessageMessage=(function(_super){
	function ResLegionUpdateGuardMessageMessage(){
		/**守护 */
		this._bean=null;
		ResLegionUpdateGuardMessageMessage.__super.call(this);
	}

	__class(ResLegionUpdateGuardMessageMessage,'net.message.legion.ResLegionUpdateGuardMessageMessage',_super);
	var __proto=ResLegionUpdateGuardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,LegionGuardBean);
	}

	__proto.getId=function(){
		return 619;
	}

	/**守护 */
	/**守护 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResLegionUpdateGuardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*膜拜
*/
//class net.message.rank.ResRankMoBaiMessage extends net.Message
var ResRankMoBaiMessage=(function(_super){
	function ResRankMoBaiMessage(){
		ResRankMoBaiMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResRankMoBaiMessage,'net.message.rank.ResRankMoBaiMessage',_super);
	var __proto=ResRankMoBaiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 272;
	}

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResRankMoBaiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求离开队伍
*/
//class net.message.team.ResTeamMarryLeaveMessage extends net.Message
var ResTeamMarryLeaveMessage=(function(_super){
	function ResTeamMarryLeaveMessage(){
		ResTeamMarryLeaveMessage.__super.call(this);;
	}

	__class(ResTeamMarryLeaveMessage,'net.message.team.ResTeamMarryLeaveMessage',_super);
	var __proto=ResTeamMarryLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1512;
	}

	return ResTeamMarryLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取积分奖励
*/
//class net.message.gb.ResLegionBattleIntegralRewardMessage extends net.Message
var ResLegionBattleIntegralRewardMessage=(function(_super){
	function ResLegionBattleIntegralRewardMessage(){
		/**积分奖励ID */
		this._id=0;
		ResLegionBattleIntegralRewardMessage.__super.call(this);
	}

	__class(ResLegionBattleIntegralRewardMessage,'net.message.gb.ResLegionBattleIntegralRewardMessage',_super);
	var __proto=ResLegionBattleIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1341;
	}

	/**积分奖励ID */
	/**积分奖励ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResLegionBattleIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新占领王座排名
*/
//class net.message.gb.ResLegionBattleUpdateThroneRankMessage extends net.Message
var ResLegionBattleUpdateThroneRankMessage=(function(_super){
	function ResLegionBattleUpdateThroneRankMessage(){
		/**我的帮会排名 */
		this._myRank=0;
		/**我的帮会占领时间 */
		this._myTime=0;
		ResLegionBattleUpdateThroneRankMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResLegionBattleUpdateThroneRankMessage,'net.message.gb.ResLegionBattleUpdateThroneRankMessage',_super);
	var __proto=ResLegionBattleUpdateThroneRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myRank);
		this.writeInt(_buf,this._myTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleKingRankBean);
		}
		this._myRank=this.readInt(_buf);
		this._myTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1359;
	}

	/**排行榜 */
	/**排行榜 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**我的帮会排名 */
	/**我的帮会排名 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**我的帮会占领时间 */
	/**我的帮会占领时间 */
	__getset(0,__proto,'myTime',function(){
		return this._myTime;
		},function(value){
		this._myTime=value;
	});

	return ResLegionBattleUpdateThroneRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴进阶装备
*/
//class net.message.equip.ReqPutUpgradeEquipMessage extends net.Message
var ReqPutUpgradeEquipMessage=(function(_super){
	function ReqPutUpgradeEquipMessage(){
		/**背包中的位置 */
		this._packetIndex=0;
		/**英雄ID */
		this._heroID=0;
		ReqPutUpgradeEquipMessage.__super.call(this);
	}

	__class(ReqPutUpgradeEquipMessage,'net.message.equip.ReqPutUpgradeEquipMessage',_super);
	var __proto=ReqPutUpgradeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._packetIndex);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._packetIndex=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 174;
	}

	/**背包中的位置 */
	/**背包中的位置 */
	__getset(0,__proto,'packetIndex',function(){
		return this._packetIndex;
		},function(value){
		this._packetIndex=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqPutUpgradeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场战斗记录
*/
//class net.message.arena.ReqArenaGetFightRecordMessage extends net.Message
var ReqArenaGetFightRecordMessage=(function(_super){
	function ReqArenaGetFightRecordMessage(){
		/**下标 */
		this._index=0;
		ReqArenaGetFightRecordMessage.__super.call(this);
	}

	__class(ReqArenaGetFightRecordMessage,'net.message.arena.ReqArenaGetFightRecordMessage',_super);
	var __proto=ReqArenaGetFightRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1128;
	}

	/**下标 */
	/**下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqArenaGetFightRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求兑换商品错误
*/
//class net.message.legion.ResLegionExchangeItemMessageErrorMessage extends net.Message
var ResLegionExchangeItemMessageErrorMessage=(function(_super){
	function ResLegionExchangeItemMessageErrorMessage(){
		/**1:你木有军团;2:道具不存在;3:购买次数达到最大;4:穷;*/
		this._error=0;
		ResLegionExchangeItemMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionExchangeItemMessageErrorMessage,'net.message.legion.ResLegionExchangeItemMessageErrorMessage',_super);
	var __proto=ResLegionExchangeItemMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 640;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionExchangeItemMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换场景错误
*/
//class net.message.scene.ResSceneChangeErrorMessage extends net.Message
var ResSceneChangeErrorMessage=(function(_super){
	function ResSceneChangeErrorMessage(){
		/**1:系统错误;2:帮会不存在;3:帮会战未开启;4:源场景错误;5:已经死亡;6:不满足进入条件;7:不是队长;8:队员已经死亡;*/
		this._error=0;
		ResSceneChangeErrorMessage.__super.call(this);
	}

	__class(ResSceneChangeErrorMessage,'net.message.scene.ResSceneChangeErrorMessage',_super);
	var __proto=ResSceneChangeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1355;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSceneChangeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴神装错误
*/
//class net.message.godClothes.ResPutOnGodClothesErrorMessage extends net.Message
var ResPutOnGodClothesErrorMessage=(function(_super){
	function ResPutOnGodClothesErrorMessage(){
		/**1:找不到对应的英雄;2:背包中的位置非法;3:找不到道具;4:道具类型非法;5:道具等级等级非法;6:职业非法;*/
		this._error=0;
		ResPutOnGodClothesErrorMessage.__super.call(this);
	}

	__class(ResPutOnGodClothesErrorMessage,'net.message.godClothes.ResPutOnGodClothesErrorMessage',_super);
	var __proto=ResPutOnGodClothesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 974;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResPutOnGodClothesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送祥瑞事件
*/
//class net.message.goodLuck.ReqSelectLuckMessage extends net.Message
var ReqSelectLuckMessage=(function(_super){
	function ReqSelectLuckMessage(){
		/**下一步的事件id */
		this._eventId=0;
		ReqSelectLuckMessage.__super.call(this);
	}

	__class(ReqSelectLuckMessage,'net.message.goodLuck.ReqSelectLuckMessage',_super);
	var __proto=ReqSelectLuckMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._eventId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._eventId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1602;
	}

	/**下一步的事件id */
	/**下一步的事件id */
	__getset(0,__proto,'eventId',function(){
		return this._eventId;
		},function(value){
		this._eventId=value;
	});

	return ReqSelectLuckMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.totem.ReqTotemSurmountMessage extends net.Message
var ReqTotemSurmountMessage=(function(_super){
	function ReqTotemSurmountMessage(){
		/**id */
		this._id=0;
		ReqTotemSurmountMessage.__super.call(this);
	}

	__class(ReqTotemSurmountMessage,'net.message.totem.ReqTotemSurmountMessage',_super);
	var __proto=ReqTotemSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 860;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqTotemSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破错误
*/
//class net.message.adviser.ResAdviserSurmountErrorMessage extends net.Message
var ResAdviserSurmountErrorMessage=(function(_super){
	function ResAdviserSurmountErrorMessage(){
		/**1:未激活;2:条件不足;3:配置错误;4:最大品质;*/
		this._error=0;
		ResAdviserSurmountErrorMessage.__super.call(this);
	}

	__class(ResAdviserSurmountErrorMessage,'net.message.adviser.ResAdviserSurmountErrorMessage',_super);
	var __proto=ResAdviserSurmountErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 803;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserSurmountErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新帮会退出时间
*/
//class net.message.guild.ResSendGuildExitTimeMessage extends net.Message
var ResSendGuildExitTimeMessage=(function(_super){
	function ResSendGuildExitTimeMessage(){
		/**军团下次可进入时间 */
		this._time=0;
		ResSendGuildExitTimeMessage.__super.call(this);
	}

	__class(ResSendGuildExitTimeMessage,'net.message.guild.ResSendGuildExitTimeMessage',_super);
	var __proto=ResSendGuildExitTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1620;
	}

	/**军团下次可进入时间 */
	/**军团下次可进入时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResSendGuildExitTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击城门错误
*/
//class net.message.gb.ResLegionBattleAttackDoorErrorMessage extends net.Message
var ResLegionBattleAttackDoorErrorMessage=(function(_super){
	function ResLegionBattleAttackDoorErrorMessage(){
		/**1:没有帮会;2:未开启活动;3:城门已破;*/
		this._error=0;
		ResLegionBattleAttackDoorErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackDoorErrorMessage,'net.message.gb.ResLegionBattleAttackDoorErrorMessage',_super);
	var __proto=ResLegionBattleAttackDoorErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1322;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleAttackDoorErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成平定安邦错误
*/
//class net.message.task.ResTaskPingDingAnBangPayErrorMessage extends net.Message
var ResTaskPingDingAnBangPayErrorMessage=(function(_super){
	function ResTaskPingDingAnBangPayErrorMessage(){
		/**1:已经全部完成;2:没钱;*/
		this._error=0;
		ResTaskPingDingAnBangPayErrorMessage.__super.call(this);
	}

	__class(ResTaskPingDingAnBangPayErrorMessage,'net.message.task.ResTaskPingDingAnBangPayErrorMessage',_super);
	var __proto=ResTaskPingDingAnBangPayErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1294;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTaskPingDingAnBangPayErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴神装
*/
//class net.message.godClothes.ResPutOnGodClothesMessage extends net.Message
var ResPutOnGodClothesMessage=(function(_super){
	function ResPutOnGodClothesMessage(){
		/**英雄ID */
		this._heroID=0;
		/**道具 */
		this._clothes=null;
		ResPutOnGodClothesMessage.__super.call(this);
	}

	__class(ResPutOnGodClothesMessage,'net.message.godClothes.ResPutOnGodClothesMessage',_super);
	var __proto=ResPutOnGodClothesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._clothes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._clothes=this.readBean(_buf,GodClothes);
	}

	__proto.getId=function(){
		return 973;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**道具 */
	/**道具 */
	__getset(0,__proto,'clothes',function(){
		return this._clothes;
		},function(value){
		this._clothes=value;
	});

	return ResPutOnGodClothesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖
*/
//class net.message.escort.ResEscortRobberyBackMessage extends net.Message
var ResEscortRobberyBackMessage=(function(_super){
	function ResEscortRobberyBackMessage(){
		/**要抢夺的目标ID */
		this._data=null;
		/**记录 */
		this._record=null;
		ResEscortRobberyBackMessage.__super.call(this);
		this._rewardList=[];
	}

	__class(ResEscortRobberyBackMessage,'net.message.escort.ResEscortRobberyBackMessage',_super);
	var __proto=ResEscortRobberyBackMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._rewardList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewardList.length;++i_am_tmp_i){
			this._rewardList[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._record);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._rewardList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewardList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._record=this.readBean(_buf,EscortRecordBean);
	}

	__proto.getId=function(){
		return 1488;
	}

	/**要抢夺的目标ID */
	/**要抢夺的目标ID */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**要抢夺的目标ID */
	/**要抢夺的目标ID */
	__getset(0,__proto,'rewardList',function(){
		return this._rewardList;
		},function(value){
		this._rewardList=value;
	});

	/**记录 */
	/**记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return ResEscortRobberyBackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级
*/
//class net.message.hero.ReqLevelUpMessage extends net.Message
var ReqLevelUpMessage=(function(_super){
	function ReqLevelUpMessage(){
		ReqLevelUpMessage.__super.call(this);;
	}

	__class(ReqLevelUpMessage,'net.message.hero.ReqLevelUpMessage',_super);
	var __proto=ReqLevelUpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 753;
	}

	return ReqLevelUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击的结果错误
*/
//class net.message.nineHeavy.ResNineHeavyPlayerAttackResultErrorMessage extends net.Message
var ResNineHeavyPlayerAttackResultErrorMessage=(function(_super){
	function ResNineHeavyPlayerAttackResultErrorMessage(){
		/**1:你不在活动中;2:目标不在活动中;3:对方在保护状态;4:目标不存在;*/
		this._error=0;
		ResNineHeavyPlayerAttackResultErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerAttackResultErrorMessage,'net.message.nineHeavy.ResNineHeavyPlayerAttackResultErrorMessage',_super);
	var __proto=ResNineHeavyPlayerAttackResultErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 383;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyPlayerAttackResultErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者激活御灵
*/
//class net.message.soulboy.ReqSoulBoyLingUpgradeMessage extends net.Message
var ReqSoulBoyLingUpgradeMessage=(function(_super){
	function ReqSoulBoyLingUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		/**御灵下标 */
		this._index=0;
		ReqSoulBoyLingUpgradeMessage.__super.call(this);
	}

	__class(ReqSoulBoyLingUpgradeMessage,'net.message.soulboy.ReqSoulBoyLingUpgradeMessage',_super);
	var __proto=ReqSoulBoyLingUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 450;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**御灵下标 */
	/**御灵下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqSoulBoyLingUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征刷新技能
*/
//class net.message.yuanzheng.ReqYuanZhengRefreshSkillMessage extends net.Message
var ReqYuanZhengRefreshSkillMessage=(function(_super){
	function ReqYuanZhengRefreshSkillMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		ReqYuanZhengRefreshSkillMessage.__super.call(this);
	}

	__class(ReqYuanZhengRefreshSkillMessage,'net.message.yuanzheng.ReqYuanZhengRefreshSkillMessage',_super);
	var __proto=ReqYuanZhengRefreshSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1003;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	return ReqYuanZhengRefreshSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家领取积分奖励错误
*/
//class net.message.nineHeavy.ResNineHeavyIntegralRewardErrorMessage extends net.Message
var ResNineHeavyIntegralRewardErrorMessage=(function(_super){
	function ResNineHeavyIntegralRewardErrorMessage(){
		/**1:已经领取过;2:积分不足;*/
		this._error=0;
		ResNineHeavyIntegralRewardErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyIntegralRewardErrorMessage,'net.message.nineHeavy.ResNineHeavyIntegralRewardErrorMessage',_super);
	var __proto=ResNineHeavyIntegralRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 390;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyIntegralRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取王者额外奖励
*/
//class net.message.kingwar.ResKingWarGetExtPrizeMessage extends net.Message
var ResKingWarGetExtPrizeMessage=(function(_super){
	function ResKingWarGetExtPrizeMessage(){
		ResKingWarGetExtPrizeMessage.__super.call(this);
		this._goodsNumBeans=[];
	}

	__class(ResKingWarGetExtPrizeMessage,'net.message.kingwar.ResKingWarGetExtPrizeMessage',_super);
	var __proto=ResKingWarGetExtPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsNumBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goodsNumBeans.length;++i_am_tmp_i){
			this._goodsNumBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._goodsNumBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goodsNumBeans[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1279;
	}

	/**获得的奖励 */
	/**获得的奖励 */
	__getset(0,__proto,'goodsNumBeans',function(){
		return this._goodsNumBeans;
		},function(value){
		this._goodsNumBeans=value;
	});

	return ResKingWarGetExtPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新副本今日挑战次数
*/
//class net.message.dungeon.ResUpdateDungeonTodayTimesMessage extends net.Message
var ResUpdateDungeonTodayTimesMessage=(function(_super){
	function ResUpdateDungeonTodayTimesMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**已挑战次数 */
		this._times=0;
		ResUpdateDungeonTodayTimesMessage.__super.call(this);
	}

	__class(ResUpdateDungeonTodayTimesMessage,'net.message.dungeon.ResUpdateDungeonTodayTimesMessage',_super);
	var __proto=ResUpdateDungeonTodayTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._times=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 212;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**已挑战次数 */
	/**已挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResUpdateDungeonTodayTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取拍卖行的数据
*/
//class net.message.auction.ResAuctionMonitorMessage extends net.Message
var ResAuctionMonitorMessage=(function(_super){
	function ResAuctionMonitorMessage(){
		/**你的竞拍对象 */
		this._playerbean=null;
		ResAuctionMonitorMessage.__super.call(this);
		this._bean=[];
		this._legion_bean=[];
		this._user_bean=[];
		this._allRecord=[];
		this._attention=[];
	}

	__class(ResAuctionMonitorMessage,'net.message.auction.ResAuctionMonitorMessage',_super);
	var __proto=ResAuctionMonitorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bean.length;++i_am_tmp_i){
			this._bean[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._legion_bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._legion_bean.length;++i_am_tmp_i){
			this._legion_bean[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._user_bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._user_bean.length;++i_am_tmp_i){
			this._user_bean[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._playerbean);
		this.writeInt(_buf,this._allRecord.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._allRecord.length;++i_am_tmp_i){
			this._allRecord[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._attention.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attention.length;++i_am_tmp_i){
			this._attention[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bean[i_am_tmp_i]=this.readBeanInList(_buf,AuctionBean);
		}
		size52413035=this.readInt(_buf);
		this._legion_bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._legion_bean[i_am_tmp_i]=this.readBeanInList(_buf,AuctionBean);
		}
		size52413035=this.readInt(_buf);
		this._user_bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._user_bean[i_am_tmp_i]=this.readBeanInList(_buf,AuctionBean);
		}
		this._playerbean=this.readBean(_buf,AuctionPlayerBean);
		size52413035=this.readInt(_buf);
		this._allRecord=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._allRecord[i_am_tmp_i]=this.readBeanInList(_buf,AuctionRecordBean);
		}
		size52413035=this.readInt(_buf);
		this._attention=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attention[i_am_tmp_i]=this.readBeanInList(_buf,AuctionAttentionBean);
		}
	}

	__proto.getId=function(){
		return 570;
	}

	/**拍卖品 */
	/**拍卖品 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**帮派拍卖 */
	/**帮派拍卖 */
	__getset(0,__proto,'legion_bean',function(){
		return this._legion_bean;
		},function(value){
		this._legion_bean=value;
	});

	/**我关注的道具类型 */
	/**我关注的道具类型 */
	__getset(0,__proto,'attention',function(){
		return this._attention;
		},function(value){
		this._attention=value;
	});

	/**全服竞拍记录 */
	/**全服竞拍记录 */
	__getset(0,__proto,'allRecord',function(){
		return this._allRecord;
		},function(value){
		this._allRecord=value;
	});

	/**个人拍卖 */
	/**个人拍卖 */
	__getset(0,__proto,'user_bean',function(){
		return this._user_bean;
		},function(value){
		this._user_bean=value;
	});

	/**你的竞拍对象 */
	/**你的竞拍对象 */
	__getset(0,__proto,'playerbean',function(){
		return this._playerbean;
		},function(value){
		this._playerbean=value;
	});

	return ResAuctionMonitorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移除任务
*/
//class net.message.task.ResTaskCleanMessage extends net.Message
var ResTaskCleanMessage=(function(_super){
	function ResTaskCleanMessage(){
		/**任务类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
		this._type=0;
		ResTaskCleanMessage.__super.call(this);
	}

	__class(ResTaskCleanMessage,'net.message.task.ResTaskCleanMessage',_super);
	var __proto=ResTaskCleanMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1305;
	}

	/**任务类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	/**任务类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResTaskCleanMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买挑战次数
*/
//class net.message.arena.ResArenaBuyTimesMessage extends net.Message
var ResArenaBuyTimesMessage=(function(_super){
	function ResArenaBuyTimesMessage(){
		/**剩余挑战次数 */
		this._times=0;
		/**下次恢复时间 */
		this._recoverTime=0;
		/**已购买次数 */
		this._buyTimes=0;
		ResArenaBuyTimesMessage.__super.call(this);
	}

	__class(ResArenaBuyTimesMessage,'net.message.arena.ResArenaBuyTimesMessage',_super);
	var __proto=ResArenaBuyTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times);
		this.writeInt(_buf,this._recoverTime);
		this.writeInt(_buf,this._buyTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readInt(_buf);
		this._recoverTime=this.readInt(_buf);
		this._buyTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 275;
	}

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**下次恢复时间 */
	/**下次恢复时间 */
	__getset(0,__proto,'recoverTime',function(){
		return this._recoverTime;
		},function(value){
		this._recoverTime=value;
	});

	/**已购买次数 */
	/**已购买次数 */
	__getset(0,__proto,'buyTimes',function(){
		return this._buyTimes;
		},function(value){
		this._buyTimes=value;
	});

	return ResArenaBuyTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名
*/
//class net.message.guild.ReqGuildChangeNameMessage extends net.Message
var ReqGuildChangeNameMessage=(function(_super){
	function ReqGuildChangeNameMessage(){
		/**修改的名字 */
		this._name=null;
		ReqGuildChangeNameMessage.__super.call(this);
	}

	__class(ReqGuildChangeNameMessage,'net.message.guild.ReqGuildChangeNameMessage',_super);
	var __proto=ReqGuildChangeNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1215;
	}

	/**修改的名字 */
	/**修改的名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ReqGuildChangeNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取单身的玩家
*/
//class net.message.marriage.ResMarriageTakeSinglePlayerMessage extends net.Message
var ResMarriageTakeSinglePlayerMessage=(function(_super){
	function ResMarriageTakeSinglePlayerMessage(){
		ResMarriageTakeSinglePlayerMessage.__super.call(this);
		this._singles=[];
	}

	__class(ResMarriageTakeSinglePlayerMessage,'net.message.marriage.ResMarriageTakeSinglePlayerMessage',_super);
	var __proto=ResMarriageTakeSinglePlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._singles.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._singles.length;++i_am_tmp_i){
			this._singles[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._singles=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._singles[i_am_tmp_i]=this.readBeanInList(_buf,SingleBean);
		}
	}

	__proto.getId=function(){
		return 529;
	}

	/**单身的 */
	/**单身的 */
	__getset(0,__proto,'singles',function(){
		return this._singles;
		},function(value){
		this._singles=value;
	});

	return ResMarriageTakeSinglePlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知刷新兑换商品
*/
//class net.message.legion.ResLegionUpdateExchangeMessageMessage extends net.Message
var ResLegionUpdateExchangeMessageMessage=(function(_super){
	function ResLegionUpdateExchangeMessageMessage(){
		/**下一次的时间 */
		this._nextTime=null;
		ResLegionUpdateExchangeMessageMessage.__super.call(this);
		this._items=[];
	}

	__class(ResLegionUpdateExchangeMessageMessage,'net.message.legion.ResLegionUpdateExchangeMessageMessage',_super);
	var __proto=ResLegionUpdateExchangeMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._nextTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,LegionExchangeBean);
		}
		this._nextTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 637;
	}

	/**购买记录 */
	/**购买记录 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	/**下一次的时间 */
	/**下一次的时间 */
	__getset(0,__proto,'nextTime',function(){
		return this._nextTime;
		},function(value){
		this._nextTime=value;
	});

	return ResLegionUpdateExchangeMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装
*/
//class net.message.skin.ReqActivateSkinMessage extends net.Message
var ReqActivateSkinMessage=(function(_super){
	function ReqActivateSkinMessage(){
		/**皮肤ID */
		this._skinID=0;
		/**英雄ID */
		this._heroID=0;
		ReqActivateSkinMessage.__super.call(this);
	}

	__class(ReqActivateSkinMessage,'net.message.skin.ReqActivateSkinMessage',_super);
	var __proto=ReqActivateSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 574;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqActivateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取合体爬塔信息错误
*/
//class net.message.pata.ResGetPFITInfoErrorMessage extends net.Message
var ResGetPFITInfoErrorMessage=(function(_super){
	function ResGetPFITInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetPFITInfoErrorMessage.__super.call(this);
	}

	__class(ResGetPFITInfoErrorMessage,'net.message.pata.ResGetPFITInfoErrorMessage',_super);
	var __proto=ResGetPFITInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1165;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetPFITInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*机关过期时间
*/
//class net.message.xuannv.ResUpdateXuanNvOverTimeMessage extends net.Message
var ResUpdateXuanNvOverTimeMessage=(function(_super){
	function ResUpdateXuanNvOverTimeMessage(){
		/**过期时间 */
		this._overTime=null;
		ResUpdateXuanNvOverTimeMessage.__super.call(this);
	}

	__class(ResUpdateXuanNvOverTimeMessage,'net.message.xuannv.ResUpdateXuanNvOverTimeMessage',_super);
	var __proto=ResUpdateXuanNvOverTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._overTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._overTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1466;
	}

	/**过期时间 */
	/**过期时间 */
	__getset(0,__proto,'overTime',function(){
		return this._overTime;
		},function(value){
		this._overTime=value;
	});

	return ResUpdateXuanNvOverTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取降妖除魔信息
*/
//class net.message.pata.ResGetXYCMInfoMessage extends net.Message
var ResGetXYCMInfoMessage=(function(_super){
	function ResGetXYCMInfoMessage(){
		/**已通关的层数 */
		this._layer=0;
		/**是否全部通关 */
		this._isFinish=false;
		ResGetXYCMInfoMessage.__super.call(this);
	}

	__class(ResGetXYCMInfoMessage,'net.message.pata.ResGetXYCMInfoMessage',_super);
	var __proto=ResGetXYCMInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeBoolean(_buf,this._isFinish);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._isFinish=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 237;
	}

	/**已通关的层数 */
	/**已通关的层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**是否全部通关 */
	/**是否全部通关 */
	__getset(0,__proto,'isFinish',function(){
		return this._isFinish;
		},function(value){
		this._isFinish=value;
	});

	return ResGetXYCMInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物缘分
*/
//class net.message.pet.ResActivePetGroupMessage extends net.Message
var ResActivePetGroupMessage=(function(_super){
	function ResActivePetGroupMessage(){
		/**缘分ID */
		this._groupID=0;
		ResActivePetGroupMessage.__super.call(this);
	}

	__class(ResActivePetGroupMessage,'net.message.pet.ResActivePetGroupMessage',_super);
	var __proto=ResActivePetGroupMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._groupID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._groupID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 167;
	}

	/**缘分ID */
	/**缘分ID */
	__getset(0,__proto,'groupID',function(){
		return this._groupID;
		},function(value){
		this._groupID=value;
	});

	return ResActivePetGroupMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.dungeon.ResQuanMinBossMoveMessage extends net.Message
var ResQuanMinBossMoveMessage=(function(_super){
	function ResQuanMinBossMoveMessage(){
		/**移动者的UID */
		this._uid=null;
		/**移动的位置 */
		this._point=null;
		ResQuanMinBossMoveMessage.__super.call(this);
	}

	__class(ResQuanMinBossMoveMessage,'net.message.dungeon.ResQuanMinBossMoveMessage',_super);
	var __proto=ResQuanMinBossMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 1473;
	}

	/**移动者的UID */
	/**移动者的UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**移动的位置 */
	/**移动的位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ResQuanMinBossMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供
*/
//class net.message.gongCe.ResSelectQingWangRewardMessage extends net.Message
var ResSelectQingWangRewardMessage=(function(_super){
	function ResSelectQingWangRewardMessage(){
		ResSelectQingWangRewardMessage.__super.call(this);
		this._qingWangBeanList=[];
	}

	__class(ResSelectQingWangRewardMessage,'net.message.gongCe.ResSelectQingWangRewardMessage',_super);
	var __proto=ResSelectQingWangRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qingWangBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qingWangBeanList.length;++i_am_tmp_i){
			this._qingWangBeanList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qingWangBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qingWangBeanList[i_am_tmp_i]=this.readBeanInList(_buf,QingWangBean);
		}
	}

	__proto.getId=function(){
		return 1673;
	}

	/**勤王特供信息 */
	/**勤王特供信息 */
	__getset(0,__proto,'qingWangBeanList',function(){
		return this._qingWangBeanList;
		},function(value){
		this._qingWangBeanList=value;
	});

	return ResSelectQingWangRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会战组队招募错误
*/
//class net.message.gb.ResLegionBattleHireErrorMessage extends net.Message
var ResLegionBattleHireErrorMessage=(function(_super){
	function ResLegionBattleHireErrorMessage(){
		/**1:尚未开启;2:不在副本中;3:没有队伍;4:没有帮会;*/
		this._error=0;
		ResLegionBattleHireErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleHireErrorMessage,'net.message.gb.ResLegionBattleHireErrorMessage',_super);
	var __proto=ResLegionBattleHireErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1326;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleHireErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出军团
*/
//class net.message.guild.ResGuildExitMessage extends net.Message
var ResGuildExitMessage=(function(_super){
	function ResGuildExitMessage(){
		ResGuildExitMessage.__super.call(this);;
	}

	__class(ResGuildExitMessage,'net.message.guild.ResGuildExitMessage',_super);
	var __proto=ResGuildExitMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1231;
	}

	return ResGuildExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*铸纹信息错误
*/
//class net.message.equip.ResGetZhuWenInfoErrorMessage extends net.Message
var ResGetZhuWenInfoErrorMessage=(function(_super){
	function ResGetZhuWenInfoErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResGetZhuWenInfoErrorMessage.__super.call(this);
	}

	__class(ResGetZhuWenInfoErrorMessage,'net.message.equip.ResGetZhuWenInfoErrorMessage',_super);
	var __proto=ResGetZhuWenInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1537;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetZhuWenInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能
*/
//class net.message.xuannv.ReqReplaceXiLianFaQiMessage extends net.Message
var ReqReplaceXiLianFaQiMessage=(function(_super){
	function ReqReplaceXiLianFaQiMessage(){
		/**法器ID */
		this._faqi=0;
		ReqReplaceXiLianFaQiMessage.__super.call(this);
	}

	__class(ReqReplaceXiLianFaQiMessage,'net.message.xuannv.ReqReplaceXiLianFaQiMessage',_super);
	var __proto=ReqReplaceXiLianFaQiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._faqi);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._faqi=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 262;
	}

	/**法器ID */
	/**法器ID */
	__getset(0,__proto,'faqi',function(){
		return this._faqi;
		},function(value){
		this._faqi=value;
	});

	return ReqReplaceXiLianFaQiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击BOSS
*/
//class net.message.worldboss.ReqWorldBossAttackMessage extends net.Message
var ReqWorldBossAttackMessage=(function(_super){
	function ReqWorldBossAttackMessage(){
		ReqWorldBossAttackMessage.__super.call(this);;
	}

	__class(ReqWorldBossAttackMessage,'net.message.worldboss.ReqWorldBossAttackMessage',_super);
	var __proto=ReqWorldBossAttackMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 510;
	}

	return ReqWorldBossAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物
*/
//class net.message.rank.ReqGetRankInfoMessage extends net.Message
var ReqGetRankInfoMessage=(function(_super){
	function ReqGetRankInfoMessage(){
		/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
		this._type=0;
		/**页 */
		this._page=0;
		ReqGetRankInfoMessage.__super.call(this);
	}

	__class(ReqGetRankInfoMessage,'net.message.rank.ReqGetRankInfoMessage',_super);
	var __proto=ReqGetRankInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._page);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._page=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 268;
	}

	/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
	/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**页 */
	/**页 */
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	return ReqGetRankInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战目标
*/
//class net.message.garrison.ResGarrisonChallengeTargetMessage extends net.Message
var ResGarrisonChallengeTargetMessage=(function(_super){
	function ResGarrisonChallengeTargetMessage(){
		/**战斗数据 */
		this._data=null;
		ResGarrisonChallengeTargetMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResGarrisonChallengeTargetMessage,'net.message.garrison.ResGarrisonChallengeTargetMessage',_super);
	var __proto=ResGarrisonChallengeTargetMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1050;
	}

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResGarrisonChallengeTargetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴激活
*/
//class net.message.handbook.ReqHandBookActivateMessage extends net.Message
var ReqHandBookActivateMessage=(function(_super){
	function ReqHandBookActivateMessage(){
		/**图鉴id */
		this._configId=0;
		ReqHandBookActivateMessage.__super.call(this);
	}

	__class(ReqHandBookActivateMessage,'net.message.handbook.ReqHandBookActivateMessage',_super);
	var __proto=ReqHandBookActivateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1119;
	}

	/**图鉴id */
	/**图鉴id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	return ReqHandBookActivateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会下注
*/
//class net.message.qunyinghui.ResQunYingHuiBetMessage extends net.Message
var ResQunYingHuiBetMessage=(function(_super){
	function ResQunYingHuiBetMessage(){
		/**战斗ID */
		this._fightID=0;
		/**被下注人 */
		this._uid=null;
		/**下注类型 */
		this._type=0;
		ResQunYingHuiBetMessage.__super.call(this);
	}

	__class(ResQunYingHuiBetMessage,'net.message.qunyinghui.ResQunYingHuiBetMessage',_super);
	var __proto=ResQunYingHuiBetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightID);
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightID=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 477;
	}

	/**战斗ID */
	/**战斗ID */
	__getset(0,__proto,'fightID',function(){
		return this._fightID;
		},function(value){
		this._fightID=value;
	});

	/**下注类型 */
	/**下注类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**被下注人 */
	/**被下注人 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResQunYingHuiBetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求开启逐鹿宝箱
*/
//class net.message.teamDuplicate.ReqTeamDuplicateZhuluBoxMessage extends net.Message
var ReqTeamDuplicateZhuluBoxMessage=(function(_super){
	function ReqTeamDuplicateZhuluBoxMessage(){
		ReqTeamDuplicateZhuluBoxMessage.__super.call(this);
		this._qid=[];
	}

	__class(ReqTeamDuplicateZhuluBoxMessage,'net.message.teamDuplicate.ReqTeamDuplicateZhuluBoxMessage',_super);
	var __proto=ReqTeamDuplicateZhuluBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 481;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	return ReqTeamDuplicateZhuluBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建队伍
*/
//class net.message.team.ReqTeamCreateMessage extends net.Message
var ReqTeamCreateMessage=(function(_super){
	function ReqTeamCreateMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**战力要求 */
		this._fightPower=null;
		ReqTeamCreateMessage.__super.call(this);
	}

	__class(ReqTeamCreateMessage,'net.message.team.ReqTeamCreateMessage',_super);
	var __proto=ReqTeamCreateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1263;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**战力要求 */
	/**战力要求 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ReqTeamCreateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取三国令等级奖励
*/
//class net.message.wartoken.ResGetWarTokenRewardMessage extends net.Message
var ResGetWarTokenRewardMessage=(function(_super){
	function ResGetWarTokenRewardMessage(){
		/**变化之后的对象 */
		this._warTokenBean=null;
		ResGetWarTokenRewardMessage.__super.call(this);
	}

	__class(ResGetWarTokenRewardMessage,'net.message.wartoken.ResGetWarTokenRewardMessage',_super);
	var __proto=ResGetWarTokenRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._warTokenBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenBean=this.readBean(_buf,WarTokenBean);
	}

	__proto.getId=function(){
		return 891;
	}

	/**变化之后的对象 */
	/**变化之后的对象 */
	__getset(0,__proto,'warTokenBean',function(){
		return this._warTokenBean;
		},function(value){
		this._warTokenBean=value;
	});

	return ResGetWarTokenRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天命错误
*/
//class net.message.adviser.ResAdviserUpgradeDestinyErrorMessage extends net.Message
var ResAdviserUpgradeDestinyErrorMessage=(function(_super){
	function ResAdviserUpgradeDestinyErrorMessage(){
		/**1:穷;2:错误的军师id;3:最大等级;4:配置错误;*/
		this._error=0;
		ResAdviserUpgradeDestinyErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeDestinyErrorMessage,'net.message.adviser.ResAdviserUpgradeDestinyErrorMessage',_super);
	var __proto=ResAdviserUpgradeDestinyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1021;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeDestinyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取全服boss信息
*/
//class net.message.quanfuboss.ResQuanFuBossGetInfoMessage extends net.Message
var ResQuanFuBossGetInfoMessage=(function(_super){
	function ResQuanFuBossGetInfoMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**剩余血量 */
		this._hp=null;
		/**最大血量 */
		this._maxHp=null;
		/**剩余挑战次数 */
		this._time=0;
		/**剩余购买次数 */
		this._buyTime=0;
		/**我的排名 */
		this._myRank=0;
		/**我的伤害 */
		this._myDamege=null;
		ResQuanFuBossGetInfoMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResQuanFuBossGetInfoMessage,'net.message.quanfuboss.ResQuanFuBossGetInfoMessage',_super);
	var __proto=ResQuanFuBossGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._maxHp);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._buyTime);
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myRank);
		this.writeLong(_buf,this._myDamege);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._maxHp=this.readLong(_buf);
		this._time=this.readInt(_buf);
		this._buyTime=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,QuanFuBossRankBean);
		}
		this._myRank=this.readInt(_buf);
		this._myDamege=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1108;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**剩余血量 */
	/**剩余血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**我的排名 */
	/**我的排名 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**剩余购买次数 */
	/**剩余购买次数 */
	__getset(0,__proto,'buyTime',function(){
		return this._buyTime;
		},function(value){
		this._buyTime=value;
	});

	/**伤害排行 */
	/**伤害排行 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**我的伤害 */
	/**我的伤害 */
	__getset(0,__proto,'myDamege',function(){
		return this._myDamege;
		},function(value){
		this._myDamege=value;
	});

	return ResQuanFuBossGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知押运结束
*/
//class net.message.escort.ResFinishEscortMessage extends net.Message
var ResFinishEscortMessage=(function(_super){
	function ResFinishEscortMessage(){
		ResFinishEscortMessage.__super.call(this);;
	}

	__class(ResFinishEscortMessage,'net.message.escort.ResFinishEscortMessage',_super);
	var __proto=ResFinishEscortMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 338;
	}

	return ResFinishEscortMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*vip升级
*/
//class net.message.vip.RequpdateVipLevelMessage extends net.Message
var RequpdateVipLevelMessage=(function(_super){
	function RequpdateVipLevelMessage(){
		RequpdateVipLevelMessage.__super.call(this);;
	}

	__class(RequpdateVipLevelMessage,'net.message.vip.RequpdateVipLevelMessage',_super);
	var __proto=RequpdateVipLevelMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 784;
	}

	return RequpdateVipLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器
*/
//class net.message.fit.ResFitUpgradeWeaponMessage extends net.Message
var ResFitUpgradeWeaponMessage=(function(_super){
	function ResFitUpgradeWeaponMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**特有武器等级 */
		this._weaponLv=0;
		ResFitUpgradeWeaponMessage.__super.call(this);
	}

	__class(ResFitUpgradeWeaponMessage,'net.message.fit.ResFitUpgradeWeaponMessage',_super);
	var __proto=ResFitUpgradeWeaponMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._weaponLv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._weaponLv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1158;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**特有武器等级 */
	/**特有武器等级 */
	__getset(0,__proto,'weaponLv',function(){
		return this._weaponLv;
		},function(value){
		this._weaponLv=value;
	});

	return ResFitUpgradeWeaponMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买商店商品错误
*/
//class net.message.shop.ResShopBuyErrorMessage extends net.Message
var ResShopBuyErrorMessage=(function(_super){
	function ResShopBuyErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResShopBuyErrorMessage.__super.call(this);
	}

	__class(ResShopBuyErrorMessage,'net.message.shop.ResShopBuyErrorMessage',_super);
	var __proto=ResShopBuyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 59;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResShopBuyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备升品错误
*/
//class net.message.equip.ResEquipPromoteErrorMessage extends net.Message
var ResEquipPromoteErrorMessage=(function(_super){
	function ResEquipPromoteErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResEquipPromoteErrorMessage.__super.call(this);
	}

	__class(ResEquipPromoteErrorMessage,'net.message.equip.ResEquipPromoteErrorMessage',_super);
	var __proto=ResEquipPromoteErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1483;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipPromoteErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*邀请加入军团
*/
//class net.message.guild.ResGuildInviteMessage extends net.Message
var ResGuildInviteMessage=(function(_super){
	function ResGuildInviteMessage(){
		ResGuildInviteMessage.__super.call(this);;
	}

	__class(ResGuildInviteMessage,'net.message.guild.ResGuildInviteMessage',_super);
	var __proto=ResGuildInviteMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1238;
	}

	return ResGuildInviteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸战斗记录
*/
//class net.message.kingwar.ReqKingWarFightRecordMessage extends net.Message
var ReqKingWarFightRecordMessage=(function(_super){
	function ReqKingWarFightRecordMessage(){
		/**下标 */
		this._index=0;
		ReqKingWarFightRecordMessage.__super.call(this);
	}

	__class(ReqKingWarFightRecordMessage,'net.message.kingwar.ReqKingWarFightRecordMessage',_super);
	var __proto=ReqKingWarFightRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1160;
	}

	/**下标 */
	/**下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqKingWarFightRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*微信充值
*/
//class net.message.misc.ResWxRechargeMessage extends net.Message
var ResWxRechargeMessage=(function(_super){
	function ResWxRechargeMessage(){
		/**结果，0成功，1余额不足 */
		this._result=0;
		/**商品价格 */
		this._goods_price=0;
		/**当前微信游戏币余额 */
		this._wx_balance=0;
		ResWxRechargeMessage.__super.call(this);
	}

	__class(ResWxRechargeMessage,'net.message.misc.ResWxRechargeMessage',_super);
	var __proto=ResWxRechargeMessage.prototype;
	__proto.write=function(_buf){
		this.writeByte(_buf,this._result);
		this.writeInt(_buf,this._goods_price);
		this.writeInt(_buf,this._wx_balance);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._result=this.readByte(_buf);
		this._goods_price=this.readInt(_buf);
		this._wx_balance=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1519;
	}

	/**结果，0成功，1余额不足 */
	/**结果，0成功，1余额不足 */
	__getset(0,__proto,'result',function(){
		return this._result;
		},function(value){
		this._result=value;
	});

	/**商品价格 */
	/**商品价格 */
	__getset(0,__proto,'goods_price',function(){
		return this._goods_price;
		},function(value){
		this._goods_price=value;
	});

	/**当前微信游戏币余额 */
	/**当前微信游戏币余额 */
	__getset(0,__proto,'wx_balance',function(){
		return this._wx_balance;
		},function(value){
		this._wx_balance=value;
	});

	return ResWxRechargeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒元素
*/
//class net.message.adviser.ReqAdviserUpgradeElementMessage extends net.Message
var ReqAdviserUpgradeElementMessage=(function(_super){
	function ReqAdviserUpgradeElementMessage(){
		/**元素下标 0 开始 */
		this._index=0;
		ReqAdviserUpgradeElementMessage.__super.call(this);
	}

	__class(ReqAdviserUpgradeElementMessage,'net.message.adviser.ReqAdviserUpgradeElementMessage',_super);
	var __proto=ReqAdviserUpgradeElementMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1022;
	}

	/**元素下标 0 开始 */
	/**元素下标 0 开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqAdviserUpgradeElementMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有军团的简要信息
*/
//class net.message.guild.ResGuildGetAllMessage extends net.Message
var ResGuildGetAllMessage=(function(_super){
	function ResGuildGetAllMessage(){
		/**玩家创建的军团数量 */
		this._num=0;
		ResGuildGetAllMessage.__super.call(this);
		this._all=[];
	}

	__class(ResGuildGetAllMessage,'net.message.guild.ResGuildGetAllMessage',_super);
	var __proto=ResGuildGetAllMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._all.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._all.length;++i_am_tmp_i){
			this._all[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._all=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._all[i_am_tmp_i]=this.readBeanInList(_buf,GuildBriefBean);
		}
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1234;
	}

	/**所有的军团 */
	/**所有的军团 */
	__getset(0,__proto,'all',function(){
		return this._all;
		},function(value){
		this._all=value;
	});

	/**玩家创建的军团数量 */
	/**玩家创建的军团数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ResGuildGetAllMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入广场
*/
//class net.message.legion.ReqLegionIntoSquareMessageMessage extends net.Message
var ReqLegionIntoSquareMessageMessage=(function(_super){
	function ReqLegionIntoSquareMessageMessage(){
		ReqLegionIntoSquareMessageMessage.__super.call(this);;
	}

	__class(ReqLegionIntoSquareMessageMessage,'net.message.legion.ReqLegionIntoSquareMessageMessage',_super);
	var __proto=ReqLegionIntoSquareMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 647;
	}

	return ReqLegionIntoSquareMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*秒杀押运时间错误
*/
//class net.message.escort.ResKillEscortTimeErrorMessage extends net.Message
var ResKillEscortTimeErrorMessage=(function(_super){
	function ResKillEscortTimeErrorMessage(){
		/**1:钱不够;2:你还没开始押运;3:押运时间已经结束;*/
		this._error=0;
		ResKillEscortTimeErrorMessage.__super.call(this);
	}

	__class(ResKillEscortTimeErrorMessage,'net.message.escort.ResKillEscortTimeErrorMessage',_super);
	var __proto=ResKillEscortTimeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 791;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKillEscortTimeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体宝石升级错误
*/
//class net.message.fit.ResFitGemUpgradeErrorMessage extends net.Message
var ResFitGemUpgradeErrorMessage=(function(_super){
	function ResFitGemUpgradeErrorMessage(){
		/**1:镶嵌失败;2:材料不足;3:没有此装备;4:没有此合体英雄;5:已到最大等级;*/
		this._error=0;
		ResFitGemUpgradeErrorMessage.__super.call(this);
	}

	__class(ResFitGemUpgradeErrorMessage,'net.message.fit.ResFitGemUpgradeErrorMessage',_super);
	var __proto=ResFitGemUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1418;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitGemUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(本地)
*/
//class net.message.login.ReqLoginForTypeMessage extends net.Message
var ReqLoginForTypeMessage=(function(_super){
	function ReqLoginForTypeMessage(){
		/**登录方式[1:本地][2:37][3:37][4:西游][5:指尖H5][6:指尖手游][7:微信小游戏][8:硬核渠道-Quick][9:指尖H5-NEW][10:章鱼游戏][11:指尖小游戏][12:西游-Android][13:指尖长尾服][14:魔捷] */
		this._sdkType=0;
		/**帐号 */
		this._account_name=null;
		/**是否绑定了手机 */
		this._phoneBind=false;
		/**是否绑定了身份证 */
		this._idCardBind=false;
		/**是否成年 */
		this._adult=false;
		/**vip等级 */
		this._vipLevel=0;
		/**是否第三方来源账号 */
		this._youKe=false;
		/**是否绑定平台个性账号 */
		this._aliasBind=false;
		/**前端unix时间戳 */
		this._time=null;
		/**验证串儿 */
		this._sign=null;
		/**服务器ID */
		this._server=0;
		/**操作系统 */
		this._os=0;
		/**服务器序号 */
		this._sno=0;
		/**参数 */
		this._params=null;
		ReqLoginForTypeMessage.__super.call(this);
	}

	__class(ReqLoginForTypeMessage,'net.message.login.ReqLoginForTypeMessage',_super);
	var __proto=ReqLoginForTypeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._sdkType);
		this.writeString(_buf,this._account_name);
		this.writeBoolean(_buf,this._phoneBind);
		this.writeBoolean(_buf,this._idCardBind);
		this.writeBoolean(_buf,this._adult);
		this.writeInt(_buf,this._vipLevel);
		this.writeBoolean(_buf,this._youKe);
		this.writeBoolean(_buf,this._aliasBind);
		this.writeLong(_buf,this._time);
		this.writeString(_buf,this._sign);
		this.writeInt(_buf,this._server);
		this.writeInt(_buf,this._os);
		this.writeInt(_buf,this._sno);
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._sdkType=this.readInt(_buf);
		this._account_name=this.readString(_buf);
		this._phoneBind=this.readBoolean(_buf);
		this._idCardBind=this.readBoolean(_buf);
		this._adult=this.readBoolean(_buf);
		this._vipLevel=this.readInt(_buf);
		this._youKe=this.readBoolean(_buf);
		this._aliasBind=this.readBoolean(_buf);
		this._time=this.readLong(_buf);
		this._sign=this.readString(_buf);
		this._server=this.readInt(_buf);
		this._os=this.readInt(_buf);
		this._sno=this.readInt(_buf);
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 795;
	}

	/**登录方式[1:本地][2:37][3:37][4:西游][5:指尖H5][6:指尖手游][7:微信小游戏][8:硬核渠道-Quick][9:指尖H5-NEW][10:章鱼游戏][11:指尖小游戏][12:西游-Android][13:指尖长尾服][14:魔捷] */
	/**登录方式[1:本地][2:37][3:37][4:西游][5:指尖H5][6:指尖手游][7:微信小游戏][8:硬核渠道-Quick][9:指尖H5-NEW][10:章鱼游戏][11:指尖小游戏][12:西游-Android][13:指尖长尾服][14:魔捷] */
	__getset(0,__proto,'sdkType',function(){
		return this._sdkType;
		},function(value){
		this._sdkType=value;
	});

	/**服务器ID */
	/**服务器ID */
	__getset(0,__proto,'server',function(){
		return this._server;
		},function(value){
		this._server=value;
	});

	/**帐号 */
	/**帐号 */
	__getset(0,__proto,'account_name',function(){
		return this._account_name;
		},function(value){
		this._account_name=value;
	});

	/**是否第三方来源账号 */
	/**是否第三方来源账号 */
	__getset(0,__proto,'youKe',function(){
		return this._youKe;
		},function(value){
		this._youKe=value;
	});

	/**是否绑定平台个性账号 */
	/**是否绑定平台个性账号 */
	__getset(0,__proto,'aliasBind',function(){
		return this._aliasBind;
		},function(value){
		this._aliasBind=value;
	});

	/**是否绑定了手机 */
	/**是否绑定了手机 */
	__getset(0,__proto,'phoneBind',function(){
		return this._phoneBind;
		},function(value){
		this._phoneBind=value;
	});

	/**是否绑定了身份证 */
	/**是否绑定了身份证 */
	__getset(0,__proto,'idCardBind',function(){
		return this._idCardBind;
		},function(value){
		this._idCardBind=value;
	});

	/**是否成年 */
	/**是否成年 */
	__getset(0,__proto,'adult',function(){
		return this._adult;
		},function(value){
		this._adult=value;
	});

	/**vip等级 */
	/**vip等级 */
	__getset(0,__proto,'vipLevel',function(){
		return this._vipLevel;
		},function(value){
		this._vipLevel=value;
	});

	/**验证串儿 */
	/**验证串儿 */
	__getset(0,__proto,'sign',function(){
		return this._sign;
		},function(value){
		this._sign=value;
	});

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**操作系统 */
	/**操作系统 */
	__getset(0,__proto,'os',function(){
		return this._os;
		},function(value){
		this._os=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ReqLoginForTypeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知伴侣升阶房子有东西可以免费领
*/
//class net.message.marriage.ResMarriageReceiveUpdateMessage extends net.Message
var ResMarriageReceiveUpdateMessage=(function(_super){
	function ResMarriageReceiveUpdateMessage(){
		/**多少 */
		this._value=null;
		ResMarriageReceiveUpdateMessage.__super.call(this);
	}

	__class(ResMarriageReceiveUpdateMessage,'net.message.marriage.ResMarriageReceiveUpdateMessage',_super);
	var __proto=ResMarriageReceiveUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._value=this.readBean(_buf,ProgressBean);
	}

	__proto.getId=function(){
		return 559;
	}

	/**多少 */
	/**多少 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResMarriageReceiveUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领奖错误
*/
//class net.message.yuanzheng.ResYuanZhengTakePrizeErrorMessage extends net.Message
var ResYuanZhengTakePrizeErrorMessage=(function(_super){
	function ResYuanZhengTakePrizeErrorMessage(){
		/**1:没有奖励;*/
		this._error=0;
		ResYuanZhengTakePrizeErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengTakePrizeErrorMessage,'net.message.yuanzheng.ResYuanZhengTakePrizeErrorMessage',_super);
	var __proto=ResYuanZhengTakePrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 306;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengTakePrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物激活
*/
//class net.message.treasure.ResTreasureActiveMessage extends net.Message
var ResTreasureActiveMessage=(function(_super){
	function ResTreasureActiveMessage(){
		/**宝物信息 */
		this._treasure=null;
		ResTreasureActiveMessage.__super.call(this);
	}

	__class(ResTreasureActiveMessage,'net.message.treasure.ResTreasureActiveMessage',_super);
	var __proto=ResTreasureActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._treasure);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasure=this.readBean(_buf,TreasureBean);
	}

	__proto.getId=function(){
		return 1623;
	}

	/**宝物信息 */
	/**宝物信息 */
	__getset(0,__proto,'treasure',function(){
		return this._treasure;
		},function(value){
		this._treasure=value;
	});

	return ResTreasureActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新合体对象技能
*/
//class net.message.fit.ResFitUpdateEquipLockMessage extends net.Message
var ResFitUpdateEquipLockMessage=(function(_super){
	function ResFitUpdateEquipLockMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体对象 */
		this._bean=null;
		ResFitUpdateEquipLockMessage.__super.call(this);
	}

	__class(ResFitUpdateEquipLockMessage,'net.message.fit.ResFitUpdateEquipLockMessage',_super);
	var __proto=ResFitUpdateEquipLockMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._bean=this.readBean(_buf,FitEquipBean);
	}

	__proto.getId=function(){
		return 1151;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体对象 */
	/**合体对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResFitUpdateEquipLockMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务次数错误
*/
//class net.message.chibi.ResChibiBuyTodayErrorMessage extends net.Message
var ResChibiBuyTodayErrorMessage=(function(_super){
	function ResChibiBuyTodayErrorMessage(){
		/**1:次数达到最大;2:穷;*/
		this._error=0;
		ResChibiBuyTodayErrorMessage.__super.call(this);
	}

	__class(ResChibiBuyTodayErrorMessage,'net.message.chibi.ResChibiBuyTodayErrorMessage',_super);
	var __proto=ResChibiBuyTodayErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 407;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChibiBuyTodayErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*抢错误
*/
//class net.message.redEnvelopes.ResRedEnvelopesErrorMessage extends net.Message
var ResRedEnvelopesErrorMessage=(function(_super){
	function ResRedEnvelopesErrorMessage(){
		/**1:配置错误;2:已抢完;3:不存在;4:领取失败;*/
		this._error=0;
		ResRedEnvelopesErrorMessage.__super.call(this);
	}

	__class(ResRedEnvelopesErrorMessage,'net.message.redEnvelopes.ResRedEnvelopesErrorMessage',_super);
	var __proto=ResRedEnvelopesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 738;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRedEnvelopesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.general.ReqGeneralSurmountMessage extends net.Message
var ReqGeneralSurmountMessage=(function(_super){
	function ReqGeneralSurmountMessage(){
		/**id */
		this._id=0;
		ReqGeneralSurmountMessage.__super.call(this);
	}

	__class(ReqGeneralSurmountMessage,'net.message.general.ReqGeneralSurmountMessage',_super);
	var __proto=ReqGeneralSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 846;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqGeneralSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*操作神装
*/
//class net.message.godClothes.ResGodClothesOperationMessage extends net.Message
var ResGodClothesOperationMessage=(function(_super){
	function ResGodClothesOperationMessage(){
		/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._equipGrid=0;
		/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
		this._godClothesOperationType=0;
		/**对象 */
		this._godClothes=null;
		/**玩家战力 */
		this._fightPower=null;
		/**英雄Id */
		this._heroId=0;
		ResGodClothesOperationMessage.__super.call(this);
	}

	__class(ResGodClothesOperationMessage,'net.message.godClothes.ResGodClothesOperationMessage',_super);
	var __proto=ResGodClothesOperationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._equipGrid);
		this.writeInt(_buf,this._godClothesOperationType);
		this.writeBean(_buf,this._godClothes);
		this.writeLong(_buf,this._fightPower);
		this.writeInt(_buf,this._heroId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._equipGrid=this.readInt(_buf);
		this._godClothesOperationType=this.readInt(_buf);
		this._godClothes=this.readBean(_buf,GodClothes);
		this._fightPower=this.readLong(_buf);
		this._heroId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 853;
	}

	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'equipGrid',function(){
		return this._equipGrid;
		},function(value){
		this._equipGrid=value;
	});

	/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
	/**操作类型[1:激活][2:淬炼][3:注灵][4:兵魂][5:升级][6:神铸][7:神铸上锁] */
	__getset(0,__proto,'godClothesOperationType',function(){
		return this._godClothesOperationType;
		},function(value){
		this._godClothesOperationType=value;
	});

	/**对象 */
	/**对象 */
	__getset(0,__proto,'godClothes',function(){
		return this._godClothes;
		},function(value){
		this._godClothes=value;
	});

	/**玩家战力 */
	/**玩家战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	/**英雄Id */
	/**英雄Id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	return ResGodClothesOperationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击城门
*/
//class net.message.gb.ResLegionBattleAttackDoorMessage extends net.Message
var ResLegionBattleAttackDoorMessage=(function(_super){
	function ResLegionBattleAttackDoorMessage(){
		/**战斗消息 */
		this._data=null;
		ResLegionBattleAttackDoorMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackDoorMessage,'net.message.gb.ResLegionBattleAttackDoorMessage',_super);
	var __proto=ResLegionBattleAttackDoorMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1321;
	}

	/**战斗消息 */
	/**战斗消息 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResLegionBattleAttackDoorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战试炼之塔错误
*/
//class net.message.towerFight.ResTowerFightErrorMessage extends net.Message
var ResTowerFightErrorMessage=(function(_super){
	function ResTowerFightErrorMessage(){
		/**1:配置错误;2:已挑战;3:武将不满足上阵条件;*/
		this._error=0;
		ResTowerFightErrorMessage.__super.call(this);
	}

	__class(ResTowerFightErrorMessage,'net.message.towerFight.ResTowerFightErrorMessage',_super);
	var __proto=ResTowerFightErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1615;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTowerFightErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新场景对象位置
*/
//class net.message.scene.ResSceneUpdatePositionMessage extends net.Message
var ResSceneUpdatePositionMessage=(function(_super){
	function ResSceneUpdatePositionMessage(){
		/**场景玩家 */
		this._uid=null;
		/**x */
		this._x=0;
		/**y */
		this._y=0;
		ResSceneUpdatePositionMessage.__super.call(this);
	}

	__class(ResSceneUpdatePositionMessage,'net.message.scene.ResSceneUpdatePositionMessage',_super);
	var __proto=ResSceneUpdatePositionMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._x);
		this.writeInt(_buf,this._y);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._x=this.readInt(_buf);
		this._y=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1311;
	}

	/**场景玩家 */
	/**场景玩家 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**x */
	/**x */
	__getset(0,__proto,'x',function(){
		return this._x;
		},function(value){
		this._x=value;
	});

	/**y */
	/**y */
	__getset(0,__proto,'y',function(){
		return this._y;
		},function(value){
		this._y=value;
	});

	return ResSceneUpdatePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用合成
*/
//class net.message.upgrade.ResCommonSynthesisMessage extends net.Message
var ResCommonSynthesisMessage=(function(_super){
	function ResCommonSynthesisMessage(){
		ResCommonSynthesisMessage.__super.call(this);
		this._goodsNumBean=[];
	}

	__class(ResCommonSynthesisMessage,'net.message.upgrade.ResCommonSynthesisMessage',_super);
	var __proto=ResCommonSynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsNumBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goodsNumBean.length;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._goodsNumBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1038;
	}

	/**获得的物品 */
	/**获得的物品 */
	__getset(0,__proto,'goodsNumBean',function(){
		return this._goodsNumBean;
		},function(value){
		this._goodsNumBean=value;
	});

	return ResCommonSynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*看别人装逼
*/
//class net.message.chat.ResChatKanZhuangBiMessage extends net.Message
var ResChatKanZhuangBiMessage=(function(_super){
	function ResChatKanZhuangBiMessage(){
		/**类型 0武将 1红颜 2装备 */
		this._type=0;
		/**该类型的ID */
		this._id=0;
		ResChatKanZhuangBiMessage.__super.call(this);
		this._attributes=[];
		this._skill=[];
	}

	__class(ResChatKanZhuangBiMessage,'net.message.chat.ResChatKanZhuangBiMessage',_super);
	var __proto=ResChatKanZhuangBiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeInt(_buf,this._attributes[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 779;
	}

	/**类型 0武将 1红颜 2装备 */
	/**类型 0武将 1红颜 2装备 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**该类型的ID */
	/**该类型的ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**参数列表 */
	/**参数列表 */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return ResChatKanZhuangBiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付款重生
*/
//class net.message.worldboss.ReqWorldBossPayRebornMessage extends net.Message
var ReqWorldBossPayRebornMessage=(function(_super){
	function ReqWorldBossPayRebornMessage(){
		ReqWorldBossPayRebornMessage.__super.call(this);;
	}

	__class(ReqWorldBossPayRebornMessage,'net.message.worldboss.ReqWorldBossPayRebornMessage',_super);
	var __proto=ReqWorldBossPayRebornMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 525;
	}

	return ReqWorldBossPayRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*锻造升级错误
*/
//class net.message.duanzao.ResDuanZaoUpgradeErrorMessage extends net.Message
var ResDuanZaoUpgradeErrorMessage=(function(_super){
	function ResDuanZaoUpgradeErrorMessage(){
		/**1:物品不足;2:已达最高等级;*/
		this._error=0;
		ResDuanZaoUpgradeErrorMessage.__super.call(this);
	}

	__class(ResDuanZaoUpgradeErrorMessage,'net.message.duanzao.ResDuanZaoUpgradeErrorMessage',_super);
	var __proto=ResDuanZaoUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 197;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResDuanZaoUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新包裹中的道具
*/
//class net.message.packet.ResUpdateItemInPacketMessage extends net.Message
var ResUpdateItemInPacketMessage=(function(_super){
	function ResUpdateItemInPacketMessage(){
		/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
		this._packetType=0;
		/**道具信息 */
		this._item=null;
		/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
		this._reason=0;
		ResUpdateItemInPacketMessage.__super.call(this);
	}

	__class(ResUpdateItemInPacketMessage,'net.message.packet.ResUpdateItemInPacketMessage',_super);
	var __proto=ResUpdateItemInPacketMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._packetType);
		this.writeBean(_buf,this._item);
		this.writeInt(_buf,this._reason);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._packetType=this.readInt(_buf);
		this._item=this.readBean(_buf,GoodsBean);
		this._reason=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 20;
	}

	/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	__getset(0,__proto,'reason',function(){
		return this._reason;
		},function(value){
		this._reason=value;
	});

	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	__getset(0,__proto,'packetType',function(){
		return this._packetType;
		},function(value){
		this._packetType=value;
	});

	/**道具信息 */
	/**道具信息 */
	__getset(0,__proto,'item',function(){
		return this._item;
		},function(value){
		this._item=value;
	});

	return ResUpdateItemInPacketMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童装备命格
*/
//class net.message.soulboy.ResSoulBoyDestinyMessage extends net.Message
var ResSoulBoyDestinyMessage=(function(_super){
	function ResSoulBoyDestinyMessage(){
		/**命格下标 */
		this._index=0;
		/**1升级 2 替换 */
		this._type=0;
		/**道具ID */
		this._itemId=0;
		/**背包里的道具下标(1的情况下 这里是升级的新等级)*/
		this._packet_index=0;
		ResSoulBoyDestinyMessage.__super.call(this);
	}

	__class(ResSoulBoyDestinyMessage,'net.message.soulboy.ResSoulBoyDestinyMessage',_super);
	var __proto=ResSoulBoyDestinyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._itemId);
		this.writeInt(_buf,this._packet_index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._itemId=this.readInt(_buf);
		this._packet_index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 461;
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'itemId',function(){
		return this._itemId;
		},function(value){
		this._itemId=value;
	});

	/**命格下标 */
	/**命格下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**1升级 2 替换 */
	/**1升级 2 替换 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**背包里的道具下标(1的情况下 这里是升级的新等级)*/
	/**背包里的道具下标(1的情况下 这里是升级的新等级)*/
	__getset(0,__proto,'packet_index',function(){
		return this._packet_index;
		},function(value){
		this._packet_index=value;
	});

	return ResSoulBoyDestinyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(野外BOSS)
*/
//class net.message.dungeon.ResReceiveYeWaiBossDungeonPrizeMessage extends net.Message
var ResReceiveYeWaiBossDungeonPrizeMessage=(function(_super){
	function ResReceiveYeWaiBossDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**剩余血量 */
		this._hp=null;
		/**战斗数据 */
		this._data=null;
		ResReceiveYeWaiBossDungeonPrizeMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResReceiveYeWaiBossDungeonPrizeMessage,'net.message.dungeon.ResReceiveYeWaiBossDungeonPrizeMessage',_super);
	var __proto=ResReceiveYeWaiBossDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._hp);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._hp=this.readLong(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 228;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**剩余血量 */
	/**剩余血量 */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	return ResReceiveYeWaiBossDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付款重生错误
*/
//class net.message.worldboss.ResWorldBossPayRebornErrorMessage extends net.Message
var ResWorldBossPayRebornErrorMessage=(function(_super){
	function ResWorldBossPayRebornErrorMessage(){
		/**1:活动未开始;2:穷;3:你没死;*/
		this._error=0;
		ResWorldBossPayRebornErrorMessage.__super.call(this);
	}

	__class(ResWorldBossPayRebornErrorMessage,'net.message.worldboss.ResWorldBossPayRebornErrorMessage',_super);
	var __proto=ResWorldBossPayRebornErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 526;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossPayRebornErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*复仇
*/
//class net.message.garrison.ResGarrisonRevengeMessage extends net.Message
var ResGarrisonRevengeMessage=(function(_super){
	function ResGarrisonRevengeMessage(){
		/**战斗数据 */
		this._data=null;
		ResGarrisonRevengeMessage.__super.call(this);
	}

	__class(ResGarrisonRevengeMessage,'net.message.garrison.ResGarrisonRevengeMessage',_super);
	var __proto=ResGarrisonRevengeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1068;
	}

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResGarrisonRevengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者激活御灵错误
*/
//class net.message.soulboy.ResSoulBoyLingUpgradeErrorMessage extends net.Message
var ResSoulBoyLingUpgradeErrorMessage=(function(_super){
	function ResSoulBoyLingUpgradeErrorMessage(){
		/**1:灵童不存在;2:材料不足;3:没达到条件;*/
		this._error=0;
		ResSoulBoyLingUpgradeErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyLingUpgradeErrorMessage,'net.message.soulboy.ResSoulBoyLingUpgradeErrorMessage',_super);
	var __proto=ResSoulBoyLingUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 452;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyLingUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*转生
*/
//class net.message.zhuansheng.ReqZhuanShengMessage extends net.Message
var ReqZhuanShengMessage=(function(_super){
	function ReqZhuanShengMessage(){
		ReqZhuanShengMessage.__super.call(this);;
	}

	__class(ReqZhuanShengMessage,'net.message.zhuansheng.ReqZhuanShengMessage',_super);
	var __proto=ReqZhuanShengMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 50;
	}

	return ReqZhuanShengMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器
*/
//class net.message.fit.ReqFitUpgradePositionMessage extends net.Message
var ReqFitUpgradePositionMessage=(function(_super){
	function ReqFitUpgradePositionMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ReqFitUpgradePositionMessage.__super.call(this);
	}

	__class(ReqFitUpgradePositionMessage,'net.message.fit.ReqFitUpgradePositionMessage',_super);
	var __proto=ReqFitUpgradePositionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1154;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqFitUpgradePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新镖车等级错误
*/
//class net.message.escort.ResFlushEscortLvErrorMessage extends net.Message
var ResFlushEscortLvErrorMessage=(function(_super){
	function ResFlushEscortLvErrorMessage(){
		/**1:元宝不足;2:正在押运中;3:刷新失败 等级不变;*/
		this._error=0;
		ResFlushEscortLvErrorMessage.__super.call(this);
	}

	__class(ResFlushEscortLvErrorMessage,'net.message.escort.ResFlushEscortLvErrorMessage',_super);
	var __proto=ResFlushEscortLvErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 331;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFlushEscortLvErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ReqMarriagePataInviteUpdateMessage extends net.Message
var ReqMarriagePataInviteUpdateMessage=(function(_super){
	function ReqMarriagePataInviteUpdateMessage(){
		/**类型0拒绝 1接受 */
		this._type=0;
		ReqMarriagePataInviteUpdateMessage.__super.call(this);
	}

	__class(ReqMarriagePataInviteUpdateMessage,'net.message.marriage.ReqMarriagePataInviteUpdateMessage',_super);
	var __proto=ReqMarriagePataInviteUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1495;
	}

	/**类型0拒绝 1接受 */
	/**类型0拒绝 1接受 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqMarriagePataInviteUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买次数
*/
//class net.message.garrison.ResGarrisonBuyTimesMessage extends net.Message
var ResGarrisonBuyTimesMessage=(function(_super){
	function ResGarrisonBuyTimesMessage(){
		/**当前挑战次数 */
		this._times=0;
		ResGarrisonBuyTimesMessage.__super.call(this);
	}

	__class(ResGarrisonBuyTimesMessage,'net.message.garrison.ResGarrisonBuyTimesMessage',_super);
	var __proto=ResGarrisonBuyTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1383;
	}

	/**当前挑战次数 */
	/**当前挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResGarrisonBuyTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新战争艺术等级
*/
//class net.message.fit.ResFitUpdateArtMessage extends net.Message
var ResFitUpdateArtMessage=(function(_super){
	function ResFitUpdateArtMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**战争艺术等级 */
		this._art=0;
		ResFitUpdateArtMessage.__super.call(this);
	}

	__class(ResFitUpdateArtMessage,'net.message.fit.ResFitUpdateArtMessage',_super);
	var __proto=ResFitUpdateArtMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._art);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._art=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1150;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**战争艺术等级 */
	/**战争艺术等级 */
	__getset(0,__proto,'art',function(){
		return this._art;
		},function(value){
		this._art=value;
	});

	return ResFitUpdateArtMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入军团
*/
//class net.message.guild.ReqGuildApplyReplyMessage extends net.Message
var ReqGuildApplyReplyMessage=(function(_super){
	function ReqGuildApplyReplyMessage(){
		/**申请者唯一ID */
		this._uid=null;
		/**是否同意 */
		this._agree=false;
		ReqGuildApplyReplyMessage.__super.call(this);
	}

	__class(ReqGuildApplyReplyMessage,'net.message.guild.ReqGuildApplyReplyMessage',_super);
	var __proto=ReqGuildApplyReplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBoolean(_buf,this._agree);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._agree=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1206;
	}

	/**申请者唯一ID */
	/**申请者唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**是否同意 */
	/**是否同意 */
	__getset(0,__proto,'agree',function(){
		return this._agree;
		},function(value){
		this._agree=value;
	});

	return ReqGuildApplyReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*准点登陆错误
*/
//class net.message.gongCe.ResZhunDianErrorMessage extends net.Message
var ResZhunDianErrorMessage=(function(_super){
	function ResZhunDianErrorMessage(){
		/**1:未达到领取时间;2:领取时间已过;*/
		this._error=0;
		ResZhunDianErrorMessage.__super.call(this);
	}

	__class(ResZhunDianErrorMessage,'net.message.gongCe.ResZhunDianErrorMessage',_super);
	var __proto=ResZhunDianErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1645;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResZhunDianErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*点击全民BOSS(查看排名/击杀者)
*/
//class net.message.dungeon.ResClickQuanMinBossDungeonMessage extends net.Message
var ResClickQuanMinBossDungeonMessage=(function(_super){
	function ResClickQuanMinBossDungeonMessage(){
		ResClickQuanMinBossDungeonMessage.__super.call(this);
		this._rank=[];
		this._killers=[];
	}

	__class(ResClickQuanMinBossDungeonMessage,'net.message.dungeon.ResClickQuanMinBossDungeonMessage',_super);
	var __proto=ResClickQuanMinBossDungeonMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._killers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._killers.length;++i_am_tmp_i){
			this._killers[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,QuanMinRankUserBean);
		}
		size52413035=this.readInt(_buf);
		this._killers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._killers[i_am_tmp_i]=this.readBeanInList(_buf,QuanMinKillerBean);
		}
	}

	__proto.getId=function(){
		return 223;
	}

	/**排名列表 */
	/**排名列表 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**击杀者列表 */
	/**击杀者列表 */
	__getset(0,__proto,'killers',function(){
		return this._killers;
		},function(value){
		this._killers=value;
	});

	return ResClickQuanMinBossDungeonMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝时间错误
*/
//class net.message.textureHunt.ResGetTimeInfoErrorMessage extends net.Message
var ResGetTimeInfoErrorMessage=(function(_super){
	function ResGetTimeInfoErrorMessage(){
		/**1:不存在的类型;2:配置错误;*/
		this._error=0;
		ResGetTimeInfoErrorMessage.__super.call(this);
	}

	__class(ResGetTimeInfoErrorMessage,'net.message.textureHunt.ResGetTimeInfoErrorMessage',_super);
	var __proto=ResGetTimeInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1576;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetTimeInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买商店商品
*/
//class net.message.shop.ReqShopBuyMessage extends net.Message
var ReqShopBuyMessage=(function(_super){
	function ReqShopBuyMessage(){
		/**商店商品ID */
		this._shopGoodsID=0;
		/**数量 */
		this._num=0;
		ReqShopBuyMessage.__super.call(this);
	}

	__class(ReqShopBuyMessage,'net.message.shop.ReqShopBuyMessage',_super);
	var __proto=ReqShopBuyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopGoodsID);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopGoodsID=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 57;
	}

	/**商店商品ID */
	/**商店商品ID */
	__getset(0,__proto,'shopGoodsID',function(){
		return this._shopGoodsID;
		},function(value){
		this._shopGoodsID=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqShopBuyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门环奖励
*/
//class net.message.shimen.ResTakeShiMenRoundPrizeMessage extends net.Message
var ResTakeShiMenRoundPrizeMessage=(function(_super){
	function ResTakeShiMenRoundPrizeMessage(){
		/**是否领取过环奖励 */
		this._roundPrized=false;
		/**总次数 */
		this._totalTimes=0;
		ResTakeShiMenRoundPrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResTakeShiMenRoundPrizeMessage,'net.message.shimen.ResTakeShiMenRoundPrizeMessage',_super);
	var __proto=ResTakeShiMenRoundPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
		this.writeBoolean(_buf,this._roundPrized);
		this.writeInt(_buf,this._totalTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._roundPrized=this.readBoolean(_buf);
		this._totalTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 143;
	}

	/**是否领取过环奖励 */
	/**是否领取过环奖励 */
	__getset(0,__proto,'roundPrized',function(){
		return this._roundPrized;
		},function(value){
		this._roundPrized=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**总次数 */
	/**总次数 */
	__getset(0,__proto,'totalTimes',function(){
		return this._totalTimes;
		},function(value){
		this._totalTimes=value;
	});

	return ResTakeShiMenRoundPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取进阶好礼信息
*/
//class net.message.advanceReward.ReqGetAdvancedInfoMessage extends net.Message
var ReqGetAdvancedInfoMessage=(function(_super){
	function ReqGetAdvancedInfoMessage(){
		ReqGetAdvancedInfoMessage.__super.call(this);;
	}

	__class(ReqGetAdvancedInfoMessage,'net.message.advanceReward.ReqGetAdvancedInfoMessage',_super);
	var __proto=ReqGetAdvancedInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1081;
	}

	return ReqGetAdvancedInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取星宿幻境信息
*/
//class net.message.pata.ResGetXXHJInfoMessage extends net.Message
var ResGetXXHJInfoMessage=(function(_super){
	function ResGetXXHJInfoMessage(){
		/**已通关层数 */
		this._layer=0;
		/**层数上限 */
		this._maxLayer=0;
		/**剩余挑战次数 */
		this._challengeTime=0;
		/**剩余血量,对于一个崭新的boss，后端会初始化血量为max */
		this._hp=null;
		/**最大血量 */
		this._maxHp=null;
		/**bossID */
		this._bossID=0;
		/**已經購買次数 */
		this._buyTime=0;
		ResGetXXHJInfoMessage.__super.call(this);
		this._fristPrizes=[];
	}

	__class(ResGetXXHJInfoMessage,'net.message.pata.ResGetXXHJInfoMessage',_super);
	var __proto=ResGetXXHJInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._maxLayer);
		this.writeInt(_buf,this._challengeTime);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._maxHp);
		this.writeInt(_buf,this._bossID);
		this.writeInt(_buf,this._fristPrizes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fristPrizes.length;++i_am_tmp_i){
			this._fristPrizes[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._buyTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		this._maxLayer=this.readInt(_buf);
		this._challengeTime=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._maxHp=this.readLong(_buf);
		this._bossID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._fristPrizes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fristPrizes[i_am_tmp_i]=this.readBeanInList(_buf,XXHJFristPrize);
		}
		this._buyTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1032;
	}

	/**已通关层数 */
	/**已通关层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**已經購買次数 */
	/**已經購買次数 */
	__getset(0,__proto,'buyTime',function(){
		return this._buyTime;
		},function(value){
		this._buyTime=value;
	});

	/**首通奖励 */
	/**首通奖励 */
	__getset(0,__proto,'fristPrizes',function(){
		return this._fristPrizes;
		},function(value){
		this._fristPrizes=value;
	});

	/**层数上限 */
	/**层数上限 */
	__getset(0,__proto,'maxLayer',function(){
		return this._maxLayer;
		},function(value){
		this._maxLayer=value;
	});

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'challengeTime',function(){
		return this._challengeTime;
		},function(value){
		this._challengeTime=value;
	});

	/**剩余血量,对于一个崭新的boss，后端会初始化血量为max */
	/**剩余血量,对于一个崭新的boss，后端会初始化血量为max */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**bossID */
	/**bossID */
	__getset(0,__proto,'bossID',function(){
		return this._bossID;
		},function(value){
		this._bossID=value;
	});

	/**最大血量 */
	/**最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	return ResGetXXHJInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建主英雄错误
*/
//class net.message.hero.ResCreateMainHeroErrorMessage extends net.Message
var ResCreateMainHeroErrorMessage=(function(_super){
	function ResCreateMainHeroErrorMessage(){
		/**1:名字非法;2:已经存在英雄;3:性别非法;4:职业非法;5:名字为空;6:名字太长;7:名字重复;*/
		this._error=0;
		ResCreateMainHeroErrorMessage.__super.call(this);
	}

	__class(ResCreateMainHeroErrorMessage,'net.message.hero.ResCreateMainHeroErrorMessage',_super);
	var __proto=ResCreateMainHeroErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 12;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCreateMainHeroErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*解散军团错误
*/
//class net.message.guild.ResGuildDismissErrorMessage extends net.Message
var ResGuildDismissErrorMessage=(function(_super){
	function ResGuildDismissErrorMessage(){
		/**1:不在帮会中;2:不存在帮会;3:没有权限;*/
		this._error=0;
		ResGuildDismissErrorMessage.__super.call(this);
	}

	__class(ResGuildDismissErrorMessage,'net.message.guild.ResGuildDismissErrorMessage',_super);
	var __proto=ResGuildDismissErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1229;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildDismissErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家成功分享错误
*/
//class net.message.misc.ResZhiJianShareSucErrorMessage extends net.Message
var ResZhiJianShareSucErrorMessage=(function(_super){
	function ResZhiJianShareSucErrorMessage(){
		/**1:未知错误;2:获取奖励次数已达到上限;*/
		this._error=0;
		ResZhiJianShareSucErrorMessage.__super.call(this);
	}

	__class(ResZhiJianShareSucErrorMessage,'net.message.misc.ResZhiJianShareSucErrorMessage',_super);
	var __proto=ResZhiJianShareSucErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1529;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResZhiJianShareSucErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取巡城排行榜错误
*/
//class net.message.garrison.ResGarrisonGerRankErrorMessage extends net.Message
var ResGarrisonGerRankErrorMessage=(function(_super){
	function ResGarrisonGerRankErrorMessage(){
		/**1:系统未开启;*/
		this._error=0;
		ResGarrisonGerRankErrorMessage.__super.call(this);
	}

	__class(ResGarrisonGerRankErrorMessage,'net.message.garrison.ResGarrisonGerRankErrorMessage',_super);
	var __proto=ResGarrisonGerRankErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1063;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonGerRankErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*跨天
*/
//class net.message.misc.ResDayEndMessage extends net.Message
var ResDayEndMessage=(function(_super){
	function ResDayEndMessage(){
		ResDayEndMessage.__super.call(this);;
	}

	__class(ResDayEndMessage,'net.message.misc.ResDayEndMessage',_super);
	var __proto=ResDayEndMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 211;
	}

	return ResDayEndMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍踢人
*/
//class net.message.team.ResTeamKickMessage extends net.Message
var ResTeamKickMessage=(function(_super){
	function ResTeamKickMessage(){
		ResTeamKickMessage.__super.call(this);;
	}

	__class(ResTeamKickMessage,'net.message.team.ResTeamKickMessage',_super);
	var __proto=ResTeamKickMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1274;
	}

	return ResTeamKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝记录
*/
//class net.message.textureHunt.ReqHuntRecordMessage extends net.Message
var ReqHuntRecordMessage=(function(_super){
	function ReqHuntRecordMessage(){
		/**寻宝类型 */
		this._type=0;
		ReqHuntRecordMessage.__super.call(this);
	}

	__class(ReqHuntRecordMessage,'net.message.textureHunt.ReqHuntRecordMessage',_super);
	var __proto=ReqHuntRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 696;
	}

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqHuntRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取官位活跃度宝箱错误
*/
//class net.message.official.ResReceiveOfficialBoxErrorMessage extends net.Message
var ResReceiveOfficialBoxErrorMessage=(function(_super){
	function ResReceiveOfficialBoxErrorMessage(){
		/**1:活跃度不足;*/
		this._error=0;
		ResReceiveOfficialBoxErrorMessage.__super.call(this);
	}

	__class(ResReceiveOfficialBoxErrorMessage,'net.message.official.ResReceiveOfficialBoxErrorMessage',_super);
	var __proto=ResReceiveOfficialBoxErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 324;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveOfficialBoxErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*每日重置官位对象
*/
//class net.message.official.ResResetOfficialMessage extends net.Message
var ResResetOfficialMessage=(function(_super){
	function ResResetOfficialMessage(){
		/**官位对象 */
		this._bean=null;
		ResResetOfficialMessage.__super.call(this);
	}

	__class(ResResetOfficialMessage,'net.message.official.ResResetOfficialMessage',_super);
	var __proto=ResResetOfficialMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,OfficialBean);
	}

	__proto.getId=function(){
		return 328;
	}

	/**官位对象 */
	/**官位对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResResetOfficialMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取巡城数据
*/
//class net.message.garrison.ResGarrisonGetDataMessage extends net.Message
var ResGarrisonGetDataMessage=(function(_super){
	function ResGarrisonGetDataMessage(){
		/***/
		this._garrisonBean=null;
		ResGarrisonGetDataMessage.__super.call(this);
	}

	__class(ResGarrisonGetDataMessage,'net.message.garrison.ResGarrisonGetDataMessage',_super);
	var __proto=ResGarrisonGetDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._garrisonBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._garrisonBean=this.readBean(_buf,GarrisonBean);
	}

	__proto.getId=function(){
		return 1386;
	}

	/***/
	/***/
	__getset(0,__proto,'garrisonBean',function(){
		return this._garrisonBean;
		},function(value){
		this._garrisonBean=value;
	});

	return ResGarrisonGetDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求战斗结果
*/
//class net.message.kingwar.ResKingWarFightRewardMessage extends net.Message
var ResKingWarFightRewardMessage=(function(_super){
	function ResKingWarFightRewardMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResKingWarFightRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResKingWarFightRewardMessage,'net.message.kingwar.ResKingWarFightRewardMessage',_super);
	var __proto=ResKingWarFightRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,KingWarBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 493;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResKingWarFightRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求王者争霸排行榜
*/
//class net.message.kingwar.ResKingWarGetRankMessage extends net.Message
var ResKingWarGetRankMessage=(function(_super){
	function ResKingWarGetRankMessage(){
		/**1 本周 2 上周[1:本周][2:上周] */
		this._type=0;
		/**我自己 */
		this._myRank=null;
		/**自己的名次 */
		this._myRanking=0;
		ResKingWarGetRankMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResKingWarGetRankMessage,'net.message.kingwar.ResKingWarGetRankMessage',_super);
	var __proto=ResKingWarGetRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._myRank);
		this.writeInt(_buf,this._myRanking);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,KingWarRank);
		}
		this._myRank=this.readBean(_buf,KingWarRank);
		this._myRanking=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 499;
	}

	/**1 本周 2 上周[1:本周][2:上周] */
	/**1 本周 2 上周[1:本周][2:上周] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**自己的名次 */
	/**自己的名次 */
	__getset(0,__proto,'myRanking',function(){
		return this._myRanking;
		},function(value){
		this._myRanking=value;
	});

	/**排行榜对象 */
	/**排行榜对象 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**我自己 */
	/**我自己 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	return ResKingWarGetRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应邀请加入军团
*/
//class net.message.guild.ReqGuildInviteReplyMessage extends net.Message
var ReqGuildInviteReplyMessage=(function(_super){
	function ReqGuildInviteReplyMessage(){
		/**军团唯一ID */
		this._uid=null;
		/**是否同意 */
		this._agree=false;
		ReqGuildInviteReplyMessage.__super.call(this);
	}

	__class(ReqGuildInviteReplyMessage,'net.message.guild.ReqGuildInviteReplyMessage',_super);
	var __proto=ReqGuildInviteReplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBoolean(_buf,this._agree);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._agree=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1240;
	}

	/**军团唯一ID */
	/**军团唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**是否同意 */
	/**是否同意 */
	__getset(0,__proto,'agree',function(){
		return this._agree;
		},function(value){
		this._agree=value;
	});

	return ReqGuildInviteReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取关卡章节奖励错误
*/
//class net.message.dungeon.ResReceiveGuanQiaChapterPrizeErrorMessage extends net.Message
var ResReceiveGuanQiaChapterPrizeErrorMessage=(function(_super){
	function ResReceiveGuanQiaChapterPrizeErrorMessage(){
		/**1:条件不足;2:背包已满;3:不存在的配置;4:参数错误;5:已经领取过;*/
		this._error=0;
		ResReceiveGuanQiaChapterPrizeErrorMessage.__super.call(this);
	}

	__class(ResReceiveGuanQiaChapterPrizeErrorMessage,'net.message.dungeon.ResReceiveGuanQiaChapterPrizeErrorMessage',_super);
	var __proto=ResReceiveGuanQiaChapterPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 116;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveGuanQiaChapterPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童装备命格错误
*/
//class net.message.soulboy.ResSoulBoyDestinyErrorMessage extends net.Message
var ResSoulBoyDestinyErrorMessage=(function(_super){
	function ResSoulBoyDestinyErrorMessage(){
		/**1:材料不足;2:下标不存在;3:类型重复;4:等级上限;*/
		this._error=0;
		ResSoulBoyDestinyErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyDestinyErrorMessage,'net.message.soulboy.ResSoulBoyDestinyErrorMessage',_super);
	var __proto=ResSoulBoyDestinyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 462;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyDestinyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴装备
*/
//class net.message.equip.ResPutOnEquipMessage extends net.Message
var ResPutOnEquipMessage=(function(_super){
	function ResPutOnEquipMessage(){
		/**英雄ID */
		this._heroID=0;
		ResPutOnEquipMessage.__super.call(this);
		this._equip=[];
	}

	__class(ResPutOnEquipMessage,'net.message.equip.ResPutOnEquipMessage',_super);
	var __proto=ResPutOnEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._equip.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equip.length;++i_am_tmp_i){
			this._equip[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._equip=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equip[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 29;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**道具 */
	/**道具 */
	__getset(0,__proto,'equip',function(){
		return this._equip;
		},function(value){
		this._equip=value;
	});

	return ResPutOnEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装
*/
//class net.message.skin.ResActivateSkinMessage extends net.Message
var ResActivateSkinMessage=(function(_super){
	function ResActivateSkinMessage(){
		/**皮肤ID */
		this._skinID=0;
		/**英雄ID */
		this._heroID=0;
		ResActivateSkinMessage.__super.call(this);
	}

	__class(ResActivateSkinMessage,'net.message.skin.ResActivateSkinMessage',_super);
	var __proto=ResActivateSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 575;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ResActivateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童洗练技能覆盖错误
*/
//class net.message.soulboy.ResSoulBoyXilianReplaceErrorMessage extends net.Message
var ResSoulBoyXilianReplaceErrorMessage=(function(_super){
	function ResSoulBoyXilianReplaceErrorMessage(){
		/**1:灵童不存在;*/
		this._error=0;
		ResSoulBoyXilianReplaceErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyXilianReplaceErrorMessage,'net.message.soulboy.ResSoulBoyXilianReplaceErrorMessage',_super);
	var __proto=ResSoulBoyXilianReplaceErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 552;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyXilianReplaceErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看其他玩家信息错误
*/
//class net.message.fight.ResOtherPlayerFightTeamErrorMessage extends net.Message
var ResOtherPlayerFightTeamErrorMessage=(function(_super){
	function ResOtherPlayerFightTeamErrorMessage(){
		/**1:没有玩家;*/
		this._error=0;
		ResOtherPlayerFightTeamErrorMessage.__super.call(this);
	}

	__class(ResOtherPlayerFightTeamErrorMessage,'net.message.fight.ResOtherPlayerFightTeamErrorMessage',_super);
	var __proto=ResOtherPlayerFightTeamErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1443;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResOtherPlayerFightTeamErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全民boss挑战次数错误
*/
//class net.message.dungeon.ResBuyQuanMinBossTimesErrorMessage extends net.Message
var ResBuyQuanMinBossTimesErrorMessage=(function(_super){
	function ResBuyQuanMinBossTimesErrorMessage(){
		/**1:参数错误;2:没钱;*/
		this._error=0;
		ResBuyQuanMinBossTimesErrorMessage.__super.call(this);
	}

	__class(ResBuyQuanMinBossTimesErrorMessage,'net.message.dungeon.ResBuyQuanMinBossTimesErrorMessage',_super);
	var __proto=ResBuyQuanMinBossTimesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 221;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResBuyQuanMinBossTimesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者替换御魂错误
*/
//class net.message.soulboy.ResSoulBoyHunUpgradeErrorMessage extends net.Message
var ResSoulBoyHunUpgradeErrorMessage=(function(_super){
	function ResSoulBoyHunUpgradeErrorMessage(){
		/**1:灵童不存在;2:材料不足;3:没有找到替换的道具;*/
		this._error=0;
		ResSoulBoyHunUpgradeErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyHunUpgradeErrorMessage,'net.message.soulboy.ResSoulBoyHunUpgradeErrorMessage',_super);
	var __proto=ResSoulBoyHunUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 455;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyHunUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.general.ResGeneralUpgradeMessage extends net.Message
var ResGeneralUpgradeMessage=(function(_super){
	function ResGeneralUpgradeMessage(){
		/**对象 */
		this._generalBean=null;
		ResGeneralUpgradeMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeMessage,'net.message.general.ResGeneralUpgradeMessage',_super);
	var __proto=ResGeneralUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._generalBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._generalBean=this.readBean(_buf,GeneralBean);
	}

	__proto.getId=function(){
		return 850;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'generalBean',function(){
		return this._generalBean;
		},function(value){
		this._generalBean=value;
	});

	return ResGeneralUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值
*/
//class net.message.misc.ReqRechargeMessage extends net.Message
var ReqRechargeMessage=(function(_super){
	function ReqRechargeMessage(){
		/**充值ID */
		this._rechargeID=0;
		/**额外参数 */
		this._params=null;
		ReqRechargeMessage.__super.call(this);
	}

	__class(ReqRechargeMessage,'net.message.misc.ReqRechargeMessage',_super);
	var __proto=ReqRechargeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rechargeID);
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rechargeID=this.readInt(_buf);
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 719;
	}

	/**充值ID */
	/**充值ID */
	__getset(0,__proto,'rechargeID',function(){
		return this._rechargeID;
		},function(value){
		this._rechargeID=value;
	});

	/**额外参数 */
	/**额外参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ReqRechargeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征购买物品
*/
//class net.message.yuanzheng.ResYuanZhengBuyGoodsMessage extends net.Message
var ResYuanZhengBuyGoodsMessage=(function(_super){
	function ResYuanZhengBuyGoodsMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		ResYuanZhengBuyGoodsMessage.__super.call(this);
	}

	__class(ResYuanZhengBuyGoodsMessage,'net.message.yuanzheng.ResYuanZhengBuyGoodsMessage',_super);
	var __proto=ResYuanZhengBuyGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 287;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	return ResYuanZhengBuyGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备铸纹错误
*/
//class net.message.equip.ResEquipZhuWenErrorMessage extends net.Message
var ResEquipZhuWenErrorMessage=(function(_super){
	function ResEquipZhuWenErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResEquipZhuWenErrorMessage.__super.call(this);
	}

	__class(ResEquipZhuWenErrorMessage,'net.message.equip.ResEquipZhuWenErrorMessage',_super);
	var __proto=ResEquipZhuWenErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1534;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipZhuWenErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取藏宝图奖励错误
*/
//class net.message.pata.ResTakeCBTPrizeErrorMessage extends net.Message
var ResTakeCBTPrizeErrorMessage=(function(_super){
	function ResTakeCBTPrizeErrorMessage(){
		/**1:参数错误;2:奖励过;3:星不足;*/
		this._error=0;
		ResTakeCBTPrizeErrorMessage.__super.call(this);
	}

	__class(ResTakeCBTPrizeErrorMessage,'net.message.pata.ResTakeCBTPrizeErrorMessage',_super);
	var __proto=ResTakeCBTPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 244;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeCBTPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*改变归属错误
*/
//class net.message.dungeon.ResChangeBossOwnerErrorMessage extends net.Message
var ResChangeBossOwnerErrorMessage=(function(_super){
	function ResChangeBossOwnerErrorMessage(){
		/**1:不存在的配置;2:攻击无效 BOSS已死亡;*/
		this._error=0;
		ResChangeBossOwnerErrorMessage.__super.call(this);
	}

	__class(ResChangeBossOwnerErrorMessage,'net.message.dungeon.ResChangeBossOwnerErrorMessage',_super);
	var __proto=ResChangeBossOwnerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 783;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChangeBossOwnerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*参与拍卖
*/
//class net.message.auction.ReqAuctionContendMessage extends net.Message
var ReqAuctionContendMessage=(function(_super){
	function ReqAuctionContendMessage(){
		/**拍卖品ID */
		this._auctionID=null;
		/**-1 为一口价 其他为竞价额度 */
		this._cost=0;
		ReqAuctionContendMessage.__super.call(this);
	}

	__class(ReqAuctionContendMessage,'net.message.auction.ReqAuctionContendMessage',_super);
	var __proto=ReqAuctionContendMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._auctionID);
		this.writeInt(_buf,this._cost);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._auctionID=this.readLong(_buf);
		this._cost=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 571;
	}

	/**拍卖品ID */
	/**拍卖品ID */
	__getset(0,__proto,'auctionID',function(){
		return this._auctionID;
		},function(value){
		this._auctionID=value;
	});

	/**-1 为一口价 其他为竞价额度 */
	/**-1 为一口价 其他为竞价额度 */
	__getset(0,__proto,'cost',function(){
		return this._cost;
		},function(value){
		this._cost=value;
	});

	return ReqAuctionContendMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿领取错误
*/
//class net.message.activities.ResWeekendXuYuanGetErrorMessage extends net.Message
var ResWeekendXuYuanGetErrorMessage=(function(_super){
	function ResWeekendXuYuanGetErrorMessage(){
		/**1:活动未开启;2:背包已满;3:配置未找到;*/
		this._error=0;
		ResWeekendXuYuanGetErrorMessage.__super.call(this);
	}

	__class(ResWeekendXuYuanGetErrorMessage,'net.message.activities.ResWeekendXuYuanGetErrorMessage',_super);
	var __proto=ResWeekendXuYuanGetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1654;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWeekendXuYuanGetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值
*/
//class net.message.misc.ResGetAttributeInfoMessage extends net.Message
var ResGetAttributeInfoMessage=(function(_super){
	function ResGetAttributeInfoMessage(){
		/**要查询的玩家id */
		this._uid=null;
		ResGetAttributeInfoMessage.__super.call(this);
		this._attributeBeans=[];
	}

	__class(ResGetAttributeInfoMessage,'net.message.misc.ResGetAttributeInfoMessage',_super);
	var __proto=ResGetAttributeInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._attributeBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributeBeans.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributeBeans[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._attributeBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributeBeans[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	__proto.getId=function(){
		return 1683;
	}

	/**要查询的玩家id */
	/**要查询的玩家id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**要查询的玩家属性 */
	/**要查询的玩家属性 */
	__getset(0,__proto,'attributeBeans',function(){
		return this._attributeBeans;
		},function(value){
		this._attributeBeans=value;
	});

	return ResGetAttributeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新转生修为
*/
//class net.message.zhuansheng.ResUpdateZhuanShengExpMessage extends net.Message
var ResUpdateZhuanShengExpMessage=(function(_super){
	function ResUpdateZhuanShengExpMessage(){
		/**当前修为 */
		this._exp=null;
		/**今天可以降低等级次数 */
		this._reduceLevelTimes=0;
		/**今天可以使用高级丹次数 */
		this._gaojiTimes=0;
		/**今天可以使用超级丹次数 */
		this._chaojiTimes=0;
		ResUpdateZhuanShengExpMessage.__super.call(this);
	}

	__class(ResUpdateZhuanShengExpMessage,'net.message.zhuansheng.ResUpdateZhuanShengExpMessage',_super);
	var __proto=ResUpdateZhuanShengExpMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._reduceLevelTimes);
		this.writeInt(_buf,this._gaojiTimes);
		this.writeInt(_buf,this._chaojiTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._exp=this.readLong(_buf);
		this._reduceLevelTimes=this.readInt(_buf);
		this._gaojiTimes=this.readInt(_buf);
		this._chaojiTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 53;
	}

	/**当前修为 */
	/**当前修为 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**今天可以使用超级丹次数 */
	/**今天可以使用超级丹次数 */
	__getset(0,__proto,'chaojiTimes',function(){
		return this._chaojiTimes;
		},function(value){
		this._chaojiTimes=value;
	});

	/**今天可以使用高级丹次数 */
	/**今天可以使用高级丹次数 */
	__getset(0,__proto,'gaojiTimes',function(){
		return this._gaojiTimes;
		},function(value){
		this._gaojiTimes=value;
	});

	/**今天可以降低等级次数 */
	/**今天可以降低等级次数 */
	__getset(0,__proto,'reduceLevelTimes',function(){
		return this._reduceLevelTimes;
		},function(value){
		this._reduceLevelTimes=value;
	});

	return ResUpdateZhuanShengExpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新空城计活动状态
*/
//class net.message.emptycity.ResEmptyUpdateStateMessage extends net.Message
var ResEmptyUpdateStateMessage=(function(_super){
	function ResEmptyUpdateStateMessage(){
		/**空城计活动开启状态 */
		this._isOpen=false;
		/**当前攻城活动结束毫秒时间戳，如果未开启则为0 */
		this._activityEndTime=null;
		ResEmptyUpdateStateMessage.__super.call(this);
	}

	__class(ResEmptyUpdateStateMessage,'net.message.emptycity.ResEmptyUpdateStateMessage',_super);
	var __proto=ResEmptyUpdateStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isOpen);
		this.writeLong(_buf,this._activityEndTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isOpen=this.readBoolean(_buf);
		this._activityEndTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1086;
	}

	/**空城计活动开启状态 */
	/**空城计活动开启状态 */
	__getset(0,__proto,'isOpen',function(){
		return this._isOpen;
		},function(value){
		this._isOpen=value;
	});

	/**当前攻城活动结束毫秒时间戳，如果未开启则为0 */
	/**当前攻城活动结束毫秒时间戳，如果未开启则为0 */
	__getset(0,__proto,'activityEndTime',function(){
		return this._activityEndTime;
		},function(value){
		this._activityEndTime=value;
	});

	return ResEmptyUpdateStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始赤壁任务错误
*/
//class net.message.chibi.ResChibiStartTaskErrorMessage extends net.Message
var ResChibiStartTaskErrorMessage=(function(_super){
	function ResChibiStartTaskErrorMessage(){
		/**1:任务不存在;2:英雄忙碌或者不存在;3:队列已满;4:没有可用的次数了;*/
		this._error=0;
		ResChibiStartTaskErrorMessage.__super.call(this);
	}

	__class(ResChibiStartTaskErrorMessage,'net.message.chibi.ResChibiStartTaskErrorMessage',_super);
	var __proto=ResChibiStartTaskErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 393;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChibiStartTaskErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*接受或者拒绝求婚
*/
//class net.message.marriage.ResMarriageOperationProposeMessage extends net.Message
var ResMarriageOperationProposeMessage=(function(_super){
	function ResMarriageOperationProposeMessage(){
		/**求婚对象UID */
		this._uid=null;
		/**0拒绝 1接受 */
		this._type=0;
		ResMarriageOperationProposeMessage.__super.call(this);
	}

	__class(ResMarriageOperationProposeMessage,'net.message.marriage.ResMarriageOperationProposeMessage',_super);
	var __proto=ResMarriageOperationProposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 536;
	}

	/**0拒绝 1接受 */
	/**0拒绝 1接受 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**求婚对象UID */
	/**求婚对象UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResMarriageOperationProposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新门对象
*/
//class net.message.garrison.ResGarrisonUpdateDoorMessage extends net.Message
var ResGarrisonUpdateDoorMessage=(function(_super){
	function ResGarrisonUpdateDoorMessage(){
		/**门对象 */
		this._door=null;
		ResGarrisonUpdateDoorMessage.__super.call(this);
	}

	__class(ResGarrisonUpdateDoorMessage,'net.message.garrison.ResGarrisonUpdateDoorMessage',_super);
	var __proto=ResGarrisonUpdateDoorMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._door);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._door=this.readBean(_buf,GarrisonDoorBean);
	}

	__proto.getId=function(){
		return 1047;
	}

	/**门对象 */
	/**门对象 */
	__getset(0,__proto,'door',function(){
		return this._door;
		},function(value){
		this._door=value;
	});

	return ResGarrisonUpdateDoorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派值更新
*/
//class net.message.guild.ResGuildValueUpdateMessage extends net.Message
var ResGuildValueUpdateMessage=(function(_super){
	function ResGuildValueUpdateMessage(){
		/**类型[1:钱][2:庆功值] */
		this._type=0;
		/**值 */
		this._value=0;
		ResGuildValueUpdateMessage.__super.call(this);
	}

	__class(ResGuildValueUpdateMessage,'net.message.guild.ResGuildValueUpdateMessage',_super);
	var __proto=ResGuildValueUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._value=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1250;
	}

	/**类型[1:钱][2:庆功值] */
	/**类型[1:钱][2:庆功值] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**值 */
	/**值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResGuildValueUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*捕获宠物
*/
//class net.message.pet.ResTameWildPetMessage extends net.Message
var ResTameWildPetMessage=(function(_super){
	function ResTameWildPetMessage(){
		ResTameWildPetMessage.__super.call(this);
		this._reawrd=[];
	}

	__class(ResTameWildPetMessage,'net.message.pet.ResTameWildPetMessage',_super);
	var __proto=ResTameWildPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reawrd.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reawrd.length;++i_am_tmp_i){
			this._reawrd[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._reawrd=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reawrd[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 192;
	}

	/**捕获的物品 */
	/**捕获的物品 */
	__getset(0,__proto,'reawrd',function(){
		return this._reawrd;
		},function(value){
		this._reawrd=value;
	});

	return ResTameWildPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(野外BOSS)
*/
//class net.message.dungeon.ReqReceiveYeWaiBossDungeonPrizeMessage extends net.Message
var ReqReceiveYeWaiBossDungeonPrizeMessage=(function(_super){
	function ReqReceiveYeWaiBossDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		ReqReceiveYeWaiBossDungeonPrizeMessage.__super.call(this);
	}

	__class(ReqReceiveYeWaiBossDungeonPrizeMessage,'net.message.dungeon.ReqReceiveYeWaiBossDungeonPrizeMessage',_super);
	var __proto=ReqReceiveYeWaiBossDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 227;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	return ReqReceiveYeWaiBossDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新拉取战斗日志
*/
//class net.message.gb.ResLegionBattleUpdateRecordsMessage extends net.Message
var ResLegionBattleUpdateRecordsMessage=(function(_super){
	function ResLegionBattleUpdateRecordsMessage(){
		ResLegionBattleUpdateRecordsMessage.__super.call(this);
		this._records=[];
	}

	__class(ResLegionBattleUpdateRecordsMessage,'net.message.gb.ResLegionBattleUpdateRecordsMessage',_super);
	var __proto=ResLegionBattleUpdateRecordsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._records.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._records.length;++i_am_tmp_i){
			this._records[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._records=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._records[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleAttackThroneRecord);
		}
	}

	__proto.getId=function(){
		return 1369;
	}

	/**战斗日志 */
	/**战斗日志 */
	__getset(0,__proto,'records',function(){
		return this._records;
		},function(value){
		this._records=value;
	});

	return ResLegionBattleUpdateRecordsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新时装
*/
//class net.message.skin.ResUpdateSkinMessage extends net.Message
var ResUpdateSkinMessage=(function(_super){
	function ResUpdateSkinMessage(){
		/**英雄id */
		this._heroId=0;
		ResUpdateSkinMessage.__super.call(this);
		this._skinList=[];
		this._activateSkinList=[];
		this._overTimeSKin=[];
	}

	__class(ResUpdateSkinMessage,'net.message.skin.ResUpdateSkinMessage',_super);
	var __proto=ResUpdateSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroId);
		this.writeInt(_buf,this._skinList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skinList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._skinList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._activateSkinList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._activateSkinList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._activateSkinList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._overTimeSKin.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._overTimeSKin.length;++i_am_tmp_i){
			this._overTimeSKin[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroId=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skinList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skinList[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._activateSkinList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._activateSkinList[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._overTimeSKin=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._overTimeSKin[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 1178;
	}

	/**英雄id */
	/**英雄id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	/**各部位穿戴时装 */
	/**各部位穿戴时装 */
	__getset(0,__proto,'skinList',function(){
		return this._skinList;
		},function(value){
		this._skinList=value;
	});

	/**已激活时装列表 */
	/**已激活时装列表 */
	__getset(0,__proto,'activateSkinList',function(){
		return this._activateSkinList;
		},function(value){
		this._activateSkinList=value;
	});

	/**失效时间 */
	/**失效时间 */
	__getset(0,__proto,'overTimeSKin',function(){
		return this._overTimeSKin;
		},function(value){
		this._overTimeSKin=value;
	});

	return ResUpdateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活错误
*/
//class net.message.totem.ResTotemActiveErrorMessage extends net.Message
var ResTotemActiveErrorMessage=(function(_super){
	function ResTotemActiveErrorMessage(){
		/**1:不存在;2:材料不足;3:配置错误;4:已激活;*/
		this._error=0;
		ResTotemActiveErrorMessage.__super.call(this);
	}

	__class(ResTotemActiveErrorMessage,'net.message.totem.ResTotemActiveErrorMessage',_super);
	var __proto=ResTotemActiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 859;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTotemActiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*其他人加入军团首领
*/
//class net.message.worldboss.ResWorldBossOtherJoinMessage extends net.Message
var ResWorldBossOtherJoinMessage=(function(_super){
	function ResWorldBossOtherJoinMessage(){
		/**加入的玩家 可能正处于死亡状态 */
		this._self=null;
		ResWorldBossOtherJoinMessage.__super.call(this);
	}

	__class(ResWorldBossOtherJoinMessage,'net.message.worldboss.ResWorldBossOtherJoinMessage',_super);
	var __proto=ResWorldBossOtherJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._self);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._self=this.readBean(_buf,WorldBossBean);
	}

	__proto.getId=function(){
		return 503;
	}

	/**加入的玩家 可能正处于死亡状态 */
	/**加入的玩家 可能正处于死亡状态 */
	__getset(0,__proto,'self',function(){
		return this._self;
		},function(value){
		this._self=value;
	});

	return ResWorldBossOtherJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送聊天信息
*/
//class net.message.chat.ReqChatMessage extends net.Message
var ReqChatMessage=(function(_super){
	function ReqChatMessage(){
		/**频道 */
		this._channel=0;
		/**私聊对象ID */
		this._target=null;
		/**内容 */
		this._content=null;
		ReqChatMessage.__super.call(this);
	}

	__class(ReqChatMessage,'net.message.chat.ReqChatMessage',_super);
	var __proto=ReqChatMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._channel);
		this.writeLong(_buf,this._target);
		this.writeString(_buf,this._content);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._channel=this.readInt(_buf);
		this._target=this.readLong(_buf);
		this._content=this.readString(_buf);
	}

	__proto.getId=function(){
		return 688;
	}

	/**频道 */
	/**频道 */
	__getset(0,__proto,'channel',function(){
		return this._channel;
		},function(value){
		this._channel=value;
	});

	/**私聊对象ID */
	/**私聊对象ID */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**内容 */
	/**内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	return ReqChatMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖奖励
*/
//class net.message.escort.ResEscortRobberyRewardMessage extends net.Message
var ResEscortRobberyRewardMessage=(function(_super){
	function ResEscortRobberyRewardMessage(){
		/**战斗数据 */
		this._data=null;
		ResEscortRobberyRewardMessage.__super.call(this);
	}

	__class(ResEscortRobberyRewardMessage,'net.message.escort.ResEscortRobberyRewardMessage',_super);
	var __proto=ResEscortRobberyRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 346;
	}

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResEscortRobberyRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*替换/装备战纹错误
*/
//class net.message.zhanwen.ResReplaceZhanwenErrorMessage extends net.Message
var ResReplaceZhanwenErrorMessage=(function(_super){
	function ResReplaceZhanwenErrorMessage(){
		/**1:参数错误;2:英雄不存在;3:道具不存在;4:背包满;*/
		this._error=0;
		ResReplaceZhanwenErrorMessage.__super.call(this);
	}

	__class(ResReplaceZhanwenErrorMessage,'net.message.zhanwen.ResReplaceZhanwenErrorMessage',_super);
	var __proto=ResReplaceZhanwenErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 99;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReplaceZhanwenErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家已关注公众号错误
*/
//class net.message.misc.ResZhiJianFollowSucErrorMessage extends net.Message
var ResZhiJianFollowSucErrorMessage=(function(_super){
	function ResZhiJianFollowSucErrorMessage(){
		/**1:未知错误;2:次数已达到上限;*/
		this._error=0;
		ResZhiJianFollowSucErrorMessage.__super.call(this);
	}

	__class(ResZhiJianFollowSucErrorMessage,'net.message.misc.ResZhiJianFollowSucErrorMessage',_super);
	var __proto=ResZhiJianFollowSucErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1558;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResZhiJianFollowSucErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*心跳
*/
//class net.message.misc.ReqHeartBeatMessage extends net.Message
var ReqHeartBeatMessage=(function(_super){
	function ReqHeartBeatMessage(){
		/**前端unix时间戳 */
		this._time=null;
		ReqHeartBeatMessage.__super.call(this);
	}

	__class(ReqHeartBeatMessage,'net.message.misc.ReqHeartBeatMessage',_super);
	var __proto=ReqHeartBeatMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 8;
	}

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ReqHeartBeatMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新锻造大师等级
*/
//class net.message.fit.ResFitUpdateMasterMessage extends net.Message
var ResFitUpdateMasterMessage=(function(_super){
	function ResFitUpdateMasterMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**等级 */
		this._lv=0;
		ResFitUpdateMasterMessage.__super.call(this);
	}

	__class(ResFitUpdateMasterMessage,'net.message.fit.ResFitUpdateMasterMessage',_super);
	var __proto=ResFitUpdateMasterMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1152;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResFitUpdateMasterMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战试炼之塔
*/
//class net.message.towerFight.ResTowerFightMessage extends net.Message
var ResTowerFightMessage=(function(_super){
	function ResTowerFightMessage(){
		/**是否成功 */
		this._isSuccess=0;
		/**战报 */
		this._fightBean=null;
		ResTowerFightMessage.__super.call(this);
		this._itemBeanList=[];
	}

	__class(ResTowerFightMessage,'net.message.towerFight.ResTowerFightMessage',_super);
	var __proto=ResTowerFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._isSuccess);
		this.writeBean(_buf,this._fightBean);
		this.writeInt(_buf,this._itemBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBeanList.length;++i_am_tmp_i){
			this._itemBeanList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isSuccess=this.readInt(_buf);
		this._fightBean=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._itemBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBeanList[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1614;
	}

	/**获得的道具列表 */
	/**获得的道具列表 */
	__getset(0,__proto,'itemBeanList',function(){
		return this._itemBeanList;
		},function(value){
		this._itemBeanList=value;
	});

	/**是否成功 */
	/**是否成功 */
	__getset(0,__proto,'isSuccess',function(){
		return this._isSuccess;
		},function(value){
		this._isSuccess=value;
	});

	/**战报 */
	/**战报 */
	__getset(0,__proto,'fightBean',function(){
		return this._fightBean;
		},function(value){
		this._fightBean=value;
	});

	return ResTowerFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*满员自动开战和多少秒后自动 的状态修改
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomCloseFullMessage extends net.Message
var ResTeamDuplicateRoomCloseFullMessage=(function(_super){
	function ResTeamDuplicateRoomCloseFullMessage(){
		/**1 满员自动开 2 N秒后自动开 */
		this._type=0;
		/**现在的状态 0 未勾选 1 勾选 */
		this._state=0;
		ResTeamDuplicateRoomCloseFullMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomCloseFullMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomCloseFullMessage',_super);
	var __proto=ResTeamDuplicateRoomCloseFullMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._state);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._state=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 427;
	}

	/**1 满员自动开 2 N秒后自动开 */
	/**1 满员自动开 2 N秒后自动开 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**现在的状态 0 未勾选 1 勾选 */
	/**现在的状态 0 未勾选 1 勾选 */
	__getset(0,__proto,'state',function(){
		return this._state;
		},function(value){
		this._state=value;
	});

	return ResTeamDuplicateRoomCloseFullMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(本地)
*/
//class net.message.login.ResLoginForTypeMessage extends net.Message
var ResLoginForTypeMessage=(function(_super){
	function ResLoginForTypeMessage(){
		/**初始化信息 */
		this._init=null;
		/**前端unix时间戳 */
		this._ctime=null;
		/**后端unix时间戳 */
		this._stime=null;
		ResLoginForTypeMessage.__super.call(this);
	}

	__class(ResLoginForTypeMessage,'net.message.login.ResLoginForTypeMessage',_super);
	var __proto=ResLoginForTypeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._init);
		this.writeLong(_buf,this._ctime);
		this.writeLong(_buf,this._stime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._init=this.readBean(_buf,InitBean);
		this._ctime=this.readLong(_buf);
		this._stime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 796;
	}

	/**后端unix时间戳 */
	/**后端unix时间戳 */
	__getset(0,__proto,'stime',function(){
		return this._stime;
		},function(value){
		this._stime=value;
	});

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'ctime',function(){
		return this._ctime;
		},function(value){
		this._ctime=value;
	});

	/**初始化信息 */
	/**初始化信息 */
	__getset(0,__proto,'init',function(){
		return this._init;
		},function(value){
		this._init=value;
	});

	return ResLoginForTypeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取全服boss信息错误
*/
//class net.message.quanfuboss.ResQuanFuBossGetInfoErrorMessage extends net.Message
var ResQuanFuBossGetInfoErrorMessage=(function(_super){
	function ResQuanFuBossGetInfoErrorMessage(){
		/**1:参数错误;2:没有军团;3:没开;*/
		this._error=0;
		ResQuanFuBossGetInfoErrorMessage.__super.call(this);
	}

	__class(ResQuanFuBossGetInfoErrorMessage,'net.message.quanfuboss.ResQuanFuBossGetInfoErrorMessage',_super);
	var __proto=ResQuanFuBossGetInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1109;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQuanFuBossGetInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击
*/
//class net.message.nineHeavy.ReqNineHeavyPlayerAttackMessage extends net.Message
var ReqNineHeavyPlayerAttackMessage=(function(_super){
	function ReqNineHeavyPlayerAttackMessage(){
		/**攻击的类型 1 玩家 2 怪物 */
		this._type=0;
		/**攻击的目标ID */
		this._uid=null;
		ReqNineHeavyPlayerAttackMessage.__super.call(this);
	}

	__class(ReqNineHeavyPlayerAttackMessage,'net.message.nineHeavy.ReqNineHeavyPlayerAttackMessage',_super);
	var __proto=ReqNineHeavyPlayerAttackMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 375;
	}

	/**攻击的目标ID */
	/**攻击的目标ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**攻击的类型 1 玩家 2 怪物 */
	/**攻击的类型 1 玩家 2 怪物 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqNineHeavyPlayerAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励
*/
//class net.message.escort.ResEscortRevengeRewardMessage extends net.Message
var ResEscortRevengeRewardMessage=(function(_super){
	function ResEscortRevengeRewardMessage(){
		/**成功返回下标 */
		this._index=0;
		/**数据 */
		this._data=null;
		ResEscortRevengeRewardMessage.__super.call(this);
	}

	__class(ResEscortRevengeRewardMessage,'net.message.escort.ResEscortRevengeRewardMessage',_super);
	var __proto=ResEscortRevengeRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 353;
	}

	/**成功返回下标 */
	/**成功返回下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResEscortRevengeRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供
*/
//class net.message.gongCe.ReqQinWangTeGongMessage extends net.Message
var ReqQinWangTeGongMessage=(function(_super){
	function ReqQinWangTeGongMessage(){
		/**领取奖励的id */
		this._id=0;
		ReqQinWangTeGongMessage.__super.call(this);
	}

	__class(ReqQinWangTeGongMessage,'net.message.gongCe.ReqQinWangTeGongMessage',_super);
	var __proto=ReqQinWangTeGongMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1669;
	}

	/**领取奖励的id */
	/**领取奖励的id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqQinWangTeGongMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(全民BOSS)
*/
//class net.message.dungeon.ReqReceiveQuanMinBossDungeonPrizeMessage extends net.Message
var ReqReceiveQuanMinBossDungeonPrizeMessage=(function(_super){
	function ReqReceiveQuanMinBossDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**次数不足时是否复活挑战 */
		this._relive=false;
		ReqReceiveQuanMinBossDungeonPrizeMessage.__super.call(this);
	}

	__class(ReqReceiveQuanMinBossDungeonPrizeMessage,'net.message.dungeon.ReqReceiveQuanMinBossDungeonPrizeMessage',_super);
	var __proto=ReqReceiveQuanMinBossDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeBoolean(_buf,this._relive);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._relive=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 216;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**次数不足时是否复活挑战 */
	/**次数不足时是否复活挑战 */
	__getset(0,__proto,'relive',function(){
		return this._relive;
		},function(value){
		this._relive=value;
	});

	return ReqReceiveQuanMinBossDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入全民BOSS
*/
//class net.message.dungeon.ReqQuanMinBossJoinMessage extends net.Message
var ReqQuanMinBossJoinMessage=(function(_super){
	function ReqQuanMinBossJoinMessage(){
		/**副本id */
		this._dungeonId=0;
		ReqQuanMinBossJoinMessage.__super.call(this);
	}

	__class(ReqQuanMinBossJoinMessage,'net.message.dungeon.ReqQuanMinBossJoinMessage',_super);
	var __proto=ReqQuanMinBossJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1468;
	}

	/**副本id */
	/**副本id */
	__getset(0,__proto,'dungeonId',function(){
		return this._dungeonId;
		},function(value){
		this._dungeonId=value;
	});

	return ReqQuanMinBossJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知BOSS重生
*/
//class net.message.worldboss.ResWorldBossRebornMessage extends net.Message
var ResWorldBossRebornMessage=(function(_super){
	function ResWorldBossRebornMessage(){
		/**BOSSID */
		this._id=0;
		/**BOSSHP */
		this._hp=null;
		/**血量上限 */
		this._bossHpMax=null;
		/**BOSSSHIELD */
		this._shield=null;
		/**BOSS护盾上限 */
		this._bossShieldMax=null;
		ResWorldBossRebornMessage.__super.call(this);
	}

	__class(ResWorldBossRebornMessage,'net.message.worldboss.ResWorldBossRebornMessage',_super);
	var __proto=ResWorldBossRebornMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._bossHpMax);
		this.writeLong(_buf,this._shield);
		this.writeLong(_buf,this._bossShieldMax);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._hp=this.readLong(_buf);
		this._bossHpMax=this.readLong(_buf);
		this._shield=this.readLong(_buf);
		this._bossShieldMax=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 516;
	}

	/**BOSSSHIELD */
	/**BOSSSHIELD */
	__getset(0,__proto,'shield',function(){
		return this._shield;
		},function(value){
		this._shield=value;
	});

	/**BOSSID */
	/**BOSSID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**BOSSHP */
	/**BOSSHP */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'bossHpMax',function(){
		return this._bossHpMax;
		},function(value){
		this._bossHpMax=value;
	});

	/**BOSS护盾上限 */
	/**BOSS护盾上限 */
	__getset(0,__proto,'bossShieldMax',function(){
		return this._bossShieldMax;
		},function(value){
		this._bossShieldMax=value;
	});

	return ResWorldBossRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求扫荡
*/
//class net.message.teamDuplicate.ReqTeamDuplicateSweepAwayMessage extends net.Message
var ReqTeamDuplicateSweepAwayMessage=(function(_super){
	function ReqTeamDuplicateSweepAwayMessage(){
		ReqTeamDuplicateSweepAwayMessage.__super.call(this);
		this._qid=[];
	}

	__class(ReqTeamDuplicateSweepAwayMessage,'net.message.teamDuplicate.ReqTeamDuplicateSweepAwayMessage',_super);
	var __proto=ReqTeamDuplicateSweepAwayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 438;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	return ReqTeamDuplicateSweepAwayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用武将盒子
*/
//class net.message.packet.ResUsePetBoxMessage extends net.Message
var ResUsePetBoxMessage=(function(_super){
	function ResUsePetBoxMessage(){
		ResUsePetBoxMessage.__super.call(this);
		this._itemList=[];
	}

	__class(ResUsePetBoxMessage,'net.message.packet.ResUsePetBoxMessage',_super);
	var __proto=ResUsePetBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemList.length;++i_am_tmp_i){
			this._itemList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._itemList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemList[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1589;
	}

	/**获得的道具 */
	/**获得的道具 */
	__getset(0,__proto,'itemList',function(){
		return this._itemList;
		},function(value){
		this._itemList=value;
	});

	return ResUsePetBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*找回官位昨日奖励
*/
//class net.message.official.ReqReceiveOfficialYesterdayRewardMessage extends net.Message
var ReqReceiveOfficialYesterdayRewardMessage=(function(_super){
	function ReqReceiveOfficialYesterdayRewardMessage(){
		/**类型 1 为资源 2为历练 */
		this._type=0;
		/**项目的ID */
		this._id=0;
		/**找回的次数 */
		this._num=0;
		ReqReceiveOfficialYesterdayRewardMessage.__super.call(this);
	}

	__class(ReqReceiveOfficialYesterdayRewardMessage,'net.message.official.ReqReceiveOfficialYesterdayRewardMessage',_super);
	var __proto=ReqReceiveOfficialYesterdayRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 325;
	}

	/**类型 1 为资源 2为历练 */
	/**类型 1 为资源 2为历练 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**项目的ID */
	/**项目的ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**找回的次数 */
	/**找回的次数 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqReceiveOfficialYesterdayRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求付费刷新兑换商品
*/
//class net.message.legion.ReqLegionFlushExchangeItemMessageMessage extends net.Message
var ReqLegionFlushExchangeItemMessageMessage=(function(_super){
	function ReqLegionFlushExchangeItemMessageMessage(){
		ReqLegionFlushExchangeItemMessageMessage.__super.call(this);;
	}

	__class(ReqLegionFlushExchangeItemMessageMessage,'net.message.legion.ReqLegionFlushExchangeItemMessageMessage',_super);
	var __proto=ReqLegionFlushExchangeItemMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 680;
	}

	return ReqLegionFlushExchangeItemMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取福利奖励错误
*/
//class net.message.welfare.ResGetFuLiRewardErrorMessage extends net.Message
var ResGetFuLiRewardErrorMessage=(function(_super){
	function ResGetFuLiRewardErrorMessage(){
		/**1:配置错误;2:领取失败;3:条件不足;4:背包已满;*/
		this._error=0;
		ResGetFuLiRewardErrorMessage.__super.call(this);
	}

	__class(ResGetFuLiRewardErrorMessage,'net.message.welfare.ResGetFuLiRewardErrorMessage',_super);
	var __proto=ResGetFuLiRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 742;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetFuLiRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供
*/
//class net.message.gongCe.ReqSelectQingWangRewardMessage extends net.Message
var ReqSelectQingWangRewardMessage=(function(_super){
	function ReqSelectQingWangRewardMessage(){
		/**id */
		this._id=0;
		/**奖励的索引 */
		this._index=0;
		ReqSelectQingWangRewardMessage.__super.call(this);
	}

	__class(ReqSelectQingWangRewardMessage,'net.message.gongCe.ReqSelectQingWangRewardMessage',_super);
	var __proto=ReqSelectQingWangRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1672;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**奖励的索引 */
	/**奖励的索引 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqSelectQingWangRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战师门任务
*/
//class net.message.shimen.ReqChallengeShiMenMessage extends net.Message
var ReqChallengeShiMenMessage=(function(_super){
	function ReqChallengeShiMenMessage(){
		ReqChallengeShiMenMessage.__super.call(this);;
	}

	__class(ReqChallengeShiMenMessage,'net.message.shimen.ReqChallengeShiMenMessage',_super);
	var __proto=ReqChallengeShiMenMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 133;
	}

	return ReqChallengeShiMenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗结果
*/
//class net.message.nineHeavy.ResNineHeavyFightResultMessage extends net.Message
var ResNineHeavyFightResultMessage=(function(_super){
	function ResNineHeavyFightResultMessage(){
		/**对方name */
		this._targetName=null;
		/**本次战斗获得积分 */
		this._score=0;
		/**服务器序号 */
		this._sno=0;
		ResNineHeavyFightResultMessage.__super.call(this);
	}

	__class(ResNineHeavyFightResultMessage,'net.message.nineHeavy.ResNineHeavyFightResultMessage',_super);
	var __proto=ResNineHeavyFightResultMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._targetName);
		this.writeInt(_buf,this._score);
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._targetName=this.readString(_buf);
		this._score=this.readInt(_buf);
		this._sno=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1437;
	}

	/**对方name */
	/**对方name */
	__getset(0,__proto,'targetName',function(){
		return this._targetName;
		},function(value){
		this._targetName=value;
	});

	/**本次战斗获得积分 */
	/**本次战斗获得积分 */
	__getset(0,__proto,'score',function(){
		return this._score;
		},function(value){
		this._score=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return ResNineHeavyFightResultMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取伴侣外形
*/
//class net.message.marriage.ReqMarriageGetTeammateSkinMessage extends net.Message
var ReqMarriageGetTeammateSkinMessage=(function(_super){
	function ReqMarriageGetTeammateSkinMessage(){
		ReqMarriageGetTeammateSkinMessage.__super.call(this);;
	}

	__class(ReqMarriageGetTeammateSkinMessage,'net.message.marriage.ReqMarriageGetTeammateSkinMessage',_super);
	var __proto=ReqMarriageGetTeammateSkinMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 539;
	}

	return ReqMarriageGetTeammateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新领奖权
*/
//class net.message.garrison.ResGarrisonUpdateRewardMessage extends net.Message
var ResGarrisonUpdateRewardMessage=(function(_super){
	function ResGarrisonUpdateRewardMessage(){
		/**是否可以领奖 个人 */
		this._singleReward=false;
		/**是否可以领奖 帮会 */
		this._legionReward=false;
		ResGarrisonUpdateRewardMessage.__super.call(this);
	}

	__class(ResGarrisonUpdateRewardMessage,'net.message.garrison.ResGarrisonUpdateRewardMessage',_super);
	var __proto=ResGarrisonUpdateRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._singleReward);
		this.writeBoolean(_buf,this._legionReward);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._singleReward=this.readBoolean(_buf);
		this._legionReward=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1073;
	}

	/**是否可以领奖 个人 */
	/**是否可以领奖 个人 */
	__getset(0,__proto,'singleReward',function(){
		return this._singleReward;
		},function(value){
		this._singleReward=value;
	});

	/**是否可以领奖 帮会 */
	/**是否可以领奖 帮会 */
	__getset(0,__proto,'legionReward',function(){
		return this._legionReward;
		},function(value){
		this._legionReward=value;
	});

	return ResGarrisonUpdateRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取战斗后的奖励
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomRewardMessage extends net.Message
var ResTeamDuplicateRoomRewardMessage=(function(_super){
	function ResTeamDuplicateRoomRewardMessage(){
		/**副本ID */
		this._qid=0;
		ResTeamDuplicateRoomRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResTeamDuplicateRoomRewardMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomRewardMessage',_super);
	var __proto=ResTeamDuplicateRoomRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 433;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResTeamDuplicateRoomRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战挂机关卡(领奖)
*/
//class net.message.dungeon.ReqChallengeGuanQiaMessage extends net.Message
var ReqChallengeGuanQiaMessage=(function(_super){
	function ReqChallengeGuanQiaMessage(){
		ReqChallengeGuanQiaMessage.__super.call(this);;
	}

	__class(ReqChallengeGuanQiaMessage,'net.message.dungeon.ReqChallengeGuanQiaMessage',_super);
	var __proto=ReqChallengeGuanQiaMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 111;
	}

	return ReqChallengeGuanQiaMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者激活御灵
*/
//class net.message.soulboy.ResSoulBoyLingUpgradeMessage extends net.Message
var ResSoulBoyLingUpgradeMessage=(function(_super){
	function ResSoulBoyLingUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		/**御灵下标 */
		this._index=0;
		/**御灵等级 */
		this._lv=0;
		ResSoulBoyLingUpgradeMessage.__super.call(this);
	}

	__class(ResSoulBoyLingUpgradeMessage,'net.message.soulboy.ResSoulBoyLingUpgradeMessage',_super);
	var __proto=ResSoulBoyLingUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 451;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**御灵下标 */
	/**御灵下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**御灵等级 */
	/**御灵等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResSoulBoyLingUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*活动转盘错误
*/
//class net.message.activities.ResActTurntableErrorMessage extends net.Message
var ResActTurntableErrorMessage=(function(_super){
	function ResActTurntableErrorMessage(){
		/**1:活动未开启;2:次数不足;3:已抽完;4:背包空间不足;5:配置为找到;*/
		this._error=0;
		ResActTurntableErrorMessage.__super.call(this);
	}

	__class(ResActTurntableErrorMessage,'net.message.activities.ResActTurntableErrorMessage',_super);
	var __proto=ResActTurntableErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1607;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResActTurntableErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买寻宝特权错误
*/
//class net.message.gongCe.ResBuyHuntTreasureErrorMessage extends net.Message
var ResBuyHuntTreasureErrorMessage=(function(_super){
	function ResBuyHuntTreasureErrorMessage(){
		/**1:你已经购买过了;2:没钱;*/
		this._error=0;
		ResBuyHuntTreasureErrorMessage.__super.call(this);
	}

	__class(ResBuyHuntTreasureErrorMessage,'net.message.gongCe.ResBuyHuntTreasureErrorMessage',_super);
	var __proto=ResBuyHuntTreasureErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1633;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResBuyHuntTreasureErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取VIP礼包
*/
//class net.message.vip.ReqGetVipRewardMessage extends net.Message
var ReqGetVipRewardMessage=(function(_super){
	function ReqGetVipRewardMessage(){
		/**领取奖励等级 */
		this._lv=0;
		/**是否免费 */
		this._isFree=0;
		ReqGetVipRewardMessage.__super.call(this);
	}

	__class(ReqGetVipRewardMessage,'net.message.vip.ReqGetVipRewardMessage',_super);
	var __proto=ReqGetVipRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._isFree);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._isFree=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 768;
	}

	/**领取奖励等级 */
	/**领取奖励等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**是否免费 */
	/**是否免费 */
	__getset(0,__proto,'isFree',function(){
		return this._isFree;
		},function(value){
		this._isFree=value;
	});

	return ReqGetVipRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改配置
*/
//class net.message.setting.ReqSettingMessage extends net.Message
var ReqSettingMessage=(function(_super){
	function ReqSettingMessage(){
		/**分层信息 */
		this._bean=null;
		ReqSettingMessage.__super.call(this);
	}

	__class(ReqSettingMessage,'net.message.setting.ReqSettingMessage',_super);
	var __proto=ReqSettingMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,SettingBean);
	}

	__proto.getId=function(){
		return 310;
	}

	/**分层信息 */
	/**分层信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ReqSettingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刀币翻倍活动同步玩家最后投入刀币的位置
*/
//class net.message.activities.ResGoldDoubleActUpdateMessage extends net.Message
var ResGoldDoubleActUpdateMessage=(function(_super){
	function ResGoldDoubleActUpdateMessage(){
		/**最后投入刀币的位置 */
		this._lastCfgIndex=0;
		ResGoldDoubleActUpdateMessage.__super.call(this);
	}

	__class(ResGoldDoubleActUpdateMessage,'net.message.activities.ResGoldDoubleActUpdateMessage',_super);
	var __proto=ResGoldDoubleActUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lastCfgIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lastCfgIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1551;
	}

	/**最后投入刀币的位置 */
	/**最后投入刀币的位置 */
	__getset(0,__proto,'lastCfgIndex',function(){
		return this._lastCfgIndex;
		},function(value){
		this._lastCfgIndex=value;
	});

	return ResGoldDoubleActUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店商品信息
*/
//class net.message.shop.ResUpdateShopInfoMessage extends net.Message
var ResUpdateShopInfoMessage=(function(_super){
	function ResUpdateShopInfoMessage(){
		ResUpdateShopInfoMessage.__super.call(this);
		this._shops=[];
	}

	__class(ResUpdateShopInfoMessage,'net.message.shop.ResUpdateShopInfoMessage',_super);
	var __proto=ResUpdateShopInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shops.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._shops.length;++i_am_tmp_i){
			this._shops[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._shops=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._shops[i_am_tmp_i]=this.readBeanInList(_buf,ShopBean);
		}
	}

	__proto.getId=function(){
		return 60;
	}

	/**所有商店 */
	/**所有商店 */
	__getset(0,__proto,'shops',function(){
		return this._shops;
		},function(value){
		this._shops=value;
	});

	return ResUpdateShopInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到错误
*/
//class net.message.legion.ResLegionSignMessageErrorMessage extends net.Message
var ResLegionSignMessageErrorMessage=(function(_super){
	function ResLegionSignMessageErrorMessage(){
		/**1:你木有军团;2:已经签过了;3:穷;*/
		this._error=0;
		ResLegionSignMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionSignMessageErrorMessage,'net.message.legion.ResLegionSignMessageErrorMessage',_super);
	var __proto=ResLegionSignMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 643;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionSignMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移除任务
*/
//class net.message.task.ResTaskRemoveMessage extends net.Message
var ResTaskRemoveMessage=(function(_super){
	function ResTaskRemoveMessage(){
		/**任务ID */
		this._taskID=0;
		ResTaskRemoveMessage.__super.call(this);
	}

	__class(ResTaskRemoveMessage,'net.message.task.ResTaskRemoveMessage',_super);
	var __proto=ResTaskRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1306;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ResTaskRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(野外BOSS)错误
*/
//class net.message.dungeon.ResReceiveYeWaiBossDungeonPrizeErrorMessage extends net.Message
var ResReceiveYeWaiBossDungeonPrizeErrorMessage=(function(_super){
	function ResReceiveYeWaiBossDungeonPrizeErrorMessage(){
		/**1:条件不足;2:背包已满;3:不存在的配置;4:参数错误;5:次数不足;6:元宝不足;7:未死亡;8:已死亡;9:血量对不上;10:不同同时挑战多个boss;*/
		this._error=0;
		ResReceiveYeWaiBossDungeonPrizeErrorMessage.__super.call(this);
	}

	__class(ResReceiveYeWaiBossDungeonPrizeErrorMessage,'net.message.dungeon.ResReceiveYeWaiBossDungeonPrizeErrorMessage',_super);
	var __proto=ResReceiveYeWaiBossDungeonPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 229;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveYeWaiBossDungeonPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计状态错误
*/
//class net.message.emptycity.ResEmptyGetDataErrorMessage extends net.Message
var ResEmptyGetDataErrorMessage=(function(_super){
	function ResEmptyGetDataErrorMessage(){
		/**1:尚未开启;*/
		this._error=0;
		ResEmptyGetDataErrorMessage.__super.call(this);
	}

	__class(ResEmptyGetDataErrorMessage,'net.message.emptycity.ResEmptyGetDataErrorMessage',_super);
	var __proto=ResEmptyGetDataErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1089;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEmptyGetDataErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ReqMarriagePataOtherFightSkipMessage extends net.Message
var ReqMarriagePataOtherFightSkipMessage=(function(_super){
	function ReqMarriagePataOtherFightSkipMessage(){
		ReqMarriagePataOtherFightSkipMessage.__super.call(this);;
	}

	__class(ReqMarriagePataOtherFightSkipMessage,'net.message.marriage.ReqMarriagePataOtherFightSkipMessage',_super);
	var __proto=ReqMarriagePataOtherFightSkipMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1498;
	}

	return ReqMarriagePataOtherFightSkipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家离开错误
*/
//class net.message.worldboss.ResWorldBossLeaveErrorMessage extends net.Message
var ResWorldBossLeaveErrorMessage=(function(_super){
	function ResWorldBossLeaveErrorMessage(){
		/**1:活动未开始;2:你已经死了 或者离开副本;*/
		this._error=0;
		ResWorldBossLeaveErrorMessage.__super.call(this);
	}

	__class(ResWorldBossLeaveErrorMessage,'net.message.worldboss.ResWorldBossLeaveErrorMessage',_super);
	var __proto=ResWorldBossLeaveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 509;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossLeaveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取至尊BOSS的数据
*/
//class net.message.dungeon.ReqZhiZhunBossGetInfoMessage extends net.Message
var ReqZhiZhunBossGetInfoMessage=(function(_super){
	function ReqZhiZhunBossGetInfoMessage(){
		ReqZhiZhunBossGetInfoMessage.__super.call(this);;
	}

	__class(ReqZhiZhunBossGetInfoMessage,'net.message.dungeon.ReqZhiZhunBossGetInfoMessage',_super);
	var __proto=ReqZhiZhunBossGetInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1013;
	}

	return ReqZhiZhunBossGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更改名字
*/
//class net.message.user.ReqUpdateNameMessage extends net.Message
var ReqUpdateNameMessage=(function(_super){
	function ReqUpdateNameMessage(){
		/**名字 */
		this._name=null;
		ReqUpdateNameMessage.__super.call(this);
	}

	__class(ReqUpdateNameMessage,'net.message.user.ReqUpdateNameMessage',_super);
	var __proto=ReqUpdateNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1056;
	}

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ReqUpdateNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡
*/
//class net.message.chat.ReqChatNeedHelpMessage extends net.Message
var ReqChatNeedHelpMessage=(function(_super){
	function ReqChatNeedHelpMessage(){
		ReqChatNeedHelpMessage.__super.call(this);;
	}

	__class(ReqChatNeedHelpMessage,'net.message.chat.ReqChatNeedHelpMessage',_super);
	var __proto=ReqChatNeedHelpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 771;
	}

	return ReqChatNeedHelpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成任务错误
*/
//class net.message.task.ResTaskFinishErrorMessage extends net.Message
var ResTaskFinishErrorMessage=(function(_super){
	function ResTaskFinishErrorMessage(){
		/**1:没有任务;2:未完成;3:系统错误;4:已达完成次数上限;*/
		this._error=0;
		ResTaskFinishErrorMessage.__super.call(this);
	}

	__class(ResTaskFinishErrorMessage,'net.message.task.ResTaskFinishErrorMessage',_super);
	var __proto=ResTaskFinishErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1297;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTaskFinishErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回答问题错误
*/
//class net.message.examination.ResKejuAnswerExaminationErrorMessage extends net.Message
var ResKejuAnswerExaminationErrorMessage=(function(_super){
	function ResKejuAnswerExaminationErrorMessage(){
		/**1:活动未开启或者已经结束;*/
		this._error=0;
		ResKejuAnswerExaminationErrorMessage.__super.call(this);
	}

	__class(ResKejuAnswerExaminationErrorMessage,'net.message.examination.ResKejuAnswerExaminationErrorMessage',_super);
	var __proto=ResKejuAnswerExaminationErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 414;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKejuAnswerExaminationErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新任务
*/
//class net.message.todayrecommend.ResRecommendTaskUpdateMessage extends net.Message
var ResRecommendTaskUpdateMessage=(function(_super){
	function ResRecommendTaskUpdateMessage(){
		/**积分 */
		this._integral=0;
		ResRecommendTaskUpdateMessage.__super.call(this);
		this._tasks=[];
		this._rewards=[];
	}

	__class(ResRecommendTaskUpdateMessage,'net.message.todayrecommend.ResRecommendTaskUpdateMessage',_super);
	var __proto=ResRecommendTaskUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._tasks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._tasks.length;++i_am_tmp_i){
			this._tasks[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._rewards.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewards.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewards[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._integral);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._tasks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._tasks[i_am_tmp_i]=this.readBeanInList(_buf,RecommendTaskBean);
		}
		size52413035=this.readInt(_buf);
		this._rewards=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewards[i_am_tmp_i]=this.readInt(_buf);
		}
		this._integral=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1510;
	}

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	/**更新任务 */
	/**更新任务 */
	__getset(0,__proto,'tasks',function(){
		return this._tasks;
		},function(value){
		this._tasks=value;
	});

	/**积分奖励 */
	/**积分奖励 */
	__getset(0,__proto,'rewards',function(){
		return this._rewards;
		},function(value){
		this._rewards=value;
	});

	return ResRecommendTaskUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求怪物
*/
//class net.message.gb.ResLegionBattleAttackMonsterMessage extends net.Message
var ResLegionBattleAttackMonsterMessage=(function(_super){
	function ResLegionBattleAttackMonsterMessage(){
		/**战斗消息 */
		this._data=null;
		ResLegionBattleAttackMonsterMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResLegionBattleAttackMonsterMessage,'net.message.gb.ResLegionBattleAttackMonsterMessage',_super);
	var __proto=ResLegionBattleAttackMonsterMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1344;
	}

	/**战斗消息 */
	/**战斗消息 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResLegionBattleAttackMonsterMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取勇闯天庭信息
*/
//class net.message.pata.ReqGetYCTTInfoMessage extends net.Message
var ReqGetYCTTInfoMessage=(function(_super){
	function ReqGetYCTTInfoMessage(){
		ReqGetYCTTInfoMessage.__super.call(this);;
	}

	__class(ReqGetYCTTInfoMessage,'net.message.pata.ReqGetYCTTInfoMessage',_super);
	var __proto=ReqGetYCTTInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 239;
	}

	return ReqGetYCTTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新累计重置额度
*/
//class net.message.vip.ResUpdateVipFreeSkipRoundMessage extends net.Message
var ResUpdateVipFreeSkipRoundMessage=(function(_super){
	function ResUpdateVipFreeSkipRoundMessage(){
		/**每日免费次数 */
		this._times=null;
		ResUpdateVipFreeSkipRoundMessage.__super.call(this);
	}

	__class(ResUpdateVipFreeSkipRoundMessage,'net.message.vip.ResUpdateVipFreeSkipRoundMessage',_super);
	var __proto=ResUpdateVipFreeSkipRoundMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1460;
	}

	/**每日免费次数 */
	/**每日免费次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResUpdateVipFreeSkipRoundMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化野外boss副本信息
*/
//class net.message.dungeon.ResInitYeWaiBossMessage extends net.Message
var ResInitYeWaiBossMessage=(function(_super){
	function ResInitYeWaiBossMessage(){
		ResInitYeWaiBossMessage.__super.call(this);
		this._dungeons=[];
	}

	__class(ResInitYeWaiBossMessage,'net.message.dungeon.ResInitYeWaiBossMessage',_super);
	var __proto=ResInitYeWaiBossMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeons.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._dungeons.length;++i_am_tmp_i){
			this._dungeons[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._dungeons=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._dungeons[i_am_tmp_i]=this.readBeanInList(_buf,YeWaiBossDungeonBean);
		}
	}

	__proto.getId=function(){
		return 225;
	}

	/**副本列表 */
	/**副本列表 */
	__getset(0,__proto,'dungeons',function(){
		return this._dungeons;
		},function(value){
		this._dungeons=value;
	});

	return ResInitYeWaiBossMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*找回官位昨日奖励错误
*/
//class net.message.official.ResReceiveOfficialYesterdayRewardErrorMessage extends net.Message
var ResReceiveOfficialYesterdayRewardErrorMessage=(function(_super){
	function ResReceiveOfficialYesterdayRewardErrorMessage(){
		/**1:参数错误;2:没有可找回的;3:数量错误;4:不能找回;5:参数错误;*/
		this._error=0;
		ResReceiveOfficialYesterdayRewardErrorMessage.__super.call(this);
	}

	__class(ResReceiveOfficialYesterdayRewardErrorMessage,'net.message.official.ResReceiveOfficialYesterdayRewardErrorMessage',_super);
	var __proto=ResReceiveOfficialYesterdayRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 327;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveOfficialYesterdayRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级错误
*/
//class net.message.juewei.ResUpdateNewJueWeiLevelErrorMessage extends net.Message
var ResUpdateNewJueWeiLevelErrorMessage=(function(_super){
	function ResUpdateNewJueWeiLevelErrorMessage(){
		/**1:物品不足;2:活跃不足;3:战力不足;4:解析配置错误;*/
		this._error=0;
		ResUpdateNewJueWeiLevelErrorMessage.__super.call(this);
	}

	__class(ResUpdateNewJueWeiLevelErrorMessage,'net.message.juewei.ResUpdateNewJueWeiLevelErrorMessage',_super);
	var __proto=ResUpdateNewJueWeiLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1491;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpdateNewJueWeiLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天赋错误
*/
//class net.message.adviser.ResAdviserUpgradeTalentErrorMessage extends net.Message
var ResAdviserUpgradeTalentErrorMessage=(function(_super){
	function ResAdviserUpgradeTalentErrorMessage(){
		/**1:你还没有军师;2:穷;*/
		this._error=0;
		ResAdviserUpgradeTalentErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeTalentErrorMessage,'net.message.adviser.ResAdviserUpgradeTalentErrorMessage',_super);
	var __proto=ResAdviserUpgradeTalentErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1018;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeTalentErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新场景里的机器人
*/
//class net.message.user.ResUpdateRobotMessage extends net.Message
var ResUpdateRobotMessage=(function(_super){
	function ResUpdateRobotMessage(){
		ResUpdateRobotMessage.__super.call(this);
		this._robots=[];
	}

	__class(ResUpdateRobotMessage,'net.message.user.ResUpdateRobotMessage',_super);
	var __proto=ResUpdateRobotMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._robots.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._robots.length;++i_am_tmp_i){
			this._robots[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._robots=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._robots[i_am_tmp_i]=this.readBeanInList(_buf,RobotUserBean);
		}
	}

	__proto.getId=function(){
		return 984;
	}

	/**机器人 */
	/**机器人 */
	__getset(0,__proto,'robots',function(){
		return this._robots;
		},function(value){
		this._robots=value;
	});

	return ResUpdateRobotMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入军团
*/
//class net.message.guild.ReqGuildApplyMessage extends net.Message
var ReqGuildApplyMessage=(function(_super){
	function ReqGuildApplyMessage(){
		/**军团唯一ID */
		this._uid=null;
		ReqGuildApplyMessage.__super.call(this);
	}

	__class(ReqGuildApplyMessage,'net.message.guild.ReqGuildApplyMessage',_super);
	var __proto=ReqGuildApplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1203;
	}

	/**军团唯一ID */
	/**军团唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqGuildApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备铸纹
*/
//class net.message.equip.ResEquipZhuWenMessage extends net.Message
var ResEquipZhuWenMessage=(function(_super){
	function ResEquipZhuWenMessage(){
		/**改变铸纹的id */
		this._id=0;
		ResEquipZhuWenMessage.__super.call(this);
	}

	__class(ResEquipZhuWenMessage,'net.message.equip.ResEquipZhuWenMessage',_super);
	var __proto=ResEquipZhuWenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1533;
	}

	/**改变铸纹的id */
	/**改变铸纹的id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResEquipZhuWenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新押运数据
*/
//class net.message.escort.ResUpdateEscortMessage extends net.Message
var ResUpdateEscortMessage=(function(_super){
	function ResUpdateEscortMessage(){
		/**押运对象 */
		this._bean=null;
		ResUpdateEscortMessage.__super.call(this);
	}

	__class(ResUpdateEscortMessage,'net.message.escort.ResUpdateEscortMessage',_super);
	var __proto=ResUpdateEscortMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,EscortBean);
	}

	__proto.getId=function(){
		return 1083;
	}

	/**押运对象 */
	/**押运对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResUpdateEscortMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童嗑药
*/
//class net.message.soulboy.ReqSoulBoyDrugMessage extends net.Message
var ReqSoulBoyDrugMessage=(function(_super){
	function ReqSoulBoyDrugMessage(){
		/**灵童ID */
		this._id=0;
		/**自动购买 0 否 1 是 */
		this._autoBuy=0;
		ReqSoulBoyDrugMessage.__super.call(this);
	}

	__class(ReqSoulBoyDrugMessage,'net.message.soulboy.ReqSoulBoyDrugMessage',_super);
	var __proto=ReqSoulBoyDrugMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._autoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._autoBuy=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 447;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**自动购买 0 否 1 是 */
	/**自动购买 0 否 1 是 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqSoulBoyDrugMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴激活
*/
//class net.message.handbook.ResHandBookActivateMessage extends net.Message
var ResHandBookActivateMessage=(function(_super){
	function ResHandBookActivateMessage(){
		/**图鉴id */
		this._configId=0;
		ResHandBookActivateMessage.__super.call(this);
	}

	__class(ResHandBookActivateMessage,'net.message.handbook.ResHandBookActivateMessage',_super);
	var __proto=ResHandBookActivateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1120;
	}

	/**图鉴id */
	/**图鉴id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	return ResHandBookActivateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿
*/
//class net.message.activities.ReqWeekendXuYuanSelectMessage extends net.Message
var ReqWeekendXuYuanSelectMessage=(function(_super){
	function ReqWeekendXuYuanSelectMessage(){
		/**星期数，6代表周六，7代表周日 */
		this._weekNum=0;
		ReqWeekendXuYuanSelectMessage.__super.call(this);
		this._indexList=[];
	}

	__class(ReqWeekendXuYuanSelectMessage,'net.message.activities.ReqWeekendXuYuanSelectMessage',_super);
	var __proto=ReqWeekendXuYuanSelectMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._weekNum);
		this.writeInt(_buf,this._indexList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._indexList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._indexList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._weekNum=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._indexList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._indexList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1655;
	}

	/**选择的奖励序号 */
	/**选择的奖励序号 */
	__getset(0,__proto,'indexList',function(){
		return this._indexList;
		},function(value){
		this._indexList=value;
	});

	/**星期数，6代表周六，7代表周日 */
	/**星期数，6代表周六，7代表周日 */
	__getset(0,__proto,'weekNum',function(){
		return this._weekNum;
		},function(value){
		this._weekNum=value;
	});

	return ReqWeekendXuYuanSelectMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知被占领
*/
//class net.message.emptycity.ResEmptyCityOccupiedMessage extends net.Message
var ResEmptyCityOccupiedMessage=(function(_super){
	function ResEmptyCityOccupiedMessage(){
		/***/
		this._bean=null;
		ResEmptyCityOccupiedMessage.__super.call(this);
	}

	__class(ResEmptyCityOccupiedMessage,'net.message.emptycity.ResEmptyCityOccupiedMessage',_super);
	var __proto=ResEmptyCityOccupiedMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,EmptyCityOccupiedBean);
	}

	__proto.getId=function(){
		return 1118;
	}

	/***/
	/***/
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEmptyCityOccupiedMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸战斗记录
*/
//class net.message.kingwar.ResKingWarFightRecordMessage extends net.Message
var ResKingWarFightRecordMessage=(function(_super){
	function ResKingWarFightRecordMessage(){
		/**数据 */
		this._data=null;
		ResKingWarFightRecordMessage.__super.call(this);
	}

	__class(ResKingWarFightRecordMessage,'net.message.kingwar.ResKingWarFightRecordMessage',_super);
	var __proto=ResKingWarFightRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1161;
	}

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResKingWarFightRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体装备宝石
*/
//class net.message.fit.ReqFitSetEquipGemMessage extends net.Message
var ReqFitSetEquipGemMessage=(function(_super){
	function ReqFitSetEquipGemMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
		this._equipType=0;
		/**道具在背包的下标 */
		this._index=0;
		/**宝石类型[1:][2:][3:][4:][5:] */
		this._gemType=0;
		ReqFitSetEquipGemMessage.__super.call(this);
	}

	__class(ReqFitSetEquipGemMessage,'net.message.fit.ReqFitSetEquipGemMessage',_super);
	var __proto=ReqFitSetEquipGemMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equipType);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._gemType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._equipType=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._gemType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1137;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具在背包的下标 */
	/**道具在背包的下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	__getset(0,__proto,'equipType',function(){
		return this._equipType;
		},function(value){
		this._equipType=value;
	});

	/**宝石类型[1:][2:][3:][4:][5:] */
	/**宝石类型[1:][2:][3:][4:][5:] */
	__getset(0,__proto,'gemType',function(){
		return this._gemType;
		},function(value){
		this._gemType=value;
	});

	return ReqFitSetEquipGemMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派移除成员
*/
//class net.message.guild.ResGuildMemberRemoveMessage extends net.Message
var ResGuildMemberRemoveMessage=(function(_super){
	function ResGuildMemberRemoveMessage(){
		/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
		this._type=0;
		/**成员唯一ID */
		this._uid=null;
		ResGuildMemberRemoveMessage.__super.call(this);
	}

	__class(ResGuildMemberRemoveMessage,'net.message.guild.ResGuildMemberRemoveMessage',_super);
	var __proto=ResGuildMemberRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1247;
	}

	/**成员唯一ID */
	/**成员唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResGuildMemberRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统
*/
//class net.message.user.ReqActiveGameSystemMessage extends net.Message
var ReqActiveGameSystemMessage=(function(_super){
	function ReqActiveGameSystemMessage(){
		/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
		this._system=0;
		ReqActiveGameSystemMessage.__super.call(this);
	}

	__class(ReqActiveGameSystemMessage,'net.message.user.ReqActiveGameSystemMessage',_super);
	var __proto=ReqActiveGameSystemMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._system);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._system=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 38;
	}

	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	__getset(0,__proto,'system',function(){
		return this._system;
		},function(value){
		this._system=value;
	});

	return ReqActiveGameSystemMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取星宿幻境奖励
*/
//class net.message.pata.ReqTakeXXHJPrizeMessage extends net.Message
var ReqTakeXXHJPrizeMessage=(function(_super){
	function ReqTakeXXHJPrizeMessage(){
		/**层 */
		this._layer=0;
		ReqTakeXXHJPrizeMessage.__super.call(this);
	}

	__class(ReqTakeXXHJPrizeMessage,'net.message.pata.ReqTakeXXHJPrizeMessage',_super);
	var __proto=ReqTakeXXHJPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1034;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	return ReqTakeXXHJPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*读取邮件
*/
//class net.message.mail.ResReadMailMessage extends net.Message
var ResReadMailMessage=(function(_super){
	function ResReadMailMessage(){
		/**邮件ID,前端需要设置为已读 */
		this._mailID=0;
		ResReadMailMessage.__super.call(this);
	}

	__class(ResReadMailMessage,'net.message.mail.ResReadMailMessage',_super);
	var __proto=ResReadMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 47;
	}

	/**邮件ID,前端需要设置为已读 */
	/**邮件ID,前端需要设置为已读 */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	return ResReadMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取团购信息
*/
//class net.message.tuangou.ResTuanGouGetInfoMessage extends net.Message
var ResTuanGouGetInfoMessage=(function(_super){
	function ResTuanGouGetInfoMessage(){
		/**信息 */
		this._num=0;
		ResTuanGouGetInfoMessage.__super.call(this);
		this._prized=[];
	}

	__class(ResTuanGouGetInfoMessage,'net.message.tuangou.ResTuanGouGetInfoMessage',_super);
	var __proto=ResTuanGouGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._prized.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prized.length;++i_am_tmp_i){
			this.writeInt(_buf,this._prized[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._num=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prized=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prized[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1396;
	}

	/**信息 */
	/**信息 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**已经领取过的奖励,对应q_tuangou.q_id */
	/**已经领取过的奖励,对应q_tuangou.q_id */
	__getset(0,__proto,'prized',function(){
		return this._prized;
		},function(value){
		this._prized=value;
	});

	return ResTuanGouGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器错误
*/
//class net.message.fit.ResFitUpgradeWeaponErrorMessage extends net.Message
var ResFitUpgradeWeaponErrorMessage=(function(_super){
	function ResFitUpgradeWeaponErrorMessage(){
		/**1:不满足条件;2:穷;*/
		this._error=0;
		ResFitUpgradeWeaponErrorMessage.__super.call(this);
	}

	__class(ResFitUpgradeWeaponErrorMessage,'net.message.fit.ResFitUpgradeWeaponErrorMessage',_super);
	var __proto=ResFitUpgradeWeaponErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1159;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitUpgradeWeaponErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴合体装备错误
*/
//class net.message.fit.ResFitSetEquipErrorMessage extends net.Message
var ResFitSetEquipErrorMessage=(function(_super){
	function ResFitSetEquipErrorMessage(){
		/**1:功能未开启;2:格子锁定中;*/
		this._error=0;
		ResFitSetEquipErrorMessage.__super.call(this);
	}

	__class(ResFitSetEquipErrorMessage,'net.message.fit.ResFitSetEquipErrorMessage',_super);
	var __proto=ResFitSetEquipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1136;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitSetEquipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天命
*/
//class net.message.adviser.ReqAdviserUpgradeDestinyMessage extends net.Message
var ReqAdviserUpgradeDestinyMessage=(function(_super){
	function ReqAdviserUpgradeDestinyMessage(){
		/**军师id */
		this._adviserId=0;
		/**自动购买 */
		this._autoBuy=false;
		ReqAdviserUpgradeDestinyMessage.__super.call(this);
	}

	__class(ReqAdviserUpgradeDestinyMessage,'net.message.adviser.ReqAdviserUpgradeDestinyMessage',_super);
	var __proto=ReqAdviserUpgradeDestinyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._adviserId);
		this.writeBoolean(_buf,this._autoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._adviserId=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1019;
	}

	/**军师id */
	/**军师id */
	__getset(0,__proto,'adviserId',function(){
		return this._adviserId;
		},function(value){
		this._adviserId=value;
	});

	/**自动购买 */
	/**自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqAdviserUpgradeDestinyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刀币满盆活动
*/
//class net.message.activities.ResGoldBasinfulActUpdateMessage extends net.Message
var ResGoldBasinfulActUpdateMessage=(function(_super){
	function ResGoldBasinfulActUpdateMessage(){
		/**当前消费刀币总数 */
		this._consumeTotal=0;
		ResGoldBasinfulActUpdateMessage.__super.call(this);
	}

	__class(ResGoldBasinfulActUpdateMessage,'net.message.activities.ResGoldBasinfulActUpdateMessage',_super);
	var __proto=ResGoldBasinfulActUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._consumeTotal);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._consumeTotal=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1547;
	}

	/**当前消费刀币总数 */
	/**当前消费刀币总数 */
	__getset(0,__proto,'consumeTotal',function(){
		return this._consumeTotal;
		},function(value){
		this._consumeTotal=value;
	});

	return ResGoldBasinfulActUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*删除红包
*/
//class net.message.redEnvelopes.ResRemoveRedEnvelopesMessage extends net.Message
var ResRemoveRedEnvelopesMessage=(function(_super){
	function ResRemoveRedEnvelopesMessage(){
		/**红包 */
		this._id=0;
		ResRemoveRedEnvelopesMessage.__super.call(this);
	}

	__class(ResRemoveRedEnvelopesMessage,'net.message.redEnvelopes.ResRemoveRedEnvelopesMessage',_super);
	var __proto=ResRemoveRedEnvelopesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1169;
	}

	/**红包 */
	/**红包 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResRemoveRedEnvelopesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送军团战排名
*/
//class net.message.gongCe.ReqGetJunTuanInfoMessage extends net.Message
var ReqGetJunTuanInfoMessage=(function(_super){
	function ReqGetJunTuanInfoMessage(){
		ReqGetJunTuanInfoMessage.__super.call(this);;
	}

	__class(ReqGetJunTuanInfoMessage,'net.message.gongCe.ReqGetJunTuanInfoMessage',_super);
	var __proto=ReqGetJunTuanInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1649;
	}

	return ReqGetJunTuanInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用战令活动更新
*/
//class net.message.wartoken.ResUpdateCommonWarTokenMessage extends net.Message
var ResUpdateCommonWarTokenMessage=(function(_super){
	function ResUpdateCommonWarTokenMessage(){
		/**战令 */
		this._warTokenBean=null;
		ResUpdateCommonWarTokenMessage.__super.call(this);
	}

	__class(ResUpdateCommonWarTokenMessage,'net.message.wartoken.ResUpdateCommonWarTokenMessage',_super);
	var __proto=ResUpdateCommonWarTokenMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._warTokenBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenBean=this.readBean(_buf,CommonWarTokenBean);
	}

	__proto.getId=function(){
		return 1584;
	}

	/**战令 */
	/**战令 */
	__getset(0,__proto,'warTokenBean',function(){
		return this._warTokenBean;
		},function(value){
		this._warTokenBean=value;
	});

	return ResUpdateCommonWarTokenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进阶奖励
*/
//class net.message.advanceReward.ResAdvancedRewardMessage extends net.Message
var ResAdvancedRewardMessage=(function(_super){
	function ResAdvancedRewardMessage(){
		/**id */
		this._id=0;
		ResAdvancedRewardMessage.__super.call(this);
		this._list=[];
	}

	__class(ResAdvancedRewardMessage,'net.message.advanceReward.ResAdvancedRewardMessage',_super);
	var __proto=ResAdvancedRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 723;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResAdvancedRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体技能错误
*/
//class net.message.fit.ResFitSetSkillErrorMessage extends net.Message
var ResFitSetSkillErrorMessage=(function(_super){
	function ResFitSetSkillErrorMessage(){
		/**1:不满足条件;*/
		this._error=0;
		ResFitSetSkillErrorMessage.__super.call(this);
	}

	__class(ResFitSetSkillErrorMessage,'net.message.fit.ResFitSetSkillErrorMessage',_super);
	var __proto=ResFitSetSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1176;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitSetSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会信息
*/
//class net.message.qunyinghui.ReqQunYingHuiSignUpRecordMessage extends net.Message
var ReqQunYingHuiSignUpRecordMessage=(function(_super){
	function ReqQunYingHuiSignUpRecordMessage(){
		ReqQunYingHuiSignUpRecordMessage.__super.call(this);;
	}

	__class(ReqQunYingHuiSignUpRecordMessage,'net.message.qunyinghui.ReqQunYingHuiSignUpRecordMessage',_super);
	var __proto=ReqQunYingHuiSignUpRecordMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 473;
	}

	return ReqQunYingHuiSignUpRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求战斗
*/
//class net.message.kingwar.ResKingWarStartFightMessage extends net.Message
var ResKingWarStartFightMessage=(function(_super){
	function ResKingWarStartFightMessage(){
		/**战斗的反馈 */
		this._data=null;
		/**玩家段位 */
		this._gradation=0;
		/**玩家的星级 */
		this._star=0;
		ResKingWarStartFightMessage.__super.call(this);
	}

	__class(ResKingWarStartFightMessage,'net.message.kingwar.ResKingWarStartFightMessage',_super);
	var __proto=ResKingWarStartFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._gradation);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
		this._gradation=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 490;
	}

	/**战斗的反馈 */
	/**战斗的反馈 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**玩家段位 */
	/**玩家段位 */
	__getset(0,__proto,'gradation',function(){
		return this._gradation;
		},function(value){
		this._gradation=value;
	});

	/**玩家的星级 */
	/**玩家的星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	return ResKingWarStartFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家错误
*/
//class net.message.gb.ResLegionBattleLeaveErrorMessage extends net.Message
var ResLegionBattleLeaveErrorMessage=(function(_super){
	function ResLegionBattleLeaveErrorMessage(){
		/**1:未开启;2:不在副本中;*/
		this._error=0;
		ResLegionBattleLeaveErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleLeaveErrorMessage,'net.message.gb.ResLegionBattleLeaveErrorMessage',_super);
	var __proto=ResLegionBattleLeaveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1333;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleLeaveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.adviser.ResAdviserSurmountMessage extends net.Message
var ResAdviserSurmountMessage=(function(_super){
	function ResAdviserSurmountMessage(){
		/**对象 */
		this._adviserBean=null;
		ResAdviserSurmountMessage.__super.call(this);
	}

	__class(ResAdviserSurmountMessage,'net.message.adviser.ResAdviserSurmountMessage',_super);
	var __proto=ResAdviserSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._adviserBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._adviserBean=this.readBean(_buf,AdviserBean);
	}

	__proto.getId=function(){
		return 802;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'adviserBean',function(){
		return this._adviserBean;
		},function(value){
		this._adviserBean=value;
	});

	return ResAdviserSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*版本验证错误
*/
//class net.message.login.ResVersionCheckErrorMessage extends net.Message
var ResVersionCheckErrorMessage=(function(_super){
	function ResVersionCheckErrorMessage(){
		/**1:消息代码不一致;2:不一致;3:配置数据不一致;4:验证失败;*/
		this._error=0;
		ResVersionCheckErrorMessage.__super.call(this);
	}

	__class(ResVersionCheckErrorMessage,'net.message.login.ResVersionCheckErrorMessage',_super);
	var __proto=ResVersionCheckErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 7;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResVersionCheckErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取奖励错误
*/
//class net.message.garrison.ResGarrisonTakeRewardErrorMessage extends net.Message
var ResGarrisonTakeRewardErrorMessage=(function(_super){
	function ResGarrisonTakeRewardErrorMessage(){
		/**1:时间未到;2:没有驻守;3:系统未开启;*/
		this._error=0;
		ResGarrisonTakeRewardErrorMessage.__super.call(this);
	}

	__class(ResGarrisonTakeRewardErrorMessage,'net.message.garrison.ResGarrisonTakeRewardErrorMessage',_super);
	var __proto=ResGarrisonTakeRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1045;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonTakeRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门环奖励
*/
//class net.message.shimen.ReqTakeShiMenRoundPrizeMessage extends net.Message
var ReqTakeShiMenRoundPrizeMessage=(function(_super){
	function ReqTakeShiMenRoundPrizeMessage(){
		/**是否花元宝领取 */
		this._gold=false;
		ReqTakeShiMenRoundPrizeMessage.__super.call(this);
	}

	__class(ReqTakeShiMenRoundPrizeMessage,'net.message.shimen.ReqTakeShiMenRoundPrizeMessage',_super);
	var __proto=ReqTakeShiMenRoundPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._gold);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gold=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 142;
	}

	/**是否花元宝领取 */
	/**是否花元宝领取 */
	__getset(0,__proto,'gold',function(){
		return this._gold;
		},function(value){
		this._gold=value;
	});

	return ReqTakeShiMenRoundPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取降妖除魔信息错误
*/
//class net.message.pata.ResGetXYCMInfoErrorMessage extends net.Message
var ResGetXYCMInfoErrorMessage=(function(_super){
	function ResGetXYCMInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetXYCMInfoErrorMessage.__super.call(this);
	}

	__class(ResGetXYCMInfoErrorMessage,'net.message.pata.ResGetXYCMInfoErrorMessage',_super);
	var __proto=ResGetXYCMInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 238;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetXYCMInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务次数
*/
//class net.message.chibi.ReqChibiBuyTodayMessage extends net.Message
var ReqChibiBuyTodayMessage=(function(_super){
	function ReqChibiBuyTodayMessage(){
		ReqChibiBuyTodayMessage.__super.call(this);;
	}

	__class(ReqChibiBuyTodayMessage,'net.message.chibi.ReqChibiBuyTodayMessage',_super);
	var __proto=ReqChibiBuyTodayMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 405;
	}

	return ReqChibiBuyTodayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级经脉
*/
//class net.message.jingmai.ReqJingMaiUpgradeMessage extends net.Message
var ReqJingMaiUpgradeMessage=(function(_super){
	function ReqJingMaiUpgradeMessage(){
		/**英雄ID */
		this._heroID=0;
		ReqJingMaiUpgradeMessage.__super.call(this);
	}

	__class(ReqJingMaiUpgradeMessage,'net.message.jingmai.ReqJingMaiUpgradeMessage',_super);
	var __proto=ReqJingMaiUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 485;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqJingMaiUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*镶嵌秘籍
*/
//class net.message.miji.ResSetMijiMessage extends net.Message
var ResSetMijiMessage=(function(_super){
	function ResSetMijiMessage(){
		/**英雄ID */
		this._heroID=0;
		/**镶嵌信息,goods.index表示镶嵌的格子位置 */
		this._goods=null;
		ResSetMijiMessage.__super.call(this);
	}

	__class(ResSetMijiMessage,'net.message.miji.ResSetMijiMessage',_super);
	var __proto=ResSetMijiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._goods);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._goods=this.readBean(_buf,GoodsBean);
	}

	__proto.getId=function(){
		return 87;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**镶嵌信息,goods.index表示镶嵌的格子位置 */
	/**镶嵌信息,goods.index表示镶嵌的格子位置 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	return ResSetMijiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵
*/
//class net.message.fight.ReqFightPositionAddMessage extends net.Message
var ReqFightPositionAddMessage=(function(_super){
	function ReqFightPositionAddMessage(){
		ReqFightPositionAddMessage.__super.call(this);
		this._beans=[];
	}

	__class(ReqFightPositionAddMessage,'net.message.fight.ReqFightPositionAddMessage',_super);
	var __proto=ReqFightPositionAddMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._beans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._beans.length;++i_am_tmp_i){
			this._beans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._beans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._beans[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionAddBean);
		}
	}

	__proto.getId=function(){
		return 1196;
	}

	/**上阵数据 */
	/**上阵数据 */
	__getset(0,__proto,'beans',function(){
		return this._beans;
		},function(value){
		this._beans=value;
	});

	return ReqFightPositionAddMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升星
*/
//class net.message.pet.ReqUpgradePetStarMessage extends net.Message
var ReqUpgradePetStarMessage=(function(_super){
	function ReqUpgradePetStarMessage(){
		/**宠物ID */
		this._petID=0;
		/**类型 */
		this._type=0;
		ReqUpgradePetStarMessage.__super.call(this);
	}

	__class(ReqUpgradePetStarMessage,'net.message.pet.ReqUpgradePetStarMessage',_super);
	var __proto=ReqUpgradePetStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 160;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**类型 */
	/**类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqUpgradePetStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿错误
*/
//class net.message.activities.ResWeekendXuYuanSelectErrorMessage extends net.Message
var ResWeekendXuYuanSelectErrorMessage=(function(_super){
	function ResWeekendXuYuanSelectErrorMessage(){
		/**1:活动未开启;2:已选择;3:配置未找到;*/
		this._error=0;
		ResWeekendXuYuanSelectErrorMessage.__super.call(this);
	}

	__class(ResWeekendXuYuanSelectErrorMessage,'net.message.activities.ResWeekendXuYuanSelectErrorMessage',_super);
	var __proto=ResWeekendXuYuanSelectErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1657;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWeekendXuYuanSelectErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换当前所在关卡副本ID
*/
//class net.message.dungeon.ResChangeGuanQiaDungeonIDMessage extends net.Message
var ResChangeGuanQiaDungeonIDMessage=(function(_super){
	function ResChangeGuanQiaDungeonIDMessage(){
		/**当前所在关卡副本ID */
		this._curGuanqiaDungeonID=0;
		/**金币收益 */
		this._copperPerSec=0;
		/**经验收益 */
		this._expPerSec=0;
		ResChangeGuanQiaDungeonIDMessage.__super.call(this);
	}

	__class(ResChangeGuanQiaDungeonIDMessage,'net.message.dungeon.ResChangeGuanQiaDungeonIDMessage',_super);
	var __proto=ResChangeGuanQiaDungeonIDMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._curGuanqiaDungeonID);
		this.writeInt(_buf,this._copperPerSec);
		this.writeInt(_buf,this._expPerSec);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._curGuanqiaDungeonID=this.readInt(_buf);
		this._copperPerSec=this.readInt(_buf);
		this._expPerSec=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 118;
	}

	/**当前所在关卡副本ID */
	/**当前所在关卡副本ID */
	__getset(0,__proto,'curGuanqiaDungeonID',function(){
		return this._curGuanqiaDungeonID;
		},function(value){
		this._curGuanqiaDungeonID=value;
	});

	/**金币收益 */
	/**金币收益 */
	__getset(0,__proto,'copperPerSec',function(){
		return this._copperPerSec;
		},function(value){
		this._copperPerSec=value;
	});

	/**经验收益 */
	/**经验收益 */
	__getset(0,__proto,'expPerSec',function(){
		return this._expPerSec;
		},function(value){
		this._expPerSec=value;
	});

	return ResChangeGuanQiaDungeonIDMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取首通和最小回合数记录错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateGetFirstClearanceErrorMessage extends net.Message
var ResTeamDuplicateGetFirstClearanceErrorMessage=(function(_super){
	function ResTeamDuplicateGetFirstClearanceErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;*/
		this._error=0;
		ResTeamDuplicateGetFirstClearanceErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateGetFirstClearanceErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateGetFirstClearanceErrorMessage',_super);
	var __proto=ResTeamDuplicateGetFirstClearanceErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 437;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateGetFirstClearanceErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成赤壁任务
*/
//class net.message.chibi.ReqChibiFinishTaskMessage extends net.Message
var ReqChibiFinishTaskMessage=(function(_super){
	function ReqChibiFinishTaskMessage(){
		/**完成方式 0 正常 1 给钱 */
		this._type=0;
		ReqChibiFinishTaskMessage.__super.call(this);
		this._qid=[];
	}

	__class(ReqChibiFinishTaskMessage,'net.message.chibi.ReqChibiFinishTaskMessage',_super);
	var __proto=ReqChibiFinishTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 396;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**完成方式 0 正常 1 给钱 */
	/**完成方式 0 正常 1 给钱 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqChibiFinishTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取玲珑宝塔信息
*/
//class net.message.pata.ResGetLLBTInfoMessage extends net.Message
var ResGetLLBTInfoMessage=(function(_super){
	function ResGetLLBTInfoMessage(){
		/**类型 0 正常 1 零时活动玲珑宝塔 */
		this._type=0;
		/**可扫荡的层数 */
		this._yesterdayLayer=0;
		/**是否可以扫荡 */
		this._isMopUp=false;
		ResGetLLBTInfoMessage.__super.call(this);
		this._layers=[];
	}

	__class(ResGetLLBTInfoMessage,'net.message.pata.ResGetLLBTInfoMessage',_super);
	var __proto=ResGetLLBTInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._layers.length;++i_am_tmp_i){
			this._layers[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._yesterdayLayer);
		this.writeBoolean(_buf,this._isMopUp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._layers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._layers[i_am_tmp_i]=this.readBeanInList(_buf,LLBTLayerBean);
		}
		this._type=this.readInt(_buf);
		this._yesterdayLayer=this.readInt(_buf);
		this._isMopUp=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 234;
	}

	/**分层信息 */
	/**分层信息 */
	__getset(0,__proto,'layers',function(){
		return this._layers;
		},function(value){
		this._layers=value;
	});

	/**类型 0 正常 1 零时活动玲珑宝塔 */
	/**类型 0 正常 1 零时活动玲珑宝塔 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**可扫荡的层数 */
	/**可扫荡的层数 */
	__getset(0,__proto,'yesterdayLayer',function(){
		return this._yesterdayLayer;
		},function(value){
		this._yesterdayLayer=value;
	});

	/**是否可以扫荡 */
	/**是否可以扫荡 */
	__getset(0,__proto,'isMopUp',function(){
		return this._isMopUp;
		},function(value){
		this._isMopUp=value;
	});

	return ResGetLLBTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*神秘商店
*/
//class net.message.shop.ReqMysteriousShopMessage extends net.Message
var ReqMysteriousShopMessage=(function(_super){
	function ReqMysteriousShopMessage(){
		/**商城子类型 */
		this._shopSonTypes=0;
		ReqMysteriousShopMessage.__super.call(this);
	}

	__class(ReqMysteriousShopMessage,'net.message.shop.ReqMysteriousShopMessage',_super);
	var __proto=ReqMysteriousShopMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopSonTypes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopSonTypes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1429;
	}

	/**商城子类型 */
	/**商城子类型 */
	__getset(0,__proto,'shopSonTypes',function(){
		return this._shopSonTypes;
		},function(value){
		this._shopSonTypes=value;
	});

	return ReqMysteriousShopMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成装备打造石错误
*/
//class net.message.equip.ResEquipMakingStoneErrorMessage extends net.Message
var ResEquipMakingStoneErrorMessage=(function(_super){
	function ResEquipMakingStoneErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResEquipMakingStoneErrorMessage.__super.call(this);
	}

	__class(ResEquipMakingStoneErrorMessage,'net.message.equip.ResEquipMakingStoneErrorMessage',_super);
	var __proto=ResEquipMakingStoneErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1480;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipMakingStoneErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场信息
*/
//class net.message.arena.ReqArenaGetInfoMessage extends net.Message
var ReqArenaGetInfoMessage=(function(_super){
	function ReqArenaGetInfoMessage(){
		ReqArenaGetInfoMessage.__super.call(this);;
	}

	__class(ReqArenaGetInfoMessage,'net.message.arena.ReqArenaGetInfoMessage',_super);
	var __proto=ReqArenaGetInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 280;
	}

	return ReqArenaGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级武器
*/
//class net.message.fit.ResFitUpgradePositionMessage extends net.Message
var ResFitUpgradePositionMessage=(function(_super){
	function ResFitUpgradePositionMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ResFitUpgradePositionMessage.__super.call(this);
		this._equips=[];
	}

	__class(ResFitUpgradePositionMessage,'net.message.fit.ResFitUpgradePositionMessage',_super);
	var __proto=ResFitUpgradePositionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this._equips[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readBeanInList(_buf,FitEquipBean);
		}
	}

	__proto.getId=function(){
		return 1155;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**部位 */
	/**部位 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	return ResFitUpgradePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关注/取消关注拍卖行物品
*/
//class net.message.auction.ReqAuctionAttentionMessage extends net.Message
var ReqAuctionAttentionMessage=(function(_super){
	function ReqAuctionAttentionMessage(){
		/**道具类型id */
		this._itemType=0;
		/**物品子类型 */
		this._type2=0;
		/**是否关注道具 */
		this._attention=false;
		ReqAuctionAttentionMessage.__super.call(this);
	}

	__class(ReqAuctionAttentionMessage,'net.message.auction.ReqAuctionAttentionMessage',_super);
	var __proto=ReqAuctionAttentionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemType);
		this.writeInt(_buf,this._type2);
		this.writeBoolean(_buf,this._attention);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._itemType=this.readInt(_buf);
		this._type2=this.readInt(_buf);
		this._attention=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1375;
	}

	/**道具类型id */
	/**道具类型id */
	__getset(0,__proto,'itemType',function(){
		return this._itemType;
		},function(value){
		this._itemType=value;
	});

	/**物品子类型 */
	/**物品子类型 */
	__getset(0,__proto,'type2',function(){
		return this._type2;
		},function(value){
		this._type2=value;
	});

	/**是否关注道具 */
	/**是否关注道具 */
	__getset(0,__proto,'attention',function(){
		return this._attention;
		},function(value){
		this._attention=value;
	});

	return ReqAuctionAttentionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*某个玩家离开广场
*/
//class net.message.legion.ReqLegionOutSquareMessageMessage extends net.Message
var ReqLegionOutSquareMessageMessage=(function(_super){
	function ReqLegionOutSquareMessageMessage(){
		ReqLegionOutSquareMessageMessage.__super.call(this);;
	}

	__class(ReqLegionOutSquareMessageMessage,'net.message.legion.ReqLegionOutSquareMessageMessage',_super);
	var __proto=ReqLegionOutSquareMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 653;
	}

	return ReqLegionOutSquareMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*背包使用道具(使用类型道具)
*/
//class net.message.goods.ReqUseGoodsMessage extends net.Message
var ReqUseGoodsMessage=(function(_super){
	function ReqUseGoodsMessage(){
		/**配置ID */
		this._configID=0;
		/**包裹中的位置(可选,默认请填-1,优先使用该位置的道具)*/
		this._index=0;
		/**数量 */
		this._num=0;
		/**英雄ID 如果该类道具针对英雄使用时 */
		this._heroID=0;
		/**选择礼包时 给选定的道具下标 */
		this._selectIndex=0;
		ReqUseGoodsMessage.__super.call(this);
	}

	__class(ReqUseGoodsMessage,'net.message.goods.ReqUseGoodsMessage',_super);
	var __proto=ReqUseGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configID);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._selectIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configID=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
		this._selectIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 25;
	}

	/**配置ID */
	/**配置ID */
	__getset(0,__proto,'configID',function(){
		return this._configID;
		},function(value){
		this._configID=value;
	});

	/**选择礼包时 给选定的道具下标 */
	/**选择礼包时 给选定的道具下标 */
	__getset(0,__proto,'selectIndex',function(){
		return this._selectIndex;
		},function(value){
		this._selectIndex=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**包裹中的位置(可选,默认请填-1,优先使用该位置的道具)*/
	/**包裹中的位置(可选,默认请填-1,优先使用该位置的道具)*/
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**英雄ID 如果该类道具针对英雄使用时 */
	/**英雄ID 如果该类道具针对英雄使用时 */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqUseGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始副本错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomStartFightErrorMessage extends net.Message
var ResTeamDuplicateRoomStartFightErrorMessage=(function(_super){
	function ResTeamDuplicateRoomStartFightErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;*/
		this._error=0;
		ResTeamDuplicateRoomStartFightErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomStartFightErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomStartFightErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomStartFightErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 431;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomStartFightErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*满员自动开战和多少秒后自动 的状态修改错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomCloseFullErrorMessage extends net.Message
var ResTeamDuplicateRoomCloseFullErrorMessage=(function(_super){
	function ResTeamDuplicateRoomCloseFullErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;2:正在战斗 无法修改;*/
		this._error=0;
		ResTeamDuplicateRoomCloseFullErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomCloseFullErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomCloseFullErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomCloseFullErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 428;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomCloseFullErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化队伍信息
*/
//class net.message.team.ResTeamInitMessage extends net.Message
var ResTeamInitMessage=(function(_super){
	function ResTeamInitMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**队伍信息 */
		this._team=null;
		ResTeamInitMessage.__super.call(this);
	}

	__class(ResTeamInitMessage,'net.message.team.ResTeamInitMessage',_super);
	var __proto=ResTeamInitMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._team);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._team=this.readBean(_buf,TeamBean);
	}

	__proto.getId=function(){
		return 1272;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**队伍信息 */
	/**队伍信息 */
	__getset(0,__proto,'team',function(){
		return this._team;
		},function(value){
		this._team=value;
	});

	return ResTeamInitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取星宿幻境信息错误
*/
//class net.message.pata.ResGetXXHJInfoErrorMessage extends net.Message
var ResGetXXHJInfoErrorMessage=(function(_super){
	function ResGetXXHJInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetXXHJInfoErrorMessage.__super.call(this);
	}

	__class(ResGetXXHJInfoErrorMessage,'net.message.pata.ResGetXXHJInfoErrorMessage',_super);
	var __proto=ResGetXXHJInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1033;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetXXHJInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务队列
*/
//class net.message.chibi.ResChibiBuyQueueMessage extends net.Message
var ResChibiBuyQueueMessage=(function(_super){
	function ResChibiBuyQueueMessage(){
		/**新的队列长度 */
		this._length=0;
		ResChibiBuyQueueMessage.__super.call(this);
	}

	__class(ResChibiBuyQueueMessage,'net.message.chibi.ResChibiBuyQueueMessage',_super);
	var __proto=ResChibiBuyQueueMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._length);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._length=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 400;
	}

	/**新的队列长度 */
	/**新的队列长度 */
	__getset(0,__proto,'length',function(){
		return this._length;
		},function(value){
		this._length=value;
	});

	return ResChibiBuyQueueMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成军团广场任务
*/
//class net.message.task.ReqTaskGuildSquarePayMessage extends net.Message
var ReqTaskGuildSquarePayMessage=(function(_super){
	function ReqTaskGuildSquarePayMessage(){
		/**任务ID */
		this._taskID=0;
		ReqTaskGuildSquarePayMessage.__super.call(this);
	}

	__class(ReqTaskGuildSquarePayMessage,'net.message.task.ReqTaskGuildSquarePayMessage',_super);
	var __proto=ReqTaskGuildSquarePayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1302;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ReqTaskGuildSquarePayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会资金变更
*/
//class net.message.legion.ResLegionUpdateMoneyMessageMessage extends net.Message
var ResLegionUpdateMoneyMessageMessage=(function(_super){
	function ResLegionUpdateMoneyMessageMessage(){
		/**帮会现有资金 */
		this._exp=null;
		ResLegionUpdateMoneyMessageMessage.__super.call(this);
	}

	__class(ResLegionUpdateMoneyMessageMessage,'net.message.legion.ResLegionUpdateMoneyMessageMessage',_super);
	var __proto=ResLegionUpdateMoneyMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._exp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._exp=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 665;
	}

	/**帮会现有资金 */
	/**帮会现有资金 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResLegionUpdateMoneyMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新属性
*/
//class net.message.soulboy.ResSoulBoyAttributeUpdateMessage extends net.Message
var ResSoulBoyAttributeUpdateMessage=(function(_super){
	function ResSoulBoyAttributeUpdateMessage(){
		/**灵童ID */
		this._id=0;
		ResSoulBoyAttributeUpdateMessage.__super.call(this);
		this._attri=[];
	}

	__class(ResSoulBoyAttributeUpdateMessage,'net.message.soulboy.ResSoulBoyAttributeUpdateMessage',_super);
	var __proto=ResSoulBoyAttributeUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._attri.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attri.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attri[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attri=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attri[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	__proto.getId=function(){
		return 582;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**属性 */
	/**属性 */
	__getset(0,__proto,'attri',function(){
		return this._attri;
		},function(value){
		this._attri=value;
	});

	return ResSoulBoyAttributeUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*转生错误
*/
//class net.message.zhuansheng.ResZhuanShengErrorMessage extends net.Message
var ResZhuanShengErrorMessage=(function(_super){
	function ResZhuanShengErrorMessage(){
		/**1:找不到用户;2:经验不足;3:最大等级;4:无法升级;5:系统未开启;*/
		this._error=0;
		ResZhuanShengErrorMessage.__super.call(this);
	}

	__class(ResZhuanShengErrorMessage,'net.message.zhuansheng.ResZhuanShengErrorMessage',_super);
	var __proto=ResZhuanShengErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 52;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResZhuanShengErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励
*/
//class net.message.escort.ResEscortRevengeRecordMessage extends net.Message
var ResEscortRevengeRecordMessage=(function(_super){
	function ResEscortRevengeRecordMessage(){
		/**成功返回下标 */
		this._index=0;
		/**数据 */
		this._data=null;
		ResEscortRevengeRecordMessage.__super.call(this);
	}

	__class(ResEscortRevengeRecordMessage,'net.message.escort.ResEscortRevengeRecordMessage',_super);
	var __proto=ResEscortRevengeRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1132;
	}

	/**成功返回下标 */
	/**成功返回下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResEscortRevengeRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.adviser.ReqAdviserActiveMessage extends net.Message
var ReqAdviserActiveMessage=(function(_super){
	function ReqAdviserActiveMessage(){
		/**id */
		this._id=0;
		ReqAdviserActiveMessage.__super.call(this);
	}

	__class(ReqAdviserActiveMessage,'net.message.adviser.ReqAdviserActiveMessage',_super);
	var __proto=ReqAdviserActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 798;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqAdviserActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入军团错误
*/
//class net.message.guild.ResGuildApplyReplyErrorMessage extends net.Message
var ResGuildApplyReplyErrorMessage=(function(_super){
	function ResGuildApplyReplyErrorMessage(){
		/**1:无权限;2:帮会满;3:无帮会;4:不在帮会中;5:未申请;6:在其他帮会中;*/
		this._error=0;
		ResGuildApplyReplyErrorMessage.__super.call(this);
	}

	__class(ResGuildApplyReplyErrorMessage,'net.message.guild.ResGuildApplyReplyErrorMessage',_super);
	var __proto=ResGuildApplyReplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1208;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildApplyReplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新三国令
*/
//class net.message.wartoken.ResUpdateWarTokenMessage extends net.Message
var ResUpdateWarTokenMessage=(function(_super){
	function ResUpdateWarTokenMessage(){
		/**战令 */
		this._warTokenBean=null;
		ResUpdateWarTokenMessage.__super.call(this);
	}

	__class(ResUpdateWarTokenMessage,'net.message.wartoken.ResUpdateWarTokenMessage',_super);
	var __proto=ResUpdateWarTokenMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._warTokenBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenBean=this.readBean(_buf,WarTokenBean);
	}

	__proto.getId=function(){
		return 893;
	}

	/**战令 */
	/**战令 */
	__getset(0,__proto,'warTokenBean',function(){
		return this._warTokenBean;
		},function(value){
		this._warTokenBean=value;
	});

	return ResUpdateWarTokenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮器升级错误
*/
//class net.message.general.ResGeneralUpgradeWeaponErrorMessage extends net.Message
var ResGeneralUpgradeWeaponErrorMessage=(function(_super){
	function ResGeneralUpgradeWeaponErrorMessage(){
		/**1:未激活;2:道具不足;*/
		this._error=0;
		ResGeneralUpgradeWeaponErrorMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeWeaponErrorMessage,'net.message.general.ResGeneralUpgradeWeaponErrorMessage',_super);
	var __proto=ResGeneralUpgradeWeaponErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1413;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralUpgradeWeaponErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取VIP礼包
*/
//class net.message.vip.ResGetVipRewardMessage extends net.Message
var ResGetVipRewardMessage=(function(_super){
	function ResGetVipRewardMessage(){
		/**领取奖励等级 */
		this._lv=0;
		ResGetVipRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResGetVipRewardMessage,'net.message.vip.ResGetVipRewardMessage',_super);
	var __proto=ResGetVipRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 769;
	}

	/**领取奖励等级 */
	/**领取奖励等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResGetVipRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔战斗错误
*/
//class net.message.pata.ResPataFightErrorMessage extends net.Message
var ResPataFightErrorMessage=(function(_super){
	function ResPataFightErrorMessage(){
		/**1:参数错误;2:领过奖;3:不能扫荡;4:次数不足;5:挑战条件不足;6:战斗未结束;*/
		this._error=0;
		ResPataFightErrorMessage.__super.call(this);
	}

	__class(ResPataFightErrorMessage,'net.message.pata.ResPataFightErrorMessage',_super);
	var __proto=ResPataFightErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 247;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResPataFightErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场战斗记录
*/
//class net.message.arena.ResArenaGetFightRecordMessage extends net.Message
var ResArenaGetFightRecordMessage=(function(_super){
	function ResArenaGetFightRecordMessage(){
		/**战斗数据 */
		this._data=null;
		ResArenaGetFightRecordMessage.__super.call(this);
	}

	__class(ResArenaGetFightRecordMessage,'net.message.arena.ResArenaGetFightRecordMessage',_super);
	var __proto=ResArenaGetFightRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1129;
	}

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResArenaGetFightRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求加入军团首领
*/
//class net.message.worldboss.ResWorldBossJoinMessage extends net.Message
var ResWorldBossJoinMessage=(function(_super){
	function ResWorldBossJoinMessage(){
		/**你自己的对象 注意 你可能正处于死亡状态 */
		this._self=null;
		/**bossID */
		this._bossID=0;
		/**bossHP 小于等于0就是死亡状态 */
		this._boosHP=null;
		/**血量上限 */
		this._bossHpMax=null;
		/**BOSS护盾 */
		this._bossShield=null;
		/**BOSS护盾上限 */
		this._bossShieldMax=null;
		/**下次复活时间 时间戳 */
		this._rebornTime=null;
		ResWorldBossJoinMessage.__super.call(this);
		this._players=[];
		this._boxs=[];
	}

	__class(ResWorldBossJoinMessage,'net.message.worldboss.ResWorldBossJoinMessage',_super);
	var __proto=ResWorldBossJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._self);
		this.writeInt(_buf,this._players.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._players.length;++i_am_tmp_i){
			this._players[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._bossID);
		this.writeLong(_buf,this._boosHP);
		this.writeLong(_buf,this._bossHpMax);
		this.writeLong(_buf,this._bossShield);
		this.writeLong(_buf,this._bossShieldMax);
		this.writeLong(_buf,this._rebornTime);
		this.writeInt(_buf,this._boxs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._boxs.length;++i_am_tmp_i){
			this._boxs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._self=this.readBean(_buf,WorldBossBean);
		size52413035=this.readInt(_buf);
		this._players=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._players[i_am_tmp_i]=this.readBeanInList(_buf,WorldBossBean);
		}
		this._bossID=this.readInt(_buf);
		this._boosHP=this.readLong(_buf);
		this._bossHpMax=this.readLong(_buf);
		this._bossShield=this.readLong(_buf);
		this._bossShieldMax=this.readLong(_buf);
		this._rebornTime=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._boxs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._boxs[i_am_tmp_i]=this.readBeanInList(_buf,WorldBossRewardBox);
		}
	}

	__proto.getId=function(){
		return 501;
	}

	/**你自己的对象 注意 你可能正处于死亡状态 */
	/**你自己的对象 注意 你可能正处于死亡状态 */
	__getset(0,__proto,'self',function(){
		return this._self;
		},function(value){
		this._self=value;
	});

	/**bossID */
	/**bossID */
	__getset(0,__proto,'bossID',function(){
		return this._bossID;
		},function(value){
		this._bossID=value;
	});

	/**BOSS护盾上限 */
	/**BOSS护盾上限 */
	__getset(0,__proto,'bossShieldMax',function(){
		return this._bossShieldMax;
		},function(value){
		this._bossShieldMax=value;
	});

	/**房间里的其他玩家 */
	/**房间里的其他玩家 */
	__getset(0,__proto,'players',function(){
		return this._players;
		},function(value){
		this._players=value;
	});

	/**bossHP 小于等于0就是死亡状态 */
	/**bossHP 小于等于0就是死亡状态 */
	__getset(0,__proto,'boosHP',function(){
		return this._boosHP;
		},function(value){
		this._boosHP=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'bossHpMax',function(){
		return this._bossHpMax;
		},function(value){
		this._bossHpMax=value;
	});

	/**BOSS护盾 */
	/**BOSS护盾 */
	__getset(0,__proto,'bossShield',function(){
		return this._bossShield;
		},function(value){
		this._bossShield=value;
	});

	/**下次复活时间 时间戳 */
	/**下次复活时间 时间戳 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	/**地上未领取的箱子 */
	/**地上未领取的箱子 */
	__getset(0,__proto,'boxs',function(){
		return this._boxs;
		},function(value){
		this._boxs=value;
	});

	return ResWorldBossJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装逼
*/
//class net.message.chat.ReqChatZhuangBiMessage extends net.Message
var ReqChatZhuangBiMessage=(function(_super){
	function ReqChatZhuangBiMessage(){
		/**类型 0武将 1红颜 2装备 */
		this._type=0;
		/**该类型的ID */
		this._id=0;
		ReqChatZhuangBiMessage.__super.call(this);
	}

	__class(ReqChatZhuangBiMessage,'net.message.chat.ReqChatZhuangBiMessage',_super);
	var __proto=ReqChatZhuangBiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 775;
	}

	/**类型 0武将 1红颜 2装备 */
	/**类型 0武将 1红颜 2装备 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**该类型的ID */
	/**该类型的ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqChatZhuangBiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入队伍
*/
//class net.message.team.ReqTeamApplyMessage extends net.Message
var ReqTeamApplyMessage=(function(_super){
	function ReqTeamApplyMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**队伍唯一ID */
		this._uid=null;
		ReqTeamApplyMessage.__super.call(this);
	}

	__class(ReqTeamApplyMessage,'net.message.team.ReqTeamApplyMessage',_super);
	var __proto=ReqTeamApplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1254;
	}

	/**队伍唯一ID */
	/**队伍唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTeamApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ReqOnHookRewardInfoMessage extends net.Message
var ReqOnHookRewardInfoMessage=(function(_super){
	function ReqOnHookRewardInfoMessage(){
		ReqOnHookRewardInfoMessage.__super.call(this);;
	}

	__class(ReqOnHookRewardInfoMessage,'net.message.misc.ReqOnHookRewardInfoMessage',_super);
	var __proto=ReqOnHookRewardInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1450;
	}

	return ReqOnHookRewardInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改是否允许自动入帮错误
*/
//class net.message.guild.ResGuildChangeAutoAgreeApplyErrorMessage extends net.Message
var ResGuildChangeAutoAgreeApplyErrorMessage=(function(_super){
	function ResGuildChangeAutoAgreeApplyErrorMessage(){
		/**1:无权限;2:没有帮会;*/
		this._error=0;
		ResGuildChangeAutoAgreeApplyErrorMessage.__super.call(this);
	}

	__class(ResGuildChangeAutoAgreeApplyErrorMessage,'net.message.guild.ResGuildChangeAutoAgreeApplyErrorMessage',_super);
	var __proto=ResGuildChangeAutoAgreeApplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1211;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildChangeAutoAgreeApplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看玩家
*/
//class net.message.chat.ResLookPlayerMessage extends net.Message
var ResLookPlayerMessage=(function(_super){
	function ResLookPlayerMessage(){
		/**对象信息 */
		this._appearanceBean=null;
		ResLookPlayerMessage.__super.call(this);
	}

	__class(ResLookPlayerMessage,'net.message.chat.ResLookPlayerMessage',_super);
	var __proto=ResLookPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._appearanceBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
	}

	__proto.getId=function(){
		return 793;
	}

	/**对象信息 */
	/**对象信息 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	return ResLookPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升级错误
*/
//class net.message.pet.ResUpgradePetLevelErrorMessage extends net.Message
var ResUpgradePetLevelErrorMessage=(function(_super){
	function ResUpgradePetLevelErrorMessage(){
		/**1:没有宠物;2:等级达到上限;3:物品不足;4:没钱;*/
		this._error=0;
		ResUpgradePetLevelErrorMessage.__super.call(this);
	}

	__class(ResUpgradePetLevelErrorMessage,'net.message.pet.ResUpgradePetLevelErrorMessage',_super);
	var __proto=ResUpgradePetLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 159;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradePetLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体宝石升级
*/
//class net.message.fit.ReqFitGemUpgradeMessage extends net.Message
var ReqFitGemUpgradeMessage=(function(_super){
	function ReqFitGemUpgradeMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
		this._equipType=0;
		/**道具在装备的下标[1:][2:][3:][4:][5:] */
		this._gemType=0;
		ReqFitGemUpgradeMessage.__super.call(this);
	}

	__class(ReqFitGemUpgradeMessage,'net.message.fit.ReqFitGemUpgradeMessage',_super);
	var __proto=ReqFitGemUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equipType);
		this.writeInt(_buf,this._gemType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._equipType=this.readInt(_buf);
		this._gemType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1416;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	__getset(0,__proto,'equipType',function(){
		return this._equipType;
		},function(value){
		this._equipType=value;
	});

	/**道具在装备的下标[1:][2:][3:][4:][5:] */
	/**道具在装备的下标[1:][2:][3:][4:][5:] */
	__getset(0,__proto,'gemType',function(){
		return this._gemType;
		},function(value){
		this._gemType=value;
	});

	return ReqFitGemUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会下注错误
*/
//class net.message.qunyinghui.ResQunYingHuiBetErrorMessage extends net.Message
var ResQunYingHuiBetErrorMessage=(function(_super){
	function ResQunYingHuiBetErrorMessage(){
		/**1:配置错误;2:已经下注;3:角色不存在;4:没钱;5:不允许下注;6:参数错误;7:活动未开放;8:无法下注;*/
		this._error=0;
		ResQunYingHuiBetErrorMessage.__super.call(this);
	}

	__class(ResQunYingHuiBetErrorMessage,'net.message.qunyinghui.ResQunYingHuiBetErrorMessage',_super);
	var __proto=ResQunYingHuiBetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 478;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQunYingHuiBetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用合成错误
*/
//class net.message.upgrade.ResCommonSynthesisErrorMessage extends net.Message
var ResCommonSynthesisErrorMessage=(function(_super){
	function ResCommonSynthesisErrorMessage(){
		/**1:所需材料不足;2:错误的合成对象;3:放不下;*/
		this._error=0;
		ResCommonSynthesisErrorMessage.__super.call(this);
	}

	__class(ResCommonSynthesisErrorMessage,'net.message.upgrade.ResCommonSynthesisErrorMessage',_super);
	var __proto=ResCommonSynthesisErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1039;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCommonSynthesisErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应邀请加入军团
*/
//class net.message.guild.ResGuildInviteReplyMessage extends net.Message
var ResGuildInviteReplyMessage=(function(_super){
	function ResGuildInviteReplyMessage(){
		ResGuildInviteReplyMessage.__super.call(this);;
	}

	__class(ResGuildInviteReplyMessage,'net.message.guild.ResGuildInviteReplyMessage',_super);
	var __proto=ResGuildInviteReplyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1241;
	}

	return ResGuildInviteReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供错误
*/
//class net.message.gongCe.ResQinWangTeGongErrorMessage extends net.Message
var ResQinWangTeGongErrorMessage=(function(_super){
	function ResQinWangTeGongErrorMessage(){
		/**1:活动未开启;2:未充值;3:已领取;4:没有自选奖励;*/
		this._error=0;
		ResQinWangTeGongErrorMessage.__super.call(this);
	}

	__class(ResQinWangTeGongErrorMessage,'net.message.gongCe.ResQinWangTeGongErrorMessage',_super);
	var __proto=ResQinWangTeGongErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1671;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQinWangTeGongErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡
*/
//class net.message.chat.ResChatNeedHelpMessage extends net.Message
var ResChatNeedHelpMessage=(function(_super){
	function ResChatNeedHelpMessage(){
		ResChatNeedHelpMessage.__super.call(this);;
	}

	__class(ResChatNeedHelpMessage,'net.message.chat.ResChatNeedHelpMessage',_super);
	var __proto=ResChatNeedHelpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 875;
	}

	return ResChatNeedHelpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*添加帮会事件
*/
//class net.message.guild.ResGuildAddEventMessage extends net.Message
var ResGuildAddEventMessage=(function(_super){
	function ResGuildAddEventMessage(){
		/**时间 */
		this._event=null;
		ResGuildAddEventMessage.__super.call(this);
	}

	__class(ResGuildAddEventMessage,'net.message.guild.ResGuildAddEventMessage',_super);
	var __proto=ResGuildAddEventMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._event);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._event=this.readBean(_buf,GuildEventBean);
	}

	__proto.getId=function(){
		return 1202;
	}

	/**时间 */
	/**时间 */
	__getset(0,__proto,'event',function(){
		return this._event;
		},function(value){
		this._event=value;
	});

	return ResGuildAddEventMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新镖车等级
*/
//class net.message.escort.ResFlushEscortLvMessage extends net.Message
var ResFlushEscortLvMessage=(function(_super){
	function ResFlushEscortLvMessage(){
		/**刷新后的等级 */
		this._lv=0;
		ResFlushEscortLvMessage.__super.call(this);
	}

	__class(ResFlushEscortLvMessage,'net.message.escort.ResFlushEscortLvMessage',_super);
	var __proto=ResFlushEscortLvMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 330;
	}

	/**刷新后的等级 */
	/**刷新后的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResFlushEscortLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新机关技能
*/
//class net.message.xuannv.ResUpdateXuanNvSkillMessage extends net.Message
var ResUpdateXuanNvSkillMessage=(function(_super){
	function ResUpdateXuanNvSkillMessage(){
		ResUpdateXuanNvSkillMessage.__super.call(this);
		this._skill=[];
	}

	__class(ResUpdateXuanNvSkillMessage,'net.message.xuannv.ResUpdateXuanNvSkillMessage',_super);
	var __proto=ResUpdateXuanNvSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skill.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skill.length;++i_am_tmp_i){
			this._skill[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._skill=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skill[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 1591;
	}

	/**当前技能列表 */
	/**当前技能列表 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return ResUpdateXuanNvSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.nineHeavy.ResNineHeavyDeadMessage extends net.Message
var ResNineHeavyDeadMessage=(function(_super){
	function ResNineHeavyDeadMessage(){
		/**类型[1:玩家][2:怪物] */
		this._type=0;
		/**ID */
		this._uid=null;
		ResNineHeavyDeadMessage.__super.call(this);
	}

	__class(ResNineHeavyDeadMessage,'net.message.nineHeavy.ResNineHeavyDeadMessage',_super);
	var __proto=ResNineHeavyDeadMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1187;
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**类型[1:玩家][2:怪物] */
	/**类型[1:玩家][2:怪物] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResNineHeavyDeadMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(本地)错误
*/
//class net.message.login.ResLoginLocalErrorMessage extends net.Message
var ResLoginLocalErrorMessage=(function(_super){
	function ResLoginLocalErrorMessage(){
		/**1:帐号名称非法;2:主机地址非法;3:重复登录;4:服务器非法;5:名称重复;6:踢下线;7:封号;*/
		this._error=0;
		ResLoginLocalErrorMessage.__super.call(this);
	}

	__class(ResLoginLocalErrorMessage,'net.message.login.ResLoginLocalErrorMessage',_super);
	var __proto=ResLoginLocalErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 4;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLoginLocalErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(37)错误
*/
//class net.message.login.ResLogin37ErrorMessage extends net.Message
var ResLogin37ErrorMessage=(function(_super){
	function ResLogin37ErrorMessage(){
		/**1:帐号名称非法;2:主机地址非法;3:重复登录;4:服务器非法;5:名称重复;6:踢下线;7:封号;*/
		this._error=0;
		ResLogin37ErrorMessage.__super.call(this);
	}

	__class(ResLogin37ErrorMessage,'net.message.login.ResLogin37ErrorMessage',_super);
	var __proto=ResLogin37ErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 718;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLogin37ErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取邮件
*/
//class net.message.mail.ResCollectMailMessage extends net.Message
var ResCollectMailMessage=(function(_super){
	function ResCollectMailMessage(){
		/**邮件ID,前端需要设置为已领取 */
		this._mailID=0;
		ResCollectMailMessage.__super.call(this);
	}

	__class(ResCollectMailMessage,'net.message.mail.ResCollectMailMessage',_super);
	var __proto=ResCollectMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 44;
	}

	/**邮件ID,前端需要设置为已领取 */
	/**邮件ID,前端需要设置为已领取 */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	return ResCollectMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击玩家
*/
//class net.message.worldboss.ReqWorldBossAttackPlayerMessage extends net.Message
var ReqWorldBossAttackPlayerMessage=(function(_super){
	function ReqWorldBossAttackPlayerMessage(){
		/**目前的ID */
		this._target=null;
		ReqWorldBossAttackPlayerMessage.__super.call(this);
	}

	__class(ReqWorldBossAttackPlayerMessage,'net.message.worldboss.ReqWorldBossAttackPlayerMessage',_super);
	var __proto=ReqWorldBossAttackPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._target);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1170;
	}

	/**目前的ID */
	/**目前的ID */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	return ReqWorldBossAttackPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求求婚错误
*/
//class net.message.marriage.ResMarriageProposeErrorMessage extends net.Message
var ResMarriageProposeErrorMessage=(function(_super){
	function ResMarriageProposeErrorMessage(){
		/**1:已经结婚不要骚动;2:等级未达标;3:今日次数用尽;4:目标已经结婚;5:用户不存在;6:重复提交;7:穷;*/
		this._error=0;
		ResMarriageProposeErrorMessage.__super.call(this);
	}

	__class(ResMarriageProposeErrorMessage,'net.message.marriage.ResMarriageProposeErrorMessage',_super);
	var __proto=ResMarriageProposeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 533;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageProposeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买商店商品
*/
//class net.message.shop.ResShopBuyMessage extends net.Message
var ResShopBuyMessage=(function(_super){
	function ResShopBuyMessage(){
		/**商店商品ID */
		this._shopGoodsID=0;
		/**数量 */
		this._num=0;
		ResShopBuyMessage.__super.call(this);
	}

	__class(ResShopBuyMessage,'net.message.shop.ResShopBuyMessage',_super);
	var __proto=ResShopBuyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopGoodsID);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopGoodsID=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 58;
	}

	/**商店商品ID */
	/**商店商品ID */
	__getset(0,__proto,'shopGoodsID',function(){
		return this._shopGoodsID;
		},function(value){
		this._shopGoodsID=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ResShopBuyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*改变归属
*/
//class net.message.dungeon.ResChangeBossOwnerMessage extends net.Message
var ResChangeBossOwnerMessage=(function(_super){
	function ResChangeBossOwnerMessage(){
		/**战斗结果 */
		this._data=null;
		ResChangeBossOwnerMessage.__super.call(this);
	}

	__class(ResChangeBossOwnerMessage,'net.message.dungeon.ResChangeBossOwnerMessage',_super);
	var __proto=ResChangeBossOwnerMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 782;
	}

	/**战斗结果 */
	/**战斗结果 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResChangeBossOwnerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回答问题
*/
//class net.message.examination.ResKejuAnswerExaminationMessage extends net.Message
var ResKejuAnswerExaminationMessage=(function(_super){
	function ResKejuAnswerExaminationMessage(){
		/**你的回答 */
		this._index=0;
		/**正确答案 */
		this._correct=0;
		ResKejuAnswerExaminationMessage.__super.call(this);
	}

	__class(ResKejuAnswerExaminationMessage,'net.message.examination.ResKejuAnswerExaminationMessage',_super);
	var __proto=ResKejuAnswerExaminationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._correct);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._correct=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 413;
	}

	/**你的回答 */
	/**你的回答 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**正确答案 */
	/**正确答案 */
	__getset(0,__proto,'correct',function(){
		return this._correct;
		},function(value){
		this._correct=value;
	});

	return ResKejuAnswerExaminationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得稀有命格
*/
//class net.message.lieming.ResGetXiYouMingGeMessage extends net.Message
var ResGetXiYouMingGeMessage=(function(_super){
	function ResGetXiYouMingGeMessage(){
		/**玩家名称 */
		this._name=null;
		/**物品列表 */
		this._goodId=0;
		ResGetXiYouMingGeMessage.__super.call(this);
	}

	__class(ResGetXiYouMingGeMessage,'net.message.lieming.ResGetXiYouMingGeMessage',_super);
	var __proto=ResGetXiYouMingGeMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._goodId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._goodId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 728;
	}

	/**玩家名称 */
	/**玩家名称 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**物品列表 */
	/**物品列表 */
	__getset(0,__proto,'goodId',function(){
		return this._goodId;
		},function(value){
		this._goodId=value;
	});

	return ResGetXiYouMingGeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改是否允许自动入帮
*/
//class net.message.guild.ResGuildChangeAutoAgreeApplyMessage extends net.Message
var ResGuildChangeAutoAgreeApplyMessage=(function(_super){
	function ResGuildChangeAutoAgreeApplyMessage(){
		/**是否自动同意 */
		this._autoAgreeApply=false;
		ResGuildChangeAutoAgreeApplyMessage.__super.call(this);
	}

	__class(ResGuildChangeAutoAgreeApplyMessage,'net.message.guild.ResGuildChangeAutoAgreeApplyMessage',_super);
	var __proto=ResGuildChangeAutoAgreeApplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._autoAgreeApply);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._autoAgreeApply=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1210;
	}

	/**是否自动同意 */
	/**是否自动同意 */
	__getset(0,__proto,'autoAgreeApply',function(){
		return this._autoAgreeApply;
		},function(value){
		this._autoAgreeApply=value;
	});

	return ResGuildChangeAutoAgreeApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求膜拜对象
*/
//class net.message.kingwar.ResKingWarFightGetWorshipInfoMessage extends net.Message
var ResKingWarFightGetWorshipInfoMessage=(function(_super){
	function ResKingWarFightGetWorshipInfoMessage(){
		/**外观对象 */
		this._appearanceBean=null;
		/**是否已经膜拜 */
		this._rewarded=false;
		ResKingWarFightGetWorshipInfoMessage.__super.call(this);
	}

	__class(ResKingWarFightGetWorshipInfoMessage,'net.message.kingwar.ResKingWarFightGetWorshipInfoMessage',_super);
	var __proto=ResKingWarFightGetWorshipInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._appearanceBean);
		this.writeBoolean(_buf,this._rewarded);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._appearanceBean=this.readBean(_buf,AppearanceBean);
		this._rewarded=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1282;
	}

	/**外观对象 */
	/**外观对象 */
	__getset(0,__proto,'appearanceBean',function(){
		return this._appearanceBean;
		},function(value){
		this._appearanceBean=value;
	});

	/**是否已经膜拜 */
	/**是否已经膜拜 */
	__getset(0,__proto,'rewarded',function(){
		return this._rewarded;
		},function(value){
		this._rewarded=value;
	});

	return ResKingWarFightGetWorshipInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知玩家死亡
*/
//class net.message.worldboss.ResWorldBossPlayerDeadMessage extends net.Message
var ResWorldBossPlayerDeadMessage=(function(_super){
	function ResWorldBossPlayerDeadMessage(){
		/**玩家ID */
		this._uid=null;
		ResWorldBossPlayerDeadMessage.__super.call(this);
	}

	__class(ResWorldBossPlayerDeadMessage,'net.message.worldboss.ResWorldBossPlayerDeadMessage',_super);
	var __proto=ResWorldBossPlayerDeadMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1173;
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResWorldBossPlayerDeadMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡错误
*/
//class net.message.chat.ResChatHelpErrorMessage extends net.Message
var ResChatHelpErrorMessage=(function(_super){
	function ResChatHelpErrorMessage(){
		/**1:其他人已经回应求助;2:求助已经过期;3:没有协助次数了;*/
		this._error=0;
		ResChatHelpErrorMessage.__super.call(this);
	}

	__class(ResChatHelpErrorMessage,'net.message.chat.ResChatHelpErrorMessage',_super);
	var __proto=ResChatHelpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 761;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatHelpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸获取膜拜奖励错误
*/
//class net.message.kingwar.ResKingWarFightGetWorshipRewardErrorMessage extends net.Message
var ResKingWarFightGetWorshipRewardErrorMessage=(function(_super){
	function ResKingWarFightGetWorshipRewardErrorMessage(){
		/**1:配置错误;2:已经领取;3:不能领取;*/
		this._error=0;
		ResKingWarFightGetWorshipRewardErrorMessage.__super.call(this);
	}

	__class(ResKingWarFightGetWorshipRewardErrorMessage,'net.message.kingwar.ResKingWarFightGetWorshipRewardErrorMessage',_super);
	var __proto=ResKingWarFightGetWorshipRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1285;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarFightGetWorshipRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建副英雄错误
*/
//class net.message.hero.ResCreateViceHeroErrorMessage extends net.Message
var ResCreateViceHeroErrorMessage=(function(_super){
	function ResCreateViceHeroErrorMessage(){
		/**1:性别非法;2:职业非法;3:等级不足;4:所有的英雄都已经创建完毕;*/
		this._error=0;
		ResCreateViceHeroErrorMessage.__super.call(this);
	}

	__class(ResCreateViceHeroErrorMessage,'net.message.hero.ResCreateViceHeroErrorMessage',_super);
	var __proto=ResCreateViceHeroErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 56;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCreateViceHeroErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.nineHeavy.ReqNineHeavyPlayerMoveMessage extends net.Message
var ReqNineHeavyPlayerMoveMessage=(function(_super){
	function ReqNineHeavyPlayerMoveMessage(){
		/**目标网格 */
		this._point=null;
		ReqNineHeavyPlayerMoveMessage.__super.call(this);
	}

	__class(ReqNineHeavyPlayerMoveMessage,'net.message.nineHeavy.ReqNineHeavyPlayerMoveMessage',_super);
	var __proto=ReqNineHeavyPlayerMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 378;
	}

	/**目标网格 */
	/**目标网格 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ReqNineHeavyPlayerMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家给钱复活
*/
//class net.message.nineHeavy.ReqNineHeavyReliveMessage extends net.Message
var ReqNineHeavyReliveMessage=(function(_super){
	function ReqNineHeavyReliveMessage(){
		ReqNineHeavyReliveMessage.__super.call(this);;
	}

	__class(ReqNineHeavyReliveMessage,'net.message.nineHeavy.ReqNineHeavyReliveMessage',_super);
	var __proto=ReqNineHeavyReliveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1114;
	}

	return ReqNineHeavyReliveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取积分奖励错误
*/
//class net.message.gb.ResLegionBattleIntegralRewardErrorMessage extends net.Message
var ResLegionBattleIntegralRewardErrorMessage=(function(_super){
	function ResLegionBattleIntegralRewardErrorMessage(){
		/**1:未开启;2:你不在活动中;3:已经领取过;4:积分不足;5:参数错误;*/
		this._error=0;
		ResLegionBattleIntegralRewardErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleIntegralRewardErrorMessage,'net.message.gb.ResLegionBattleIntegralRewardErrorMessage',_super);
	var __proto=ResLegionBattleIntegralRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1342;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleIntegralRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*媚坞寻宝
*/
//class net.message.gongCe.ResMeiWuHuntMessage extends net.Message
var ResMeiWuHuntMessage=(function(_super){
	function ResMeiWuHuntMessage(){
		/**媚坞信息 */
		this._meiWuBean=null;
		/**本次郿坞开出的位置 */
		this._position=0;
		ResMeiWuHuntMessage.__super.call(this);
	}

	__class(ResMeiWuHuntMessage,'net.message.gongCe.ResMeiWuHuntMessage',_super);
	var __proto=ResMeiWuHuntMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._meiWuBean);
		this.writeInt(_buf,this._position);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._meiWuBean=this.readBean(_buf,MeiWuBean);
		this._position=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1667;
	}

	/**媚坞信息 */
	/**媚坞信息 */
	__getset(0,__proto,'meiWuBean',function(){
		return this._meiWuBean;
		},function(value){
		this._meiWuBean=value;
	});

	/**本次郿坞开出的位置 */
	/**本次郿坞开出的位置 */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return ResMeiWuHuntMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.totem.ResTotemActiveMessage extends net.Message
var ResTotemActiveMessage=(function(_super){
	function ResTotemActiveMessage(){
		/**对象 */
		this._totemBean=null;
		ResTotemActiveMessage.__super.call(this);
	}

	__class(ResTotemActiveMessage,'net.message.totem.ResTotemActiveMessage',_super);
	var __proto=ResTotemActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._totemBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._totemBean=this.readBean(_buf,TotemBean);
	}

	__proto.getId=function(){
		return 858;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'totemBean',function(){
		return this._totemBean;
		},function(value){
		this._totemBean=value;
	});

	return ResTotemActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新玩家状态
*/
//class net.message.nineHeavy.ResNineHeavyChangeStateMessage extends net.Message
var ResNineHeavyChangeStateMessage=(function(_super){
	function ResNineHeavyChangeStateMessage(){
		/**ID */
		this._uid=null;
		/**0 死亡 1复活 */
		this._state=0;
		ResNineHeavyChangeStateMessage.__super.call(this);
	}

	__class(ResNineHeavyChangeStateMessage,'net.message.nineHeavy.ResNineHeavyChangeStateMessage',_super);
	var __proto=ResNineHeavyChangeStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._state);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._state=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 384;
	}

	/**ID */
	/**ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**0 死亡 1复活 */
	/**0 死亡 1复活 */
	__getset(0,__proto,'state',function(){
		return this._state;
		},function(value){
		this._state=value;
	});

	return ResNineHeavyChangeStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求购买投资计划错误
*/
//class net.message.investment.ResInvestmengBuyMessageErrorMessage extends net.Message
var ResInvestmengBuyMessageErrorMessage=(function(_super){
	function ResInvestmengBuyMessageErrorMessage(){
		/**1:你已经买过了;2:结束活动了;3:穷;*/
		this._error=0;
		ResInvestmengBuyMessageErrorMessage.__super.call(this);
	}

	__class(ResInvestmengBuyMessageErrorMessage,'net.message.investment.ResInvestmengBuyMessageErrorMessage',_super);
	var __proto=ResInvestmengBuyMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 673;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResInvestmengBuyMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔战斗
*/
//class net.message.pata.ReqPataFightMessage extends net.Message
var ReqPataFightMessage=(function(_super){
	function ReqPataFightMessage(){
		/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
		this._type=0;
		/**层 */
		this._layer=0;
		/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
		this._param=0;
		ReqPataFightMessage.__super.call(this);
	}

	__class(ReqPataFightMessage,'net.message.pata.ReqPataFightMessage',_super);
	var __proto=ReqPataFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._param);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._layer=this.readInt(_buf);
		this._param=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 245;
	}

	/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
	/**类型[1:虎牢关][2:长坂坡][3:铜雀台][4:华容道][5:限时爬塔][6:蛮将爬塔][7:合体][8:限时爬塔1][9:限时爬塔2][10:限时爬塔2][11:结婚组队爬塔][12:武将列传] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
	/**参数(藏宝图表示星.藏宝图,降妖除魔,勇闯天庭填-1表示一键扫荡)*/
	__getset(0,__proto,'param',function(){
		return this._param;
		},function(value){
		this._param=value;
	});

	return ReqPataFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级宠物技能
*/
//class net.message.pet.ResUpgradePetSkillMessage extends net.Message
var ResUpgradePetSkillMessage=(function(_super){
	function ResUpgradePetSkillMessage(){
		/**宠物ID */
		this._petID=0;
		ResUpgradePetSkillMessage.__super.call(this);
		this._skills=[];
	}

	__class(ResUpgradePetSkillMessage,'net.message.pet.ResUpgradePetSkillMessage',_super);
	var __proto=ResUpgradePetSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 1190;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**技能数据 */
	/**技能数据 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return ResUpgradePetSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知帮会成员信息变更
*/
//class net.message.legion.ResLeginUpdateMessageMessage extends net.Message
var ResLeginUpdateMessageMessage=(function(_super){
	function ResLeginUpdateMessageMessage(){
		/**变化了的成员信息 */
		this._bean=null;
		ResLeginUpdateMessageMessage.__super.call(this);
	}

	__class(ResLeginUpdateMessageMessage,'net.message.legion.ResLeginUpdateMessageMessage',_super);
	var __proto=ResLeginUpdateMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,GuildMemberBean);
	}

	__proto.getId=function(){
		return 1678;
	}

	/**变化了的成员信息 */
	/**变化了的成员信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResLeginUpdateMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(37)
*/
//class net.message.login.ResLogin37Message extends net.Message
var ResLogin37Message=(function(_super){
	function ResLogin37Message(){
		/**初始化信息 */
		this._init=null;
		/**前端unix时间戳 */
		this._ctime=null;
		/**后端unix时间戳 */
		this._stime=null;
		ResLogin37Message.__super.call(this);
	}

	__class(ResLogin37Message,'net.message.login.ResLogin37Message',_super);
	var __proto=ResLogin37Message.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._init);
		this.writeLong(_buf,this._ctime);
		this.writeLong(_buf,this._stime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._init=this.readBean(_buf,InitBean);
		this._ctime=this.readLong(_buf);
		this._stime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 717;
	}

	/**后端unix时间戳 */
	/**后端unix时间戳 */
	__getset(0,__proto,'stime',function(){
		return this._stime;
		},function(value){
		this._stime=value;
	});

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'ctime',function(){
		return this._ctime;
		},function(value){
		this._ctime=value;
	});

	/**初始化信息 */
	/**初始化信息 */
	__getset(0,__proto,'init',function(){
		return this._init;
		},function(value){
		this._init=value;
	});

	return ResLogin37Message;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离开房间
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomLeaveMessage extends net.Message
var ReqTeamDuplicateRoomLeaveMessage=(function(_super){
	function ReqTeamDuplicateRoomLeaveMessage(){
		ReqTeamDuplicateRoomLeaveMessage.__super.call(this);;
	}

	__class(ReqTeamDuplicateRoomLeaveMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomLeaveMessage',_super);
	var __proto=ReqTeamDuplicateRoomLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 422;
	}

	return ReqTeamDuplicateRoomLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有队伍的简要信息
*/
//class net.message.team.ResTeamGetAllMessage extends net.Message
var ResTeamGetAllMessage=(function(_super){
	function ResTeamGetAllMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		ResTeamGetAllMessage.__super.call(this);
		this._all=[];
	}

	__class(ResTeamGetAllMessage,'net.message.team.ResTeamGetAllMessage',_super);
	var __proto=ResTeamGetAllMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._all.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._all.length;++i_am_tmp_i){
			this._all[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._all=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._all[i_am_tmp_i]=this.readBeanInList(_buf,TeamBriefBean);
		}
	}

	__proto.getId=function(){
		return 1270;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**所有的队伍 */
	/**所有的队伍 */
	__getset(0,__proto,'all',function(){
		return this._all;
		},function(value){
		this._all=value;
	});

	return ResTeamGetAllMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计状态
*/
//class net.message.emptycity.ReqEmptyGetDataMessage extends net.Message
var ReqEmptyGetDataMessage=(function(_super){
	function ReqEmptyGetDataMessage(){
		ReqEmptyGetDataMessage.__super.call(this);;
	}

	__class(ReqEmptyGetDataMessage,'net.message.emptycity.ReqEmptyGetDataMessage',_super);
	var __proto=ReqEmptyGetDataMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1087;
	}

	return ReqEmptyGetDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看其他玩家信息
*/
//class net.message.fight.ResOtherPlayerFightTeamMessage extends net.Message
var ResOtherPlayerFightTeamMessage=(function(_super){
	function ResOtherPlayerFightTeamMessage(){
		/**uID */
		this._uid=null;
		/**其他玩家信息 */
		this._bean=null;
		/**战斗力 */
		this._fightPower=null;
		ResOtherPlayerFightTeamMessage.__super.call(this);
	}

	__class(ResOtherPlayerFightTeamMessage,'net.message.fight.ResOtherPlayerFightTeamMessage',_super);
	var __proto=ResOtherPlayerFightTeamMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._bean);
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._bean=this.readBean(_buf,FightTeamBean);
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1442;
	}

	/**uID */
	/**uID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**其他玩家信息 */
	/**其他玩家信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ResOtherPlayerFightTeamMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝错误
*/
//class net.message.textureHunt.ResHuntStartErrorMessage extends net.Message
var ResHuntStartErrorMessage=(function(_super){
	function ResHuntStartErrorMessage(){
		/**1:穷;2:未达到功能开启条件;3:次数限制;*/
		this._error=0;
		ResHuntStartErrorMessage.__super.call(this);
	}

	__class(ResHuntStartErrorMessage,'net.message.textureHunt.ResHuntStartErrorMessage',_super);
	var __proto=ResHuntStartErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 700;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResHuntStartErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖
*/
//class net.message.escort.ResEscortRobberyMessage extends net.Message
var ResEscortRobberyMessage=(function(_super){
	function ResEscortRobberyMessage(){
		ResEscortRobberyMessage.__super.call(this);;
	}

	__class(ResEscortRobberyMessage,'net.message.escort.ResEscortRobberyMessage',_super);
	var __proto=ResEscortRobberyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 343;
	}

	return ResEscortRobberyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能
*/
//class net.message.xuannv.ResReplaceXiLianFaQiMessage extends net.Message
var ResReplaceXiLianFaQiMessage=(function(_super){
	function ResReplaceXiLianFaQiMessage(){
		/**法器ID */
		this._faqi=0;
		ResReplaceXiLianFaQiMessage.__super.call(this);
		this._skills=[];
	}

	__class(ResReplaceXiLianFaQiMessage,'net.message.xuannv.ResReplaceXiLianFaQiMessage',_super);
	var __proto=ResReplaceXiLianFaQiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._faqi);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._faqi=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 263;
	}

	/**法器ID */
	/**法器ID */
	__getset(0,__proto,'faqi',function(){
		return this._faqi;
		},function(value){
		this._faqi=value;
	});

	/**技能列表 */
	/**技能列表 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return ResReplaceXiLianFaQiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家成功分享
*/
//class net.message.misc.ResZhiJianShareSucMessage extends net.Message
var ResZhiJianShareSucMessage=(function(_super){
	function ResZhiJianShareSucMessage(){
		/**今日已分享成功次数 */
		this._shareTimes=0;
		/**当前已领奖次数 */
		this._getTimes=0;
		ResZhiJianShareSucMessage.__super.call(this);
	}

	__class(ResZhiJianShareSucMessage,'net.message.misc.ResZhiJianShareSucMessage',_super);
	var __proto=ResZhiJianShareSucMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shareTimes);
		this.writeInt(_buf,this._getTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shareTimes=this.readInt(_buf);
		this._getTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1528;
	}

	/**今日已分享成功次数 */
	/**今日已分享成功次数 */
	__getset(0,__proto,'shareTimes',function(){
		return this._shareTimes;
		},function(value){
		this._shareTimes=value;
	});

	/**当前已领奖次数 */
	/**当前已领奖次数 */
	__getset(0,__proto,'getTimes',function(){
		return this._getTimes;
		},function(value){
		this._getTimes=value;
	});

	return ResZhiJianShareSucMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*时装升星错误
*/
//class net.message.skin.ResUpgradeSkinStarErrorMessage extends net.Message
var ResUpgradeSkinStarErrorMessage=(function(_super){
	function ResUpgradeSkinStarErrorMessage(){
		/**1:穷;2:已达到最大等级;3:英雄不存在;4:皮肤未激活;5:配置错误;*/
		this._error=0;
		ResUpgradeSkinStarErrorMessage.__super.call(this);
	}

	__class(ResUpgradeSkinStarErrorMessage,'net.message.skin.ResUpgradeSkinStarErrorMessage',_super);
	var __proto=ResUpgradeSkinStarErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1465;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeSkinStarErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝时间
*/
//class net.message.textureHunt.ResGetTimeInfoMessage extends net.Message
var ResGetTimeInfoMessage=(function(_super){
	function ResGetTimeInfoMessage(){
		ResGetTimeInfoMessage.__super.call(this);
		this._timeBeans=[];
	}

	__class(ResGetTimeInfoMessage,'net.message.textureHunt.ResGetTimeInfoMessage',_super);
	var __proto=ResGetTimeInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._timeBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._timeBeans.length;++i_am_tmp_i){
			this._timeBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._timeBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._timeBeans[i_am_tmp_i]=this.readBeanInList(_buf,TimeBean);
		}
	}

	__proto.getId=function(){
		return 1575;
	}

	/**寻宝时间 */
	/**寻宝时间 */
	__getset(0,__proto,'timeBeans',function(){
		return this._timeBeans;
		},function(value){
		this._timeBeans=value;
	});

	return ResGetTimeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场战斗记录错误
*/
//class net.message.arena.ResArenaGetFightRecordErrorMessage extends net.Message
var ResArenaGetFightRecordErrorMessage=(function(_super){
	function ResArenaGetFightRecordErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResArenaGetFightRecordErrorMessage.__super.call(this);
	}

	__class(ResArenaGetFightRecordErrorMessage,'net.message.arena.ResArenaGetFightRecordErrorMessage',_super);
	var __proto=ResArenaGetFightRecordErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1130;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResArenaGetFightRecordErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备附灵
*/
//class net.message.equip.ResEquipFuLingMessage extends net.Message
var ResEquipFuLingMessage=(function(_super){
	function ResEquipFuLingMessage(){
		/**附灵的id */
		this._id=0;
		ResEquipFuLingMessage.__super.call(this);
	}

	__class(ResEquipFuLingMessage,'net.message.equip.ResEquipFuLingMessage',_super);
	var __proto=ResEquipFuLingMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1539;
	}

	/**附灵的id */
	/**附灵的id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResEquipFuLingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场信息
*/
//class net.message.arena.ResArenaGetInfoMessage extends net.Message
var ResArenaGetInfoMessage=(function(_super){
	function ResArenaGetInfoMessage(){
		/**名次 */
		this._rank=0;
		/**剩余挑战次数 */
		this._times=0;
		/**下次恢复时间 */
		this._recoverTime=0;
		/**已购买次数 */
		this._buyTimes=0;
		ResArenaGetInfoMessage.__super.call(this);
		this._users=[];
		this._record=[];
	}

	__class(ResArenaGetInfoMessage,'net.message.arena.ResArenaGetInfoMessage',_super);
	var __proto=ResArenaGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank);
		this.writeInt(_buf,this._times);
		this.writeInt(_buf,this._recoverTime);
		this.writeInt(_buf,this._buyTimes);
		this.writeInt(_buf,this._users.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._users.length;++i_am_tmp_i){
			this._users[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._record.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._record.length;++i_am_tmp_i){
			this._record[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rank=this.readInt(_buf);
		this._times=this.readInt(_buf);
		this._recoverTime=this.readInt(_buf);
		this._buyTimes=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._users=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._users[i_am_tmp_i]=this.readBeanInList(_buf,ArenaTargetBean);
		}
		size52413035=this.readInt(_buf);
		this._record=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._record[i_am_tmp_i]=this.readBeanInList(_buf,ArenaFightRecordBean);
		}
	}

	__proto.getId=function(){
		return 281;
	}

	/**名次 */
	/**名次 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**下次恢复时间 */
	/**下次恢复时间 */
	__getset(0,__proto,'recoverTime',function(){
		return this._recoverTime;
		},function(value){
		this._recoverTime=value;
	});

	/**玩家列表 */
	/**玩家列表 */
	__getset(0,__proto,'users',function(){
		return this._users;
		},function(value){
		this._users=value;
	});

	/**已购买次数 */
	/**已购买次数 */
	__getset(0,__proto,'buyTimes',function(){
		return this._buyTimes;
		},function(value){
		this._buyTimes=value;
	});

	/**记录 */
	/**记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return ResArenaGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装错误
*/
//class net.message.skin.ResWearSkinErrorMessage extends net.Message
var ResWearSkinErrorMessage=(function(_super){
	function ResWearSkinErrorMessage(){
		/**1:该皮肤只能针对第一个英雄;2:时装不存在;3:英雄不存在;*/
		this._error=0;
		ResWearSkinErrorMessage.__super.call(this);
	}

	__class(ResWearSkinErrorMessage,'net.message.skin.ResWearSkinErrorMessage',_super);
	var __proto=ResWearSkinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 579;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWearSkinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇的奖励错误
*/
//class net.message.escort.ResEscortRevengeRewardErrorMessage extends net.Message
var ResEscortRevengeRewardErrorMessage=(function(_super){
	function ResEscortRevengeRewardErrorMessage(){
		/**1:目标状态发生变化 复仇目标不存在;*/
		this._error=0;
		ResEscortRevengeRewardErrorMessage.__super.call(this);
	}

	__class(ResEscortRevengeRewardErrorMessage,'net.message.escort.ResEscortRevengeRewardErrorMessage',_super);
	var __proto=ResEscortRevengeRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 354;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEscortRevengeRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移动错误
*/
//class net.message.scene.ResSceneMoveErrorMessage extends net.Message
var ResSceneMoveErrorMessage=(function(_super){
	function ResSceneMoveErrorMessage(){
		/**1:系统错误;2:不在场景中;3:帮会战未开启;4:没有帮会;5:未参与帮会战;6:已经死亡;*/
		this._error=0;
		ResSceneMoveErrorMessage.__super.call(this);
	}

	__class(ResSceneMoveErrorMessage,'net.message.scene.ResSceneMoveErrorMessage',_super);
	var __proto=ResSceneMoveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1316;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSceneMoveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出答题
*/
//class net.message.examination.ReqKejuExitMessage extends net.Message
var ReqKejuExitMessage=(function(_super){
	function ReqKejuExitMessage(){
		ReqKejuExitMessage.__super.call(this);;
	}

	__class(ReqKejuExitMessage,'net.message.examination.ReqKejuExitMessage',_super);
	var __proto=ReqKejuExitMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1372;
	}

	return ReqKejuExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值信息
*/
//class net.message.misc.ResGetRechargeInfoMessage extends net.Message
var ResGetRechargeInfoMessage=(function(_super){
	function ResGetRechargeInfoMessage(){
		ResGetRechargeInfoMessage.__super.call(this);
		this._rechargeIdList=[];
	}

	__class(ResGetRechargeInfoMessage,'net.message.misc.ResGetRechargeInfoMessage',_super);
	var __proto=ResGetRechargeInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rechargeIdList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rechargeIdList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rechargeIdList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rechargeIdList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rechargeIdList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1185;
	}

	/**已经充值过的id */
	/**已经充值过的id */
	__getset(0,__proto,'rechargeIdList',function(){
		return this._rechargeIdList;
		},function(value){
		this._rechargeIdList=value;
	});

	return ResGetRechargeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战挂机关卡(领奖)
*/
//class net.message.dungeon.ResChallengeGuanQiaMessage extends net.Message
var ResChallengeGuanQiaMessage=(function(_super){
	function ResChallengeGuanQiaMessage(){
		/**数据 */
		this._data=null;
		ResChallengeGuanQiaMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResChallengeGuanQiaMessage,'net.message.dungeon.ResChallengeGuanQiaMessage',_super);
	var __proto=ResChallengeGuanQiaMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 112;
	}

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	return ResChallengeGuanQiaMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ReqFastOnHookRewardMessage extends net.Message
var ReqFastOnHookRewardMessage=(function(_super){
	function ReqFastOnHookRewardMessage(){
		/**领奖类型 */
		this._type=0;
		ReqFastOnHookRewardMessage.__super.call(this);
	}

	__class(ReqFastOnHookRewardMessage,'net.message.misc.ReqFastOnHookRewardMessage',_super);
	var __proto=ReqFastOnHookRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1454;
	}

	/**领奖类型 */
	/**领奖类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqFastOnHookRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求公开招募
*/
//class net.message.legion.ReqLegionHireMessageMessage extends net.Message
var ReqLegionHireMessageMessage=(function(_super){
	function ReqLegionHireMessageMessage(){
		ReqLegionHireMessageMessage.__super.call(this);;
	}

	__class(ReqLegionHireMessageMessage,'net.message.legion.ReqLegionHireMessageMessage',_super);
	var __proto=ReqLegionHireMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 772;
	}

	return ReqLegionHireMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备幻化
*/
//class net.message.equip.ResEquipIllusionMessage extends net.Message
var ResEquipIllusionMessage=(function(_super){
	function ResEquipIllusionMessage(){
		/**英雄ID */
		this._heroID=0;
		/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		/**幻化外形 */
		this._illusion=0;
		ResEquipIllusionMessage.__super.call(this);
	}

	__class(ResEquipIllusionMessage,'net.message.equip.ResEquipIllusionMessage',_super);
	var __proto=ResEquipIllusionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._illusion);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._grid=this.readInt(_buf);
		this._illusion=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 951;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**幻化外形 */
	/**幻化外形 */
	__getset(0,__proto,'illusion',function(){
		return this._illusion;
		},function(value){
		this._illusion=value;
	});

	return ResEquipIllusionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取押运奖励
*/
//class net.message.escort.ReqReceiveEscortRewardMessage extends net.Message
var ReqReceiveEscortRewardMessage=(function(_super){
	function ReqReceiveEscortRewardMessage(){
		/**领取类型 0 正常领取 1 付费领取 */
		this._type=0;
		ReqReceiveEscortRewardMessage.__super.call(this);
	}

	__class(ReqReceiveEscortRewardMessage,'net.message.escort.ReqReceiveEscortRewardMessage',_super);
	var __proto=ReqReceiveEscortRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 339;
	}

	/**领取类型 0 正常领取 1 付费领取 */
	/**领取类型 0 正常领取 1 付费领取 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqReceiveEscortRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴分解
*/
//class net.message.handbook.ReqHandBookDecomposeMessage extends net.Message
var ReqHandBookDecomposeMessage=(function(_super){
	function ReqHandBookDecomposeMessage(){
		ReqHandBookDecomposeMessage.__super.call(this);
		this._goodsNumBean=[];
	}

	__class(ReqHandBookDecomposeMessage,'net.message.handbook.ReqHandBookDecomposeMessage',_super);
	var __proto=ReqHandBookDecomposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsNumBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goodsNumBean.length;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._goodsNumBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1122;
	}

	/**分解的道具列表 */
	/**分解的道具列表 */
	__getset(0,__proto,'goodsNumBean',function(){
		return this._goodsNumBean;
		},function(value){
		this._goodsNumBean=value;
	});

	return ReqHandBookDecomposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征刷新技能
*/
//class net.message.yuanzheng.ResYuanZhengRefreshSkillMessage extends net.Message
var ResYuanZhengRefreshSkillMessage=(function(_super){
	function ResYuanZhengRefreshSkillMessage(){
		/**精灵 */
		this._jingling=null;
		ResYuanZhengRefreshSkillMessage.__super.call(this);
	}

	__class(ResYuanZhengRefreshSkillMessage,'net.message.yuanzheng.ResYuanZhengRefreshSkillMessage',_super);
	var __proto=ResYuanZhengRefreshSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._jingling);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._jingling=this.readBean(_buf,YuanZhengJingLingBean);
	}

	__proto.getId=function(){
		return 1004;
	}

	/**精灵 */
	/**精灵 */
	__getset(0,__proto,'jingling',function(){
		return this._jingling;
		},function(value){
		this._jingling=value;
	});

	return ResYuanZhengRefreshSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入广场
*/
//class net.message.legion.ResLegionIntoSquareMessageMessage extends net.Message
var ResLegionIntoSquareMessageMessage=(function(_super){
	function ResLegionIntoSquareMessageMessage(){
		ResLegionIntoSquareMessageMessage.__super.call(this);
		this._player=[];
	}

	__class(ResLegionIntoSquareMessageMessage,'net.message.legion.ResLegionIntoSquareMessageMessage',_super);
	var __proto=ResLegionIntoSquareMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._player.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._player.length;++i_am_tmp_i){
			this._player[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._player=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._player[i_am_tmp_i]=this.readBeanInList(_buf,LegionPlayerBean);
		}
	}

	__proto.getId=function(){
		return 648;
	}

	/**其他玩家 */
	/**其他玩家 */
	__getset(0,__proto,'player',function(){
		return this._player;
		},function(value){
		this._player=value;
	});

	return ResLegionIntoSquareMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴进阶装备
*/
//class net.message.equip.ResPutUpgradeEquipMessage extends net.Message
var ResPutUpgradeEquipMessage=(function(_super){
	function ResPutUpgradeEquipMessage(){
		/**道具 */
		this._equip=null;
		/**英雄ID */
		this._heroID=0;
		ResPutUpgradeEquipMessage.__super.call(this);
	}

	__class(ResPutUpgradeEquipMessage,'net.message.equip.ResPutUpgradeEquipMessage',_super);
	var __proto=ResPutUpgradeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._equip);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._equip=this.readBean(_buf,GoodsBean);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 175;
	}

	/**道具 */
	/**道具 */
	__getset(0,__proto,'equip',function(){
		return this._equip;
		},function(value){
		this._equip=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ResPutUpgradeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取至尊BOSS的数据
*/
//class net.message.dungeon.ResZhiZhunBossGetInfoMessage extends net.Message
var ResZhiZhunBossGetInfoMessage=(function(_super){
	function ResZhiZhunBossGetInfoMessage(){
		ResZhiZhunBossGetInfoMessage.__super.call(this);
		this._list=[];
	}

	__class(ResZhiZhunBossGetInfoMessage,'net.message.dungeon.ResZhiZhunBossGetInfoMessage',_super);
	var __proto=ResZhiZhunBossGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,ZhiZhunBossBean);
		}
	}

	__proto.getId=function(){
		return 1014;
	}

	/**获取至尊BOSS的数据 */
	/**获取至尊BOSS的数据 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResZhiZhunBossGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入科举答题活动(打开面板时发送)
*/
//class net.message.examination.ReqKejuNowExaminationMessage extends net.Message
var ReqKejuNowExaminationMessage=(function(_super){
	function ReqKejuNowExaminationMessage(){
		ReqKejuNowExaminationMessage.__super.call(this);;
	}

	__class(ReqKejuNowExaminationMessage,'net.message.examination.ReqKejuNowExaminationMessage',_super);
	var __proto=ReqKejuNowExaminationMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 408;
	}

	return ReqKejuNowExaminationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请错误
*/
//class net.message.marriage.ResMarriagePataInviteUpdateErrorMessage extends net.Message
var ResMarriagePataInviteUpdateErrorMessage=(function(_super){
	function ResMarriagePataInviteUpdateErrorMessage(){
		/**1:没有结婚;2:没钱了;3:最大等级;4:离线;5:离线;*/
		this._error=0;
		ResMarriagePataInviteUpdateErrorMessage.__super.call(this);
	}

	__class(ResMarriagePataInviteUpdateErrorMessage,'net.message.marriage.ResMarriagePataInviteUpdateErrorMessage',_super);
	var __proto=ResMarriagePataInviteUpdateErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1497;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriagePataInviteUpdateErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换
*/
//class net.message.misc.ReqDuiHuanMessage extends net.Message
var ReqDuiHuanMessage=(function(_super){
	function ReqDuiHuanMessage(){
		/**兑换ID */
		this._duihuanID=0;
		ReqDuiHuanMessage.__super.call(this);
	}

	__class(ReqDuiHuanMessage,'net.message.misc.ReqDuiHuanMessage',_super);
	var __proto=ReqDuiHuanMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._duihuanID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._duihuanID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 265;
	}

	/**兑换ID */
	/**兑换ID */
	__getset(0,__proto,'duihuanID',function(){
		return this._duihuanID;
		},function(value){
		this._duihuanID=value;
	});

	return ReqDuiHuanMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取任务奖励错误
*/
//class net.message.todayrecommend.ResRecommendTaskRewardErrorMessage extends net.Message
var ResRecommendTaskRewardErrorMessage=(function(_super){
	function ResRecommendTaskRewardErrorMessage(){
		/**1:奖励已经领取;*/
		this._error=0;
		ResRecommendTaskRewardErrorMessage.__super.call(this);
	}

	__class(ResRecommendTaskRewardErrorMessage,'net.message.todayrecommend.ResRecommendTaskRewardErrorMessage',_super);
	var __proto=ResRecommendTaskRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1509;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRecommendTaskRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝信息错误
*/
//class net.message.textureHunt.ResGetHuntInfoErrorMessage extends net.Message
var ResGetHuntInfoErrorMessage=(function(_super){
	function ResGetHuntInfoErrorMessage(){
		/**1:不存在的类型;2:配置错误;*/
		this._error=0;
		ResGetHuntInfoErrorMessage.__super.call(this);
	}

	__class(ResGetHuntInfoErrorMessage,'net.message.textureHunt.ResGetHuntInfoErrorMessage',_super);
	var __proto=ResGetHuntInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1182;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetHuntInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进阶奖励错误
*/
//class net.message.advanceReward.ResAdvancedRewardErrorMessage extends net.Message
var ResAdvancedRewardErrorMessage=(function(_super){
	function ResAdvancedRewardErrorMessage(){
		/**1:条件不足;2:领取失败;3:解析配置错误;*/
		this._error=0;
		ResAdvancedRewardErrorMessage.__super.call(this);
	}

	__class(ResAdvancedRewardErrorMessage,'net.message.advanceReward.ResAdvancedRewardErrorMessage',_super);
	var __proto=ResAdvancedRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 724;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdvancedRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔具体某个塔
*/
//class net.message.towerFight.ReqselectTowerMessage extends net.Message
var ReqselectTowerMessage=(function(_super){
	function ReqselectTowerMessage(){
		/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
		this._type=0;
		ReqselectTowerMessage.__super.call(this);
	}

	__class(ReqselectTowerMessage,'net.message.towerFight.ReqselectTowerMessage',_super);
	var __proto=ReqselectTowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1616;
	}

	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqselectTowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.totem.ResTotemSurmountMessage extends net.Message
var ResTotemSurmountMessage=(function(_super){
	function ResTotemSurmountMessage(){
		/**对象 */
		this._totemBean=null;
		ResTotemSurmountMessage.__super.call(this);
	}

	__class(ResTotemSurmountMessage,'net.message.totem.ResTotemSurmountMessage',_super);
	var __proto=ResTotemSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._totemBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._totemBean=this.readBean(_buf,TotemBean);
	}

	__proto.getId=function(){
		return 861;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'totemBean',function(){
		return this._totemBean;
		},function(value){
		this._totemBean=value;
	});

	return ResTotemSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团战结束
*/
//class net.message.gb.ResLegionBattleGameOverMessage extends net.Message
var ResLegionBattleGameOverMessage=(function(_super){
	function ResLegionBattleGameOverMessage(){
		/**霸主 */
		this._overlordBean=null;
		/**我的积分排名 */
		this._myScoreRank=0;
		ResLegionBattleGameOverMessage.__super.call(this);
	}

	__class(ResLegionBattleGameOverMessage,'net.message.gb.ResLegionBattleGameOverMessage',_super);
	var __proto=ResLegionBattleGameOverMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._overlordBean);
		this.writeInt(_buf,this._myScoreRank);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._overlordBean=this.readBean(_buf,LegionBattleOverlordBean);
		this._myScoreRank=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1323;
	}

	/**霸主 */
	/**霸主 */
	__getset(0,__proto,'overlordBean',function(){
		return this._overlordBean;
		},function(value){
		this._overlordBean=value;
	});

	/**我的积分排名 */
	/**我的积分排名 */
	__getset(0,__proto,'myScoreRank',function(){
		return this._myScoreRank;
		},function(value){
		this._myScoreRank=value;
	});

	return ResLegionBattleGameOverMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建副英雄
*/
//class net.message.hero.ReqCreateViceHeroMessage extends net.Message
var ReqCreateViceHeroMessage=(function(_super){
	function ReqCreateViceHeroMessage(){
		/**性别[1:男性][2:女性] */
		this._gender=0;
		/**职业[1:人][2:魔][3:仙] */
		this._profession=0;
		ReqCreateViceHeroMessage.__super.call(this);
	}

	__class(ReqCreateViceHeroMessage,'net.message.hero.ReqCreateViceHeroMessage',_super);
	var __proto=ReqCreateViceHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 54;
	}

	/**性别[1:男性][2:女性] */
	/**性别[1:男性][2:女性] */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**职业[1:人][2:魔][3:仙] */
	/**职业[1:人][2:魔][3:仙] */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	return ReqCreateViceHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建军团
*/
//class net.message.guild.ResGuildCreateMessage extends net.Message
var ResGuildCreateMessage=(function(_super){
	function ResGuildCreateMessage(){
		/**帮会信息 */
		this._guild=null;
		ResGuildCreateMessage.__super.call(this);
	}

	__class(ResGuildCreateMessage,'net.message.guild.ResGuildCreateMessage',_super);
	var __proto=ResGuildCreateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._guild);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guild=this.readBean(_buf,GuildBean);
	}

	__proto.getId=function(){
		return 1225;
	}

	/**帮会信息 */
	/**帮会信息 */
	__getset(0,__proto,'guild',function(){
		return this._guild;
		},function(value){
		this._guild=value;
	});

	return ResGuildCreateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入队伍
*/
//class net.message.team.ResTeamApplyReplyMessage extends net.Message
var ResTeamApplyReplyMessage=(function(_super){
	function ResTeamApplyReplyMessage(){
		ResTeamApplyReplyMessage.__super.call(this);;
	}

	__class(ResTeamApplyReplyMessage,'net.message.team.ResTeamApplyReplyMessage',_super);
	var __proto=ResTeamApplyReplyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1258;
	}

	return ResTeamApplyReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团首领信息
*/
//class net.message.worldboss.ReqGetWorldBossInfoMessage extends net.Message
var ReqGetWorldBossInfoMessage=(function(_super){
	function ReqGetWorldBossInfoMessage(){
		ReqGetWorldBossInfoMessage.__super.call(this);;
	}

	__class(ReqGetWorldBossInfoMessage,'net.message.worldboss.ReqGetWorldBossInfoMessage',_super);
	var __proto=ReqGetWorldBossInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1515;
	}

	return ReqGetWorldBossInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装逼
*/
//class net.message.chat.ResChatZhuangBiMessage extends net.Message
var ResChatZhuangBiMessage=(function(_super){
	function ResChatZhuangBiMessage(){
		ResChatZhuangBiMessage.__super.call(this);;
	}

	__class(ResChatZhuangBiMessage,'net.message.chat.ResChatZhuangBiMessage',_super);
	var __proto=ResChatZhuangBiMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 776;
	}

	return ResChatZhuangBiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡
*/
//class net.message.chat.ResChatHelpMessage extends net.Message
var ResChatHelpMessage=(function(_super){
	function ResChatHelpMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		/**数据 */
		this._data=null;
		ResChatHelpMessage.__super.call(this);
	}

	__class(ResChatHelpMessage,'net.message.chat.ResChatHelpMessage',_super);
	var __proto=ResChatHelpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 760;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResChatHelpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名
*/
//class net.message.guild.ResGuildChangeNameMessage extends net.Message
var ResGuildChangeNameMessage=(function(_super){
	function ResGuildChangeNameMessage(){
		/**修改的名字 */
		this._name=null;
		ResGuildChangeNameMessage.__super.call(this);
	}

	__class(ResGuildChangeNameMessage,'net.message.guild.ResGuildChangeNameMessage',_super);
	var __proto=ResGuildChangeNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1216;
	}

	/**修改的名字 */
	/**修改的名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ResGuildChangeNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*其它玩家加入房间
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomOtherJoinMessage extends net.Message
var ResTeamDuplicateRoomOtherJoinMessage=(function(_super){
	function ResTeamDuplicateRoomOtherJoinMessage(){
		/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
		this._bean=null;
		ResTeamDuplicateRoomOtherJoinMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomOtherJoinMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomOtherJoinMessage',_super);
	var __proto=ResTeamDuplicateRoomOtherJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,TeamPlayerBean);
	}

	__proto.getId=function(){
		return 421;
	}

	/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
	/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResTeamDuplicateRoomOtherJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解道具错误
*/
//class net.message.goods.ResDisposeErrorMessage extends net.Message
var ResDisposeErrorMessage=(function(_super){
	function ResDisposeErrorMessage(){
		/**1:参数错误;2:数量错误;3:不可分解;4:背包满;*/
		this._error=0;
		ResDisposeErrorMessage.__super.call(this);
	}

	__class(ResDisposeErrorMessage,'net.message.goods.ResDisposeErrorMessage',_super);
	var __proto=ResDisposeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 201;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResDisposeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取周奖励错误
*/
//class net.message.garrison.ResGarrisonTakeWeekRewardErrorMessage extends net.Message
var ResGarrisonTakeWeekRewardErrorMessage=(function(_super){
	function ResGarrisonTakeWeekRewardErrorMessage(){
		/**1:无法领取;*/
		this._error=0;
		ResGarrisonTakeWeekRewardErrorMessage.__super.call(this);
	}

	__class(ResGarrisonTakeWeekRewardErrorMessage,'net.message.garrison.ResGarrisonTakeWeekRewardErrorMessage',_super);
	var __proto=ResGarrisonTakeWeekRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1072;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonTakeWeekRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新结婚对象
*/
//class net.message.marriage.ResMarriageUpdateMessage extends net.Message
var ResMarriageUpdateMessage=(function(_super){
	function ResMarriageUpdateMessage(){
		/***/
		this._marriageBean=null;
		ResMarriageUpdateMessage.__super.call(this);
	}

	__class(ResMarriageUpdateMessage,'net.message.marriage.ResMarriageUpdateMessage',_super);
	var __proto=ResMarriageUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._marriageBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._marriageBean=this.readBean(_buf,MarriageBean);
	}

	__proto.getId=function(){
		return 1085;
	}

	/***/
	/***/
	__getset(0,__proto,'marriageBean',function(){
		return this._marriageBean;
		},function(value){
		this._marriageBean=value;
	});

	return ResMarriageUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求开启逐鹿宝箱
*/
//class net.message.teamDuplicate.ResTeamDuplicateZhuluBoxMessage extends net.Message
var ResTeamDuplicateZhuluBoxMessage=(function(_super){
	function ResTeamDuplicateZhuluBoxMessage(){
		ResTeamDuplicateZhuluBoxMessage.__super.call(this);
		this._qid=[];
	}

	__class(ResTeamDuplicateZhuluBoxMessage,'net.message.teamDuplicate.ResTeamDuplicateZhuluBoxMessage',_super);
	var __proto=ResTeamDuplicateZhuluBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 482;
	}

	/**开启成功的副本ID */
	/**开启成功的副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	return ResTeamDuplicateZhuluBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换主公
*/
//class net.message.gongCe.ReqTongShuaiJinJianMessage extends net.Message
var ReqTongShuaiJinJianMessage=(function(_super){
	function ReqTongShuaiJinJianMessage(){
		/**要兑换的类型 1=刘备 2=曹操 3=孙权 */
		this._type=0;
		ReqTongShuaiJinJianMessage.__super.call(this);
	}

	__class(ReqTongShuaiJinJianMessage,'net.message.gongCe.ReqTongShuaiJinJianMessage',_super);
	var __proto=ReqTongShuaiJinJianMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1658;
	}

	/**要兑换的类型 1=刘备 2=曹操 3=孙权 */
	/**要兑换的类型 1=刘备 2=曹操 3=孙权 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTongShuaiJinJianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取透支计划奖励
*/
//class net.message.investment.ResInvestmengUpdateTaskMessageMessage extends net.Message
var ResInvestmengUpdateTaskMessageMessage=(function(_super){
	function ResInvestmengUpdateTaskMessageMessage(){
		/**uid */
		this._id=0;
		ResInvestmengUpdateTaskMessageMessage.__super.call(this);
	}

	__class(ResInvestmengUpdateTaskMessageMessage,'net.message.investment.ResInvestmengUpdateTaskMessageMessage',_super);
	var __proto=ResInvestmengUpdateTaskMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 675;
	}

	/**uid */
	/**uid */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResInvestmengUpdateTaskMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子
*/
//class net.message.marriage.ReqMarriagePromoteHouseLvMessage extends net.Message
var ReqMarriagePromoteHouseLvMessage=(function(_super){
	function ReqMarriagePromoteHouseLvMessage(){
		ReqMarriagePromoteHouseLvMessage.__super.call(this);;
	}

	__class(ReqMarriagePromoteHouseLvMessage,'net.message.marriage.ReqMarriagePromoteHouseLvMessage',_super);
	var __proto=ReqMarriagePromoteHouseLvMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 556;
	}

	return ReqMarriagePromoteHouseLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取关卡章节奖励
*/
//class net.message.dungeon.ReqReceiveGuanQiaChapterPrizeMessage extends net.Message
var ReqReceiveGuanQiaChapterPrizeMessage=(function(_super){
	function ReqReceiveGuanQiaChapterPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		ReqReceiveGuanQiaChapterPrizeMessage.__super.call(this);
	}

	__class(ReqReceiveGuanQiaChapterPrizeMessage,'net.message.dungeon.ReqReceiveGuanQiaChapterPrizeMessage',_super);
	var __proto=ReqReceiveGuanQiaChapterPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 114;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	return ReqReceiveGuanQiaChapterPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴装备错误
*/
//class net.message.equip.ResPutOnEquipErrorMessage extends net.Message
var ResPutOnEquipErrorMessage=(function(_super){
	function ResPutOnEquipErrorMessage(){
		/**1:找不到对应的英雄;2:背包中的位置非法;3:找不到道具;4:道具类型非法;5:道具等级等级非法;6:职业非法;*/
		this._error=0;
		ResPutOnEquipErrorMessage.__super.call(this);
	}

	__class(ResPutOnEquipErrorMessage,'net.message.equip.ResPutOnEquipErrorMessage',_super);
	var __proto=ResPutOnEquipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 30;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResPutOnEquipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级
*/
//class net.message.adviser.ResAdviserUpgradeMessage extends net.Message
var ResAdviserUpgradeMessage=(function(_super){
	function ResAdviserUpgradeMessage(){
		/**对象 */
		this._adviserBean=null;
		ResAdviserUpgradeMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeMessage,'net.message.adviser.ResAdviserUpgradeMessage',_super);
	var __proto=ResAdviserUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._adviserBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._adviserBean=this.readBean(_buf,AdviserBean);
	}

	__proto.getId=function(){
		return 805;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'adviserBean',function(){
		return this._adviserBean;
		},function(value){
		this._adviserBean=value;
	});

	return ResAdviserUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改配置
*/
//class net.message.setting.ResSettingMessage extends net.Message
var ResSettingMessage=(function(_super){
	function ResSettingMessage(){
		/**分层信息 */
		this._bean=null;
		ResSettingMessage.__super.call(this);
	}

	__class(ResSettingMessage,'net.message.setting.ResSettingMessage',_super);
	var __proto=ResSettingMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,SettingBean);
	}

	__proto.getId=function(){
		return 311;
	}

	/**分层信息 */
	/**分层信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResSettingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取录像
*/
//class net.message.video.ReqGetVideoFightDataMessage extends net.Message
var ReqGetVideoFightDataMessage=(function(_super){
	function ReqGetVideoFightDataMessage(){
		/**记录id */
		this._fightId=null;
		ReqGetVideoFightDataMessage.__super.call(this);
	}

	__class(ReqGetVideoFightDataMessage,'net.message.video.ReqGetVideoFightDataMessage',_super);
	var __proto=ReqGetVideoFightDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._fightId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightId=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1513;
	}

	/**记录id */
	/**记录id */
	__getset(0,__proto,'fightId',function(){
		return this._fightId;
		},function(value){
		this._fightId=value;
	});

	return ReqGetVideoFightDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家通过ID获得房间列表
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomForIDMessage extends net.Message
var ReqTeamDuplicateRoomForIDMessage=(function(_super){
	function ReqTeamDuplicateRoomForIDMessage(){
		/**房间ID */
		this._qid=0;
		ReqTeamDuplicateRoomForIDMessage.__super.call(this);
	}

	__class(ReqTeamDuplicateRoomForIDMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomForIDMessage',_super);
	var __proto=ReqTeamDuplicateRoomForIDMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 415;
	}

	/**房间ID */
	/**房间ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	return ReqTeamDuplicateRoomForIDMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击BOSS
*/
//class net.message.worldboss.ResWorldBossAttackMessage extends net.Message
var ResWorldBossAttackMessage=(function(_super){
	function ResWorldBossAttackMessage(){
		/**发起攻击者的ID */
		this._uid=null;
		/**世界等级 */
		this._lv=0;
		ResWorldBossAttackMessage.__super.call(this);
	}

	__class(ResWorldBossAttackMessage,'net.message.worldboss.ResWorldBossAttackMessage',_super);
	var __proto=ResWorldBossAttackMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 511;
	}

	/**发起攻击者的ID */
	/**发起攻击者的ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**世界等级 */
	/**世界等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResWorldBossAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统
*/
//class net.message.user.ResActiveGameSystemMessage extends net.Message
var ResActiveGameSystemMessage=(function(_super){
	function ResActiveGameSystemMessage(){
		ResActiveGameSystemMessage.__super.call(this);;
	}

	__class(ResActiveGameSystemMessage,'net.message.user.ResActiveGameSystemMessage',_super);
	var __proto=ResActiveGameSystemMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 39;
	}

	return ResActiveGameSystemMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取积分奖励
*/
//class net.message.gb.ReqLegionBattleIntegralRewardMessage extends net.Message
var ReqLegionBattleIntegralRewardMessage=(function(_super){
	function ReqLegionBattleIntegralRewardMessage(){
		/**积分奖励ID */
		this._id=0;
		ReqLegionBattleIntegralRewardMessage.__super.call(this);
	}

	__class(ReqLegionBattleIntegralRewardMessage,'net.message.gb.ReqLegionBattleIntegralRewardMessage',_super);
	var __proto=ReqLegionBattleIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1340;
	}

	/**积分奖励ID */
	/**积分奖励ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqLegionBattleIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒元素
*/
//class net.message.adviser.ResAdviserUpgradeElementMessage extends net.Message
var ResAdviserUpgradeElementMessage=(function(_super){
	function ResAdviserUpgradeElementMessage(){
		/**元素下标 0 开始 */
		this._index=0;
		/**新的等级 */
		this._lv=0;
		/**新的进度 */
		this._progress=0;
		ResAdviserUpgradeElementMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeElementMessage,'net.message.adviser.ResAdviserUpgradeElementMessage',_super);
	var __proto=ResAdviserUpgradeElementMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1023;
	}

	/**元素下标 0 开始 */
	/**元素下标 0 开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**新的进度 */
	/**新的进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return ResAdviserUpgradeElementMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*镶嵌秘籍错误
*/
//class net.message.miji.ResSetMijiErrorMessage extends net.Message
var ResSetMijiErrorMessage=(function(_super){
	function ResSetMijiErrorMessage(){
		/**1:没有道具;2:参数错误;3:英雄不存在;*/
		this._error=0;
		ResSetMijiErrorMessage.__super.call(this);
	}

	__class(ResSetMijiErrorMessage,'net.message.miji.ResSetMijiErrorMessage',_super);
	var __proto=ResSetMijiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 88;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSetMijiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝参数
*/
//class net.message.textureHunt.ReqHuntMsgMessage extends net.Message
var ReqHuntMsgMessage=(function(_super){
	function ReqHuntMsgMessage(){
		ReqHuntMsgMessage.__super.call(this);;
	}

	__class(ReqHuntMsgMessage,'net.message.textureHunt.ReqHuntMsgMessage',_super);
	var __proto=ReqHuntMsgMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 694;
	}

	return ReqHuntMsgMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换错误
*/
//class net.message.misc.ResDuiHuanErrorMessage extends net.Message
var ResDuiHuanErrorMessage=(function(_super){
	function ResDuiHuanErrorMessage(){
		/**1:没有道具;2:参数错误;3:背包满;*/
		this._error=0;
		ResDuiHuanErrorMessage.__super.call(this);
	}

	__class(ResDuiHuanErrorMessage,'net.message.misc.ResDuiHuanErrorMessage',_super);
	var __proto=ResDuiHuanErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 267;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResDuiHuanErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征挑战错误
*/
//class net.message.yuanzheng.ResYuanZhengChallengeErrorMessage extends net.Message
var ResYuanZhengChallengeErrorMessage=(function(_super){
	function ResYuanZhengChallengeErrorMessage(){
		/**1:有奖励尚未领取;2:没有关卡可以挑战;3:还未完成配置;4:我自己已经死完了;*/
		this._error=0;
		ResYuanZhengChallengeErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengChallengeErrorMessage,'net.message.yuanzheng.ResYuanZhengChallengeErrorMessage',_super);
	var __proto=ResYuanZhengChallengeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 291;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengChallengeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*读取邮件错误
*/
//class net.message.mail.ResReadMailErrorMessage extends net.Message
var ResReadMailErrorMessage=(function(_super){
	function ResReadMailErrorMessage(){
		/**1:找不到对应的邮件;2:已读;*/
		this._error=0;
		ResReadMailErrorMessage.__super.call(this);
	}

	__class(ResReadMailErrorMessage,'net.message.mail.ResReadMailErrorMessage',_super);
	var __proto=ResReadMailErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 48;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReadMailErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取首通和最小回合数记录
*/
//class net.message.teamDuplicate.ResTeamDuplicateGetFirstClearanceMessage extends net.Message
var ResTeamDuplicateGetFirstClearanceMessage=(function(_super){
	function ResTeamDuplicateGetFirstClearanceMessage(){
		/**首次通关记录 */
		this._fistClearance=null;
		ResTeamDuplicateGetFirstClearanceMessage.__super.call(this);
	}

	__class(ResTeamDuplicateGetFirstClearanceMessage,'net.message.teamDuplicate.ResTeamDuplicateGetFirstClearanceMessage',_super);
	var __proto=ResTeamDuplicateGetFirstClearanceMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._fistClearance);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fistClearance=this.readBean(_buf,TeamDuplicateFirstClearance);
	}

	__proto.getId=function(){
		return 436;
	}

	/**首次通关记录 */
	/**首次通关记录 */
	__getset(0,__proto,'fistClearance',function(){
		return this._fistClearance;
		},function(value){
		this._fistClearance=value;
	});

	return ResTeamDuplicateGetFirstClearanceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*扫荡副本奖励
*/
//class net.message.dungeon.ResReceiveAllDungeonPrizeMessage extends net.Message
var ResReceiveAllDungeonPrizeMessage=(function(_super){
	function ResReceiveAllDungeonPrizeMessage(){
		ResReceiveAllDungeonPrizeMessage.__super.call(this);
		this._prizeList=[];
	}

	__class(ResReceiveAllDungeonPrizeMessage,'net.message.dungeon.ResReceiveAllDungeonPrizeMessage',_super);
	var __proto=ResReceiveAllDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prizeList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeList.length;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prizeList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeList[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 766;
	}

	/**奖品列表 */
	/**奖品列表 */
	__getset(0,__proto,'prizeList',function(){
		return this._prizeList;
		},function(value){
		this._prizeList=value;
	});

	return ResReceiveAllDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡的奖励
*/
//class net.message.chat.ResChatHelpRewardMessage extends net.Message
var ResChatHelpRewardMessage=(function(_super){
	function ResChatHelpRewardMessage(){
		ResChatHelpRewardMessage.__super.call(this);;
	}

	__class(ResChatHelpRewardMessage,'net.message.chat.ResChatHelpRewardMessage',_super);
	var __proto=ResChatHelpRewardMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 763;
	}

	return ResChatHelpRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计战斗回放
*/
//class net.message.emptycity.ResEmptyGetBattleRecordMessage extends net.Message
var ResEmptyGetBattleRecordMessage=(function(_super){
	function ResEmptyGetBattleRecordMessage(){
		/**战斗数据数据 */
		this._data=null;
		ResEmptyGetBattleRecordMessage.__super.call(this);
	}

	__class(ResEmptyGetBattleRecordMessage,'net.message.emptycity.ResEmptyGetBattleRecordMessage',_super);
	var __proto=ResEmptyGetBattleRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1112;
	}

	/**战斗数据数据 */
	/**战斗数据数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResEmptyGetBattleRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物升星
*/
//class net.message.treasure.ResTreasureStarUpMessage extends net.Message
var ResTreasureStarUpMessage=(function(_super){
	function ResTreasureStarUpMessage(){
		/**宝物ID */
		this._treasureId=0;
		/**星级 */
		this._star=0;
		ResTreasureStarUpMessage.__super.call(this);
	}

	__class(ResTreasureStarUpMessage,'net.message.treasure.ResTreasureStarUpMessage',_super);
	var __proto=ResTreasureStarUpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._treasureId);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasureId=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1629;
	}

	/**星级 */
	/**星级 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**宝物ID */
	/**宝物ID */
	__getset(0,__proto,'treasureId',function(){
		return this._treasureId;
		},function(value){
		this._treasureId=value;
	});

	return ResTreasureStarUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改师门星级错误
*/
//class net.message.shimen.ResChangeShiMenStarErrorMessage extends net.Message
var ResChangeShiMenStarErrorMessage=(function(_super){
	function ResChangeShiMenStarErrorMessage(){
		/**1:没有任务;2:星上限;3:没钱;*/
		this._error=0;
		ResChangeShiMenStarErrorMessage.__super.call(this);
	}

	__class(ResChangeShiMenStarErrorMessage,'net.message.shimen.ResChangeShiMenStarErrorMessage',_super);
	var __proto=ResChangeShiMenStarErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 138;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChangeShiMenStarErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征重置
*/
//class net.message.yuanzheng.ResYuanZhengResetMessage extends net.Message
var ResYuanZhengResetMessage=(function(_super){
	function ResYuanZhengResetMessage(){
		ResYuanZhengResetMessage.__super.call(this);;
	}

	__class(ResYuanZhengResetMessage,'net.message.yuanzheng.ResYuanZhengResetMessage',_super);
	var __proto=ResYuanZhengResetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 299;
	}

	return ResYuanZhengResetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求团队跳过
*/
//class net.message.legion.ReqTeamSkipMessage extends net.Message
var ReqTeamSkipMessage=(function(_super){
	function ReqTeamSkipMessage(){
		/**组队类型[1:帮会战][2:结婚组队爬塔] */
		this._teamType=0;
		ReqTeamSkipMessage.__super.call(this);
	}

	__class(ReqTeamSkipMessage,'net.message.legion.ReqTeamSkipMessage',_super);
	var __proto=ReqTeamSkipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._teamType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._teamType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1364;
	}

	/**组队类型[1:帮会战][2:结婚组队爬塔] */
	/**组队类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'teamType',function(){
		return this._teamType;
		},function(value){
		this._teamType=value;
	});

	return ReqTeamSkipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求获得守护每日奖励错误
*/
//class net.message.legion.ResLegionGuardRewardMessageErrorMessage extends net.Message
var ResLegionGuardRewardMessageErrorMessage=(function(_super){
	function ResLegionGuardRewardMessageErrorMessage(){
		/**1:你木有军团;2:奖励不存在;3:已经领取;4:活跃度不足;*/
		this._error=0;
		ResLegionGuardRewardMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionGuardRewardMessageErrorMessage,'net.message.legion.ResLegionGuardRewardMessageErrorMessage',_super);
	var __proto=ResLegionGuardRewardMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 623;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionGuardRewardMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新BOSS场景排行榜
*/
//class net.message.gb.ResLegionBattleUpdateBossRankMessage extends net.Message
var ResLegionBattleUpdateBossRankMessage=(function(_super){
	function ResLegionBattleUpdateBossRankMessage(){
		/**我的帮会的排名 */
		this._myGuildRank=0;
		/**我的帮会的伤害 */
		this._myGuildDamage=null;
		/**是否死亡 */
		this._dead=false;
		ResLegionBattleUpdateBossRankMessage.__super.call(this);
		this._rankBean=[];
	}

	__class(ResLegionBattleUpdateBossRankMessage,'net.message.gb.ResLegionBattleUpdateBossRankMessage',_super);
	var __proto=ResLegionBattleUpdateBossRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rankBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rankBean.length;++i_am_tmp_i){
			this._rankBean[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myGuildRank);
		this.writeLong(_buf,this._myGuildDamage);
		this.writeBoolean(_buf,this._dead);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rankBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rankBean[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleBossRankBean);
		}
		this._myGuildRank=this.readInt(_buf);
		this._myGuildDamage=this.readLong(_buf);
		this._dead=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1352;
	}

	/**排行榜对象(前三)*/
	/**排行榜对象(前三)*/
	__getset(0,__proto,'rankBean',function(){
		return this._rankBean;
		},function(value){
		this._rankBean=value;
	});

	/**我的帮会的排名 */
	/**我的帮会的排名 */
	__getset(0,__proto,'myGuildRank',function(){
		return this._myGuildRank;
		},function(value){
		this._myGuildRank=value;
	});

	/**我的帮会的伤害 */
	/**我的帮会的伤害 */
	__getset(0,__proto,'myGuildDamage',function(){
		return this._myGuildDamage;
		},function(value){
		this._myGuildDamage=value;
	});

	/**是否死亡 */
	/**是否死亡 */
	__getset(0,__proto,'dead',function(){
		return this._dead;
		},function(value){
		this._dead=value;
	});

	return ResLegionBattleUpdateBossRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取合体奖励
*/
//class net.message.pata.ReqTakeFitPrizeMessage extends net.Message
var ReqTakeFitPrizeMessage=(function(_super){
	function ReqTakeFitPrizeMessage(){
		/**层 */
		this._layer=0;
		ReqTakeFitPrizeMessage.__super.call(this);
	}

	__class(ReqTakeFitPrizeMessage,'net.message.pata.ReqTakeFitPrizeMessage',_super);
	var __proto=ReqTakeFitPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1166;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	return ReqTakeFitPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备
*/
//class net.message.equip.ReqEquipSuitActiveMessage extends net.Message
var ReqEquipSuitActiveMessage=(function(_super){
	function ReqEquipSuitActiveMessage(){
		/**套装阶数 */
		this._suitId=0;
		/**套装件数 */
		this._count=0;
		ReqEquipSuitActiveMessage.__super.call(this);
	}

	__class(ReqEquipSuitActiveMessage,'net.message.equip.ReqEquipSuitActiveMessage',_super);
	var __proto=ReqEquipSuitActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._suitId);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._suitId=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1484;
	}

	/**套装阶数 */
	/**套装阶数 */
	__getset(0,__proto,'suitId',function(){
		return this._suitId;
		},function(value){
		this._suitId=value;
	});

	/**套装件数 */
	/**套装件数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ReqEquipSuitActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*膜拜霸主错误
*/
//class net.message.garrison.ResGarrisonWorshipErrorMessage extends net.Message
var ResGarrisonWorshipErrorMessage=(function(_super){
	function ResGarrisonWorshipErrorMessage(){
		/**1:木有霸主;2:木有次数;3:系统未开启;*/
		this._error=0;
		ResGarrisonWorshipErrorMessage.__super.call(this);
	}

	__class(ResGarrisonWorshipErrorMessage,'net.message.garrison.ResGarrisonWorshipErrorMessage',_super);
	var __proto=ResGarrisonWorshipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1079;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonWorshipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵
*/
//class net.message.fight.ResFightPositionAddMessage extends net.Message
var ResFightPositionAddMessage=(function(_super){
	function ResFightPositionAddMessage(){
		ResFightPositionAddMessage.__super.call(this);
		this._beans=[];
	}

	__class(ResFightPositionAddMessage,'net.message.fight.ResFightPositionAddMessage',_super);
	var __proto=ResFightPositionAddMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._beans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._beans.length;++i_am_tmp_i){
			this._beans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._beans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._beans[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionAddBean);
		}
	}

	__proto.getId=function(){
		return 1197;
	}

	/**上阵数据 */
	/**上阵数据 */
	__getset(0,__proto,'beans',function(){
		return this._beans;
		},function(value){
		this._beans=value;
	});

	return ResFightPositionAddMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴进阶装备错误
*/
//class net.message.equip.ResPutUpgradeEquipErrorMessage extends net.Message
var ResPutUpgradeEquipErrorMessage=(function(_super){
	function ResPutUpgradeEquipErrorMessage(){
		/**1:背包中的位置非法;2:找不到道具;3:道具类型非法;4:道具等级非法;5:等级非法;*/
		this._error=0;
		ResPutUpgradeEquipErrorMessage.__super.call(this);
	}

	__class(ResPutUpgradeEquipErrorMessage,'net.message.equip.ResPutUpgradeEquipErrorMessage',_super);
	var __proto=ResPutUpgradeEquipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 176;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResPutUpgradeEquipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玄女飞升强化
*/
//class net.message.xuannv.ReqXuanNvFeiShengQiangHuaMessage extends net.Message
var ReqXuanNvFeiShengQiangHuaMessage=(function(_super){
	function ReqXuanNvFeiShengQiangHuaMessage(){
		ReqXuanNvFeiShengQiangHuaMessage.__super.call(this);;
	}

	__class(ReqXuanNvFeiShengQiangHuaMessage,'net.message.xuannv.ReqXuanNvFeiShengQiangHuaMessage',_super);
	var __proto=ReqXuanNvFeiShengQiangHuaMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 256;
	}

	return ReqXuanNvFeiShengQiangHuaMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备附灵错误
*/
//class net.message.equip.ResEquipFuLingErrorMessage extends net.Message
var ResEquipFuLingErrorMessage=(function(_super){
	function ResEquipFuLingErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResEquipFuLingErrorMessage.__super.call(this);
	}

	__class(ResEquipFuLingErrorMessage,'net.message.equip.ResEquipFuLingErrorMessage',_super);
	var __proto=ResEquipFuLingErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1540;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipFuLingErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新神秘商店
*/
//class net.message.shop.ReqRefreshMystersiousShopMessage extends net.Message
var ReqRefreshMystersiousShopMessage=(function(_super){
	function ReqRefreshMystersiousShopMessage(){
		/**商城子类型 */
		this._shopSonType=0;
		/**刷新类型1时间2免费次数3消耗 */
		this._refreshType=0;
		ReqRefreshMystersiousShopMessage.__super.call(this);
	}

	__class(ReqRefreshMystersiousShopMessage,'net.message.shop.ReqRefreshMystersiousShopMessage',_super);
	var __proto=ReqRefreshMystersiousShopMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._shopSonType);
		this.writeInt(_buf,this._refreshType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._shopSonType=this.readInt(_buf);
		this._refreshType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1431;
	}

	/**商城子类型 */
	/**商城子类型 */
	__getset(0,__proto,'shopSonType',function(){
		return this._shopSonType;
		},function(value){
		this._shopSonType=value;
	});

	/**刷新类型1时间2免费次数3消耗 */
	/**刷新类型1时间2免费次数3消耗 */
	__getset(0,__proto,'refreshType',function(){
		return this._refreshType;
		},function(value){
		this._refreshType=value;
	});

	return ReqRefreshMystersiousShopMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计状态
*/
//class net.message.emptycity.ResEmptyGetDataMessage extends net.Message
var ResEmptyGetDataMessage=(function(_super){
	function ResEmptyGetDataMessage(){
		/**个人数据 */
		this._bean=null;
		/**被占领数据 */
		this._occupiedBean=null;
		ResEmptyGetDataMessage.__super.call(this);
		this._citys=[];
	}

	__class(ResEmptyGetDataMessage,'net.message.emptycity.ResEmptyGetDataMessage',_super);
	var __proto=ResEmptyGetDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._citys.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._citys.length;++i_am_tmp_i){
			this._citys[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._bean);
		this.writeBean(_buf,this._occupiedBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._citys=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._citys[i_am_tmp_i]=this.readBeanInList(_buf,EmptyCityBean);
		}
		this._bean=this.readBean(_buf,EmptyCityPlayerBean);
		this._occupiedBean=this.readBean(_buf,EmptyCityOccupiedBean);
	}

	__proto.getId=function(){
		return 1088;
	}

	/**被占领数据 */
	/**被占领数据 */
	__getset(0,__proto,'occupiedBean',function(){
		return this._occupiedBean;
		},function(value){
		this._occupiedBean=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'citys',function(){
		return this._citys;
		},function(value){
		this._citys=value;
	});

	/**个人数据 */
	/**个人数据 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEmptyGetDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新神秘商店错误
*/
//class net.message.shop.ResRefreshMystersiousShopErrorMessage extends net.Message
var ResRefreshMystersiousShopErrorMessage=(function(_super){
	function ResRefreshMystersiousShopErrorMessage(){
		/**1:消耗不足;2:商品不存在;3:商城信息发生变化;*/
		this._error=0;
		ResRefreshMystersiousShopErrorMessage.__super.call(this);
	}

	__class(ResRefreshMystersiousShopErrorMessage,'net.message.shop.ResRefreshMystersiousShopErrorMessage',_super);
	var __proto=ResRefreshMystersiousShopErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1432;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRefreshMystersiousShopErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*录像点赞
*/
//class net.message.video.ResLikeVideoMessage extends net.Message
var ResLikeVideoMessage=(function(_super){
	function ResLikeVideoMessage(){
		/**今日已点赞数 */
		this._todayLike=0;
		/**录像唯一id */
		this._videoId=null;
		/**录像当前点赞数 */
		this._like=0;
		ResLikeVideoMessage.__super.call(this);
	}

	__class(ResLikeVideoMessage,'net.message.video.ResLikeVideoMessage',_super);
	var __proto=ResLikeVideoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._todayLike);
		this.writeLong(_buf,this._videoId);
		this.writeInt(_buf,this._like);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._todayLike=this.readInt(_buf);
		this._videoId=this.readLong(_buf);
		this._like=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1424;
	}

	/**今日已点赞数 */
	/**今日已点赞数 */
	__getset(0,__proto,'todayLike',function(){
		return this._todayLike;
		},function(value){
		this._todayLike=value;
	});

	/**录像唯一id */
	/**录像唯一id */
	__getset(0,__proto,'videoId',function(){
		return this._videoId;
		},function(value){
		this._videoId=value;
	});

	/**录像当前点赞数 */
	/**录像当前点赞数 */
	__getset(0,__proto,'like',function(){
		return this._like;
		},function(value){
		this._like=value;
	});

	return ResLikeVideoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改职位错误
*/
//class net.message.guild.ResGuildChangePositionErrorMessage extends net.Message
var ResGuildChangePositionErrorMessage=(function(_super){
	function ResGuildChangePositionErrorMessage(){
		/**1:不在军团中;2:无权限;3:目标不在军团中;4:无法修改自身职位;5:军团已有副团长;*/
		this._error=0;
		ResGuildChangePositionErrorMessage.__super.call(this);
	}

	__class(ResGuildChangePositionErrorMessage,'net.message.guild.ResGuildChangePositionErrorMessage',_super);
	var __proto=ResGuildChangePositionErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1223;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildChangePositionErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求求婚
*/
//class net.message.marriage.ReqMarriageProposeMessage extends net.Message
var ReqMarriageProposeMessage=(function(_super){
	function ReqMarriageProposeMessage(){
		/**求婚目标 */
		this._target=null;
		/**求婚等级 */
		this._lv=0;
		/**自己担任的职务 */
		this._type=0;
		ReqMarriageProposeMessage.__super.call(this);
	}

	__class(ReqMarriageProposeMessage,'net.message.marriage.ReqMarriageProposeMessage',_super);
	var __proto=ReqMarriageProposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._target);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readLong(_buf);
		this._lv=this.readInt(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 531;
	}

	/**求婚目标 */
	/**求婚目标 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**求婚等级 */
	/**求婚等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**自己担任的职务 */
	/**自己担任的职务 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqMarriageProposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.general.ResGeneralSurmountMessage extends net.Message
var ResGeneralSurmountMessage=(function(_super){
	function ResGeneralSurmountMessage(){
		/**对象 */
		this._generalBean=null;
		ResGeneralSurmountMessage.__super.call(this);
	}

	__class(ResGeneralSurmountMessage,'net.message.general.ResGeneralSurmountMessage',_super);
	var __proto=ResGeneralSurmountMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._generalBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._generalBean=this.readBean(_buf,GeneralBean);
	}

	__proto.getId=function(){
		return 847;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'generalBean',function(){
		return this._generalBean;
		},function(value){
		this._generalBean=value;
	});

	return ResGeneralSurmountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领取技能错误
*/
//class net.message.yuanzheng.ResYuanZhengTakeSkillErrorMessage extends net.Message
var ResYuanZhengTakeSkillErrorMessage=(function(_super){
	function ResYuanZhengTakeSkillErrorMessage(){
		/**1:没有精灵;2:已经被领了;3:没有buff;*/
		this._error=0;
		ResYuanZhengTakeSkillErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengTakeSkillErrorMessage,'net.message.yuanzheng.ResYuanZhengTakeSkillErrorMessage',_super);
	var __proto=ResYuanZhengTakeSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1002;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengTakeSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成军团广场任务
*/
//class net.message.task.ResTaskGuildSquarePayMessage extends net.Message
var ResTaskGuildSquarePayMessage=(function(_super){
	function ResTaskGuildSquarePayMessage(){
		/**任务ID */
		this._taskID=0;
		ResTaskGuildSquarePayMessage.__super.call(this);
	}

	__class(ResTaskGuildSquarePayMessage,'net.message.task.ResTaskGuildSquarePayMessage',_super);
	var __proto=ResTaskGuildSquarePayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1303;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ResTaskGuildSquarePayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领取技能
*/
//class net.message.yuanzheng.ReqYuanZhengTakeSkillMessage extends net.Message
var ReqYuanZhengTakeSkillMessage=(function(_super){
	function ReqYuanZhengTakeSkillMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		/**技能ID */
		this._skillID=0;
		ReqYuanZhengTakeSkillMessage.__super.call(this);
	}

	__class(ReqYuanZhengTakeSkillMessage,'net.message.yuanzheng.ReqYuanZhengTakeSkillMessage',_super);
	var __proto=ReqYuanZhengTakeSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeInt(_buf,this._skillID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._skillID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1000;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**技能ID */
	/**技能ID */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	return ReqYuanZhengTakeSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*每日结束 重置镖车
*/
//class net.message.escort.ResFlushEscortDayEndMessage extends net.Message
var ResFlushEscortDayEndMessage=(function(_super){
	function ResFlushEscortDayEndMessage(){
		/**今日可以押运次数 */
		this._escortCount=0;
		/**今日可以劫镖次数 */
		this._robberyCount=0;
		ResFlushEscortDayEndMessage.__super.call(this);
	}

	__class(ResFlushEscortDayEndMessage,'net.message.escort.ResFlushEscortDayEndMessage',_super);
	var __proto=ResFlushEscortDayEndMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._escortCount);
		this.writeInt(_buf,this._robberyCount);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._escortCount=this.readInt(_buf);
		this._robberyCount=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 355;
	}

	/**今日可以押运次数 */
	/**今日可以押运次数 */
	__getset(0,__proto,'escortCount',function(){
		return this._escortCount;
		},function(value){
		this._escortCount=value;
	});

	/**今日可以劫镖次数 */
	/**今日可以劫镖次数 */
	__getset(0,__proto,'robberyCount',function(){
		return this._robberyCount;
		},function(value){
		this._robberyCount=value;
	});

	return ResFlushEscortDayEndMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关注/取消关注拍卖行物品
*/
//class net.message.auction.ResAuctionAttentionMessage extends net.Message
var ResAuctionAttentionMessage=(function(_super){
	function ResAuctionAttentionMessage(){
		/**道具类型id */
		this._itemType=0;
		/**物品子类型 */
		this._type2=0;
		/**是否关注道具 */
		this._attention=false;
		ResAuctionAttentionMessage.__super.call(this);
	}

	__class(ResAuctionAttentionMessage,'net.message.auction.ResAuctionAttentionMessage',_super);
	var __proto=ResAuctionAttentionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemType);
		this.writeInt(_buf,this._type2);
		this.writeBoolean(_buf,this._attention);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._itemType=this.readInt(_buf);
		this._type2=this.readInt(_buf);
		this._attention=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1376;
	}

	/**道具类型id */
	/**道具类型id */
	__getset(0,__proto,'itemType',function(){
		return this._itemType;
		},function(value){
		this._itemType=value;
	});

	/**物品子类型 */
	/**物品子类型 */
	__getset(0,__proto,'type2',function(){
		return this._type2;
		},function(value){
		this._type2=value;
	});

	/**是否关注道具 */
	/**是否关注道具 */
	__getset(0,__proto,'attention',function(){
		return this._attention;
		},function(value){
		this._attention=value;
	});

	return ResAuctionAttentionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击传国玉玺
*/
//class net.message.gb.ReqLegionBattleAttackThroneMessage extends net.Message
var ReqLegionBattleAttackThroneMessage=(function(_super){
	function ReqLegionBattleAttackThroneMessage(){
		ReqLegionBattleAttackThroneMessage.__super.call(this);;
	}

	__class(ReqLegionBattleAttackThroneMessage,'net.message.gb.ReqLegionBattleAttackThroneMessage',_super);
	var __proto=ReqLegionBattleAttackThroneMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1347;
	}

	return ReqLegionBattleAttackThroneMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新累计花费刀币
*/
//class net.message.user.ResUpdateCostGoldMessage extends net.Message
var ResUpdateCostGoldMessage=(function(_super){
	function ResUpdateCostGoldMessage(){
		/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
		this._reason=0;
		/**值 */
		this._value=null;
		ResUpdateCostGoldMessage.__super.call(this);
	}

	__class(ResUpdateCostGoldMessage,'net.message.user.ResUpdateCostGoldMessage',_super);
	var __proto=ResUpdateCostGoldMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reason);
		this.writeLong(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._reason=this.readInt(_buf);
		this._value=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1110;
	}

	/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	__getset(0,__proto,'reason',function(){
		return this._reason;
		},function(value){
		this._reason=value;
	});

	/**值 */
	/**值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResUpdateCostGoldMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名错误
*/
//class net.message.guild.ResGuildChangeNameErrorMessage extends net.Message
var ResGuildChangeNameErrorMessage=(function(_super){
	function ResGuildChangeNameErrorMessage(){
		/**1:无权限;2:名字非法;3:名字重复;4:没有帮会;5:没钱;*/
		this._error=0;
		ResGuildChangeNameErrorMessage.__super.call(this);
	}

	__class(ResGuildChangeNameErrorMessage,'net.message.guild.ResGuildChangeNameErrorMessage',_super);
	var __proto=ResGuildChangeNameErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1217;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildChangeNameErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者替换御魂
*/
//class net.message.soulboy.ReqSoulBoyHunUpgradeMessage extends net.Message
var ReqSoulBoyHunUpgradeMessage=(function(_super){
	function ReqSoulBoyHunUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		/**御魂下标 */
		this._index=0;
		/**类型 1 替换 2升级 */
		this._type=0;
		/**类型为1时 这里填要替换上去的魂下标 为2时 此处无值 */
		this._packet_index=0;
		ReqSoulBoyHunUpgradeMessage.__super.call(this);
	}

	__class(ReqSoulBoyHunUpgradeMessage,'net.message.soulboy.ReqSoulBoyHunUpgradeMessage',_super);
	var __proto=ReqSoulBoyHunUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._packet_index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._packet_index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 453;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**御魂下标 */
	/**御魂下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**类型 1 替换 2升级 */
	/**类型 1 替换 2升级 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**类型为1时 这里填要替换上去的魂下标 为2时 此处无值 */
	/**类型为1时 这里填要替换上去的魂下标 为2时 此处无值 */
	__getset(0,__proto,'packet_index',function(){
		return this._packet_index;
		},function(value){
		this._packet_index=value;
	});

	return ReqSoulBoyHunUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*微信IOS获取认证相关参数
*/
//class net.message.misc.ReqWxIOSAuthorizeDataMessage extends net.Message
var ReqWxIOSAuthorizeDataMessage=(function(_super){
	function ReqWxIOSAuthorizeDataMessage(){
		/**微信官方Code */
		this._wxCode=null;
		ReqWxIOSAuthorizeDataMessage.__super.call(this);
	}

	__class(ReqWxIOSAuthorizeDataMessage,'net.message.misc.ReqWxIOSAuthorizeDataMessage',_super);
	var __proto=ReqWxIOSAuthorizeDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._wxCode);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._wxCode=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1530;
	}

	/**微信官方Code */
	/**微信官方Code */
	__getset(0,__proto,'wxCode',function(){
		return this._wxCode;
		},function(value){
		this._wxCode=value;
	});

	return ReqWxIOSAuthorizeDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团踢人
*/
//class net.message.guild.ResGuildKickMessage extends net.Message
var ResGuildKickMessage=(function(_super){
	function ResGuildKickMessage(){
		ResGuildKickMessage.__super.call(this);;
	}

	__class(ResGuildKickMessage,'net.message.guild.ResGuildKickMessage',_super);
	var __proto=ResGuildKickMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1244;
	}

	return ResGuildKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取三国令等级奖励错误
*/
//class net.message.wartoken.ResGetWarTokenRewardErrorMessage extends net.Message
var ResGetWarTokenRewardErrorMessage=(function(_super){
	function ResGetWarTokenRewardErrorMessage(){
		/**1:配置错误;2:已经领取;3:等级不足;4:不是传奇帖;5:背包已满;*/
		this._error=0;
		ResGetWarTokenRewardErrorMessage.__super.call(this);
	}

	__class(ResGetWarTokenRewardErrorMessage,'net.message.wartoken.ResGetWarTokenRewardErrorMessage',_super);
	var __proto=ResGetWarTokenRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 892;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetWarTokenRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*御魂和灵分解错误
*/
//class net.message.soulboy.ResSoulBoyXilianTranslateErrorMessage extends net.Message
var ResSoulBoyXilianTranslateErrorMessage=(function(_super){
	function ResSoulBoyXilianTranslateErrorMessage(){
		/**1:道具不存在;*/
		this._error=0;
		ResSoulBoyXilianTranslateErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyXilianTranslateErrorMessage,'net.message.soulboy.ResSoulBoyXilianTranslateErrorMessage',_super);
	var __proto=ResSoulBoyXilianTranslateErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 555;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyXilianTranslateErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击的结果
*/
//class net.message.nineHeavy.ResNineHeavyPlayerAttackResultMessage extends net.Message
var ResNineHeavyPlayerAttackResultMessage=(function(_super){
	function ResNineHeavyPlayerAttackResultMessage(){
		/**攻击的类型 1 玩家 2 怪物 */
		this._type=0;
		/**攻击的目标ID */
		this._uid=null;
		/**结果 1 胜利 2 失败 */
		this._result=0;
		ResNineHeavyPlayerAttackResultMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerAttackResultMessage,'net.message.nineHeavy.ResNineHeavyPlayerAttackResultMessage',_super);
	var __proto=ResNineHeavyPlayerAttackResultMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._result);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._result=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 687;
	}

	/**攻击的目标ID */
	/**攻击的目标ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**攻击的类型 1 玩家 2 怪物 */
	/**攻击的类型 1 玩家 2 怪物 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**结果 1 胜利 2 失败 */
	/**结果 1 胜利 2 失败 */
	__getset(0,__proto,'result',function(){
		return this._result;
		},function(value){
		this._result=value;
	});

	return ResNineHeavyPlayerAttackResultMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*微信充值错误
*/
//class net.message.misc.ResWxRechargeErrorMessage extends net.Message
var ResWxRechargeErrorMessage=(function(_super){
	function ResWxRechargeErrorMessage(){
		/**1:没有该充值;2:param参数解析失败;3:其他错误;*/
		this._error=0;
		ResWxRechargeErrorMessage.__super.call(this);
	}

	__class(ResWxRechargeErrorMessage,'net.message.misc.ResWxRechargeErrorMessage',_super);
	var __proto=ResWxRechargeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1520;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWxRechargeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知BOSS重生
*/
//class net.message.worldboss.ResWorldBossPlayerRebornMessage extends net.Message
var ResWorldBossPlayerRebornMessage=(function(_super){
	function ResWorldBossPlayerRebornMessage(){
		/**复活者的ID */
		this._uid=null;
		ResWorldBossPlayerRebornMessage.__super.call(this);
	}

	__class(ResWorldBossPlayerRebornMessage,'net.message.worldboss.ResWorldBossPlayerRebornMessage',_super);
	var __proto=ResWorldBossPlayerRebornMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 517;
	}

	/**复活者的ID */
	/**复活者的ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResWorldBossPlayerRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装
*/
//class net.message.skin.ReqWearSkinMessage extends net.Message
var ReqWearSkinMessage=(function(_super){
	function ReqWearSkinMessage(){
		/**皮肤ID */
		this._skinID=0;
		/**英雄ID */
		this._heroID=0;
		ReqWearSkinMessage.__super.call(this);
	}

	__class(ReqWearSkinMessage,'net.message.skin.ReqWearSkinMessage',_super);
	var __proto=ReqWearSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 577;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqWearSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级战纹
*/
//class net.message.zhanwen.ResUpgradeZhanwenMessage extends net.Message
var ResUpgradeZhanwenMessage=(function(_super){
	function ResUpgradeZhanwenMessage(){
		/**英雄ID */
		this._heroID=0;
		/**战纹道具 */
		this._goods=null;
		ResUpgradeZhanwenMessage.__super.call(this);
	}

	__class(ResUpgradeZhanwenMessage,'net.message.zhanwen.ResUpgradeZhanwenMessage',_super);
	var __proto=ResUpgradeZhanwenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._goods);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._goods=this.readBean(_buf,GoodsBean);
	}

	__proto.getId=function(){
		return 102;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**战纹道具 */
	/**战纹道具 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	return ResUpgradeZhanwenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门任务
*/
//class net.message.shimen.ResTakeShiMenTaskMessage extends net.Message
var ResTakeShiMenTaskMessage=(function(_super){
	function ResTakeShiMenTaskMessage(){
		/**剩余挑战次数 */
		this._challengeTimes=0;
		/**挑战次数恢复时间 */
		this._challengeTimesRecoverTime=0;
		/**已领取的师门任务的星级，0表示尚未领取 */
		this._star=0;
		ResTakeShiMenTaskMessage.__super.call(this);
	}

	__class(ResTakeShiMenTaskMessage,'net.message.shimen.ResTakeShiMenTaskMessage',_super);
	var __proto=ResTakeShiMenTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._challengeTimes);
		this.writeInt(_buf,this._challengeTimesRecoverTime);
		this.writeInt(_buf,this._star);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._challengeTimes=this.readInt(_buf);
		this._challengeTimesRecoverTime=this.readInt(_buf);
		this._star=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 146;
	}

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'challengeTimes',function(){
		return this._challengeTimes;
		},function(value){
		this._challengeTimes=value;
	});

	/**已领取的师门任务的星级，0表示尚未领取 */
	/**已领取的师门任务的星级，0表示尚未领取 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**挑战次数恢复时间 */
	/**挑战次数恢复时间 */
	__getset(0,__proto,'challengeTimesRecoverTime',function(){
		return this._challengeTimesRecoverTime;
		},function(value){
		this._challengeTimesRecoverTime=value;
	});

	return ResTakeShiMenTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*你提我改
*/
//class net.message.login.ReqIdeaUpLoadMessage extends net.Message
var ReqIdeaUpLoadMessage=(function(_super){
	function ReqIdeaUpLoadMessage(){
		/**意见内容 */
		this._ideas=null;
		ReqIdeaUpLoadMessage.__super.call(this);
	}

	__class(ReqIdeaUpLoadMessage,'net.message.login.ReqIdeaUpLoadMessage',_super);
	var __proto=ReqIdeaUpLoadMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._ideas);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._ideas=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1467;
	}

	/**意见内容 */
	/**意见内容 */
	__getset(0,__proto,'ideas',function(){
		return this._ideas;
		},function(value){
		this._ideas=value;
	});

	return ReqIdeaUpLoadMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新数值
*/
//class net.message.user.ResUpdateValueMessage extends net.Message
var ResUpdateValueMessage=(function(_super){
	function ResUpdateValueMessage(){
		/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
		this._reason=0;
		/**数值类型[1:元宝][2:铜币][3:咒术精华][4:功勋][5:远征币][6:帮贡][7:空城计积分][8:占位][9:绑定元宝][10:三国币][11:寻宝积分][12:军团贡献][13:军团贡献] */
		this._type=0;
		/**值 */
		this._value=null;
		ResUpdateValueMessage.__super.call(this);
	}

	__class(ResUpdateValueMessage,'net.message.user.ResUpdateValueMessage',_super);
	var __proto=ResUpdateValueMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reason);
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._reason=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._value=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 21;
	}

	/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	/**why?[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	__getset(0,__proto,'reason',function(){
		return this._reason;
		},function(value){
		this._reason=value;
	});

	/**数值类型[1:元宝][2:铜币][3:咒术精华][4:功勋][5:远征币][6:帮贡][7:空城计积分][8:占位][9:绑定元宝][10:三国币][11:寻宝积分][12:军团贡献][13:军团贡献] */
	/**数值类型[1:元宝][2:铜币][3:咒术精华][4:功勋][5:远征币][6:帮贡][7:空城计积分][8:占位][9:绑定元宝][10:三国币][11:寻宝积分][12:军团贡献][13:军团贡献] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**值 */
	/**值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResUpdateValueMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*限定武将活动
*/
//class net.message.activities.ResLimitWuJiangHuntActMessage extends net.Message
var ResLimitWuJiangHuntActMessage=(function(_super){
	function ResLimitWuJiangHuntActMessage(){
		/**大奖进度 */
		this._bigRewardProcess=0;
		ResLimitWuJiangHuntActMessage.__super.call(this);
		this._rewardItems=[];
	}

	__class(ResLimitWuJiangHuntActMessage,'net.message.activities.ResLimitWuJiangHuntActMessage',_super);
	var __proto=ResLimitWuJiangHuntActMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bigRewardProcess);
		this.writeInt(_buf,this._rewardItems.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewardItems.length;++i_am_tmp_i){
			this._rewardItems[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bigRewardProcess=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rewardItems=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewardItems[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1579;
	}

	/**大奖进度 */
	/**大奖进度 */
	__getset(0,__proto,'bigRewardProcess',function(){
		return this._bigRewardProcess;
		},function(value){
		this._bigRewardProcess=value;
	});

	/**当前所有道具获取的次数 */
	/**当前所有道具获取的次数 */
	__getset(0,__proto,'rewardItems',function(){
		return this._rewardItems;
		},function(value){
		this._rewardItems=value;
	});

	return ResLimitWuJiangHuntActMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*附灵信息
*/
//class net.message.equip.ResFuLingGetInfoMessage extends net.Message
var ResFuLingGetInfoMessage=(function(_super){
	function ResFuLingGetInfoMessage(){
		ResFuLingGetInfoMessage.__super.call(this);
		this._fuLingBeans=[];
	}

	__class(ResFuLingGetInfoMessage,'net.message.equip.ResFuLingGetInfoMessage',_super);
	var __proto=ResFuLingGetInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fuLingBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._fuLingBeans.length;++i_am_tmp_i){
			this._fuLingBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._fuLingBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._fuLingBeans[i_am_tmp_i]=this.readBeanInList(_buf,FuLingBean);
		}
	}

	__proto.getId=function(){
		return 1545;
	}

	/**附灵信息 */
	/**附灵信息 */
	__getset(0,__proto,'fuLingBeans',function(){
		return this._fuLingBeans;
		},function(value){
		this._fuLingBeans=value;
	});

	return ResFuLingGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新宠物属性
*/
//class net.message.pet.ResUpdatePetAttributeMessage extends net.Message
var ResUpdatePetAttributeMessage=(function(_super){
	function ResUpdatePetAttributeMessage(){
		/**宠物ID */
		this._petID=0;
		ResUpdatePetAttributeMessage.__super.call(this);
		this._attributes=[];
	}

	__class(ResUpdatePetAttributeMessage,'net.message.pet.ResUpdatePetAttributeMessage',_super);
	var __proto=ResUpdatePetAttributeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	__proto.getId=function(){
		return 190;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**属性列表,见AttributeType */
	/**属性列表,见AttributeType */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	return ResUpdatePetAttributeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入军团
*/
//class net.message.guild.ResGuildApplyReplyMessage extends net.Message
var ResGuildApplyReplyMessage=(function(_super){
	function ResGuildApplyReplyMessage(){
		ResGuildApplyReplyMessage.__super.call(this);;
	}

	__class(ResGuildApplyReplyMessage,'net.message.guild.ResGuildApplyReplyMessage',_super);
	var __proto=ResGuildApplyReplyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1207;
	}

	return ResGuildApplyReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ResOnHookRewardInfoMessage extends net.Message
var ResOnHookRewardInfoMessage=(function(_super){
	function ResOnHookRewardInfoMessage(){
		/**挂机时间 */
		this._time=null;
		ResOnHookRewardInfoMessage.__super.call(this);
		this._beans=[];
	}

	__class(ResOnHookRewardInfoMessage,'net.message.misc.ResOnHookRewardInfoMessage',_super);
	var __proto=ResOnHookRewardInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._time);
		this.writeInt(_buf,this._beans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._beans.length;++i_am_tmp_i){
			this._beans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._beans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._beans[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 1451;
	}

	/**奖励物品 */
	/**奖励物品 */
	__getset(0,__proto,'beans',function(){
		return this._beans;
		},function(value){
		this._beans=value;
	});

	/**挂机时间 */
	/**挂机时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResOnHookRewardInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有队伍的简要信息错误
*/
//class net.message.team.ResTeamGetAllErrorMessage extends net.Message
var ResTeamGetAllErrorMessage=(function(_super){
	function ResTeamGetAllErrorMessage(){
		/**1:没有队伍信息;*/
		this._error=0;
		ResTeamGetAllErrorMessage.__super.call(this);
	}

	__class(ResTeamGetAllErrorMessage,'net.message.team.ResTeamGetAllErrorMessage',_super);
	var __proto=ResTeamGetAllErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1271;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamGetAllErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级元脉
*/
//class net.message.general.ReqGeneralUpgradeYuanMaiMessage extends net.Message
var ReqGeneralUpgradeYuanMaiMessage=(function(_super){
	function ReqGeneralUpgradeYuanMaiMessage(){
		ReqGeneralUpgradeYuanMaiMessage.__super.call(this);;
	}

	__class(ReqGeneralUpgradeYuanMaiMessage,'net.message.general.ReqGeneralUpgradeYuanMaiMessage',_super);
	var __proto=ReqGeneralUpgradeYuanMaiMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1405;
	}

	return ReqGeneralUpgradeYuanMaiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场排名信息
*/
//class net.message.arena.ReqArenaGetRankInfoMessage extends net.Message
var ReqArenaGetRankInfoMessage=(function(_super){
	function ReqArenaGetRankInfoMessage(){
		ReqArenaGetRankInfoMessage.__super.call(this);;
	}

	__class(ReqArenaGetRankInfoMessage,'net.message.arena.ReqArenaGetRankInfoMessage',_super);
	var __proto=ReqArenaGetRankInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 283;
	}

	return ReqArenaGetRankInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*反馈兑换道具使用成功
*/
//class net.message.goods.ResUpdateExchangeGoodsMessage extends net.Message
var ResUpdateExchangeGoodsMessage=(function(_super){
	function ResUpdateExchangeGoodsMessage(){
		/**道具ID */
		this._goodsID=0;
		ResUpdateExchangeGoodsMessage.__super.call(this);
	}

	__class(ResUpdateExchangeGoodsMessage,'net.message.goods.ResUpdateExchangeGoodsMessage',_super);
	var __proto=ResUpdateExchangeGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._goodsID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 682;
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'goodsID',function(){
		return this._goodsID;
		},function(value){
		this._goodsID=value;
	});

	return ResUpdateExchangeGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取进阶好礼信息
*/
//class net.message.advanceReward.ResGetAdvancedInfoMessage extends net.Message
var ResGetAdvancedInfoMessage=(function(_super){
	function ResGetAdvancedInfoMessage(){
		ResGetAdvancedInfoMessage.__super.call(this);
		this._rewarded=[];
	}

	__class(ResGetAdvancedInfoMessage,'net.message.advanceReward.ResGetAdvancedInfoMessage',_super);
	var __proto=ResGetAdvancedInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rewarded.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewarded.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewarded[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rewarded=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewarded[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1082;
	}

	/**已经领取的奖励 */
	/**已经领取的奖励 */
	__getset(0,__proto,'rewarded',function(){
		return this._rewarded;
		},function(value){
		this._rewarded=value;
	});

	return ResGetAdvancedInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解道具
*/
//class net.message.goods.ReqDisposeMessage extends net.Message
var ReqDisposeMessage=(function(_super){
	function ReqDisposeMessage(){
		/**升级包中的还是身上的？ */
		this._isBag=0;
		/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		/**英雄id */
		this._heroID=0;
		ReqDisposeMessage.__super.call(this);
		this._goods=[];
	}

	__class(ReqDisposeMessage,'net.message.goods.ReqDisposeMessage',_super);
	var __proto=ReqDisposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._isBag);
		this.writeInt(_buf,this._goods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goods.length;++i_am_tmp_i){
			this._goods[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isBag=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._goods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goods[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._grid=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 199;
	}

	/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**需要分解的道具列表 */
	/**需要分解的道具列表 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	/**升级包中的还是身上的？ */
	/**升级包中的还是身上的？ */
	__getset(0,__proto,'isBag',function(){
		return this._isBag;
		},function(value){
		this._isBag=value;
	});

	/**英雄id */
	/**英雄id */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqDisposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝幸运值奖励信息
*/
//class net.message.textureHunt.ResGetLuckRewardInfoMessage extends net.Message
var ResGetLuckRewardInfoMessage=(function(_super){
	function ResGetLuckRewardInfoMessage(){
		ResGetLuckRewardInfoMessage.__super.call(this);
		this._itemBeans=[];
	}

	__class(ResGetLuckRewardInfoMessage,'net.message.textureHunt.ResGetLuckRewardInfoMessage',_super);
	var __proto=ResGetLuckRewardInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBeans.length;++i_am_tmp_i){
			this._itemBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._itemBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBeans[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1592;
	}

	/**寻宝幸运值奖励 */
	/**寻宝幸运值奖励 */
	__getset(0,__proto,'itemBeans',function(){
		return this._itemBeans;
		},function(value){
		this._itemBeans=value;
	});

	return ResGetLuckRewardInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新自己英雄等级
*/
//class net.message.user.ResUpdateLevelMessage extends net.Message
var ResUpdateLevelMessage=(function(_super){
	function ResUpdateLevelMessage(){
		/**当前等级 */
		this._level=0;
		/**当前经验 */
		this._exp=null;
		/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
		this._reason=0;
		ResUpdateLevelMessage.__super.call(this);
	}

	__class(ResUpdateLevelMessage,'net.message.user.ResUpdateLevelMessage',_super);
	var __proto=ResUpdateLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._level);
		this.writeLong(_buf,this._exp);
		this.writeInt(_buf,this._reason);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._level=this.readInt(_buf);
		this._exp=this.readLong(_buf);
		this._reason=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 79;
	}

	/**当前等级 */
	/**当前等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**当前经验 */
	/**当前经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	/**原因[1:GM指令][2:击杀怪物][3:升级技能][4:升级内功][5:使用道具][6:拾取][7:经脉][8:精炼][9:穿戴装备][10:强化][11:铸造][12:翅膀][13:龙魂][14:挑战关卡][15:挑战关卡完毕][16:掉线][17:关卡循环][18:完成主线任务][19:激活时装][20:进阶玉佩][21:玉佩使用道具][22:熔炼][23:装备背包扩容][24:进阶烈焰戒指][25:合成传世激活道具][26:传世升级/激活][27:合成烈焰戒指][28:降低等级][29:分解传世装备][30:分解战纹][31:升级战纹][32:商店购买][33:系统][34:升级坐骑][35:替换战纹][36:置换秘籍][37:兵魂突破][38:兵魂炼化][39:激活兽灵][40:穿戴秘籍][41:激活图鉴][42:升级图鉴][43:合成神装][44:分解神装][45:升级神装][46:兑换坐骑残页道具][47:分级坐骑残页道具][48:坐骑技能货币兑换][49:镶嵌坐骑残页][50:进入主城][51:进入野外场景][52:领取爵位官印][53:合成热血][54:分解热血][55:升级热血][56:找回威望][57:穿戴坐骑装备][58:激活战骑][59:脱下战骑装备][60:坐骑装备升星][61:激活战骑兽灵][62:进阶战骑兽灵][63:分解战骑装备][64:兑换坐骑装备升星丹][65:洗练黄金武器][66:结束一天][67:退出副本][68:副本领奖][69:挑战副本][70:通天塔转盘][71:通天塔每日奖励][72:挑战附近的英雄][73:降低PK值][74:循环][75:守护神剑购买buff][76:守护神剑召唤boss][77:复活][78:王者争霸段位奖励][79:王者争霸排名奖励][80:购买王者争霸次数][81:王者争霸挑战][82:进入矿洞][83:获取血战矿洞奖励][84:升级矿工][85:抢劫矿工][86:世界BOSS击杀奖励][87:世界BOSS排名奖励][88:世界BOSS参与奖励][89:世界BOSS鼓舞][90:快速完成挖矿][91:升级爵位][92:获取历练奖励][93:添加柴火][94:练功房中学习技能][95:升级帮会建筑][96:捐赠帮会][97:帮会BOSS阶段奖励][98:帮会BOSS伤害排名奖励][99:神秘商店刷新][100:帮会BOSS击杀奖励][101:寻宝][102:杀戮榜奖励][103:合成][104:龙城争霸每日奖励][105:龙城争霸帮主奖励][106:龙城争霸成员排名奖励][107:龙城争霸积分奖励][108:魔界入侵][109:拍卖预扣][110:拍卖返还][111:商城购买][112:龙城争霸去下一层][113:龙城争霸去城门][114:领取签到奖励][115:领取累计签到奖励][116:领取累计登陆奖励][117:VIP礼包][118:使用激活码][119:手动][120:传送][121:兵魂之灵激活][122:充值][123:秘籍孔位加锁][124:提前解锁特戒技能栏][125:升级特戒技能][126:ROLL点][127:任务传送][128:藏宝阁][129:合成背包中的碎片][130:初始化][131:升级][132:威望变更][133:称号变更][134:VIP变更][135:激活系统][136:解锁特戒][137:升级勋章][138:神器][139:转生][140:挑战关卡][141:挑战挂机关卡][142:领取关卡章节奖励][143:提升师门任务星级][144:领取师门任务奖励(环)][145:领取师门任务奖励][146:激活宠物][147:宠物升级][148:宠物资质升级][149:宠物洗练][150:激活宠物缘分][151:升级通灵][152:升级兽魂][153:升级通灵技能][154:升级兽魂技能][155:穿戴兽魂装备][156:穿戴通灵装备][157:捕获宠物][158:升级锻造][159:分解][160:坐骑][161:翅膀][162:神兵][163:精灵][164:进阶][165:购买全民boss挑战次数][166:全民boss奖励][167:野外boss奖励][168:野外boss挑战][169:藏宝图箱子][170:降妖除魔箱子][171:勇闯天庭箱子][172:藏宝图奖励][173:勇闯天庭奖励][174:降妖除魔奖励][175:玲珑宝塔哦奖励][176:洗练法器][177:替换法器技能][178:玄女强化][179:兑换][180:膜拜][181:竞技场购买次数][182:竞技场挑战][183:竞技场每日奖励][184:远征购买][185:远征复活][186:远征精灵刷新][187:远征领奖][188:远征重置][189:远征挑战][190:一键平定安邦][191:官位活跃宝箱][192:押镖][193:九重天][194:火烧赤壁][195:科举][196:升级灵童][197:群英会下注][198:逐鹿购买宝箱][199:升级经脉][200:王者争霸消费][201:王者争霸奖励][202:世界BOSS（帮派BOSS）][203:结婚][204:拍卖][205:时装][206:军团][207:成长基金][208:寻宝][209:运营活动][210:猎命][211:更新猎命等级][212:摇钱树][213:百万元宝][214:福利签到][215:每日签到][216:等级礼包][217:登陆送元宝][218:红包][219:月卡][220:终身卡][221:进阶豪礼][222:神装][223:图腾][224:军师][225:蛮将][226:默认 用于日志][227:激活码][228:战令][229:在线礼包][230:天天返利][231:觉醒][232:军团战][233:升级光武光甲][234:额外技能][235:星宿幻境奖励][236:镇守][237:合成][238:空城计][239:全服boss][240:王者争霸排名奖励][241:王者争霸段位奖励][242:图鉴][243:合体][244:合体爬塔][245:创建帮会][246:帮会改名][247:帮会刷新兑换][248:帮会兑换][249:帮会签到][250:帮会签到奖励][251:帮会任务完成][252:帮会任务重置][253:军团战个人积分奖励][254:个人boss][255:至尊boss][256:升级宠物技能][257:军团战个人积分奖励][258:军团战重生][259:副本扫荡][260:全服boss击杀][261:完成任务][262:付费完成军团广场任务][263:付费重置军团广场任务][264:领取军团广场任务任务][265:群英会][266:排行榜活动][267:团购][268:商店购买返还][269:录像馆点赞][270:商城刷新][271:分解][272:革职][273:挂机领奖][274:快速战斗奖励][275:登录计算属性][276:开服有礼][277:今日推荐][278:装备打造石合成][279:关卡投资计划][280:周卡][281:指尖关注奖励][282:指尖邀请奖励][283:刀币翻倍活动][284:刀币满盆活动][285:超值补给活动][286:0元礼包][287:战令][288:限定武将活动][289:寻宝-点将台][290:寻宝-蜀国点将][291:寻宝-魏国点将][292:寻宝-吴国点将][293:寻宝-群雄点将][294:寻宝-猎命][295:寻宝-祈愿][296:更新补偿][297:机关技能活动][298:后台邮件][299:寻宝-招贤令][300:使用武将盒子发出的消息][301:开服礼包][302:祥瑞][303:删档测试充值返还][304:庆典达标有礼活动][305:庆典点将转盘活动][306:进阶折扣商店][307:庆典进阶限时直购][308:试炼之塔][309:蕴宝馆][310:宝物系统][311:周末许愿][312:十倍返利活动][313:活跃转盘][314:祈愿明灯][315:最强军团][316:准点登陆][317:八折寻宝][318:统帅觐见][319:活动结束移除][320:董卓之乱][321:神将现世][322:充值返利转盘] */
	__getset(0,__proto,'reason',function(){
		return this._reason;
		},function(value){
		this._reason=value;
	});

	return ResUpdateLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物
*/
//class net.message.pet.ResActivePetMessage extends net.Message
var ResActivePetMessage=(function(_super){
	function ResActivePetMessage(){
		/**宠物信息 */
		this._pet=null;
		ResActivePetMessage.__super.call(this);
	}

	__class(ResActivePetMessage,'net.message.pet.ResActivePetMessage',_super);
	var __proto=ResActivePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._pet);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._pet=this.readBean(_buf,PetBean);
	}

	__proto.getId=function(){
		return 149;
	}

	/**宠物信息 */
	/**宠物信息 */
	__getset(0,__proto,'pet',function(){
		return this._pet;
		},function(value){
		this._pet=value;
	});

	return ResActivePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*录像点赞错误
*/
//class net.message.video.ResLikeVideoErrorMessage extends net.Message
var ResLikeVideoErrorMessage=(function(_super){
	function ResLikeVideoErrorMessage(){
		/**1:录像未找到;2:点赞次数不足;3:已经点赞过了;*/
		this._error=0;
		ResLikeVideoErrorMessage.__super.call(this);
	}

	__class(ResLikeVideoErrorMessage,'net.message.video.ResLikeVideoErrorMessage',_super);
	var __proto=ResLikeVideoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1425;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLikeVideoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练法器错误
*/
//class net.message.xuannv.ResXiLianFaQiErrorMessage extends net.Message
var ResXiLianFaQiErrorMessage=(function(_super){
	function ResXiLianFaQiErrorMessage(){
		/**1:没有法器;2:没有道具;3:没钱;4:锁定序号错误;*/
		this._error=0;
		ResXiLianFaQiErrorMessage.__super.call(this);
	}

	__class(ResXiLianFaQiErrorMessage,'net.message.xuannv.ResXiLianFaQiErrorMessage',_super);
	var __proto=ResXiLianFaQiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 261;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResXiLianFaQiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童嗑药错误
*/
//class net.message.soulboy.ResSoulBoyDrugErrorMessage extends net.Message
var ResSoulBoyDrugErrorMessage=(function(_super){
	function ResSoulBoyDrugErrorMessage(){
		/**1:灵童不存在;2:材料不足;*/
		this._error=0;
		ResSoulBoyDrugErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyDrugErrorMessage,'net.message.soulboy.ResSoulBoyDrugErrorMessage',_super);
	var __proto=ResSoulBoyDrugErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 449;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyDrugErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*猎命错误
*/
//class net.message.lieming.ResLiemingErrorMessage extends net.Message
var ResLiemingErrorMessage=(function(_super){
	function ResLiemingErrorMessage(){
		/**1:货币不足;*/
		this._error=0;
		ResLiemingErrorMessage.__super.call(this);
	}

	__class(ResLiemingErrorMessage,'net.message.lieming.ResLiemingErrorMessage',_super);
	var __proto=ResLiemingErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 731;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLiemingErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看其他玩家信息
*/
//class net.message.fight.ReqOtherPlayerFightTeamMessage extends net.Message
var ReqOtherPlayerFightTeamMessage=(function(_super){
	function ReqOtherPlayerFightTeamMessage(){
		/**uID */
		this._uid=null;
		ReqOtherPlayerFightTeamMessage.__super.call(this);
	}

	__class(ReqOtherPlayerFightTeamMessage,'net.message.fight.ReqOtherPlayerFightTeamMessage',_super);
	var __proto=ReqOtherPlayerFightTeamMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1441;
	}

	/**uID */
	/**uID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqOtherPlayerFightTeamMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级元脉错误
*/
//class net.message.general.ResGeneralUpgradeYuanMaiErrorMessage extends net.Message
var ResGeneralUpgradeYuanMaiErrorMessage=(function(_super){
	function ResGeneralUpgradeYuanMaiErrorMessage(){
		/**1:还没有蛮将;2:穷;*/
		this._error=0;
		ResGeneralUpgradeYuanMaiErrorMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeYuanMaiErrorMessage,'net.message.general.ResGeneralUpgradeYuanMaiErrorMessage',_super);
	var __proto=ResGeneralUpgradeYuanMaiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1407;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralUpgradeYuanMaiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸战斗记录错误
*/
//class net.message.kingwar.ResKingWarFightRecordErrorMessage extends net.Message
var ResKingWarFightRecordErrorMessage=(function(_super){
	function ResKingWarFightRecordErrorMessage(){
		/**1:没有找到数据;*/
		this._error=0;
		ResKingWarFightRecordErrorMessage.__super.call(this);
	}

	__class(ResKingWarFightRecordErrorMessage,'net.message.kingwar.ResKingWarFightRecordErrorMessage',_super);
	var __proto=ResKingWarFightRecordErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1162;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarFightRecordErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用觉醒错误
*/
//class net.message.upgrade.ResCommonWakeUpErrorMessage extends net.Message
var ResCommonWakeUpErrorMessage=(function(_super){
	function ResCommonWakeUpErrorMessage(){
		/**1:已达最大等级;2:穷;3:没道具;4:无配置;5:子类型错误;*/
		this._error=0;
		ResCommonWakeUpErrorMessage.__super.call(this);
	}

	__class(ResCommonWakeUpErrorMessage,'net.message.upgrade.ResCommonWakeUpErrorMessage',_super);
	var __proto=ResCommonWakeUpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 905;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCommonWakeUpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取伴侣外形
*/
//class net.message.marriage.ResMarriageGetTeammateSkinMessage extends net.Message
var ResMarriageGetTeammateSkinMessage=(function(_super){
	function ResMarriageGetTeammateSkinMessage(){
		/***/
		this._skin=null;
		ResMarriageGetTeammateSkinMessage.__super.call(this);
	}

	__class(ResMarriageGetTeammateSkinMessage,'net.message.marriage.ResMarriageGetTeammateSkinMessage',_super);
	var __proto=ResMarriageGetTeammateSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._skin);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skin=this.readBean(_buf,AppearanceBean);
	}

	__proto.getId=function(){
		return 540;
	}

	/***/
	/***/
	__getset(0,__proto,'skin',function(){
		return this._skin;
		},function(value){
		this._skin=value;
	});

	return ResMarriageGetTeammateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*boss宝箱拾取删除错误
*/
//class net.message.worldboss.ResWorldBossBoxRemoveErrorMessage extends net.Message
var ResWorldBossBoxRemoveErrorMessage=(function(_super){
	function ResWorldBossBoxRemoveErrorMessage(){
		/**1:活动未开始;2:已经被拾取;*/
		this._error=0;
		ResWorldBossBoxRemoveErrorMessage.__super.call(this);
	}

	__class(ResWorldBossBoxRemoveErrorMessage,'net.message.worldboss.ResWorldBossBoxRemoveErrorMessage',_super);
	var __proto=ResWorldBossBoxRemoveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 524;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossBoxRemoveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务队列错误
*/
//class net.message.chibi.ResChibiBuyQueueErrorMessage extends net.Message
var ResChibiBuyQueueErrorMessage=(function(_super){
	function ResChibiBuyQueueErrorMessage(){
		/**1:队列达到最大;2:穷;*/
		this._error=0;
		ResChibiBuyQueueErrorMessage.__super.call(this);
	}

	__class(ResChibiBuyQueueErrorMessage,'net.message.chibi.ResChibiBuyQueueErrorMessage',_super);
	var __proto=ResChibiBuyQueueErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 401;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChibiBuyQueueErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*背包使用道具(使用类型道具)错误
*/
//class net.message.goods.ResUseGoodsErrorMessage extends net.Message
var ResUseGoodsErrorMessage=(function(_super){
	function ResUseGoodsErrorMessage(){
		/**1:参数错误;2:数量错误;3:不可使用;4:不可批量使用;5:背包满;*/
		this._error=0;
		ResUseGoodsErrorMessage.__super.call(this);
	}

	__class(ResUseGoodsErrorMessage,'net.message.goods.ResUseGoodsErrorMessage',_super);
	var __proto=ResUseGoodsErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 27;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUseGoodsErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*培养
*/
//class net.message.treasure.ResTreasurePyMessage extends net.Message
var ResTreasurePyMessage=(function(_super){
	function ResTreasurePyMessage(){
		/**宝物ID */
		this._treasureId=0;
		/**培养等级 */
		this._pyLevel=0;
		ResTreasurePyMessage.__super.call(this);
		this._pyAttrs=[];
	}

	__class(ResTreasurePyMessage,'net.message.treasure.ResTreasurePyMessage',_super);
	var __proto=ResTreasurePyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._treasureId);
		this.writeInt(_buf,this._pyLevel);
		this.writeInt(_buf,this._pyAttrs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._pyAttrs.length;++i_am_tmp_i){
			this._pyAttrs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasureId=this.readInt(_buf);
		this._pyLevel=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._pyAttrs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._pyAttrs[i_am_tmp_i]=this.readBeanInList(_buf,AttributeBean);
		}
	}

	__proto.getId=function(){
		return 1626;
	}

	/**宝物ID */
	/**宝物ID */
	__getset(0,__proto,'treasureId',function(){
		return this._treasureId;
		},function(value){
		this._treasureId=value;
	});

	/**培养等级 */
	/**培养等级 */
	__getset(0,__proto,'pyLevel',function(){
		return this._pyLevel;
		},function(value){
		this._pyLevel=value;
	});

	/**当前宝物属性 */
	/**当前宝物属性 */
	__getset(0,__proto,'pyAttrs',function(){
		return this._pyAttrs;
		},function(value){
		this._pyAttrs=value;
	});

	return ResTreasurePyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子错误
*/
//class net.message.marriage.ResMarriagePromoteHouseLvErrorMessage extends net.Message
var ResMarriagePromoteHouseLvErrorMessage=(function(_super){
	function ResMarriagePromoteHouseLvErrorMessage(){
		/**1:没有结婚;2:没钱了;3:最大等级;*/
		this._error=0;
		ResMarriagePromoteHouseLvErrorMessage.__super.call(this);
	}

	__class(ResMarriagePromoteHouseLvErrorMessage,'net.message.marriage.ResMarriagePromoteHouseLvErrorMessage',_super);
	var __proto=ResMarriagePromoteHouseLvErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 558;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriagePromoteHouseLvErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔主界面
*/
//class net.message.towerFight.ReqEnterTowerMessage extends net.Message
var ReqEnterTowerMessage=(function(_super){
	function ReqEnterTowerMessage(){
		ReqEnterTowerMessage.__super.call(this);;
	}

	__class(ReqEnterTowerMessage,'net.message.towerFight.ReqEnterTowerMessage',_super);
	var __proto=ReqEnterTowerMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1610;
	}

	return ReqEnterTowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取奖励
*/
//class net.message.garrison.ResGarrisonTakeRewardMessage extends net.Message
var ResGarrisonTakeRewardMessage=(function(_super){
	function ResGarrisonTakeRewardMessage(){
		/**更新门数据 */
		this._door=null;
		ResGarrisonTakeRewardMessage.__super.call(this);
	}

	__class(ResGarrisonTakeRewardMessage,'net.message.garrison.ResGarrisonTakeRewardMessage',_super);
	var __proto=ResGarrisonTakeRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._door);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._door=this.readBean(_buf,GarrisonDoorBean);
	}

	__proto.getId=function(){
		return 1044;
	}

	/**更新门数据 */
	/**更新门数据 */
	__getset(0,__proto,'door',function(){
		return this._door;
		},function(value){
		this._door=value;
	});

	return ResGarrisonTakeRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿
*/
//class net.message.activities.ResWeekendXuYuanSelectMessage extends net.Message
var ResWeekendXuYuanSelectMessage=(function(_super){
	function ResWeekendXuYuanSelectMessage(){
		/**是否已领取 */
		this._get=false;
		ResWeekendXuYuanSelectMessage.__super.call(this);
		this._week6IndexList=[];
		this._week7IndexList=[];
	}

	__class(ResWeekendXuYuanSelectMessage,'net.message.activities.ResWeekendXuYuanSelectMessage',_super);
	var __proto=ResWeekendXuYuanSelectMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._get);
		this.writeInt(_buf,this._week6IndexList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._week6IndexList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._week6IndexList[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._week7IndexList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._week7IndexList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._week7IndexList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._get=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._week6IndexList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._week6IndexList[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._week7IndexList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._week7IndexList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1656;
	}

	/**周六选择的奖励序号 */
	/**周六选择的奖励序号 */
	__getset(0,__proto,'week6IndexList',function(){
		return this._week6IndexList;
		},function(value){
		this._week6IndexList=value;
	});

	/**是否已领取 */
	/**是否已领取 */
	__getset(0,__proto,'get',function(){
		return this._get;
		},function(value){
		this._get=value;
	});

	/**周日选择的奖励序号 */
	/**周日选择的奖励序号 */
	__getset(0,__proto,'week7IndexList',function(){
		return this._week7IndexList;
		},function(value){
		this._week7IndexList=value;
	});

	return ResWeekendXuYuanSelectMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级守护
*/
//class net.message.legion.ReqLegionGuardUpgradeMessageMessage extends net.Message
var ReqLegionGuardUpgradeMessageMessage=(function(_super){
	function ReqLegionGuardUpgradeMessageMessage(){
		ReqLegionGuardUpgradeMessageMessage.__super.call(this);;
	}

	__class(ReqLegionGuardUpgradeMessageMessage,'net.message.legion.ReqLegionGuardUpgradeMessageMessage',_super);
	var __proto=ReqLegionGuardUpgradeMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 631;
	}

	return ReqLegionGuardUpgradeMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴一键升星
*/
//class net.message.handbook.ReqHandBookFastUpStarMessage extends net.Message
var ReqHandBookFastUpStarMessage=(function(_super){
	function ReqHandBookFastUpStarMessage(){
		ReqHandBookFastUpStarMessage.__super.call(this);;
	}

	__class(ReqHandBookFastUpStarMessage,'net.message.handbook.ReqHandBookFastUpStarMessage',_super);
	var __proto=ReqHandBookFastUpStarMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1433;
	}

	return ReqHandBookFastUpStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*一键升级觉醒元素错误
*/
//class net.message.adviser.ResAdviserUpgradeElementQuickErrorMessage extends net.Message
var ResAdviserUpgradeElementQuickErrorMessage=(function(_super){
	function ResAdviserUpgradeElementQuickErrorMessage(){
		/***/
		this._error=0;
		ResAdviserUpgradeElementQuickErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeElementQuickErrorMessage,'net.message.adviser.ResAdviserUpgradeElementQuickErrorMessage',_super);
	var __proto=ResAdviserUpgradeElementQuickErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1194;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeElementQuickErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级战纹错误
*/
//class net.message.zhanwen.ResUpgradeZhanwenErrorMessage extends net.Message
var ResUpgradeZhanwenErrorMessage=(function(_super){
	function ResUpgradeZhanwenErrorMessage(){
		/**1:英雄不存在;2:参数错误;3:道具不存在;4:消耗不足;5:等级上限;*/
		this._error=0;
		ResUpgradeZhanwenErrorMessage.__super.call(this);
	}

	__class(ResUpgradeZhanwenErrorMessage,'net.message.zhanwen.ResUpgradeZhanwenErrorMessage',_super);
	var __proto=ResUpgradeZhanwenErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 103;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeZhanwenErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*许愿状态
*/
//class net.message.gongCe.ResXuYuanStatusMessage extends net.Message
var ResXuYuanStatusMessage=(function(_super){
	function ResXuYuanStatusMessage(){
		/**0=可许愿 1=已许愿并且第二天领取 2=当前可领取 */
		this._status=0;
		ResXuYuanStatusMessage.__super.call(this);
		this._itemBeanList=[];
	}

	__class(ResXuYuanStatusMessage,'net.message.gongCe.ResXuYuanStatusMessage',_super);
	var __proto=ResXuYuanStatusMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._status);
		this.writeInt(_buf,this._itemBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBeanList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._itemBeanList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._status=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._itemBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBeanList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1638;
	}

	/**0=可许愿 1=已许愿并且第二天领取 2=当前可领取 */
	/**0=可许愿 1=已许愿并且第二天领取 2=当前可领取 */
	__getset(0,__proto,'status',function(){
		return this._status;
		},function(value){
		this._status=value;
	});

	/**可领取的奖励 为可许愿的时候奖励为空 */
	/**可领取的奖励 为可许愿的时候奖励为空 */
	__getset(0,__proto,'itemBeanList',function(){
		return this._itemBeanList;
		},function(value){
		this._itemBeanList=value;
	});

	return ResXuYuanStatusMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*pvp战斗结束请求解锁错误
*/
//class net.message.fight.ResPVPFightOverUnlockErrorMessage extends net.Message
var ResPVPFightOverUnlockErrorMessage=(function(_super){
	function ResPVPFightOverUnlockErrorMessage(){
		/**1:目标未锁定;2:目标被锁定;*/
		this._error=0;
		ResPVPFightOverUnlockErrorMessage.__super.call(this);
	}

	__class(ResPVPFightOverUnlockErrorMessage,'net.message.fight.ResPVPFightOverUnlockErrorMessage',_super);
	var __proto=ResPVPFightOverUnlockErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1288;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResPVPFightOverUnlockErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵位置替换
*/
//class net.message.fight.ReqFightPositionExchangeMessage extends net.Message
var ReqFightPositionExchangeMessage=(function(_super){
	function ReqFightPositionExchangeMessage(){
		/**目标数据 */
		this._srcBean=null;
		/**交换位置数据 */
		this._dstBean=null;
		ReqFightPositionExchangeMessage.__super.call(this);
	}

	__class(ReqFightPositionExchangeMessage,'net.message.fight.ReqFightPositionExchangeMessage',_super);
	var __proto=ReqFightPositionExchangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._srcBean);
		this.writeBean(_buf,this._dstBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._srcBean=this.readBean(_buf,FightPositionAddBean);
		this._dstBean=this.readBean(_buf,FightPositionAddBean);
	}

	__proto.getId=function(){
		return 1444;
	}

	/**目标数据 */
	/**目标数据 */
	__getset(0,__proto,'srcBean',function(){
		return this._srcBean;
		},function(value){
		this._srcBean=value;
	});

	/**交换位置数据 */
	/**交换位置数据 */
	__getset(0,__proto,'dstBean',function(){
		return this._dstBean;
		},function(value){
		this._dstBean=value;
	});

	return ReqFightPositionExchangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取合体爬塔信息
*/
//class net.message.pata.ReqGetPFITInfoMessage extends net.Message
var ReqGetPFITInfoMessage=(function(_super){
	function ReqGetPFITInfoMessage(){
		ReqGetPFITInfoMessage.__super.call(this);;
	}

	__class(ReqGetPFITInfoMessage,'net.message.pata.ReqGetPFITInfoMessage',_super);
	var __proto=ReqGetPFITInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1163;
	}

	return ReqGetPFITInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新正在押镖的人错误
*/
//class net.message.escort.ResFlushEscortTargetErrorMessage extends net.Message
var ResFlushEscortTargetErrorMessage=(function(_super){
	function ResFlushEscortTargetErrorMessage(){
		/**1:元宝不足;*/
		this._error=0;
		ResFlushEscortTargetErrorMessage.__super.call(this);
	}

	__class(ResFlushEscortTargetErrorMessage,'net.message.escort.ResFlushEscortTargetErrorMessage',_super);
	var __proto=ResFlushEscortTargetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 334;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFlushEscortTargetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*加锁/解锁秘籍错误
*/
//class net.message.miji.ResLockMijiErrorMessage extends net.Message
var ResLockMijiErrorMessage=(function(_super){
	function ResLockMijiErrorMessage(){
		/**1:没有道具;2:参数错误;*/
		this._error=0;
		ResLockMijiErrorMessage.__super.call(this);
	}

	__class(ResLockMijiErrorMessage,'net.message.miji.ResLockMijiErrorMessage',_super);
	var __proto=ResLockMijiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 85;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLockMijiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体技能
*/
//class net.message.fit.ResFitSetSkillMessage extends net.Message
var ResFitSetSkillMessage=(function(_super){
	function ResFitSetSkillMessage(){
		/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
		this._type=0;
		/**合体技能ID 传0代表删除 */
		this._id=0;
		ResFitSetSkillMessage.__super.call(this);
	}

	__class(ResFitSetSkillMessage,'net.message.fit.ResFitSetSkillMessage',_super);
	var __proto=ResFitSetSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1175;
	}

	/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	/**合体技能栏位[1:技能1][2:技能2][3:技能3][4:技能4][5:技能5] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体技能ID 传0代表删除 */
	/**合体技能ID 传0代表删除 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResFitSetSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取科举的排行榜错误
*/
//class net.message.examination.ResKejuExaminationRankErrorMessage extends net.Message
var ResKejuExaminationRankErrorMessage=(function(_super){
	function ResKejuExaminationRankErrorMessage(){
		/**1:未开启;*/
		this._error=0;
		ResKejuExaminationRankErrorMessage.__super.call(this);
	}

	__class(ResKejuExaminationRankErrorMessage,'net.message.examination.ResKejuExaminationRankErrorMessage',_super);
	var __proto=ResKejuExaminationRankErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1371;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKejuExaminationRankErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级帮会技能
*/
//class net.message.legion.ResLegionSkillUpgradeMessageMessage extends net.Message
var ResLegionSkillUpgradeMessageMessage=(function(_super){
	function ResLegionSkillUpgradeMessageMessage(){
		/**技能ID */
		this._id=0;
		/**技能等级 */
		this._lv=0;
		ResLegionSkillUpgradeMessageMessage.__super.call(this);
	}

	__class(ResLegionSkillUpgradeMessageMessage,'net.message.legion.ResLegionSkillUpgradeMessageMessage',_super);
	var __proto=ResLegionSkillUpgradeMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 635;
	}

	/**技能ID */
	/**技能ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**技能等级 */
	/**技能等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResLegionSkillUpgradeMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击
*/
//class net.message.nineHeavy.ResNineHeavyPlayerAttackMessage extends net.Message
var ResNineHeavyPlayerAttackMessage=(function(_super){
	function ResNineHeavyPlayerAttackMessage(){
		/**攻击的类型 1 玩家 2 怪物 */
		this._type=0;
		/**攻击的目标ID */
		this._uid=null;
		/**战斗对象 */
		this._data=null;
		ResNineHeavyPlayerAttackMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerAttackMessage,'net.message.nineHeavy.ResNineHeavyPlayerAttackMessage',_super);
	var __proto=ResNineHeavyPlayerAttackMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 380;
	}

	/**战斗对象 */
	/**战斗对象 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**攻击的目标ID */
	/**攻击的目标ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**攻击的类型 1 玩家 2 怪物 */
	/**攻击的类型 1 玩家 2 怪物 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResNineHeavyPlayerAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*播放录像
*/
//class net.message.video.ReqPlayVideoMessage extends net.Message
var ReqPlayVideoMessage=(function(_super){
	function ReqPlayVideoMessage(){
		/**录像唯一id */
		this._videoId=null;
		ReqPlayVideoMessage.__super.call(this);
	}

	__class(ReqPlayVideoMessage,'net.message.video.ReqPlayVideoMessage',_super);
	var __proto=ReqPlayVideoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._videoId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._videoId=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1427;
	}

	/**录像唯一id */
	/**录像唯一id */
	__getset(0,__proto,'videoId',function(){
		return this._videoId;
		},function(value){
		this._videoId=value;
	});

	return ReqPlayVideoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建队伍错误
*/
//class net.message.team.ResTeamCreateErrorMessage extends net.Message
var ResTeamCreateErrorMessage=(function(_super){
	function ResTeamCreateErrorMessage(){
		/**1:参数错误;2:在队伍中了;*/
		this._error=0;
		ResTeamCreateErrorMessage.__super.call(this);
	}

	__class(ResTeamCreateErrorMessage,'net.message.team.ResTeamCreateErrorMessage',_super);
	var __proto=ResTeamCreateErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1265;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamCreateErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*替换/装备战纹
*/
//class net.message.zhanwen.ReqReplaceZhanwenMessage extends net.Message
var ReqReplaceZhanwenMessage=(function(_super){
	function ReqReplaceZhanwenMessage(){
		/**英雄ID */
		this._heroID=0;
		/**道具索引 */
		this._goodsIndex=0;
		/**战纹格子位置 */
		this._grid=0;
		ReqReplaceZhanwenMessage.__super.call(this);
	}

	__class(ReqReplaceZhanwenMessage,'net.message.zhanwen.ReqReplaceZhanwenMessage',_super);
	var __proto=ReqReplaceZhanwenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._goodsIndex);
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._goodsIndex=this.readInt(_buf);
		this._grid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 97;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**道具索引 */
	/**道具索引 */
	__getset(0,__proto,'goodsIndex',function(){
		return this._goodsIndex;
		},function(value){
		this._goodsIndex=value;
	});

	/**战纹格子位置 */
	/**战纹格子位置 */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ReqReplaceZhanwenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*团购领奖
*/
//class net.message.tuangou.ReqTuanGouTakePrizeMessage extends net.Message
var ReqTuanGouTakePrizeMessage=(function(_super){
	function ReqTuanGouTakePrizeMessage(){
		/**对应q_tuangou.q_id */
		this._cfgID=0;
		ReqTuanGouTakePrizeMessage.__super.call(this);
	}

	__class(ReqTuanGouTakePrizeMessage,'net.message.tuangou.ReqTuanGouTakePrizeMessage',_super);
	var __proto=ReqTuanGouTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._cfgID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cfgID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1398;
	}

	/**对应q_tuangou.q_id */
	/**对应q_tuangou.q_id */
	__getset(0,__proto,'cfgID',function(){
		return this._cfgID;
		},function(value){
		this._cfgID=value;
	});

	return ReqTuanGouTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新目标
*/
//class net.message.garrison.ResGarrisonUpdateTargetMessage extends net.Message
var ResGarrisonUpdateTargetMessage=(function(_super){
	function ResGarrisonUpdateTargetMessage(){
		/**目标 */
		this._target=null;
		ResGarrisonUpdateTargetMessage.__super.call(this);
	}

	__class(ResGarrisonUpdateTargetMessage,'net.message.garrison.ResGarrisonUpdateTargetMessage',_super);
	var __proto=ResGarrisonUpdateTargetMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._target);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._target=this.readBean(_buf,GarrisonTargetBean);
	}

	__proto.getId=function(){
		return 1048;
	}

	/**目标 */
	/**目标 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	return ResGarrisonUpdateTargetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取合体奖励
*/
//class net.message.pata.ResTakeFitPrizeMessage extends net.Message
var ResTakeFitPrizeMessage=(function(_super){
	function ResTakeFitPrizeMessage(){
		/**层 */
		this._layer=0;
		ResTakeFitPrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResTakeFitPrizeMessage,'net.message.pata.ResTakeFitPrizeMessage',_super);
	var __proto=ResTakeFitPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1167;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResTakeFitPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*踢出玩家
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomKickMessage extends net.Message
var ReqTeamDuplicateRoomKickMessage=(function(_super){
	function ReqTeamDuplicateRoomKickMessage(){
		/**玩家ID */
		this._uid=null;
		ReqTeamDuplicateRoomKickMessage.__super.call(this);
	}

	__class(ReqTeamDuplicateRoomKickMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomKickMessage',_super);
	var __proto=ReqTeamDuplicateRoomKickMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 479;
	}

	/**玩家ID */
	/**玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqTeamDuplicateRoomKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴合体装备
*/
//class net.message.fit.ReqFitSetEquipMessage extends net.Message
var ReqFitSetEquipMessage=(function(_super){
	function ReqFitSetEquipMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ReqFitSetEquipMessage.__super.call(this);
		this._equips=[];
	}

	__class(ReqFitSetEquipMessage,'net.message.fit.ReqFitSetEquipMessage',_super);
	var __proto=ReqFitSetEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equips.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._equips.length;++i_am_tmp_i){
			this.writeInt(_buf,this._equips[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._equips=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._equips[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1134;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具背包下标 */
	/**道具背包下标 */
	__getset(0,__proto,'equips',function(){
		return this._equips;
		},function(value){
		this._equips=value;
	});

	return ReqFitSetEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴升星
*/
//class net.message.handbook.ReqHandBookUpStarMessage extends net.Message
var ReqHandBookUpStarMessage=(function(_super){
	function ReqHandBookUpStarMessage(){
		/**图鉴id */
		this._configId=0;
		ReqHandBookUpStarMessage.__super.call(this);
	}

	__class(ReqHandBookUpStarMessage,'net.message.handbook.ReqHandBookUpStarMessage',_super);
	var __proto=ReqHandBookUpStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1125;
	}

	/**图鉴id */
	/**图鉴id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	return ReqHandBookUpStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取你提我改客服QQ
*/
//class net.message.misc.ReqGetIdeaUpKfQQMessage extends net.Message
var ReqGetIdeaUpKfQQMessage=(function(_super){
	function ReqGetIdeaUpKfQQMessage(){
		ReqGetIdeaUpKfQQMessage.__super.call(this);;
	}

	__class(ReqGetIdeaUpKfQQMessage,'net.message.misc.ReqGetIdeaUpKfQQMessage',_super);
	var __proto=ReqGetIdeaUpKfQQMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1680;
	}

	return ReqGetIdeaUpKfQQMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取师门信息
*/
//class net.message.shimen.ReqGetShiMenInfoMessage extends net.Message
var ReqGetShiMenInfoMessage=(function(_super){
	function ReqGetShiMenInfoMessage(){
		ReqGetShiMenInfoMessage.__super.call(this);;
	}

	__class(ReqGetShiMenInfoMessage,'net.message.shimen.ReqGetShiMenInfoMessage',_super);
	var __proto=ReqGetShiMenInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 139;
	}

	return ReqGetShiMenInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全服boss挑战次数错误
*/
//class net.message.quanfuboss.ResQuanFuBossBuyTimeErrorMessage extends net.Message
var ResQuanFuBossBuyTimeErrorMessage=(function(_super){
	function ResQuanFuBossBuyTimeErrorMessage(){
		/**1:超过最大挑战次数;2:购买次数不足;3:穷啊;4:没开;5:参数错误;*/
		this._error=0;
		ResQuanFuBossBuyTimeErrorMessage.__super.call(this);
	}

	__class(ResQuanFuBossBuyTimeErrorMessage,'net.message.quanfuboss.ResQuanFuBossBuyTimeErrorMessage',_super);
	var __proto=ResQuanFuBossBuyTimeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1106;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQuanFuBossBuyTimeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活灵童错误
*/
//class net.message.soulboy.ResSoulBoyActivationErrorMessage extends net.Message
var ResSoulBoyActivationErrorMessage=(function(_super){
	function ResSoulBoyActivationErrorMessage(){
		/**1:已经激活;2:材料不足;*/
		this._error=0;
		ResSoulBoyActivationErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyActivationErrorMessage,'net.message.soulboy.ResSoulBoyActivationErrorMessage',_super);
	var __proto=ResSoulBoyActivationErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 443;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyActivationErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔具体某个塔错误
*/
//class net.message.towerFight.ResselectTowerErrorMessage extends net.Message
var ResselectTowerErrorMessage=(function(_super){
	function ResselectTowerErrorMessage(){
		/**1:塔类型错误;*/
		this._error=0;
		ResselectTowerErrorMessage.__super.call(this);
	}

	__class(ResselectTowerErrorMessage,'net.message.towerFight.ResselectTowerErrorMessage',_super);
	var __proto=ResselectTowerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1618;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResselectTowerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家
*/
//class net.message.gb.ResLegionBattleAttackPlayerMessage extends net.Message
var ResLegionBattleAttackPlayerMessage=(function(_super){
	function ResLegionBattleAttackPlayerMessage(){
		/**胜利 */
		this._isWin=false;
		/**战斗消息 */
		this._data=null;
		ResLegionBattleAttackPlayerMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackPlayerMessage,'net.message.gb.ResLegionBattleAttackPlayerMessage',_super);
	var __proto=ResLegionBattleAttackPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isWin);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isWin=this.readBoolean(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1338;
	}

	/**胜利 */
	/**胜利 */
	__getset(0,__proto,'isWin',function(){
		return this._isWin;
		},function(value){
		this._isWin=value;
	});

	/**战斗消息 */
	/**战斗消息 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResLegionBattleAttackPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶
*/
//class net.message.upgrade.ResCommonIllusionMessage extends net.Message
var ResCommonIllusionMessage=(function(_super){
	function ResCommonIllusionMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**幻化外形 */
		this._illusion=0;
		ResCommonIllusionMessage.__super.call(this);
	}

	__class(ResCommonIllusionMessage,'net.message.upgrade.ResCommonIllusionMessage',_super);
	var __proto=ResCommonIllusionMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._illusion);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._illusion=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 884;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**幻化外形 */
	/**幻化外形 */
	__getset(0,__proto,'illusion',function(){
		return this._illusion;
		},function(value){
		this._illusion=value;
	});

	return ResCommonIllusionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ReqMarriagePataInviteMessage extends net.Message
var ReqMarriagePataInviteMessage=(function(_super){
	function ReqMarriagePataInviteMessage(){
		ReqMarriagePataInviteMessage.__super.call(this);;
	}

	__class(ReqMarriagePataInviteMessage,'net.message.marriage.ReqMarriagePataInviteMessage',_super);
	var __proto=ReqMarriagePataInviteMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1492;
	}

	return ReqMarriagePataInviteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始赤壁任务
*/
//class net.message.chibi.ResChibiStartTaskMessage extends net.Message
var ResChibiStartTaskMessage=(function(_super){
	function ResChibiStartTaskMessage(){
		/**成功返回任务 */
		this._bean=null;
		ResChibiStartTaskMessage.__super.call(this);
	}

	__class(ResChibiStartTaskMessage,'net.message.chibi.ResChibiStartTaskMessage',_super);
	var __proto=ResChibiStartTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,ChibiTaskBean);
	}

	__proto.getId=function(){
		return 392;
	}

	/**成功返回任务 */
	/**成功返回任务 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResChibiStartTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备升品
*/
//class net.message.equip.ReqEquipPromoteMessage extends net.Message
var ReqEquipPromoteMessage=(function(_super){
	function ReqEquipPromoteMessage(){
		/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		ReqEquipPromoteMessage.__super.call(this);
	}

	__class(ReqEquipPromoteMessage,'net.message.equip.ReqEquipPromoteMessage',_super);
	var __proto=ReqEquipPromoteMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._grid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._grid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1481;
	}

	/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**打造的格子[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	return ReqEquipPromoteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取福利奖励
*/
//class net.message.welfare.ReqGetFuLiRewardMessage extends net.Message
var ReqGetFuLiRewardMessage=(function(_super){
	function ReqGetFuLiRewardMessage(){
		/**类型[1:每日签到][2:福利签到][3:百万元宝][4:等级礼包][5:登陆送][6:天天返利][7:在线礼包] */
		this._type=0;
		/**宝箱Id */
		this._rewardId=0;
		ReqGetFuLiRewardMessage.__super.call(this);
	}

	__class(ReqGetFuLiRewardMessage,'net.message.welfare.ReqGetFuLiRewardMessage',_super);
	var __proto=ReqGetFuLiRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._rewardId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._rewardId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 740;
	}

	/**类型[1:每日签到][2:福利签到][3:百万元宝][4:等级礼包][5:登陆送][6:天天返利][7:在线礼包] */
	/**类型[1:每日签到][2:福利签到][3:百万元宝][4:等级礼包][5:登陆送][6:天天返利][7:在线礼包] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**宝箱Id */
	/**宝箱Id */
	__getset(0,__proto,'rewardId',function(){
		return this._rewardId;
		},function(value){
		this._rewardId=value;
	});

	return ReqGetFuLiRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始押运错误
*/
//class net.message.escort.ResStartEscortErrorMessage extends net.Message
var ResStartEscortErrorMessage=(function(_super){
	function ResStartEscortErrorMessage(){
		/**1:正在押运中;2:次数用尽;*/
		this._error=0;
		ResStartEscortErrorMessage.__super.call(this);
	}

	__class(ResStartEscortErrorMessage,'net.message.escort.ResStartEscortErrorMessage',_super);
	var __proto=ResStartEscortErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 337;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResStartEscortErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮器升级
*/
//class net.message.general.ResGeneralUpgradeWeaponMessage extends net.Message
var ResGeneralUpgradeWeaponMessage=(function(_super){
	function ResGeneralUpgradeWeaponMessage(){
		/**蛮将id */
		this._id=0;
		/**蛮器等级 */
		this._weaponLv=0;
		ResGeneralUpgradeWeaponMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeWeaponMessage,'net.message.general.ResGeneralUpgradeWeaponMessage',_super);
	var __proto=ResGeneralUpgradeWeaponMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._weaponLv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._weaponLv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1412;
	}

	/**蛮将id */
	/**蛮将id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**蛮器等级 */
	/**蛮器等级 */
	__getset(0,__proto,'weaponLv',function(){
		return this._weaponLv;
		},function(value){
		this._weaponLv=value;
	});

	return ResGeneralUpgradeWeaponMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新总战斗力
*/
//class net.message.user.ResUpdateFightPowerMessage extends net.Message
var ResUpdateFightPowerMessage=(function(_super){
	function ResUpdateFightPowerMessage(){
		/**战斗力 */
		this._fightPower=null;
		ResUpdateFightPowerMessage.__super.call(this);
	}

	__class(ResUpdateFightPowerMessage,'net.message.user.ResUpdateFightPowerMessage',_super);
	var __proto=ResUpdateFightPowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 985;
	}

	/**战斗力 */
	/**战斗力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ResUpdateFightPowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入全民BOSS
*/
//class net.message.dungeon.ResQuanMinBossJoinMessage extends net.Message
var ResQuanMinBossJoinMessage=(function(_super){
	function ResQuanMinBossJoinMessage(){
		/**你自己的对象 */
		this._self=null;
		/**bossID */
		this._bossID=0;
		/**bossHP 小于等于0就是死亡状态 */
		this._boosHP=null;
		/**血量上限 */
		this._bossHpMax=null;
		/**下次复活时间 时间戳 */
		this._rebornTime=null;
		ResQuanMinBossJoinMessage.__super.call(this);
		this._players=[];
	}

	__class(ResQuanMinBossJoinMessage,'net.message.dungeon.ResQuanMinBossJoinMessage',_super);
	var __proto=ResQuanMinBossJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._self);
		this.writeInt(_buf,this._players.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._players.length;++i_am_tmp_i){
			this._players[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._bossID);
		this.writeLong(_buf,this._boosHP);
		this.writeLong(_buf,this._bossHpMax);
		this.writeLong(_buf,this._rebornTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._self=this.readBean(_buf,QuanMinBossBean);
		size52413035=this.readInt(_buf);
		this._players=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._players[i_am_tmp_i]=this.readBeanInList(_buf,QuanMinBossBean);
		}
		this._bossID=this.readInt(_buf);
		this._boosHP=this.readLong(_buf);
		this._bossHpMax=this.readLong(_buf);
		this._rebornTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1469;
	}

	/**你自己的对象 */
	/**你自己的对象 */
	__getset(0,__proto,'self',function(){
		return this._self;
		},function(value){
		this._self=value;
	});

	/**bossID */
	/**bossID */
	__getset(0,__proto,'bossID',function(){
		return this._bossID;
		},function(value){
		this._bossID=value;
	});

	/**房间里的其他玩家 */
	/**房间里的其他玩家 */
	__getset(0,__proto,'players',function(){
		return this._players;
		},function(value){
		this._players=value;
	});

	/**bossHP 小于等于0就是死亡状态 */
	/**bossHP 小于等于0就是死亡状态 */
	__getset(0,__proto,'boosHP',function(){
		return this._boosHP;
		},function(value){
		this._boosHP=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'bossHpMax',function(){
		return this._bossHpMax;
		},function(value){
		this._bossHpMax=value;
	});

	/**下次复活时间 时间戳 */
	/**下次复活时间 时间戳 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	return ResQuanMinBossJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*复仇错误
*/
//class net.message.garrison.ResGarrisonRevengeErrorMessage extends net.Message
var ResGarrisonRevengeErrorMessage=(function(_super){
	function ResGarrisonRevengeErrorMessage(){
		/**1:没有找到记录;2:系统未开启;*/
		this._error=0;
		ResGarrisonRevengeErrorMessage.__super.call(this);
	}

	__class(ResGarrisonRevengeErrorMessage,'net.message.garrison.ResGarrisonRevengeErrorMessage',_super);
	var __proto=ResGarrisonRevengeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1069;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonRevengeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*下阵
*/
//class net.message.fight.ReqFightPositionRemoveMessage extends net.Message
var ReqFightPositionRemoveMessage=(function(_super){
	function ReqFightPositionRemoveMessage(){
		/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
		this._type=0;
		/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		/**出战序号,0开始 */
		this._index=0;
		ReqFightPositionRemoveMessage.__super.call(this);
	}

	__class(ReqFightPositionRemoveMessage,'net.message.fight.ReqFightPositionRemoveMessage',_super);
	var __proto=ReqFightPositionRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._position);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._position=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1199;
	}

	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**出战序号,0开始 */
	/**出战序号,0开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqFightPositionRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*版本验证
*/
//class net.message.login.ReqVersionCheckMessage extends net.Message
var ReqVersionCheckMessage=(function(_super){
	function ReqVersionCheckMessage(){
		/**消息代码版本号 */
		this._messageCodeVersion=null;
		/**配置代码版本号 */
		this._configCodeVersion=null;
		/**验证token,本地登陆则为空 */
		this._token=null;
		ReqVersionCheckMessage.__super.call(this);
	}

	__class(ReqVersionCheckMessage,'net.message.login.ReqVersionCheckMessage',_super);
	var __proto=ReqVersionCheckMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._messageCodeVersion);
		this.writeString(_buf,this._configCodeVersion);
		this.writeString(_buf,this._token);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._messageCodeVersion=this.readString(_buf);
		this._configCodeVersion=this.readString(_buf);
		this._token=this.readString(_buf);
	}

	__proto.getId=function(){
		return 5;
	}

	/**消息代码版本号 */
	/**消息代码版本号 */
	__getset(0,__proto,'messageCodeVersion',function(){
		return this._messageCodeVersion;
		},function(value){
		this._messageCodeVersion=value;
	});

	/**验证token,本地登陆则为空 */
	/**验证token,本地登陆则为空 */
	__getset(0,__proto,'token',function(){
		return this._token;
		},function(value){
		this._token=value;
	});

	/**配置代码版本号 */
	/**配置代码版本号 */
	__getset(0,__proto,'configCodeVersion',function(){
		return this._configCodeVersion;
		},function(value){
		this._configCodeVersion=value;
	});

	return ReqVersionCheckMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供
*/
//class net.message.gongCe.ResQinWangTeGongMessage extends net.Message
var ResQinWangTeGongMessage=(function(_super){
	function ResQinWangTeGongMessage(){
		ResQinWangTeGongMessage.__super.call(this);
		this._qingWangBeanList=[];
	}

	__class(ResQinWangTeGongMessage,'net.message.gongCe.ResQinWangTeGongMessage',_super);
	var __proto=ResQinWangTeGongMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qingWangBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qingWangBeanList.length;++i_am_tmp_i){
			this._qingWangBeanList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qingWangBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qingWangBeanList[i_am_tmp_i]=this.readBeanInList(_buf,QingWangBean);
		}
	}

	__proto.getId=function(){
		return 1670;
	}

	/**勤王特供信息 */
	/**勤王特供信息 */
	__getset(0,__proto,'qingWangBeanList',function(){
		return this._qingWangBeanList;
		},function(value){
		this._qingWangBeanList=value;
	});

	return ResQinWangTeGongMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求扫荡错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateSweepAwayErrorMessage extends net.Message
var ResTeamDuplicateSweepAwayErrorMessage=(function(_super){
	function ResTeamDuplicateSweepAwayErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;2:没有达到要求或者已经扫荡过;*/
		this._error=0;
		ResTeamDuplicateSweepAwayErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateSweepAwayErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateSweepAwayErrorMessage',_super);
	var __proto=ResTeamDuplicateSweepAwayErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 440;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateSweepAwayErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成赤壁任务错误
*/
//class net.message.chibi.ResChibiFinishTaskErrorMessage extends net.Message
var ResChibiFinishTaskErrorMessage=(function(_super){
	function ResChibiFinishTaskErrorMessage(){
		/**1:任务不存在;2:时间不够;3:穷;*/
		this._error=0;
		ResChibiFinishTaskErrorMessage.__super.call(this);
	}

	__class(ResChibiFinishTaskErrorMessage,'net.message.chibi.ResChibiFinishTaskErrorMessage',_super);
	var __proto=ResChibiFinishTaskErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 398;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChibiFinishTaskErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体错误
*/
//class net.message.fit.ResFitSynthesisErrorMessage extends net.Message
var ResFitSynthesisErrorMessage=(function(_super){
	function ResFitSynthesisErrorMessage(){
		/**1:不满足条件;*/
		this._error=0;
		ResFitSynthesisErrorMessage.__super.call(this);
	}

	__class(ResFitSynthesisErrorMessage,'net.message.fit.ResFitSynthesisErrorMessage',_super);
	var __proto=ResFitSynthesisErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1148;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFitSynthesisErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入科举答题活动(打开面板时发送)
*/
//class net.message.examination.ResKejuNowExaminationMessage extends net.Message
var ResKejuNowExaminationMessage=(function(_super){
	function ResKejuNowExaminationMessage(){
		/**现在进行的题目-1 为没开题 */
		this._nowTopic=0;
		/**本题剩余时间(秒)*/
		this._time=0;
		/**答对题数量 */
		this._correct=0;
		/**当前是第多少题 */
		this._now=0;
		/**当前题是否回答 没回答为-1 已经回答给的具体回答的第几个 */
		this._answer=0;
		/**我的排名 */
		this._myRank=0;
		/**我的积分 */
		this._myScore=0;
		ResKejuNowExaminationMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResKejuNowExaminationMessage,'net.message.examination.ResKejuNowExaminationMessage',_super);
	var __proto=ResKejuNowExaminationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._nowTopic);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._correct);
		this.writeInt(_buf,this._now);
		this.writeInt(_buf,this._answer);
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myRank);
		this.writeInt(_buf,this._myScore);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._nowTopic=this.readInt(_buf);
		this._time=this.readInt(_buf);
		this._correct=this.readInt(_buf);
		this._now=this.readInt(_buf);
		this._answer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,KejuRankMemberBean);
		}
		this._myRank=this.readInt(_buf);
		this._myScore=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 409;
	}

	/**现在进行的题目-1 为没开题 */
	/**现在进行的题目-1 为没开题 */
	__getset(0,__proto,'nowTopic',function(){
		return this._nowTopic;
		},function(value){
		this._nowTopic=value;
	});

	/**本题剩余时间(秒)*/
	/**本题剩余时间(秒)*/
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**我的排名 */
	/**我的排名 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**答对题数量 */
	/**答对题数量 */
	__getset(0,__proto,'correct',function(){
		return this._correct;
		},function(value){
		this._correct=value;
	});

	/**我的积分 */
	/**我的积分 */
	__getset(0,__proto,'myScore',function(){
		return this._myScore;
		},function(value){
		this._myScore=value;
	});

	/**排行榜(前三)*/
	/**排行榜(前三)*/
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**当前题是否回答 没回答为-1 已经回答给的具体回答的第几个 */
	/**当前题是否回答 没回答为-1 已经回答给的具体回答的第几个 */
	__getset(0,__proto,'answer',function(){
		return this._answer;
		},function(value){
		this._answer=value;
	});

	/**当前是第多少题 */
	/**当前是第多少题 */
	__getset(0,__proto,'now',function(){
		return this._now;
		},function(value){
		this._now=value;
	});

	return ResKejuNowExaminationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战
*/
//class net.message.arena.ResArenaChallengeMessage extends net.Message
var ResArenaChallengeMessage=(function(_super){
	function ResArenaChallengeMessage(){
		/**剩余挑战次数 */
		this._times=0;
		/**下次恢复时间 */
		this._recoverTime=0;
		/**自己名次 */
		this._myRank=0;
		/**自己最好的名词名次 */
		this._bestRank=0;
		/**数据 */
		this._data=null;
		ResArenaChallengeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResArenaChallengeMessage,'net.message.arena.ResArenaChallengeMessage',_super);
	var __proto=ResArenaChallengeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times);
		this.writeInt(_buf,this._recoverTime);
		this.writeInt(_buf,this._myRank);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._bestRank);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readInt(_buf);
		this._recoverTime=this.readInt(_buf);
		this._myRank=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		this._bestRank=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 278;
	}

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	/**自己最好的名词名次 */
	/**自己最好的名词名次 */
	__getset(0,__proto,'bestRank',function(){
		return this._bestRank;
		},function(value){
		this._bestRank=value;
	});

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**下次恢复时间 */
	/**下次恢复时间 */
	__getset(0,__proto,'recoverTime',function(){
		return this._recoverTime;
		},function(value){
		this._recoverTime=value;
	});

	/**自己名次 */
	/**自己名次 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResArenaChallengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求排行榜错误
*/
//class net.message.nineHeavy.ResNineHeavyPlayerRankErrorMessage extends net.Message
var ResNineHeavyPlayerRankErrorMessage=(function(_super){
	function ResNineHeavyPlayerRankErrorMessage(){
		/**1:目标不存在;*/
		this._error=0;
		ResNineHeavyPlayerRankErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerRankErrorMessage,'net.message.nineHeavy.ResNineHeavyPlayerRankErrorMessage',_super);
	var __proto=ResNineHeavyPlayerRankErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 387;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyPlayerRankErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化全民boss副本信息
*/
//class net.message.dungeon.ResInitQuanMinBossMessage extends net.Message
var ResInitQuanMinBossMessage=(function(_super){
	function ResInitQuanMinBossMessage(){
		ResInitQuanMinBossMessage.__super.call(this);
		this._dungeons=[];
	}

	__class(ResInitQuanMinBossMessage,'net.message.dungeon.ResInitQuanMinBossMessage',_super);
	var __proto=ResInitQuanMinBossMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeons.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._dungeons.length;++i_am_tmp_i){
			this._dungeons[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._dungeons=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._dungeons[i_am_tmp_i]=this.readBeanInList(_buf,QuanMinBossDungeonBean);
		}
	}

	__proto.getId=function(){
		return 213;
	}

	/**副本列表 */
	/**副本列表 */
	__getset(0,__proto,'dungeons',function(){
		return this._dungeons;
		},function(value){
		this._dungeons=value;
	});

	return ResInitQuanMinBossMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家已关注公众号
*/
//class net.message.misc.ReqZhiJianFollowSucMessage extends net.Message
var ReqZhiJianFollowSucMessage=(function(_super){
	function ReqZhiJianFollowSucMessage(){
		ReqZhiJianFollowSucMessage.__super.call(this);;
	}

	__class(ReqZhiJianFollowSucMessage,'net.message.misc.ReqZhiJianFollowSucMessage',_super);
	var __proto=ReqZhiJianFollowSucMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1526;
	}

	return ReqZhiJianFollowSucMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战师门任务
*/
//class net.message.shimen.ResChallengeShiMenMessage extends net.Message
var ResChallengeShiMenMessage=(function(_super){
	function ResChallengeShiMenMessage(){
		/**完成次数 */
		this._finishTimes=0;
		/**已领取的师门任务的星级，0表示尚未领取 */
		this._star=0;
		/**数据 */
		this._data=null;
		/**完成总次数 */
		this._totalTimes=0;
		ResChallengeShiMenMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResChallengeShiMenMessage,'net.message.shimen.ResChallengeShiMenMessage',_super);
	var __proto=ResChallengeShiMenMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._finishTimes);
		this.writeInt(_buf,this._star);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._data);
		this.writeInt(_buf,this._totalTimes);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._finishTimes=this.readInt(_buf);
		this._star=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
		this._data=this.readBean(_buf,FightBean);
		this._totalTimes=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 134;
	}

	/**完成次数 */
	/**完成次数 */
	__getset(0,__proto,'finishTimes',function(){
		return this._finishTimes;
		},function(value){
		this._finishTimes=value;
	});

	/**已领取的师门任务的星级，0表示尚未领取 */
	/**已领取的师门任务的星级，0表示尚未领取 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**完成总次数 */
	/**完成总次数 */
	__getset(0,__proto,'totalTimes',function(){
		return this._totalTimes;
		},function(value){
		this._totalTimes=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResChallengeShiMenMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取录像
*/
//class net.message.video.ReqGetVideosMessage extends net.Message
var ReqGetVideosMessage=(function(_super){
	function ReqGetVideosMessage(){
		/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
		this._pageType=0;
		ReqGetVideosMessage.__super.call(this);
	}

	__class(ReqGetVideosMessage,'net.message.video.ReqGetVideosMessage',_super);
	var __proto=ReqGetVideosMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._pageType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._pageType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1421;
	}

	/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
	/**录像分页类型,1热门，2竞技场，3草船拦截，4煮酒切磋，5军团战，6王者争霸,7个人记录,8空城计,9军师巡城 */
	__getset(0,__proto,'pageType',function(){
		return this._pageType;
		},function(value){
		this._pageType=value;
	});

	return ReqGetVideosMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会修改战力条件
*/
//class net.message.guild.ReqGuildChangeFightPowerMessage extends net.Message
var ReqGuildChangeFightPowerMessage=(function(_super){
	function ReqGuildChangeFightPowerMessage(){
		/**战力 */
		this._fightPower=null;
		ReqGuildChangeFightPowerMessage.__super.call(this);
	}

	__class(ReqGuildChangeFightPowerMessage,'net.message.guild.ReqGuildChangeFightPowerMessage',_super);
	var __proto=ReqGuildChangeFightPowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1212;
	}

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ReqGuildChangeFightPowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ResFastOnHookRewardMessage extends net.Message
var ResFastOnHookRewardMessage=(function(_super){
	function ResFastOnHookRewardMessage(){
		/**免费刷新时间 */
		this._freeTime=null;
		/**次数 */
		this._time=0;
		/**是否可以免费 */
		this._free=false;
		ResFastOnHookRewardMessage.__super.call(this);
	}

	__class(ResFastOnHookRewardMessage,'net.message.misc.ResFastOnHookRewardMessage',_super);
	var __proto=ResFastOnHookRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._freeTime);
		this.writeInt(_buf,this._time);
		this.writeBoolean(_buf,this._free);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._freeTime=this.readLong(_buf);
		this._time=this.readInt(_buf);
		this._free=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1455;
	}

	/**免费刷新时间 */
	/**免费刷新时间 */
	__getset(0,__proto,'freeTime',function(){
		return this._freeTime;
		},function(value){
		this._freeTime=value;
	});

	/**次数 */
	/**次数 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**是否可以免费 */
	/**是否可以免费 */
	__getset(0,__proto,'free',function(){
		return this._free;
		},function(value){
		this._free=value;
	});

	return ResFastOnHookRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级错误
*/
//class net.message.hero.ResLevelUpErrorMessage extends net.Message
var ResLevelUpErrorMessage=(function(_super){
	function ResLevelUpErrorMessage(){
		/**1:经验值不足或者达到转生最大等级;*/
		this._error=0;
		ResLevelUpErrorMessage.__super.call(this);
	}

	__class(ResLevelUpErrorMessage,'net.message.hero.ResLevelUpErrorMessage',_super);
	var __proto=ResLevelUpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 754;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLevelUpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取任务奖励
*/
//class net.message.todayrecommend.ReqRecommendTaskRewardMessage extends net.Message
var ReqRecommendTaskRewardMessage=(function(_super){
	function ReqRecommendTaskRewardMessage(){
		/**id */
		this._id=0;
		ReqRecommendTaskRewardMessage.__super.call(this);
	}

	__class(ReqRecommendTaskRewardMessage,'net.message.todayrecommend.ReqRecommendTaskRewardMessage',_super);
	var __proto=ReqRecommendTaskRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1507;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqRecommendTaskRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝
*/
//class net.message.textureHunt.ResHuntStartMessage extends net.Message
var ResHuntStartMessage=(function(_super){
	function ResHuntStartMessage(){
		/**寻宝类型 */
		this._type=0;
		ResHuntStartMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResHuntStartMessage,'net.message.textureHunt.ResHuntStartMessage',_super);
	var __proto=ResHuntStartMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 699;
	}

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResHuntStartMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击城门
*/
//class net.message.gb.ReqLegionBattleAttackDoorMessage extends net.Message
var ReqLegionBattleAttackDoorMessage=(function(_super){
	function ReqLegionBattleAttackDoorMessage(){
		ReqLegionBattleAttackDoorMessage.__super.call(this);;
	}

	__class(ReqLegionBattleAttackDoorMessage,'net.message.gb.ReqLegionBattleAttackDoorMessage',_super);
	var __proto=ReqLegionBattleAttackDoorMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1320;
	}

	return ReqLegionBattleAttackDoorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练宠物
*/
//class net.message.pet.ResXiLianPetMessage extends net.Message
var ResXiLianPetMessage=(function(_super){
	function ResXiLianPetMessage(){
		/**宠物ID */
		this._petID=0;
		/**洗练数据 */
		this._xilian=null;
		ResXiLianPetMessage.__super.call(this);
	}

	__class(ResXiLianPetMessage,'net.message.pet.ResXiLianPetMessage',_super);
	var __proto=ResXiLianPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeBean(_buf,this._xilian);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._xilian=this.readBean(_buf,XiLianBean);
	}

	__proto.getId=function(){
		return 164;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**洗练数据 */
	/**洗练数据 */
	__getset(0,__proto,'xilian',function(){
		return this._xilian;
		},function(value){
		this._xilian=value;
	});

	return ResXiLianPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值错误
*/
//class net.message.misc.ResGetAttributeInfoErrorMessage extends net.Message
var ResGetAttributeInfoErrorMessage=(function(_super){
	function ResGetAttributeInfoErrorMessage(){
		/**1:没有该名玩家;2:没有查到玩家属性;*/
		this._error=0;
		ResGetAttributeInfoErrorMessage.__super.call(this);
	}

	__class(ResGetAttributeInfoErrorMessage,'net.message.misc.ResGetAttributeInfoErrorMessage',_super);
	var __proto=ResGetAttributeInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1684;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetAttributeInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*秒杀押运时间
*/
//class net.message.escort.ReqKillEscortTimeMessage extends net.Message
var ReqKillEscortTimeMessage=(function(_super){
	function ReqKillEscortTimeMessage(){
		ReqKillEscortTimeMessage.__super.call(this);;
	}

	__class(ReqKillEscortTimeMessage,'net.message.escort.ReqKillEscortTimeMessage',_super);
	var __proto=ReqKillEscortTimeMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 789;
	}

	return ReqKillEscortTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新正在押镖的人
*/
//class net.message.escort.ReqFlushEscortTargetMessage extends net.Message
var ReqFlushEscortTargetMessage=(function(_super){
	function ReqFlushEscortTargetMessage(){
		ReqFlushEscortTargetMessage.__super.call(this);;
	}

	__class(ReqFlushEscortTargetMessage,'net.message.escort.ReqFlushEscortTargetMessage',_super);
	var __proto=ReqFlushEscortTargetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 332;
	}

	return ReqFlushEscortTargetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*军团首领信息
*/
//class net.message.worldboss.ResGetWorldBossInfoMessage extends net.Message
var ResGetWorldBossInfoMessage=(function(_super){
	function ResGetWorldBossInfoMessage(){
		/**bossID */
		this._bossID=0;
		/**bossHP 小于等于0就是死亡状态 */
		this._boosHP=null;
		/**血量上限 */
		this._bossHpMax=null;
		/**BOSS护盾 */
		this._bossShield=null;
		/**BOSS护盾上限 */
		this._bossShieldMax=null;
		/**下次复活时间 时间戳 */
		this._rebornTime=null;
		ResGetWorldBossInfoMessage.__super.call(this);
	}

	__class(ResGetWorldBossInfoMessage,'net.message.worldboss.ResGetWorldBossInfoMessage',_super);
	var __proto=ResGetWorldBossInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bossID);
		this.writeLong(_buf,this._boosHP);
		this.writeLong(_buf,this._bossHpMax);
		this.writeLong(_buf,this._bossShield);
		this.writeLong(_buf,this._bossShieldMax);
		this.writeLong(_buf,this._rebornTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bossID=this.readInt(_buf);
		this._boosHP=this.readLong(_buf);
		this._bossHpMax=this.readLong(_buf);
		this._bossShield=this.readLong(_buf);
		this._bossShieldMax=this.readLong(_buf);
		this._rebornTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1516;
	}

	/**BOSS护盾上限 */
	/**BOSS护盾上限 */
	__getset(0,__proto,'bossShieldMax',function(){
		return this._bossShieldMax;
		},function(value){
		this._bossShieldMax=value;
	});

	/**bossID */
	/**bossID */
	__getset(0,__proto,'bossID',function(){
		return this._bossID;
		},function(value){
		this._bossID=value;
	});

	/**bossHP 小于等于0就是死亡状态 */
	/**bossHP 小于等于0就是死亡状态 */
	__getset(0,__proto,'boosHP',function(){
		return this._boosHP;
		},function(value){
		this._boosHP=value;
	});

	/**血量上限 */
	/**血量上限 */
	__getset(0,__proto,'bossHpMax',function(){
		return this._bossHpMax;
		},function(value){
		this._bossHpMax=value;
	});

	/**BOSS护盾 */
	/**BOSS护盾 */
	__getset(0,__proto,'bossShield',function(){
		return this._bossShield;
		},function(value){
		this._bossShield=value;
	});

	/**下次复活时间 时间戳 */
	/**下次复活时间 时间戳 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	return ResGetWorldBossInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计战斗回放
*/
//class net.message.emptycity.ReqEmptyGetBattleRecordMessage extends net.Message
var ReqEmptyGetBattleRecordMessage=(function(_super){
	function ReqEmptyGetBattleRecordMessage(){
		/**城市ID */
		this._cityID=0;
		/**记录下标 */
		this._recordIndex=0;
		ReqEmptyGetBattleRecordMessage.__super.call(this);
	}

	__class(ReqEmptyGetBattleRecordMessage,'net.message.emptycity.ReqEmptyGetBattleRecordMessage',_super);
	var __proto=ReqEmptyGetBattleRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._cityID);
		this.writeInt(_buf,this._recordIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cityID=this.readInt(_buf);
		this._recordIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1111;
	}

	/**城市ID */
	/**城市ID */
	__getset(0,__proto,'cityID',function(){
		return this._cityID;
		},function(value){
		this._cityID=value;
	});

	/**记录下标 */
	/**记录下标 */
	__getset(0,__proto,'recordIndex',function(){
		return this._recordIndex;
		},function(value){
		this._recordIndex=value;
	});

	return ReqEmptyGetBattleRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子错误
*/
//class net.message.marriage.ResMarriageRenovationHouseErrorMessage extends net.Message
var ResMarriageRenovationHouseErrorMessage=(function(_super){
	function ResMarriageRenovationHouseErrorMessage(){
		/**1:没有结婚;2:没钱了;*/
		this._error=0;
		ResMarriageRenovationHouseErrorMessage.__super.call(this);
	}

	__class(ResMarriageRenovationHouseErrorMessage,'net.message.marriage.ResMarriageRenovationHouseErrorMessage',_super);
	var __proto=ResMarriageRenovationHouseErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 565;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageRenovationHouseErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刀币翻倍活动错误
*/
//class net.message.activities.ResGoldDoubleActErrorMessage extends net.Message
var ResGoldDoubleActErrorMessage=(function(_super){
	function ResGoldDoubleActErrorMessage(){
		/**1:活动未开启;2:错误;3:消耗不足;4:配置未找到;5:空间不足;*/
		this._error=0;
		ResGoldDoubleActErrorMessage.__super.call(this);
	}

	__class(ResGoldDoubleActErrorMessage,'net.message.activities.ResGoldDoubleActErrorMessage',_super);
	var __proto=ResGoldDoubleActErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1550;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGoldDoubleActErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级守护错误
*/
//class net.message.legion.ResLegionGuardUpgradeMessageErrorMessage extends net.Message
var ResLegionGuardUpgradeMessageErrorMessage=(function(_super){
	function ResLegionGuardUpgradeMessageErrorMessage(){
		/**1:你木有军团;2:经验值不足;*/
		this._error=0;
		ResLegionGuardUpgradeMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionGuardUpgradeMessageErrorMessage,'net.message.legion.ResLegionGuardUpgradeMessageErrorMessage',_super);
	var __proto=ResLegionGuardUpgradeMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 633;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionGuardUpgradeMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴激活错误
*/
//class net.message.handbook.ResHandBookActivateErrorMessage extends net.Message
var ResHandBookActivateErrorMessage=(function(_super){
	function ResHandBookActivateErrorMessage(){
		/**1:已经激活;2:消耗不足;3:其他错误;*/
		this._error=0;
		ResHandBookActivateErrorMessage.__super.call(this);
	}

	__class(ResHandBookActivateErrorMessage,'net.message.handbook.ResHandBookActivateErrorMessage',_super);
	var __proto=ResHandBookActivateErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1121;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResHandBookActivateErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子
*/
//class net.message.marriage.ReqMarriageRenovationHouseMessage extends net.Message
var ReqMarriageRenovationHouseMessage=(function(_super){
	function ReqMarriageRenovationHouseMessage(){
		/**房子质量等级 */
		this._lv=0;
		ReqMarriageRenovationHouseMessage.__super.call(this);
	}

	__class(ReqMarriageRenovationHouseMessage,'net.message.marriage.ReqMarriageRenovationHouseMessage',_super);
	var __proto=ReqMarriageRenovationHouseMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 563;
	}

	/**房子质量等级 */
	/**房子质量等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ReqMarriageRenovationHouseMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会成员信息刷新
*/
//class net.message.guild.ReqGetLeginMemberInfoMessage extends net.Message
var ReqGetLeginMemberInfoMessage=(function(_super){
	function ReqGetLeginMemberInfoMessage(){
		ReqGetLeginMemberInfoMessage.__super.call(this);;
	}

	__class(ReqGetLeginMemberInfoMessage,'net.message.guild.ReqGetLeginMemberInfoMessage',_super);
	var __proto=ReqGetLeginMemberInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1675;
	}

	return ReqGetLeginMemberInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*满员自动开战和多少秒后自动 的状态修改
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomCloseFullMessage extends net.Message
var ReqTeamDuplicateRoomCloseFullMessage=(function(_super){
	function ReqTeamDuplicateRoomCloseFullMessage(){
		/**1 满员自动开 2 N秒后自动开 */
		this._type=0;
		ReqTeamDuplicateRoomCloseFullMessage.__super.call(this);
	}

	__class(ReqTeamDuplicateRoomCloseFullMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomCloseFullMessage',_super);
	var __proto=ReqTeamDuplicateRoomCloseFullMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 426;
	}

	/**1 满员自动开 2 N秒后自动开 */
	/**1 满员自动开 2 N秒后自动开 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTeamDuplicateRoomCloseFullMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励错误
*/
//class net.message.dungeon.ResReceiveDungeonPrizeErrorMessage extends net.Message
var ResReceiveDungeonPrizeErrorMessage=(function(_super){
	function ResReceiveDungeonPrizeErrorMessage(){
		/**1:条件不足;2:背包已满;3:不存在的配置;4:参数错误;5:次数不足;6:元宝不足;7:没加入军团;8:无法扫荡;9:没有目标;10:已经死亡;*/
		this._error=0;
		ResReceiveDungeonPrizeErrorMessage.__super.call(this);
	}

	__class(ResReceiveDungeonPrizeErrorMessage,'net.message.dungeon.ResReceiveDungeonPrizeErrorMessage',_super);
	var __proto=ResReceiveDungeonPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 110;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveDungeonPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新任务
*/
//class net.message.todayrecommend.ResRecommendIntegralUpdateMessage extends net.Message
var ResRecommendIntegralUpdateMessage=(function(_super){
	function ResRecommendIntegralUpdateMessage(){
		/**积分 */
		this._integral=0;
		ResRecommendIntegralUpdateMessage.__super.call(this);
	}

	__class(ResRecommendIntegralUpdateMessage,'net.message.todayrecommend.ResRecommendIntegralUpdateMessage',_super);
	var __proto=ResRecommendIntegralUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._integral);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._integral=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1503;
	}

	/**积分 */
	/**积分 */
	__getset(0,__proto,'integral',function(){
		return this._integral;
		},function(value){
		this._integral=value;
	});

	return ResRecommendIntegralUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领奖
*/
//class net.message.yuanzheng.ReqYuanZhengTakePrizeMessage extends net.Message
var ReqYuanZhengTakePrizeMessage=(function(_super){
	function ReqYuanZhengTakePrizeMessage(){
		/**想要领取的关卡ID */
		this._guanqiaID=0;
		ReqYuanZhengTakePrizeMessage.__super.call(this);
	}

	__class(ReqYuanZhengTakePrizeMessage,'net.message.yuanzheng.ReqYuanZhengTakePrizeMessage',_super);
	var __proto=ReqYuanZhengTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 304;
	}

	/**想要领取的关卡ID */
	/**想要领取的关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	return ReqYuanZhengTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求离开队伍
*/
//class net.message.team.ReqTeamMarryLeaveMessage extends net.Message
var ReqTeamMarryLeaveMessage=(function(_super){
	function ReqTeamMarryLeaveMessage(){
		ReqTeamMarryLeaveMessage.__super.call(this);;
	}

	__class(ReqTeamMarryLeaveMessage,'net.message.team.ReqTeamMarryLeaveMessage',_super);
	var __proto=ReqTeamMarryLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1511;
	}

	return ReqTeamMarryLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能
*/
//class net.message.pet.ReqReplaceXiLianPetMessage extends net.Message
var ReqReplaceXiLianPetMessage=(function(_super){
	function ReqReplaceXiLianPetMessage(){
		/**宠物ID */
		this._petID=0;
		/**是否高级洗练 */
		this._expensive=false;
		ReqReplaceXiLianPetMessage.__super.call(this);
		this._lockIndex=[];
	}

	__class(ReqReplaceXiLianPetMessage,'net.message.pet.ReqReplaceXiLianPetMessage',_super);
	var __proto=ReqReplaceXiLianPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._lockIndex.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lockIndex.length;++i_am_tmp_i){
			this.writeInt(_buf,this._lockIndex[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._expensive);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._lockIndex=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lockIndex[i_am_tmp_i]=this.readInt(_buf);
		}
		this._expensive=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 154;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**是否高级洗练 */
	/**是否高级洗练 */
	__getset(0,__proto,'expensive',function(){
		return this._expensive;
		},function(value){
		this._expensive=value;
	});

	/**锁定哪几个？从0开始 */
	/**锁定哪几个？从0开始 */
	__getset(0,__proto,'lockIndex',function(){
		return this._lockIndex;
		},function(value){
		this._lockIndex=value;
	});

	return ReqReplaceXiLianPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破错误
*/
//class net.message.totem.ResTotemSurmountErrorMessage extends net.Message
var ResTotemSurmountErrorMessage=(function(_super){
	function ResTotemSurmountErrorMessage(){
		/**1:不存在;2:条件不足;3:配置错误;*/
		this._error=0;
		ResTotemSurmountErrorMessage.__super.call(this);
	}

	__class(ResTotemSurmountErrorMessage,'net.message.totem.ResTotemSurmountErrorMessage',_super);
	var __proto=ResTotemSurmountErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 862;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTotemSurmountErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级城门错误
*/
//class net.message.garrison.ResGarrisonUpgradeErrorMessage extends net.Message
var ResGarrisonUpgradeErrorMessage=(function(_super){
	function ResGarrisonUpgradeErrorMessage(){
		/**1:系统未开启;2:已经达到最大等级;3:穷;*/
		this._error=0;
		ResGarrisonUpgradeErrorMessage.__super.call(this);
	}

	__class(ResGarrisonUpgradeErrorMessage,'net.message.garrison.ResGarrisonUpgradeErrorMessage',_super);
	var __proto=ResGarrisonUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1076;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应邀请加入军团错误
*/
//class net.message.guild.ResGuildInviteReplyErrorMessage extends net.Message
var ResGuildInviteReplyErrorMessage=(function(_super){
	function ResGuildInviteReplyErrorMessage(){
		/**1:你有军团;2:军团满;3:不存在的军团;4:没被邀请;*/
		this._error=0;
		ResGuildInviteReplyErrorMessage.__super.call(this);
	}

	__class(ResGuildInviteReplyErrorMessage,'net.message.guild.ResGuildInviteReplyErrorMessage',_super);
	var __proto=ResGuildInviteReplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1242;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildInviteReplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出队伍错误
*/
//class net.message.team.ResTeamExitErrorMessage extends net.Message
var ResTeamExitErrorMessage=(function(_super){
	function ResTeamExitErrorMessage(){
		/**1:不在队伍中;2:无法退出;3:请解散队伍;*/
		this._error=0;
		ResTeamExitErrorMessage.__super.call(this);
	}

	__class(ResTeamExitErrorMessage,'net.message.team.ResTeamExitErrorMessage',_super);
	var __proto=ResTeamExitErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1268;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamExitErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出队伍
*/
//class net.message.team.ReqTeamExitMessage extends net.Message
var ReqTeamExitMessage=(function(_super){
	function ReqTeamExitMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		ReqTeamExitMessage.__super.call(this);
	}

	__class(ReqTeamExitMessage,'net.message.team.ReqTeamExitMessage',_super);
	var __proto=ReqTeamExitMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1266;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTeamExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换主公
*/
//class net.message.gongCe.ResTongShuaiJinJianMessage extends net.Message
var ResTongShuaiJinJianMessage=(function(_super){
	function ResTongShuaiJinJianMessage(){
		/**是否兑换成功 */
		this._success=false;
		ResTongShuaiJinJianMessage.__super.call(this);
	}

	__class(ResTongShuaiJinJianMessage,'net.message.gongCe.ResTongShuaiJinJianMessage',_super);
	var __proto=ResTongShuaiJinJianMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._success);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._success=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1659;
	}

	/**是否兑换成功 */
	/**是否兑换成功 */
	__getset(0,__proto,'success',function(){
		return this._success;
		},function(value){
		this._success=value;
	});

	return ResTongShuaiJinJianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取VIP礼包错误
*/
//class net.message.vip.ResGetVipRewardErrorMessage extends net.Message
var ResGetVipRewardErrorMessage=(function(_super){
	function ResGetVipRewardErrorMessage(){
		/**1:配置错误;2:穷;3:已经领取;4:条件不足;*/
		this._error=0;
		ResGetVipRewardErrorMessage.__super.call(this);
	}

	__class(ResGetVipRewardErrorMessage,'net.message.vip.ResGetVipRewardErrorMessage',_super);
	var __proto=ResGetVipRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 770;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetVipRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改职位
*/
//class net.message.guild.ReqGuildChangePositionMessage extends net.Message
var ReqGuildChangePositionMessage=(function(_super){
	function ReqGuildChangePositionMessage(){
		/**玩家唯一ID */
		this._uid=null;
		/**职位[1:帮主][2:副帮主][3:普通成员] */
		this._position=0;
		ReqGuildChangePositionMessage.__super.call(this);
	}

	__class(ReqGuildChangePositionMessage,'net.message.guild.ReqGuildChangePositionMessage',_super);
	var __proto=ReqGuildChangePositionMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._position);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._position=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1221;
	}

	/**玩家唯一ID */
	/**玩家唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**职位[1:帮主][2:副帮主][3:普通成员] */
	/**职位[1:帮主][2:副帮主][3:普通成员] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return ReqGuildChangePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求购买投资计划
*/
//class net.message.investment.ResInvestmengBuyMessageMessage extends net.Message
var ResInvestmengBuyMessageMessage=(function(_super){
	function ResInvestmengBuyMessageMessage(){
		/**更新整个对象 */
		this._bean=null;
		ResInvestmengBuyMessageMessage.__super.call(this);
	}

	__class(ResInvestmengBuyMessageMessage,'net.message.investment.ResInvestmengBuyMessageMessage',_super);
	var __proto=ResInvestmengBuyMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,InvestmentBean);
	}

	__proto.getId=function(){
		return 672;
	}

	/**更新整个对象 */
	/**更新整个对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResInvestmengBuyMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求兑换商品
*/
//class net.message.legion.ReqLegionExchangeItemMessageMessage extends net.Message
var ReqLegionExchangeItemMessageMessage=(function(_super){
	function ReqLegionExchangeItemMessageMessage(){
		/**id */
		this._id=0;
		ReqLegionExchangeItemMessageMessage.__super.call(this);
	}

	__class(ReqLegionExchangeItemMessageMessage,'net.message.legion.ReqLegionExchangeItemMessageMessage',_super);
	var __proto=ReqLegionExchangeItemMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 638;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqLegionExchangeItemMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移动
*/
//class net.message.scene.ResSceneMoveMessage extends net.Message
var ResSceneMoveMessage=(function(_super){
	function ResSceneMoveMessage(){
		/**x */
		this._x=0;
		/**y */
		this._y=0;
		ResSceneMoveMessage.__super.call(this);
	}

	__class(ResSceneMoveMessage,'net.message.scene.ResSceneMoveMessage',_super);
	var __proto=ResSceneMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._x);
		this.writeInt(_buf,this._y);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._x=this.readInt(_buf);
		this._y=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1315;
	}

	/**x */
	/**x */
	__getset(0,__proto,'x',function(){
		return this._x;
		},function(value){
		this._x=value;
	});

	/**y */
	/**y */
	__getset(0,__proto,'y',function(){
		return this._y;
		},function(value){
		this._y=value;
	});

	return ResSceneMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ReqOnHookRewardMessage extends net.Message
var ReqOnHookRewardMessage=(function(_super){
	function ReqOnHookRewardMessage(){
		ReqOnHookRewardMessage.__super.call(this);;
	}

	__class(ReqOnHookRewardMessage,'net.message.misc.ReqOnHookRewardMessage',_super);
	var __proto=ReqOnHookRewardMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1447;
	}

	return ReqOnHookRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关卡投资计划领奖
*/
//class net.message.investment.ResGuanQiaInvestmentGetRewardMessageMessage extends net.Message
var ResGuanQiaInvestmentGetRewardMessageMessage=(function(_super){
	function ResGuanQiaInvestmentGetRewardMessageMessage(){
		/**变化之后的对象 */
		this._investmentBean=null;
		ResGuanQiaInvestmentGetRewardMessageMessage.__super.call(this);
	}

	__class(ResGuanQiaInvestmentGetRewardMessageMessage,'net.message.investment.ResGuanQiaInvestmentGetRewardMessageMessage',_super);
	var __proto=ResGuanQiaInvestmentGetRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._investmentBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._investmentBean=this.readBean(_buf,GuanQiaInvestmentBean);
	}

	__proto.getId=function(){
		return 1523;
	}

	/**变化之后的对象 */
	/**变化之后的对象 */
	__getset(0,__proto,'investmentBean',function(){
		return this._investmentBean;
		},function(value){
		this._investmentBean=value;
	});

	return ResGuanQiaInvestmentGetRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*准点登陆
*/
//class net.message.gongCe.ReqZhunDianMessage extends net.Message
var ReqZhunDianMessage=(function(_super){
	function ReqZhunDianMessage(){
		ReqZhunDianMessage.__super.call(this);;
	}

	__class(ReqZhunDianMessage,'net.message.gongCe.ReqZhunDianMessage',_super);
	var __proto=ReqZhunDianMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1643;
	}

	return ReqZhunDianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新道具商店商品购买次数限制
*/
//class net.message.shop.ResUpdateShopGoodsBuyTimesMessage extends net.Message
var ResUpdateShopGoodsBuyTimesMessage=(function(_super){
	function ResUpdateShopGoodsBuyTimesMessage(){
		/**商店商品购买次数 */
		this._bean=null;
		ResUpdateShopGoodsBuyTimesMessage.__super.call(this);
	}

	__class(ResUpdateShopGoodsBuyTimesMessage,'net.message.shop.ResUpdateShopGoodsBuyTimesMessage',_super);
	var __proto=ResUpdateShopGoodsBuyTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,ShopGoodsBuyTimesBean);
	}

	__proto.getId=function(){
		return 75;
	}

	/**商店商品购买次数 */
	/**商店商品购买次数 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResUpdateShopGoodsBuyTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天命
*/
//class net.message.adviser.ResAdviserUpgradeDestinyMessage extends net.Message
var ResAdviserUpgradeDestinyMessage=(function(_super){
	function ResAdviserUpgradeDestinyMessage(){
		/**军师id */
		this._adviserId=0;
		/**新的等级 */
		this._lv=0;
		/**新的进度 */
		this._progress=0;
		ResAdviserUpgradeDestinyMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeDestinyMessage,'net.message.adviser.ResAdviserUpgradeDestinyMessage',_super);
	var __proto=ResAdviserUpgradeDestinyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._adviserId);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._adviserId=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1020;
	}

	/**军师id */
	/**军师id */
	__getset(0,__proto,'adviserId',function(){
		return this._adviserId;
		},function(value){
		this._adviserId=value;
	});

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**新的进度 */
	/**新的进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return ResAdviserUpgradeDestinyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求军团首领的大概信息
*/
//class net.message.worldboss.ReqWorldBossDetailMessage extends net.Message
var ReqWorldBossDetailMessage=(function(_super){
	function ReqWorldBossDetailMessage(){
		ReqWorldBossDetailMessage.__super.call(this);;
	}

	__class(ReqWorldBossDetailMessage,'net.message.worldboss.ReqWorldBossDetailMessage',_super);
	var __proto=ReqWorldBossDetailMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 580;
	}

	return ReqWorldBossDetailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会获取战斗信息错误
*/
//class net.message.qunyinghui.ResQunYingHuiGetFightInfoErrorMessage extends net.Message
var ResQunYingHuiGetFightInfoErrorMessage=(function(_super){
	function ResQunYingHuiGetFightInfoErrorMessage(){
		/**1:活动未开启;2:找不到战斗;*/
		this._error=0;
		ResQunYingHuiGetFightInfoErrorMessage.__super.call(this);
	}

	__class(ResQunYingHuiGetFightInfoErrorMessage,'net.message.qunyinghui.ResQunYingHuiGetFightInfoErrorMessage',_super);
	var __proto=ResQunYingHuiGetFightInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1390;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResQunYingHuiGetFightInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*兑换
*/
//class net.message.misc.ResDuiHuanMessage extends net.Message
var ResDuiHuanMessage=(function(_super){
	function ResDuiHuanMessage(){
		ResDuiHuanMessage.__super.call(this);
		this._items=[];
	}

	__class(ResDuiHuanMessage,'net.message.misc.ResDuiHuanMessage',_super);
	var __proto=ResDuiHuanMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 266;
	}

	/**获得物品 */
	/**获得物品 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	return ResDuiHuanMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸购买战斗次数错误
*/
//class net.message.kingwar.ResKingWarBuyCountErrorMessage extends net.Message
var ResKingWarBuyCountErrorMessage=(function(_super){
	function ResKingWarBuyCountErrorMessage(){
		/**1:活动未开启;2:穷;3:已经最大购买次数;4:战斗次数最大了;5:系统错误;*/
		this._error=0;
		ResKingWarBuyCountErrorMessage.__super.call(this);
	}

	__class(ResKingWarBuyCountErrorMessage,'net.message.kingwar.ResKingWarBuyCountErrorMessage',_super);
	var __proto=ResKingWarBuyCountErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 497;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarBuyCountErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新开服时间
*/
//class net.message.misc.ResUpdateServerOpenTimeMessage extends net.Message
var ResUpdateServerOpenTimeMessage=(function(_super){
	function ResUpdateServerOpenTimeMessage(){
		/**开服时间 */
		this._openServerTime=null;
		ResUpdateServerOpenTimeMessage.__super.call(this);
	}

	__class(ResUpdateServerOpenTimeMessage,'net.message.misc.ResUpdateServerOpenTimeMessage',_super);
	var __proto=ResUpdateServerOpenTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._openServerTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._openServerTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1556;
	}

	/**开服时间 */
	/**开服时间 */
	__getset(0,__proto,'openServerTime',function(){
		return this._openServerTime;
		},function(value){
		this._openServerTime=value;
	});

	return ResUpdateServerOpenTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*洗练法器
*/
//class net.message.xuannv.ReqXiLianFaQiMessage extends net.Message
var ReqXiLianFaQiMessage=(function(_super){
	function ReqXiLianFaQiMessage(){
		/**法器ID */
		this._faqiID=0;
		/**是否自动购买 */
		this._autoBuy=false;
		/**是否高级洗练 */
		this._expensive=false;
		ReqXiLianFaQiMessage.__super.call(this);
		this._lockIndex=[];
	}

	__class(ReqXiLianFaQiMessage,'net.message.xuannv.ReqXiLianFaQiMessage',_super);
	var __proto=ReqXiLianFaQiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._faqiID);
		this.writeBoolean(_buf,this._autoBuy);
		this.writeBoolean(_buf,this._expensive);
		this.writeInt(_buf,this._lockIndex.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lockIndex.length;++i_am_tmp_i){
			this.writeInt(_buf,this._lockIndex[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._faqiID=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
		this._expensive=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._lockIndex=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lockIndex[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 259;
	}

	/**法器ID */
	/**法器ID */
	__getset(0,__proto,'faqiID',function(){
		return this._faqiID;
		},function(value){
		this._faqiID=value;
	});

	/**锁定哪几个？从0开始 */
	/**锁定哪几个？从0开始 */
	__getset(0,__proto,'lockIndex',function(){
		return this._lockIndex;
		},function(value){
		this._lockIndex=value;
	});

	/**是否高级洗练 */
	/**是否高级洗练 */
	__getset(0,__proto,'expensive',function(){
		return this._expensive;
		},function(value){
		this._expensive=value;
	});

	/**是否自动购买 */
	/**是否自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqXiLianFaQiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取拍卖行的数据
*/
//class net.message.auction.ReqAuctionMonitorMessage extends net.Message
var ReqAuctionMonitorMessage=(function(_super){
	function ReqAuctionMonitorMessage(){
		ReqAuctionMonitorMessage.__super.call(this);;
	}

	__class(ReqAuctionMonitorMessage,'net.message.auction.ReqAuctionMonitorMessage',_super);
	var __proto=ReqAuctionMonitorMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 569;
	}

	return ReqAuctionMonitorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取合体奖励错误
*/
//class net.message.pata.ResTakeFitPrizeErrorMessage extends net.Message
var ResTakeFitPrizeErrorMessage=(function(_super){
	function ResTakeFitPrizeErrorMessage(){
		/**1:参数错误;2:已经领过奖了;*/
		this._error=0;
		ResTakeFitPrizeErrorMessage.__super.call(this);
	}

	__class(ResTakeFitPrizeErrorMessage,'net.message.pata.ResTakeFitPrizeErrorMessage',_super);
	var __proto=ResTakeFitPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1168;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeFitPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建队伍
*/
//class net.message.team.ResTeamCreateCDMessage extends net.Message
var ResTeamCreateCDMessage=(function(_super){
	function ResTeamCreateCDMessage(){
		/**组队玩法 队伍创建公共CD起始时间 毫秒 */
		this._cdStart=null;
		ResTeamCreateCDMessage.__super.call(this);
	}

	__class(ResTeamCreateCDMessage,'net.message.team.ResTeamCreateCDMessage',_super);
	var __proto=ResTeamCreateCDMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._cdStart);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cdStart=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1679;
	}

	/**组队玩法 队伍创建公共CD起始时间 毫秒 */
	/**组队玩法 队伍创建公共CD起始时间 毫秒 */
	__getset(0,__proto,'cdStart',function(){
		return this._cdStart;
		},function(value){
		this._cdStart=value;
	});

	return ResTeamCreateCDMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新复仇对象
*/
//class net.message.garrison.ResGarrisonUpdateRevengesMessage extends net.Message
var ResGarrisonUpdateRevengesMessage=(function(_super){
	function ResGarrisonUpdateRevengesMessage(){
		/**1 增加 2 删除 */
		this._type=0;
		/**复仇对象 */
		this._bean=null;
		ResGarrisonUpdateRevengesMessage.__super.call(this);
	}

	__class(ResGarrisonUpdateRevengesMessage,'net.message.garrison.ResGarrisonUpdateRevengesMessage',_super);
	var __proto=ResGarrisonUpdateRevengesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._bean=this.readBean(_buf,GarrisonRevengeBean);
	}

	__proto.getId=function(){
		return 1046;
	}

	/**1 增加 2 删除 */
	/**1 增加 2 删除 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**复仇对象 */
	/**复仇对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResGarrisonUpdateRevengesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取藏宝图信息
*/
//class net.message.pata.ReqGetCBTInfoMessage extends net.Message
var ReqGetCBTInfoMessage=(function(_super){
	function ReqGetCBTInfoMessage(){
		/**页码(默认可不填)*/
		this._page=0;
		ReqGetCBTInfoMessage.__super.call(this);
	}

	__class(ReqGetCBTInfoMessage,'net.message.pata.ReqGetCBTInfoMessage',_super);
	var __proto=ReqGetCBTInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._page);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._page=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 230;
	}

	/**页码(默认可不填)*/
	/**页码(默认可不填)*/
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	return ReqGetCBTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物缘分
*/
//class net.message.pet.ReqActivePetGroupMessage extends net.Message
var ReqActivePetGroupMessage=(function(_super){
	function ReqActivePetGroupMessage(){
		/**缘分ID */
		this._groupID=0;
		ReqActivePetGroupMessage.__super.call(this);
	}

	__class(ReqActivePetGroupMessage,'net.message.pet.ReqActivePetGroupMessage',_super);
	var __proto=ReqActivePetGroupMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._groupID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._groupID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 166;
	}

	/**缘分ID */
	/**缘分ID */
	__getset(0,__proto,'groupID',function(){
		return this._groupID;
		},function(value){
		this._groupID=value;
	});

	return ReqActivePetGroupMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取星宿幻境奖励
*/
//class net.message.pata.ResTakeXXHJPrizeMessage extends net.Message
var ResTakeXXHJPrizeMessage=(function(_super){
	function ResTakeXXHJPrizeMessage(){
		/**层 */
		this._layer=0;
		ResTakeXXHJPrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResTakeXXHJPrizeMessage,'net.message.pata.ResTakeXXHJPrizeMessage',_super);
	var __proto=ResTakeXXHJPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1035;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResTakeXXHJPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*攻击城市
*/
//class net.message.emptycity.ReqEmptyCityAttackMessage extends net.Message
var ReqEmptyCityAttackMessage=(function(_super){
	function ReqEmptyCityAttackMessage(){
		/**城市ID */
		this._id=0;
		/**占领者ID 没有占领者填0 */
		this._uid=null;
		ReqEmptyCityAttackMessage.__super.call(this);
	}

	__class(ReqEmptyCityAttackMessage,'net.message.emptycity.ReqEmptyCityAttackMessage',_super);
	var __proto=ReqEmptyCityAttackMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1093;
	}

	/**城市ID */
	/**城市ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**占领者ID 没有占领者填0 */
	/**占领者ID 没有占领者填0 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqEmptyCityAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会获取战斗信息
*/
//class net.message.qunyinghui.ResQunYingHuiGetFightInfoMessage extends net.Message
var ResQunYingHuiGetFightInfoMessage=(function(_super){
	function ResQunYingHuiGetFightInfoMessage(){
		/**战斗ID */
		this._fightID=0;
		/**战斗者1 */
		this._fighter1=null;
		/**战斗者2 */
		this._fighter2=null;
		/**被下注人 */
		this._uid=null;
		/**下注类型 */
		this._type=0;
		ResQunYingHuiGetFightInfoMessage.__super.call(this);
		this._history=[];
	}

	__class(ResQunYingHuiGetFightInfoMessage,'net.message.qunyinghui.ResQunYingHuiGetFightInfoMessage',_super);
	var __proto=ResQunYingHuiGetFightInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._fightID);
		this.writeBean(_buf,this._fighter1);
		this.writeBean(_buf,this._fighter2);
		this.writeInt(_buf,this._history.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._history.length;++i_am_tmp_i){
			this._history[i_am_tmp_i].write(_buf);
		}
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightID=this.readInt(_buf);
		this._fighter1=this.readBean(_buf,QunYingHuiFighterDetailBean);
		this._fighter2=this.readBean(_buf,QunYingHuiFighterDetailBean);
		size52413035=this.readInt(_buf);
		this._history=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._history[i_am_tmp_i]=this.readBeanInList(_buf,FightBean);
		}
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1389;
	}

	/**战斗ID */
	/**战斗ID */
	__getset(0,__proto,'fightID',function(){
		return this._fightID;
		},function(value){
		this._fightID=value;
	});

	/**战斗者1 */
	/**战斗者1 */
	__getset(0,__proto,'fighter1',function(){
		return this._fighter1;
		},function(value){
		this._fighter1=value;
	});

	/**战斗者2 */
	/**战斗者2 */
	__getset(0,__proto,'fighter2',function(){
		return this._fighter2;
		},function(value){
		this._fighter2=value;
	});

	/**战斗历史 */
	/**战斗历史 */
	__getset(0,__proto,'history',function(){
		return this._history;
		},function(value){
		this._history=value;
	});

	/**下注类型 */
	/**下注类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**被下注人 */
	/**被下注人 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResQunYingHuiGetFightInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*降低等级(增加修为)错误
*/
//class net.message.zhuansheng.ResReduceLevelErrorMessage extends net.Message
var ResReduceLevelErrorMessage=(function(_super){
	function ResReduceLevelErrorMessage(){
		/**1:超出次数上限;2:等级限制;*/
		this._error=0;
		ResReduceLevelErrorMessage.__super.call(this);
	}

	__class(ResReduceLevelErrorMessage,'net.message.zhuansheng.ResReduceLevelErrorMessage',_super);
	var __proto=ResReduceLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 106;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReduceLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.nineHeavy.ResNineHeavyPlayerMoveMessage extends net.Message
var ResNineHeavyPlayerMoveMessage=(function(_super){
	function ResNineHeavyPlayerMoveMessage(){
		/**玩家移动 */
		this._uid=null;
		/**目标网格 */
		this._point=null;
		ResNineHeavyPlayerMoveMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerMoveMessage,'net.message.nineHeavy.ResNineHeavyPlayerMoveMessage',_super);
	var __proto=ResNineHeavyPlayerMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 379;
	}

	/**玩家移动 */
	/**玩家移动 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**目标网格 */
	/**目标网格 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ResNineHeavyPlayerMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*革职宠物错误
*/
//class net.message.pet.ResFirePetErrorMessage extends net.Message
var ResFirePetErrorMessage=(function(_super){
	function ResFirePetErrorMessage(){
		/**1:没有宠物;2:消耗不足;3:不能被革职;*/
		this._error=0;
		ResFirePetErrorMessage.__super.call(this);
	}

	__class(ResFirePetErrorMessage,'net.message.pet.ResFirePetErrorMessage',_super);
	var __proto=ResFirePetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1440;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFirePetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新逐鹿每日助战次数
*/
//class net.message.teamDuplicate.ResTeamDuplicateUpdateAssistMessage extends net.Message
var ResTeamDuplicateUpdateAssistMessage=(function(_super){
	function ResTeamDuplicateUpdateAssistMessage(){
		/**剩余次数 */
		this._count=0;
		ResTeamDuplicateUpdateAssistMessage.__super.call(this);
	}

	__class(ResTeamDuplicateUpdateAssistMessage,'net.message.teamDuplicate.ResTeamDuplicateUpdateAssistMessage',_super);
	var __proto=ResTeamDuplicateUpdateAssistMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 484;
	}

	/**剩余次数 */
	/**剩余次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResTeamDuplicateUpdateAssistMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换场景
*/
//class net.message.scene.ReqSceneChangeMessage extends net.Message
var ReqSceneChangeMessage=(function(_super){
	function ReqSceneChangeMessage(){
		/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
		this._type=0;
		ReqSceneChangeMessage.__super.call(this);
	}

	__class(ReqSceneChangeMessage,'net.message.scene.ReqSceneChangeMessage',_super);
	var __proto=ReqSceneChangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1353;
	}

	/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	/**场景类型[1:小怪场景][2:BOSS场景][3:玉玺场景] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqSceneChangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*下阵错误
*/
//class net.message.fight.ResFightPositionRemoveErrorMessage extends net.Message
var ResFightPositionRemoveErrorMessage=(function(_super){
	function ResFightPositionRemoveErrorMessage(){
		/**1:位置错误;2:找不到对象;3:不能被修改;*/
		this._error=0;
		ResFightPositionRemoveErrorMessage.__super.call(this);
	}

	__class(ResFightPositionRemoveErrorMessage,'net.message.fight.ResFightPositionRemoveErrorMessage',_super);
	var __proto=ResFightPositionRemoveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1201;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFightPositionRemoveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更改名字错误
*/
//class net.message.user.ResUpdateNameErrorMessage extends net.Message
var ResUpdateNameErrorMessage=(function(_super){
	function ResUpdateNameErrorMessage(){
		/**1:消耗不足;2:已经存在的昵称;3:非法昵称;*/
		this._error=0;
		ResUpdateNameErrorMessage.__super.call(this);
	}

	__class(ResUpdateNameErrorMessage,'net.message.user.ResUpdateNameErrorMessage',_super);
	var __proto=ResUpdateNameErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1058;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpdateNameErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*膜拜
*/
//class net.message.rank.ReqRankMoBaiMessage extends net.Message
var ReqRankMoBaiMessage=(function(_super){
	function ReqRankMoBaiMessage(){
		ReqRankMoBaiMessage.__super.call(this);;
	}

	__class(ReqRankMoBaiMessage,'net.message.rank.ReqRankMoBaiMessage',_super);
	var __proto=ReqRankMoBaiMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 271;
	}

	return ReqRankMoBaiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化帮会信息
*/
//class net.message.guild.ResGuildInitMessage extends net.Message
var ResGuildInitMessage=(function(_super){
	function ResGuildInitMessage(){
		/**帮会信息 */
		this._guild=null;
		ResGuildInitMessage.__super.call(this);
	}

	__class(ResGuildInitMessage,'net.message.guild.ResGuildInitMessage',_super);
	var __proto=ResGuildInitMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._guild);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guild=this.readBean(_buf,GuildBean);
	}

	__proto.getId=function(){
		return 1236;
	}

	/**帮会信息 */
	/**帮会信息 */
	__getset(0,__proto,'guild',function(){
		return this._guild;
		},function(value){
		this._guild=value;
	});

	return ResGuildInitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领取技能
*/
//class net.message.yuanzheng.ResYuanZhengTakeSkillMessage extends net.Message
var ResYuanZhengTakeSkillMessage=(function(_super){
	function ResYuanZhengTakeSkillMessage(){
		/**关卡ID */
		this._guanqiaID=0;
		/**技能ID */
		this._skillID=0;
		ResYuanZhengTakeSkillMessage.__super.call(this);
	}

	__class(ResYuanZhengTakeSkillMessage,'net.message.yuanzheng.ResYuanZhengTakeSkillMessage',_super);
	var __proto=ResYuanZhengTakeSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeInt(_buf,this._skillID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._skillID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1001;
	}

	/**关卡ID */
	/**关卡ID */
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**技能ID */
	/**技能ID */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	return ResYuanZhengTakeSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取珍稀宝物剩余次数信息错误
*/
//class net.message.textureHunt.ResGetBaoWuRestTimesErrorMessage extends net.Message
var ResGetBaoWuRestTimesErrorMessage=(function(_super){
	function ResGetBaoWuRestTimesErrorMessage(){
		/**1:不存在的类型;2:配置错误;*/
		this._error=0;
		ResGetBaoWuRestTimesErrorMessage.__super.call(this);
	}

	__class(ResGetBaoWuRestTimesErrorMessage,'net.message.textureHunt.ResGetBaoWuRestTimesErrorMessage',_super);
	var __proto=ResGetBaoWuRestTimesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1642;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetBaoWuRestTimesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*寻找对手错误
*/
//class net.message.garrison.ResGarrisonFindTargetErrorMessage extends net.Message
var ResGarrisonFindTargetErrorMessage=(function(_super){
	function ResGarrisonFindTargetErrorMessage(){
		/**1:参数错误;2:穷;3:系统未开启;4:没有找到合适的对手;*/
		this._error=0;
		ResGarrisonFindTargetErrorMessage.__super.call(this);
	}

	__class(ResGarrisonFindTargetErrorMessage,'net.message.garrison.ResGarrisonFindTargetErrorMessage',_super);
	var __proto=ResGarrisonFindTargetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1042;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonFindTargetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知更新帮会副本次数
*/
//class net.message.legion.ResLegionUpdateTeamDuplicateMessageMessage extends net.Message
var ResLegionUpdateTeamDuplicateMessageMessage=(function(_super){
	function ResLegionUpdateTeamDuplicateMessageMessage(){
		/**收益次数 */
		this._profix=0;
		/**帮助次数 */
		this._assist=0;
		ResLegionUpdateTeamDuplicateMessageMessage.__super.call(this);
	}

	__class(ResLegionUpdateTeamDuplicateMessageMessage,'net.message.legion.ResLegionUpdateTeamDuplicateMessageMessage',_super);
	var __proto=ResLegionUpdateTeamDuplicateMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._profix);
		this.writeInt(_buf,this._assist);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._profix=this.readInt(_buf);
		this._assist=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 662;
	}

	/**收益次数 */
	/**收益次数 */
	__getset(0,__proto,'profix',function(){
		return this._profix;
		},function(value){
		this._profix=value;
	});

	/**帮助次数 */
	/**帮助次数 */
	__getset(0,__proto,'assist',function(){
		return this._assist;
		},function(value){
		this._assist=value;
	});

	return ResLegionUpdateTeamDuplicateMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新自己英雄属性
*/
//class net.message.hero.ResUpdateAttributeMessage extends net.Message
var ResUpdateAttributeMessage=(function(_super){
	function ResUpdateAttributeMessage(){
		/**英雄ID */
		this._heroID=0;
		ResUpdateAttributeMessage.__super.call(this);
		this._attributes=[];
	}

	__class(ResUpdateAttributeMessage,'net.message.hero.ResUpdateAttributeMessage',_super);
	var __proto=ResUpdateAttributeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._attributes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._attributes.length;++i_am_tmp_i){
			this.writeLong(_buf,this._attributes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._attributes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._attributes[i_am_tmp_i]=this.readLong(_buf);
		}
	}

	__proto.getId=function(){
		return 107;
	}

	/**属性列表,见AttributeType */
	/**属性列表,见AttributeType */
	__getset(0,__proto,'attributes',function(){
		return this._attributes;
		},function(value){
		this._attributes=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ResUpdateAttributeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取单身的玩家
*/
//class net.message.marriage.ReqMarriageTakeSinglePlayerMessage extends net.Message
var ReqMarriageTakeSinglePlayerMessage=(function(_super){
	function ReqMarriageTakeSinglePlayerMessage(){
		ReqMarriageTakeSinglePlayerMessage.__super.call(this);;
	}

	__class(ReqMarriageTakeSinglePlayerMessage,'net.message.marriage.ReqMarriageTakeSinglePlayerMessage',_super);
	var __proto=ReqMarriageTakeSinglePlayerMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 528;
	}

	return ReqMarriageTakeSinglePlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值
*/
//class net.message.misc.ResRechargeMessage extends net.Message
var ResRechargeMessage=(function(_super){
	function ResRechargeMessage(){
		/**游戏ID */
		this._gameID=0;
		/**用户ID */
		this._uid=0;
		/**游戏服ID */
		this._sid=0;
		/**角色ID */
		this._actorID=null;
		/**订单 */
		this._orderNo=null;
		/**金额 */
		this._money=0;
		/**金额 */
		this._moneyNew=null;
		/**元宝数 */
		this._gameCoin=0;
		/**商品ID */
		this._productID=0;
		/**商品信息 */
		this._subject=null;
		/**时间戳 */
		this._time=0;
		/**来源渠道扩展 */
		this._referer=null;
		/**研发扩展参数 */
		this._ext=null;
		/**研发签名 */
		this._sign=null;
		/**参数 */
		this._params=null;
		ResRechargeMessage.__super.call(this);
	}

	__class(ResRechargeMessage,'net.message.misc.ResRechargeMessage',_super);
	var __proto=ResRechargeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gameID);
		this.writeInt(_buf,this._uid);
		this.writeInt(_buf,this._sid);
		this.writeString(_buf,this._actorID);
		this.writeString(_buf,this._orderNo);
		this.writeInt(_buf,this._money);
		this.writeString(_buf,this._moneyNew);
		this.writeInt(_buf,this._gameCoin);
		this.writeInt(_buf,this._productID);
		this.writeString(_buf,this._subject);
		this.writeInt(_buf,this._time);
		this.writeString(_buf,this._referer);
		this.writeString(_buf,this._ext);
		this.writeString(_buf,this._sign);
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gameID=this.readInt(_buf);
		this._uid=this.readInt(_buf);
		this._sid=this.readInt(_buf);
		this._actorID=this.readString(_buf);
		this._orderNo=this.readString(_buf);
		this._money=this.readInt(_buf);
		this._moneyNew=this.readString(_buf);
		this._gameCoin=this.readInt(_buf);
		this._productID=this.readInt(_buf);
		this._subject=this.readString(_buf);
		this._time=this.readInt(_buf);
		this._referer=this.readString(_buf);
		this._ext=this.readString(_buf);
		this._sign=this.readString(_buf);
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 720;
	}

	/**元宝数 */
	/**元宝数 */
	__getset(0,__proto,'gameCoin',function(){
		return this._gameCoin;
		},function(value){
		this._gameCoin=value;
	});

	/**游戏ID */
	/**游戏ID */
	__getset(0,__proto,'gameID',function(){
		return this._gameID;
		},function(value){
		this._gameID=value;
	});

	/**用户ID */
	/**用户ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**金额 */
	/**金额 */
	__getset(0,__proto,'moneyNew',function(){
		return this._moneyNew;
		},function(value){
		this._moneyNew=value;
	});

	/**商品信息 */
	/**商品信息 */
	__getset(0,__proto,'subject',function(){
		return this._subject;
		},function(value){
		this._subject=value;
	});

	/**游戏服ID */
	/**游戏服ID */
	__getset(0,__proto,'sid',function(){
		return this._sid;
		},function(value){
		this._sid=value;
	});

	/**金额 */
	/**金额 */
	__getset(0,__proto,'money',function(){
		return this._money;
		},function(value){
		this._money=value;
	});

	/**角色ID */
	/**角色ID */
	__getset(0,__proto,'actorID',function(){
		return this._actorID;
		},function(value){
		this._actorID=value;
	});

	/**订单 */
	/**订单 */
	__getset(0,__proto,'orderNo',function(){
		return this._orderNo;
		},function(value){
		this._orderNo=value;
	});

	/**商品ID */
	/**商品ID */
	__getset(0,__proto,'productID',function(){
		return this._productID;
		},function(value){
		this._productID=value;
	});

	/**研发签名 */
	/**研发签名 */
	__getset(0,__proto,'sign',function(){
		return this._sign;
		},function(value){
		this._sign=value;
	});

	/**时间戳 */
	/**时间戳 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**来源渠道扩展 */
	/**来源渠道扩展 */
	__getset(0,__proto,'referer',function(){
		return this._referer;
		},function(value){
		this._referer=value;
	});

	/**研发扩展参数 */
	/**研发扩展参数 */
	__getset(0,__proto,'ext',function(){
		return this._ext;
		},function(value){
		this._ext=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ResRechargeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送祥瑞事件
*/
//class net.message.goodLuck.ResSelectLuckMessage extends net.Message
var ResSelectLuckMessage=(function(_super){
	function ResSelectLuckMessage(){
		/**是否成功 */
		this._isSuccess=0;
		/**战报 */
		this._fightBean=null;
		ResSelectLuckMessage.__super.call(this);
		this._itemBean=[];
	}

	__class(ResSelectLuckMessage,'net.message.goodLuck.ResSelectLuckMessage',_super);
	var __proto=ResSelectLuckMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._isSuccess);
		this.writeBean(_buf,this._fightBean);
		this.writeInt(_buf,this._itemBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBean.length;++i_am_tmp_i){
			this._itemBean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isSuccess=this.readInt(_buf);
		this._fightBean=this.readBean(_buf,FightBean);
		size52413035=this.readInt(_buf);
		this._itemBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBean[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1603;
	}

	/**获得的道具 */
	/**获得的道具 */
	__getset(0,__proto,'itemBean',function(){
		return this._itemBean;
		},function(value){
		this._itemBean=value;
	});

	/**是否成功 */
	/**是否成功 */
	__getset(0,__proto,'isSuccess',function(){
		return this._isSuccess;
		},function(value){
		this._isSuccess=value;
	});

	/**战报 */
	/**战报 */
	__getset(0,__proto,'fightBean',function(){
		return this._fightBean;
		},function(value){
		this._fightBean=value;
	});

	return ResSelectLuckMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*微信IOS获取认证相关参数
*/
//class net.message.misc.ResWxIOSAuthorizeDataMessage extends net.Message
var ResWxIOSAuthorizeDataMessage=(function(_super){
	function ResWxIOSAuthorizeDataMessage(){
		/**前端用的请求参数，json字符串 */
		this._params=null;
		ResWxIOSAuthorizeDataMessage.__super.call(this);
	}

	__class(ResWxIOSAuthorizeDataMessage,'net.message.misc.ResWxIOSAuthorizeDataMessage',_super);
	var __proto=ResWxIOSAuthorizeDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1531;
	}

	/**前端用的请求参数，json字符串 */
	/**前端用的请求参数，json字符串 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ResWxIOSAuthorizeDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买赤壁任务次数
*/
//class net.message.chibi.ResChibiBuyTodayMessage extends net.Message
var ResChibiBuyTodayMessage=(function(_super){
	function ResChibiBuyTodayMessage(){
		/**新的次数 */
		this._count=0;
		ResChibiBuyTodayMessage.__super.call(this);
	}

	__class(ResChibiBuyTodayMessage,'net.message.chibi.ResChibiBuyTodayMessage',_super);
	var __proto=ResChibiBuyTodayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 406;
	}

	/**新的次数 */
	/**新的次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResChibiBuyTodayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成赤壁任务
*/
//class net.message.chibi.ResChibiFinishTaskMessage extends net.Message
var ResChibiFinishTaskMessage=(function(_super){
	function ResChibiFinishTaskMessage(){
		/**1 获得必定奖励 2 获得完成奖励 */
		this._type=0;
		ResChibiFinishTaskMessage.__super.call(this);
		this._qid=[];
	}

	__class(ResChibiFinishTaskMessage,'net.message.chibi.ResChibiFinishTaskMessage',_super);
	var __proto=ResChibiFinishTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._qid.length;++i_am_tmp_i){
			this.writeInt(_buf,this._qid[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._qid=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._qid[i_am_tmp_i]=this.readInt(_buf);
		}
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 397;
	}

	/**任务ID 返回说明一切正常 */
	/**任务ID 返回说明一切正常 */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**1 获得必定奖励 2 获得完成奖励 */
	/**1 获得必定奖励 2 获得完成奖励 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResChibiFinishTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新全民boss副本信息
*/
//class net.message.dungeon.ResUpdateQuanMinBossMessage extends net.Message
var ResUpdateQuanMinBossMessage=(function(_super){
	function ResUpdateQuanMinBossMessage(){
		/**副本 */
		this._dungeon=null;
		ResUpdateQuanMinBossMessage.__super.call(this);
	}

	__class(ResUpdateQuanMinBossMessage,'net.message.dungeon.ResUpdateQuanMinBossMessage',_super);
	var __proto=ResUpdateQuanMinBossMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._dungeon);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeon=this.readBean(_buf,QuanMinBossDungeonBean);
	}

	__proto.getId=function(){
		return 214;
	}

	/**副本 */
	/**副本 */
	__getset(0,__proto,'dungeon',function(){
		return this._dungeon;
		},function(value){
		this._dungeon=value;
	});

	return ResUpdateQuanMinBossMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*超值补给活动
*/
//class net.message.activities.ResSuperSupplyActMessage extends net.Message
var ResSuperSupplyActMessage=(function(_super){
	function ResSuperSupplyActMessage(){
		/**是否购买高级资格 */
		this._isBest=false;
		ResSuperSupplyActMessage.__super.call(this);
		this._get=[];
		this._bestGet=[];
	}

	__class(ResSuperSupplyActMessage,'net.message.activities.ResSuperSupplyActMessage',_super);
	var __proto=ResSuperSupplyActMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isBest);
		this.writeInt(_buf,this._get.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._get.length;++i_am_tmp_i){
			this.writeInt(_buf,this._get[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._bestGet.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bestGet.length;++i_am_tmp_i){
			this.writeInt(_buf,this._bestGet[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isBest=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._get=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._get[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._bestGet=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bestGet[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1553;
	}

	/**当前已领取普通奖励的配置id */
	/**当前已领取普通奖励的配置id */
	__getset(0,__proto,'get',function(){
		return this._get;
		},function(value){
		this._get=value;
	});

	/**是否购买高级资格 */
	/**是否购买高级资格 */
	__getset(0,__proto,'isBest',function(){
		return this._isBest;
		},function(value){
		this._isBest=value;
	});

	/**当前已领取高级奖励的配置id */
	/**当前已领取高级奖励的配置id */
	__getset(0,__proto,'bestGet',function(){
		return this._bestGet;
		},function(value){
		this._bestGet=value;
	});

	return ResSuperSupplyActMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全服boss挑战次数
*/
//class net.message.quanfuboss.ReqQuanFuBossBuyTimeMessage extends net.Message
var ReqQuanFuBossBuyTimeMessage=(function(_super){
	function ReqQuanFuBossBuyTimeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**买多少次 */
		this._time=0;
		ReqQuanFuBossBuyTimeMessage.__super.call(this);
	}

	__class(ReqQuanFuBossBuyTimeMessage,'net.message.quanfuboss.ReqQuanFuBossBuyTimeMessage',_super);
	var __proto=ReqQuanFuBossBuyTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._time=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1104;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**买多少次 */
	/**买多少次 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ReqQuanFuBossBuyTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝参数
*/
//class net.message.textureHunt.ResHuntMsgMessage extends net.Message
var ResHuntMsgMessage=(function(_super){
	function ResHuntMsgMessage(){
		ResHuntMsgMessage.__super.call(this);
		this._luckCount=[];
		this._freeRecord=[];
		this._commonHuntCounts=[];
		this._huntCounts=[];
		this._luckyIndexs=[];
		this._myHuntCounts=[];
	}

	__class(ResHuntMsgMessage,'net.message.textureHunt.ResHuntMsgMessage',_super);
	var __proto=ResHuntMsgMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._luckCount.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._luckCount.length;++i_am_tmp_i){
			this.writeInt(_buf,this._luckCount[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._freeRecord.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._freeRecord.length;++i_am_tmp_i){
			this.writeInt(_buf,this._freeRecord[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._commonHuntCounts.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._commonHuntCounts.length;++i_am_tmp_i){
			this._commonHuntCounts[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._huntCounts.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._huntCounts.length;++i_am_tmp_i){
			this.writeInt(_buf,this._huntCounts[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._luckyIndexs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._luckyIndexs.length;++i_am_tmp_i){
			this.writeInt(_buf,this._luckyIndexs[i_am_tmp_i]);
		}
		this.writeInt(_buf,this._myHuntCounts.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._myHuntCounts.length;++i_am_tmp_i){
			this.writeInt(_buf,this._myHuntCounts[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._luckCount=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._luckCount[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._freeRecord=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._freeRecord[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._commonHuntCounts=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._commonHuntCounts[i_am_tmp_i]=this.readBeanInList(_buf,CommonHuntCount);
		}
		size52413035=this.readInt(_buf);
		this._huntCounts=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._huntCounts[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._luckyIndexs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._luckyIndexs[i_am_tmp_i]=this.readInt(_buf);
		}
		size52413035=this.readInt(_buf);
		this._myHuntCounts=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._myHuntCounts[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 695;
	}

	/**寻宝幸运值 */
	/**寻宝幸运值 */
	__getset(0,__proto,'luckCount',function(){
		return this._luckCount;
		},function(value){
		this._luckCount=value;
	});

	/**自己抽奖次数 */
	/**自己抽奖次数 */
	__getset(0,__proto,'myHuntCounts',function(){
		return this._myHuntCounts;
		},function(value){
		this._myHuntCounts=value;
	});

	/**寻宝的免费使用情况 */
	/**寻宝的免费使用情况 */
	__getset(0,__proto,'freeRecord',function(){
		return this._freeRecord;
		},function(value){
		this._freeRecord=value;
	});

	/**每日已抽奖次数 */
	/**每日已抽奖次数 */
	__getset(0,__proto,'commonHuntCounts',function(){
		return this._commonHuntCounts;
		},function(value){
		this._commonHuntCounts=value;
	});

	/**10连抽奖励是否使用 */
	/**10连抽奖励是否使用 */
	__getset(0,__proto,'huntCounts',function(){
		return this._huntCounts;
		},function(value){
		this._huntCounts=value;
	});

	/**当前祝福值奖励 */
	/**当前祝福值奖励 */
	__getset(0,__proto,'luckyIndexs',function(){
		return this._luckyIndexs;
		},function(value){
		this._luckyIndexs=value;
	});

	return ResHuntMsgMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取周奖励
*/
//class net.message.garrison.ResGarrisonTakeWeekRewardMessage extends net.Message
var ResGarrisonTakeWeekRewardMessage=(function(_super){
	function ResGarrisonTakeWeekRewardMessage(){
		ResGarrisonTakeWeekRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResGarrisonTakeWeekRewardMessage,'net.message.garrison.ResGarrisonTakeWeekRewardMessage',_super);
	var __proto=ResGarrisonTakeWeekRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 1071;
	}

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResGarrisonTakeWeekRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上楼对象
*/
//class net.message.nineHeavy.ResNineHeavyPlayerUpstairsMessage extends net.Message
var ResNineHeavyPlayerUpstairsMessage=(function(_super){
	function ResNineHeavyPlayerUpstairsMessage(){
		/**当前层数 */
		this._lv=0;
		ResNineHeavyPlayerUpstairsMessage.__super.call(this);
		this._other=[];
		this._monster=[];
	}

	__class(ResNineHeavyPlayerUpstairsMessage,'net.message.nineHeavy.ResNineHeavyPlayerUpstairsMessage',_super);
	var __proto=ResNineHeavyPlayerUpstairsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._other.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._other.length;++i_am_tmp_i){
			this._other[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._monster.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._monster.length;++i_am_tmp_i){
			this._monster[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._other=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._other[i_am_tmp_i]=this.readBeanInList(_buf,NineHeavyPlayerBean);
		}
		size52413035=this.readInt(_buf);
		this._monster=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._monster[i_am_tmp_i]=this.readBeanInList(_buf,NineHeavyMonsterBean);
		}
	}

	__proto.getId=function(){
		return 368;
	}

	/**当前层数 */
	/**当前层数 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前层的其他玩家 */
	/**当前层的其他玩家 */
	__getset(0,__proto,'other',function(){
		return this._other;
		},function(value){
		this._other=value;
	});

	/**当前层的怪物 */
	/**当前层的怪物 */
	__getset(0,__proto,'monster',function(){
		return this._monster;
		},function(value){
		this._monster=value;
	});

	return ResNineHeavyPlayerUpstairsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*加锁/解锁秘籍
*/
//class net.message.miji.ResLockMijiMessage extends net.Message
var ResLockMijiMessage=(function(_super){
	function ResLockMijiMessage(){
		/**英雄ID */
		this._heroID=0;
		/**格子索引 */
		this._gridIndex=0;
		/**当前格子是否上锁了 */
		this._locked=false;
		ResLockMijiMessage.__super.call(this);
	}

	__class(ResLockMijiMessage,'net.message.miji.ResLockMijiMessage',_super);
	var __proto=ResLockMijiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._gridIndex);
		this.writeBoolean(_buf,this._locked);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._gridIndex=this.readInt(_buf);
		this._locked=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 84;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**格子索引 */
	/**格子索引 */
	__getset(0,__proto,'gridIndex',function(){
		return this._gridIndex;
		},function(value){
		this._gridIndex=value;
	});

	/**当前格子是否上锁了 */
	/**当前格子是否上锁了 */
	__getset(0,__proto,'locked',function(){
		return this._locked;
		},function(value){
		this._locked=value;
	});

	return ResLockMijiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备升品
*/
//class net.message.equip.ResEquipPromoteMessage extends net.Message
var ResEquipPromoteMessage=(function(_super){
	function ResEquipPromoteMessage(){
		/**获得的物品 */
		this._level=0;
		ResEquipPromoteMessage.__super.call(this);
	}

	__class(ResEquipPromoteMessage,'net.message.equip.ResEquipPromoteMessage',_super);
	var __proto=ResEquipPromoteMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._level=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1482;
	}

	/**获得的物品 */
	/**获得的物品 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	return ResEquipPromoteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统
*/
//class net.message.user.ResTakeActiveGameSystemRewardMessage extends net.Message
var ResTakeActiveGameSystemRewardMessage=(function(_super){
	function ResTakeActiveGameSystemRewardMessage(){
		/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
		this._system=0;
		ResTakeActiveGameSystemRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResTakeActiveGameSystemRewardMessage,'net.message.user.ResTakeActiveGameSystemRewardMessage',_super);
	var __proto=ResTakeActiveGameSystemRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._system);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._system=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 880;
	}

	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	/**系统[1:GS][2:GS][3:GS][4:GS][5:GS][6:GS][7:GS][8:GS][9:GS][10:GS][11:GS][12:GS][13:GS][14:GS][15:GS][16:GS][17:GS][18:GS][19:GS][20:GS][21:GS][22:GS][23:GS][24:GS][25:GS][26:GS][27:GS][28:GS][29:GS][30:GS][31:GS][32:GS][33:GS][34:GS][35:GS][36:GS][37:GS][38:GS][39:GS][40:GS][41:GS][42:GS][43:GS][44:GS][45:GS][46:GS][47:GS][48:GS][49:GS][50:GS][51:GS][52:GS][53:GS][54:GS][55:GS][56:GS][57:GS][58:GS][59:GS][60:GS][61:GS][62:GS][63:GS][64:GS][65:GS][66:GS][67:GS][68:GS][69:GS][70:GS][71:GS][72:GS][73:GS][74:GS][75:GS][76:GS][77:GS][78:GS][79:GS][80:GS][81:GS][82:GS][83:GS][84:GS][85:GS][86:GS][87:GS][88:GS][89:GS][90:GS][91:GS][92:GS][93:GS][94:GS][95:GS][96:GS][97:GS][98:GS][99:GS][100:GS][101:GS][102:GS][103:GS][104:GS][105:GS][106:GS][107:GS][108:GS][109:GS][110:GS][111:GS][112:GS][113:GS][114:GS][115:GS][116:GS][117:GS][118:GS][119:GS][120:GS][121:GS][122:GS][123:GS][124:GS][125:GS][126:GS][127:GS][128:GS][129:GS][130:GS][131:GS][132:GS][133:GS][134:GS][135:GS][136:GS][137:GS][138:GS][139:GS][140:GS][141:GS][142:GS][143:GS][144:GS][145:GS][146:GS][147:GS][148:GS][149:GS][150:GS][151:GS][152:GS][153:GS][154:GS][155:GS][156:GS][157:GS][158:GS][159:GS][160:GS][161:GS][162:GS][163:GS][164:GS][165:GS][166:GS][167:GS][168:GS][169:GS][170:GS][171:GS][172:GS][173:GS][174:GS][175:GS][176:GS][177:GS][178:GS][179:GS][180:GS][181:GS][182:GS][183:GS][184:GS][185:GS][186:GS][187:GS][188:GS][189:GS][190:GS][191:GS][192:GS][193:GS][194:GS][195:GS][196:GS][197:GS][198:GS][199:GS][200:GS][201:GS][202:GS][203:GS][204:GS][205:GS][206:GS][207:GS][208:GS][209:GS][210:GS][211:GS][212:GS][213:GS][214:GS][215:GS][216:GS][217:GS][218:GS][219:GS][220:GS][221:GS][222:GS][223:GS][224:GS][225:GS][226:GS][227:GS][228:GS][229:GS][230:GS][231:GS][232:GS][233:GS][234:GS][235:GS][236:GS][237:GS][238:GS][239:GS][240:GS][241:GS][242:GS][243:GS][244:GS][245:GS][246:GS][247:GS][248:GS][249:GS][250:GS][251:GS][252:GS][253:GS][254:GS][255:GS][256:GS][257:GS][258:GS][259:GS][260:GS][261:GS][262:GS][263:GS][264:GS][265:GS][266:GS][267:GS][268:GS][269:GS][270:GS][271:GS][272:GS][273:GS][274:GS][275:GS][276:GS][277:GS][278:GS][279:GS][280:GS][281:GS][282:GS][283:GS][284:GS][285:GS][286:GS] */
	__getset(0,__proto,'system',function(){
		return this._system;
		},function(value){
		this._system=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResTakeActiveGameSystemRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*版本验证
*/
//class net.message.login.ResVersionCheckMessage extends net.Message
var ResVersionCheckMessage=(function(_super){
	function ResVersionCheckMessage(){
		/**如果存在,则用该配置 */
		this._config=null;
		/**如果config为空,则根据该配置数据版本号去获取配置 */
		this._configDataVersion=0;
		ResVersionCheckMessage.__super.call(this);
	}

	__class(ResVersionCheckMessage,'net.message.login.ResVersionCheckMessage',_super);
	var __proto=ResVersionCheckMessage.prototype;
	__proto.write=function(_buf){
		this.writeBytes(_buf,this._config);
		this.writeInt(_buf,this._configDataVersion);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._config=this.readBytes(_buf);
		this._configDataVersion=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 6;
	}

	/**如果存在,则用该配置 */
	/**如果存在,则用该配置 */
	__getset(0,__proto,'config',function(){
		return this._config;
		},function(value){
		this._config=value;
	});

	/**如果config为空,则根据该配置数据版本号去获取配置 */
	/**如果config为空,则根据该配置数据版本号去获取配置 */
	__getset(0,__proto,'configDataVersion',function(){
		return this._configDataVersion;
		},function(value){
		this._configDataVersion=value;
	});

	return ResVersionCheckMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*邀请加入军团错误
*/
//class net.message.guild.ResGuildInviteErrorMessage extends net.Message
var ResGuildInviteErrorMessage=(function(_super){
	function ResGuildInviteErrorMessage(){
		/**1:你有军团;2:军团满;3:不在军团中;4:没有权限;5:在其他军团中;6:重复邀请;7:邀请列表满;8:CD中;*/
		this._error=0;
		ResGuildInviteErrorMessage.__super.call(this);
	}

	__class(ResGuildInviteErrorMessage,'net.message.guild.ResGuildInviteErrorMessage',_super);
	var __proto=ResGuildInviteErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1239;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildInviteErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*积分变更
*/
//class net.message.nineHeavy.ResNineHeavyUpdateOhterIntegralMessage extends net.Message
var ResNineHeavyUpdateOhterIntegralMessage=(function(_super){
	function ResNineHeavyUpdateOhterIntegralMessage(){
		ResNineHeavyUpdateOhterIntegralMessage.__super.call(this);
		this._other=[];
	}

	__class(ResNineHeavyUpdateOhterIntegralMessage,'net.message.nineHeavy.ResNineHeavyUpdateOhterIntegralMessage',_super);
	var __proto=ResNineHeavyUpdateOhterIntegralMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._other.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._other.length;++i_am_tmp_i){
			this._other[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._other=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._other[i_am_tmp_i]=this.readBeanInList(_buf,NineHeavyPlayerBean);
		}
	}

	__proto.getId=function(){
		return 1435;
	}

	/**当前层的其他玩家 */
	/**当前层的其他玩家 */
	__getset(0,__proto,'other',function(){
		return this._other;
		},function(value){
		this._other=value;
	});

	return ResNineHeavyUpdateOhterIntegralMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新战纹格子大小
*/
//class net.message.zhanwen.ResUpdateZhanwenLengthMessage extends net.Message
var ResUpdateZhanwenLengthMessage=(function(_super){
	function ResUpdateZhanwenLengthMessage(){
		/**格子大小 */
		this._length=0;
		ResUpdateZhanwenLengthMessage.__super.call(this);
	}

	__class(ResUpdateZhanwenLengthMessage,'net.message.zhanwen.ResUpdateZhanwenLengthMessage',_super);
	var __proto=ResUpdateZhanwenLengthMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._length);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._length=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 100;
	}

	/**格子大小 */
	/**格子大小 */
	__getset(0,__proto,'length',function(){
		return this._length;
		},function(value){
		this._length=value;
	});

	return ResUpdateZhanwenLengthMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物激活
*/
//class net.message.treasure.ReqTreasureActiveMessage extends net.Message
var ReqTreasureActiveMessage=(function(_super){
	function ReqTreasureActiveMessage(){
		/**宝物ID */
		this._treasureId=0;
		ReqTreasureActiveMessage.__super.call(this);
	}

	__class(ReqTreasureActiveMessage,'net.message.treasure.ReqTreasureActiveMessage',_super);
	var __proto=ReqTreasureActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._treasureId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasureId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1622;
	}

	/**宝物ID */
	/**宝物ID */
	__getset(0,__proto,'treasureId',function(){
		return this._treasureId;
		},function(value){
		this._treasureId=value;
	});

	return ReqTreasureActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*九重天活动结束
*/
//class net.message.nineHeavy.ResNineHeavyGameOverMessage extends net.Message
var ResNineHeavyGameOverMessage=(function(_super){
	function ResNineHeavyGameOverMessage(){
		/**第一名的性别 */
		this._gender=0;
		/**第一名的职业 */
		this._profession=0;
		/**第一名的坐骑 */
		this._horse=0;
		/**第一名的翅膀 */
		this._wing=0;
		/**第一名的翅膀 */
		this._wing_skin=0;
		/**第一名的武器 */
		this._weapon=0;
		/**第一名的翅膀 */
		this._weapon_skin=0;
		/**第一名的精灵 */
		this._elf=0;
		/**第一名的精灵时装 */
		this._elf_skin=0;
		/**第一名的称号 */
		this._title=0;
		/**第一名的VIP */
		this._vip=0;
		/**第一名的名字 */
		this._name=null;
		/**第一名的皮肤 */
		this._skin=0;
		/**你的排名 */
		this._rank=0;
		/**服务器序号 */
		this._sno=0;
		ResNineHeavyGameOverMessage.__super.call(this);
		this._itemBeans=[];
	}

	__class(ResNineHeavyGameOverMessage,'net.message.nineHeavy.ResNineHeavyGameOverMessage',_super);
	var __proto=ResNineHeavyGameOverMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._gender);
		this.writeInt(_buf,this._profession);
		this.writeInt(_buf,this._horse);
		this.writeInt(_buf,this._wing);
		this.writeInt(_buf,this._wing_skin);
		this.writeInt(_buf,this._weapon);
		this.writeInt(_buf,this._weapon_skin);
		this.writeInt(_buf,this._elf);
		this.writeInt(_buf,this._elf_skin);
		this.writeInt(_buf,this._title);
		this.writeInt(_buf,this._vip);
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._skin);
		this.writeInt(_buf,this._rank);
		this.writeInt(_buf,this._itemBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._itemBeans.length;++i_am_tmp_i){
			this._itemBeans[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._sno);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gender=this.readInt(_buf);
		this._profession=this.readInt(_buf);
		this._horse=this.readInt(_buf);
		this._wing=this.readInt(_buf);
		this._wing_skin=this.readInt(_buf);
		this._weapon=this.readInt(_buf);
		this._weapon_skin=this.readInt(_buf);
		this._elf=this.readInt(_buf);
		this._elf_skin=this.readInt(_buf);
		this._title=this.readInt(_buf);
		this._vip=this.readInt(_buf);
		this._name=this.readString(_buf);
		this._skin=this.readInt(_buf);
		this._rank=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._itemBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._itemBeans[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
		this._sno=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 456;
	}

	/**第一名的性别 */
	/**第一名的性别 */
	__getset(0,__proto,'gender',function(){
		return this._gender;
		},function(value){
		this._gender=value;
	});

	/**第一名的翅膀 */
	/**第一名的翅膀 */
	__getset(0,__proto,'weapon_skin',function(){
		return this._weapon_skin;
		},function(value){
		this._weapon_skin=value;
	});

	/**第一名的职业 */
	/**第一名的职业 */
	__getset(0,__proto,'profession',function(){
		return this._profession;
		},function(value){
		this._profession=value;
	});

	/**第一名的名字 */
	/**第一名的名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**第一名的坐骑 */
	/**第一名的坐骑 */
	__getset(0,__proto,'horse',function(){
		return this._horse;
		},function(value){
		this._horse=value;
	});

	/**第一名的精灵 */
	/**第一名的精灵 */
	__getset(0,__proto,'elf',function(){
		return this._elf;
		},function(value){
		this._elf=value;
	});

	/**第一名的翅膀 */
	/**第一名的翅膀 */
	__getset(0,__proto,'wing_skin',function(){
		return this._wing_skin;
		},function(value){
		this._wing_skin=value;
	});

	/**第一名的精灵时装 */
	/**第一名的精灵时装 */
	__getset(0,__proto,'elf_skin',function(){
		return this._elf_skin;
		},function(value){
		this._elf_skin=value;
	});

	/**第一名的翅膀 */
	/**第一名的翅膀 */
	__getset(0,__proto,'wing',function(){
		return this._wing;
		},function(value){
		this._wing=value;
	});

	/**第一名的武器 */
	/**第一名的武器 */
	__getset(0,__proto,'weapon',function(){
		return this._weapon;
		},function(value){
		this._weapon=value;
	});

	/**第一名的称号 */
	/**第一名的称号 */
	__getset(0,__proto,'title',function(){
		return this._title;
		},function(value){
		this._title=value;
	});

	/**第一名的VIP */
	/**第一名的VIP */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	/**第一名的皮肤 */
	/**第一名的皮肤 */
	__getset(0,__proto,'skin',function(){
		return this._skin;
		},function(value){
		this._skin=value;
	});

	/**你的排名 */
	/**你的排名 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**你的奖励 */
	/**你的奖励 */
	__getset(0,__proto,'itemBeans',function(){
		return this._itemBeans;
		},function(value){
		this._itemBeans=value;
	});

	/**服务器序号 */
	/**服务器序号 */
	__getset(0,__proto,'sno',function(){
		return this._sno;
		},function(value){
		this._sno=value;
	});

	return ResNineHeavyGameOverMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级宠物技能错误
*/
//class net.message.pet.ResUpgradePetSkillErrorMessage extends net.Message
var ResUpgradePetSkillErrorMessage=(function(_super){
	function ResUpgradePetSkillErrorMessage(){
		/**1:没有宠物;2:最大等级;3:消耗不足;4:没有这个技能;5:配置错误;*/
		this._error=0;
		ResUpgradePetSkillErrorMessage.__super.call(this);
	}

	__class(ResUpgradePetSkillErrorMessage,'net.message.pet.ResUpgradePetSkillErrorMessage',_super);
	var __proto=ResUpgradePetSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1191;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradePetSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励(全民BOSS)错误
*/
//class net.message.dungeon.ResReceiveQuanMinBossDungeonPrizeErrorMessage extends net.Message
var ResReceiveQuanMinBossDungeonPrizeErrorMessage=(function(_super){
	function ResReceiveQuanMinBossDungeonPrizeErrorMessage(){
		/**1:条件不足;2:背包已满;3:不存在的配置;4:参数错误;5:次数不足;6:元宝不足;7:未死亡;8:已死亡;9:血量对不上;*/
		this._error=0;
		ResReceiveQuanMinBossDungeonPrizeErrorMessage.__super.call(this);
	}

	__class(ResReceiveQuanMinBossDungeonPrizeErrorMessage,'net.message.dungeon.ResReceiveQuanMinBossDungeonPrizeErrorMessage',_super);
	var __proto=ResReceiveQuanMinBossDungeonPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 218;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveQuanMinBossDungeonPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取结婚爬塔信息
*/
//class net.message.pata.ReqGetMarryPataInfoMessage extends net.Message
var ReqGetMarryPataInfoMessage=(function(_super){
	function ReqGetMarryPataInfoMessage(){
		ReqGetMarryPataInfoMessage.__super.call(this);;
	}

	__class(ReqGetMarryPataInfoMessage,'net.message.pata.ReqGetMarryPataInfoMessage',_super);
	var __proto=ReqGetMarryPataInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1500;
	}

	return ReqGetMarryPataInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离婚错误
*/
//class net.message.marriage.ResMarriageRdivorceErrorMessage extends net.Message
var ResMarriageRdivorceErrorMessage=(function(_super){
	function ResMarriageRdivorceErrorMessage(){
		/**1:没有结婚;*/
		this._error=0;
		ResMarriageRdivorceErrorMessage.__super.call(this);
	}

	__class(ResMarriageRdivorceErrorMessage,'net.message.marriage.ResMarriageRdivorceErrorMessage',_super);
	var __proto=ResMarriageRdivorceErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 568;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageRdivorceErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到
*/
//class net.message.legion.ReqLegionSignMessageMessage extends net.Message
var ReqLegionSignMessageMessage=(function(_super){
	function ReqLegionSignMessageMessage(){
		/**签到类型 */
		this._type=0;
		ReqLegionSignMessageMessage.__super.call(this);
	}

	__class(ReqLegionSignMessageMessage,'net.message.legion.ReqLegionSignMessageMessage',_super);
	var __proto=ReqLegionSignMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 641;
	}

	/**签到类型 */
	/**签到类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqLegionSignMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*某个玩家离开广场错误
*/
//class net.message.legion.ResLegionOutSquareMessageErrorMessage extends net.Message
var ResLegionOutSquareMessageErrorMessage=(function(_super){
	function ResLegionOutSquareMessageErrorMessage(){
		/**1:你木有军团;2:不在广场中;*/
		this._error=0;
		ResLegionOutSquareMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionOutSquareMessageErrorMessage,'net.message.legion.ResLegionOutSquareMessageErrorMessage',_super);
	var __proto=ResLegionOutSquareMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 655;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionOutSquareMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新外形
*/
//class net.message.appearance.ResGlobalUpdateAppearanceMessage extends net.Message
var ResGlobalUpdateAppearanceMessage=(function(_super){
	function ResGlobalUpdateAppearanceMessage(){
		/**角色ID */
		this._uid=null;
		/**外形 */
		this._bean=null;
		ResGlobalUpdateAppearanceMessage.__super.call(this);
	}

	__class(ResGlobalUpdateAppearanceMessage,'net.message.appearance.ResGlobalUpdateAppearanceMessage',_super);
	var __proto=ResGlobalUpdateAppearanceMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._bean=this.readBean(_buf,AppearanceBean);
	}

	__proto.getId=function(){
		return 1186;
	}

	/**角色ID */
	/**角色ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**外形 */
	/**外形 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResGlobalUpdateAppearanceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级通用进阶技能
*/
//class net.message.upgrade.ReqUpgradeCommonSkillLevelMessage extends net.Message
var ReqUpgradeCommonSkillLevelMessage=(function(_super){
	function ReqUpgradeCommonSkillLevelMessage(){
		/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._upgradeType=0;
		/**技能id */
		this._skillID=0;
		ReqUpgradeCommonSkillLevelMessage.__super.call(this);
	}

	__class(ReqUpgradeCommonSkillLevelMessage,'net.message.upgrade.ReqUpgradeCommonSkillLevelMessage',_super);
	var __proto=ReqUpgradeCommonSkillLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._upgradeType);
		this.writeInt(_buf,this._skillID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._upgradeType=this.readInt(_buf);
		this._skillID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1361;
	}

	/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'upgradeType',function(){
		return this._upgradeType;
		},function(value){
		this._upgradeType=value;
	});

	/**技能id */
	/**技能id */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	return ReqUpgradeCommonSkillLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取押运奖励
*/
//class net.message.escort.ResReceiveEscortRewardMessage extends net.Message
var ResReceiveEscortRewardMessage=(function(_super){
	function ResReceiveEscortRewardMessage(){
		/**领取成功 返回新的押镖等级 */
		this._lv=0;
		ResReceiveEscortRewardMessage.__super.call(this);
	}

	__class(ResReceiveEscortRewardMessage,'net.message.escort.ResReceiveEscortRewardMessage',_super);
	var __proto=ResReceiveEscortRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 340;
	}

	/**领取成功 返回新的押镖等级 */
	/**领取成功 返回新的押镖等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResReceiveEscortRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出军团
*/
//class net.message.guild.ReqGuildExitMessage extends net.Message
var ReqGuildExitMessage=(function(_super){
	function ReqGuildExitMessage(){
		ReqGuildExitMessage.__super.call(this);;
	}

	__class(ReqGuildExitMessage,'net.message.guild.ReqGuildExitMessage',_super);
	var __proto=ReqGuildExitMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1230;
	}

	return ReqGuildExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.adviser.ResAdviserActiveMessage extends net.Message
var ResAdviserActiveMessage=(function(_super){
	function ResAdviserActiveMessage(){
		/**对象 */
		this._adviserBean=null;
		ResAdviserActiveMessage.__super.call(this);
	}

	__class(ResAdviserActiveMessage,'net.message.adviser.ResAdviserActiveMessage',_super);
	var __proto=ResAdviserActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._adviserBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._adviserBean=this.readBean(_buf,AdviserBean);
	}

	__proto.getId=function(){
		return 799;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'adviserBean',function(){
		return this._adviserBean;
		},function(value){
		this._adviserBean=value;
	});

	return ResAdviserActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取勇闯天庭奖励
*/
//class net.message.pata.ReqTakeYCTTPrizeMessage extends net.Message
var ReqTakeYCTTPrizeMessage=(function(_super){
	function ReqTakeYCTTPrizeMessage(){
		/**层 */
		this._layer=0;
		ReqTakeYCTTPrizeMessage.__super.call(this);
	}

	__class(ReqTakeYCTTPrizeMessage,'net.message.pata.ReqTakeYCTTPrizeMessage',_super);
	var __proto=ReqTakeYCTTPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 251;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	return ReqTakeYCTTPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场排名信息
*/
//class net.message.arena.ResArenaGetRankInfoMessage extends net.Message
var ResArenaGetRankInfoMessage=(function(_super){
	function ResArenaGetRankInfoMessage(){
		/**我的排名 */
		this._myRank=0;
		ResArenaGetRankInfoMessage.__super.call(this);
		this._users=[];
	}

	__class(ResArenaGetRankInfoMessage,'net.message.arena.ResArenaGetRankInfoMessage',_super);
	var __proto=ResArenaGetRankInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._myRank);
		this.writeInt(_buf,this._users.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._users.length;++i_am_tmp_i){
			this._users[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._myRank=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._users=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._users[i_am_tmp_i]=this.readBeanInList(_buf,RankUserBean);
		}
	}

	__proto.getId=function(){
		return 284;
	}

	/**我的排名 */
	/**我的排名 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**玩家排名列表 */
	/**玩家排名列表 */
	__getset(0,__proto,'users',function(){
		return this._users;
		},function(value){
		this._users=value;
	});

	return ResArenaGetRankInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新官位活跃度
*/
//class net.message.official.ResUpgradeOfficialActivityMessage extends net.Message
var ResUpgradeOfficialActivityMessage=(function(_super){
	function ResUpgradeOfficialActivityMessage(){
		/**当天 */
		this._today=0;
		/**总共 */
		this._total=0;
		ResUpgradeOfficialActivityMessage.__super.call(this);
	}

	__class(ResUpgradeOfficialActivityMessage,'net.message.official.ResUpgradeOfficialActivityMessage',_super);
	var __proto=ResUpgradeOfficialActivityMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._today);
		this.writeInt(_buf,this._total);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._today=this.readInt(_buf);
		this._total=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 882;
	}

	/**当天 */
	/**当天 */
	__getset(0,__proto,'today',function(){
		return this._today;
		},function(value){
		this._today=value;
	});

	/**总共 */
	/**总共 */
	__getset(0,__proto,'total',function(){
		return this._total;
		},function(value){
		this._total=value;
	});

	return ResUpgradeOfficialActivityMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击玩家错误
*/
//class net.message.worldboss.ResWorldBossAttackPlayerErrorMessage extends net.Message
var ResWorldBossAttackPlayerErrorMessage=(function(_super){
	function ResWorldBossAttackPlayerErrorMessage(){
		/**1:不支持的战斗模式;2:你已经死了 或者离开副本;3:你已经死了 或者离开副本;*/
		this._error=0;
		ResWorldBossAttackPlayerErrorMessage.__super.call(this);
	}

	__class(ResWorldBossAttackPlayerErrorMessage,'net.message.worldboss.ResWorldBossAttackPlayerErrorMessage',_super);
	var __proto=ResWorldBossAttackPlayerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1172;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossAttackPlayerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取降妖除魔信息
*/
//class net.message.pata.ReqGetXYCMInfoMessage extends net.Message
var ReqGetXYCMInfoMessage=(function(_super){
	function ReqGetXYCMInfoMessage(){
		ReqGetXYCMInfoMessage.__super.call(this);;
	}

	__class(ReqGetXYCMInfoMessage,'net.message.pata.ReqGetXYCMInfoMessage',_super);
	var __proto=ReqGetXYCMInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 236;
	}

	return ReqGetXYCMInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始副本
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomStartFightMessage extends net.Message
var ReqTeamDuplicateRoomStartFightMessage=(function(_super){
	function ReqTeamDuplicateRoomStartFightMessage(){
		ReqTeamDuplicateRoomStartFightMessage.__super.call(this);;
	}

	__class(ReqTeamDuplicateRoomStartFightMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomStartFightMessage',_super);
	var __proto=ReqTeamDuplicateRoomStartFightMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 429;
	}

	return ReqTeamDuplicateRoomStartFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建队伍
*/
//class net.message.team.ResTeamCreateMessage extends net.Message
var ResTeamCreateMessage=(function(_super){
	function ResTeamCreateMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**队伍信息 */
		this._team=null;
		ResTeamCreateMessage.__super.call(this);
	}

	__class(ResTeamCreateMessage,'net.message.team.ResTeamCreateMessage',_super);
	var __proto=ResTeamCreateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._team);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._team=this.readBean(_buf,TeamBean);
	}

	__proto.getId=function(){
		return 1264;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**队伍信息 */
	/**队伍信息 */
	__getset(0,__proto,'team',function(){
		return this._team;
		},function(value){
		this._team=value;
	});

	return ResTeamCreateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*点击全民BOSS(查看排名/击杀者)错误
*/
//class net.message.dungeon.ResClickQuanMinBossDungeonErrorMessage extends net.Message
var ResClickQuanMinBossDungeonErrorMessage=(function(_super){
	function ResClickQuanMinBossDungeonErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResClickQuanMinBossDungeonErrorMessage.__super.call(this);
	}

	__class(ResClickQuanMinBossDungeonErrorMessage,'net.message.dungeon.ResClickQuanMinBossDungeonErrorMessage',_super);
	var __proto=ResClickQuanMinBossDungeonErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 224;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResClickQuanMinBossDungeonErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童装备命格
*/
//class net.message.soulboy.ReqSoulBoyDestinyMessage extends net.Message
var ReqSoulBoyDestinyMessage=(function(_super){
	function ReqSoulBoyDestinyMessage(){
		/**命格下标 */
		this._index=0;
		/**1升级 2 替换 */
		this._type=0;
		/**道具ID(1的情况下 这里无值)*/
		this._itemId=0;
		/**背包里的道具下标(1的情况下 这里无值)*/
		this._packet_index=0;
		ReqSoulBoyDestinyMessage.__super.call(this);
	}

	__class(ReqSoulBoyDestinyMessage,'net.message.soulboy.ReqSoulBoyDestinyMessage',_super);
	var __proto=ReqSoulBoyDestinyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._itemId);
		this.writeInt(_buf,this._packet_index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._itemId=this.readInt(_buf);
		this._packet_index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 460;
	}

	/**道具ID(1的情况下 这里无值)*/
	/**道具ID(1的情况下 这里无值)*/
	__getset(0,__proto,'itemId',function(){
		return this._itemId;
		},function(value){
		this._itemId=value;
	});

	/**命格下标 */
	/**命格下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**1升级 2 替换 */
	/**1升级 2 替换 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**背包里的道具下标(1的情况下 这里无值)*/
	/**背包里的道具下标(1的情况下 这里无值)*/
	__getset(0,__proto,'packet_index',function(){
		return this._packet_index;
		},function(value){
		this._packet_index=value;
	});

	return ReqSoulBoyDestinyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取勇闯天庭信息错误
*/
//class net.message.pata.ResGetYCTTInfoErrorMessage extends net.Message
var ResGetYCTTInfoErrorMessage=(function(_super){
	function ResGetYCTTInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetYCTTInfoErrorMessage.__super.call(this);
	}

	__class(ResGetYCTTInfoErrorMessage,'net.message.pata.ResGetYCTTInfoErrorMessage',_super);
	var __proto=ResGetYCTTInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 241;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetYCTTInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*锻造升级
*/
//class net.message.duanzao.ResDuanZaoUpgradeMessage extends net.Message
var ResDuanZaoUpgradeMessage=(function(_super){
	function ResDuanZaoUpgradeMessage(){
		/**英雄 */
		this._heroID=0;
		/**锻造信息 */
		this._bean=null;
		ResDuanZaoUpgradeMessage.__super.call(this);
	}

	__class(ResDuanZaoUpgradeMessage,'net.message.duanzao.ResDuanZaoUpgradeMessage',_super);
	var __proto=ResDuanZaoUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._bean=this.readBean(_buf,DuanZaoBean);
	}

	__proto.getId=function(){
		return 196;
	}

	/**英雄 */
	/**英雄 */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**锻造信息 */
	/**锻造信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResDuanZaoUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取科举的排行榜
*/
//class net.message.examination.ReqKejuExaminationRankMessage extends net.Message
var ReqKejuExaminationRankMessage=(function(_super){
	function ReqKejuExaminationRankMessage(){
		ReqKejuExaminationRankMessage.__super.call(this);;
	}

	__class(ReqKejuExaminationRankMessage,'net.message.examination.ReqKejuExaminationRankMessage',_super);
	var __proto=ReqKejuExaminationRankMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 787;
	}

	return ReqKejuExaminationRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取藏宝图信息错误
*/
//class net.message.pata.ResGetCBTInfoErrorMessage extends net.Message
var ResGetCBTInfoErrorMessage=(function(_super){
	function ResGetCBTInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetCBTInfoErrorMessage.__super.call(this);
	}

	__class(ResGetCBTInfoErrorMessage,'net.message.pata.ResGetCBTInfoErrorMessage',_super);
	var __proto=ResGetCBTInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 232;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetCBTInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买冷却
*/
//class net.message.emptycity.ReqEmptyCityPayColdMessage extends net.Message
var ReqEmptyCityPayColdMessage=(function(_super){
	function ReqEmptyCityPayColdMessage(){
		ReqEmptyCityPayColdMessage.__super.call(this);;
	}

	__class(ReqEmptyCityPayColdMessage,'net.message.emptycity.ReqEmptyCityPayColdMessage',_super);
	var __proto=ReqEmptyCityPayColdMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1098;
	}

	return ReqEmptyCityPayColdMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍添加成员
*/
//class net.message.team.ResTeamMemberAddMessage extends net.Message
var ResTeamMemberAddMessage=(function(_super){
	function ResTeamMemberAddMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._teamType=0;
		/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
		this._type=0;
		/**成员信息 */
		this._member=null;
		ResTeamMemberAddMessage.__super.call(this);
	}

	__class(ResTeamMemberAddMessage,'net.message.team.ResTeamMemberAddMessage',_super);
	var __proto=ResTeamMemberAddMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._teamType);
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._member);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._teamType=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._member=this.readBean(_buf,TeamMemberBean);
	}

	__proto.getId=function(){
		return 1276;
	}

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'teamType',function(){
		return this._teamType;
		},function(value){
		this._teamType=value;
	});

	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**成员信息 */
	/**成员信息 */
	__getset(0,__proto,'member',function(){
		return this._member;
		},function(value){
		this._member=value;
	});

	return ResTeamMemberAddMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征挑战
*/
//class net.message.yuanzheng.ReqYuanZhengChallengeMessage extends net.Message
var ReqYuanZhengChallengeMessage=(function(_super){
	function ReqYuanZhengChallengeMessage(){
		ReqYuanZhengChallengeMessage.__super.call(this);;
	}

	__class(ReqYuanZhengChallengeMessage,'net.message.yuanzheng.ReqYuanZhengChallengeMessage',_super);
	var __proto=ReqYuanZhengChallengeMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 289;
	}

	return ReqYuanZhengChallengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体宝石升级
*/
//class net.message.fit.ResFitGemUpgradeMessage extends net.Message
var ResFitGemUpgradeMessage=(function(_super){
	function ResFitGemUpgradeMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
		this._equipType=0;
		/**宝石信息 */
		this._fitGemBean=null;
		ResFitGemUpgradeMessage.__super.call(this);
	}

	__class(ResFitGemUpgradeMessage,'net.message.fit.ResFitGemUpgradeMessage',_super);
	var __proto=ResFitGemUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._equipType);
		this.writeBean(_buf,this._fitGemBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._equipType=this.readInt(_buf);
		this._fitGemBean=this.readBean(_buf,FitGemBean);
	}

	__proto.getId=function(){
		return 1417;
	}

	/**宝石信息 */
	/**宝石信息 */
	__getset(0,__proto,'fitGemBean',function(){
		return this._fitGemBean;
		},function(value){
		this._fitGemBean=value;
	});

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	/**合体装备类型[1:][2:][3:][4:][5:][6:][7:][8:] */
	__getset(0,__proto,'equipType',function(){
		return this._equipType;
		},function(value){
		this._equipType=value;
	});

	return ResFitGemUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击玩家
*/
//class net.message.worldboss.ResWorldBossAttackPlayerMessage extends net.Message
var ResWorldBossAttackPlayerMessage=(function(_super){
	function ResWorldBossAttackPlayerMessage(){
		/**发起攻击者的ID */
		this._data=null;
		ResWorldBossAttackPlayerMessage.__super.call(this);
	}

	__class(ResWorldBossAttackPlayerMessage,'net.message.worldboss.ResWorldBossAttackPlayerMessage',_super);
	var __proto=ResWorldBossAttackPlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1171;
	}

	/**发起攻击者的ID */
	/**发起攻击者的ID */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResWorldBossAttackPlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知更新亲密度
*/
//class net.message.marriage.ResMarriageUpdateIntimateMessage extends net.Message
var ResMarriageUpdateIntimateMessage=(function(_super){
	function ResMarriageUpdateIntimateMessage(){
		/***/
		this._count=null;
		ResMarriageUpdateIntimateMessage.__super.call(this);
	}

	__class(ResMarriageUpdateIntimateMessage,'net.message.marriage.ResMarriageUpdateIntimateMessage',_super);
	var __proto=ResMarriageUpdateIntimateMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 690;
	}

	/***/
	/***/
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResMarriageUpdateIntimateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取军团广场任务奖励
*/
//class net.message.task.ResTaskGuildSquareTakePrizeMessage extends net.Message
var ResTaskGuildSquareTakePrizeMessage=(function(_super){
	function ResTaskGuildSquareTakePrizeMessage(){
		/**任务ID(需要删除该任务)*/
		this._taskID=0;
		ResTaskGuildSquareTakePrizeMessage.__super.call(this);
	}

	__class(ResTaskGuildSquareTakePrizeMessage,'net.message.task.ResTaskGuildSquareTakePrizeMessage',_super);
	var __proto=ResTaskGuildSquareTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1300;
	}

	/**任务ID(需要删除该任务)*/
	/**任务ID(需要删除该任务)*/
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ResTaskGuildSquareTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*同步群英会状态
*/
//class net.message.qunyinghui.ResQunYingHuiNotifyMessage extends net.Message
var ResQunYingHuiNotifyMessage=(function(_super){
	function ResQunYingHuiNotifyMessage(){
		/**群英会状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
		this._currentState=0;
		/**根节点 */
		this._root=null;
		/**上届冠军 */
		this._preKing=null;
		ResQunYingHuiNotifyMessage.__super.call(this);
		this._all=[];
	}

	__class(ResQunYingHuiNotifyMessage,'net.message.qunyinghui.ResQunYingHuiNotifyMessage',_super);
	var __proto=ResQunYingHuiNotifyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._currentState);
		this.writeBean(_buf,this._root);
		this.writeInt(_buf,this._all.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._all.length;++i_am_tmp_i){
			this._all[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._preKing);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._currentState=this.readInt(_buf);
		this._root=this.readBean(_buf,QunYingHuiFighterBean);
		size52413035=this.readInt(_buf);
		this._all=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._all[i_am_tmp_i]=this.readBeanInList(_buf,QunYingHuiFighterBriefBean);
		}
		this._preKing=this.readBean(_buf,QunYingHuiFighterDetailBean);
	}

	__proto.getId=function(){
		return 1621;
	}

	/**群英会状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
	/**群英会状态[1:报名][2:预选赛，废弃不用了][3:16进8开始前预告][4:16进8开始][5:16进8结束][6:8进4开始前预告][7:8进4开始][8:8进4结束][9:4进2开始前预告][10:4进2开始][11:4进2结束][12:2进1(决赛)开始前预告][13:2进1(决赛)开始][14:2进1(决赛)结束][15:结束] */
	__getset(0,__proto,'currentState',function(){
		return this._currentState;
		},function(value){
		this._currentState=value;
	});

	/**根节点 */
	/**根节点 */
	__getset(0,__proto,'root',function(){
		return this._root;
		},function(value){
		this._root=value;
	});

	/**所有参赛玩家 */
	/**所有参赛玩家 */
	__getset(0,__proto,'all',function(){
		return this._all;
		},function(value){
		this._all=value;
	});

	/**上届冠军 */
	/**上届冠军 */
	__getset(0,__proto,'preKing',function(){
		return this._preKing;
		},function(value){
		this._preKing=value;
	});

	return ResQunYingHuiNotifyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买寻宝特权
*/
//class net.message.gongCe.ReqBuyHuntTreasureMessage extends net.Message
var ReqBuyHuntTreasureMessage=(function(_super){
	function ReqBuyHuntTreasureMessage(){
		ReqBuyHuntTreasureMessage.__super.call(this);;
	}

	__class(ReqBuyHuntTreasureMessage,'net.message.gongCe.ReqBuyHuntTreasureMessage',_super);
	var __proto=ReqBuyHuntTreasureMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1631;
	}

	return ReqBuyHuntTreasureMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求公开招募
*/
//class net.message.legion.ResLegionHireMessageMessage extends net.Message
var ResLegionHireMessageMessage=(function(_super){
	function ResLegionHireMessageMessage(){
		ResLegionHireMessageMessage.__super.call(this);;
	}

	__class(ResLegionHireMessageMessage,'net.message.legion.ResLegionHireMessageMessage',_super);
	var __proto=ResLegionHireMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 773;
	}

	return ResLegionHireMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*参与拍卖错误
*/
//class net.message.auction.ResAuctionContendErrorMessage extends net.Message
var ResAuctionContendErrorMessage=(function(_super){
	function ResAuctionContendErrorMessage(){
		/**1:数据过时，重新拉取数据;2:穷;3:额度不足;*/
		this._error=0;
		ResAuctionContendErrorMessage.__super.call(this);
	}

	__class(ResAuctionContendErrorMessage,'net.message.auction.ResAuctionContendErrorMessage',_super);
	var __proto=ResAuctionContendErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 573;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAuctionContendErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*走跑马灯
*/
//class net.message.racelamp.ResRaceLampMessage extends net.Message
var ResRaceLampMessage=(function(_super){
	function ResRaceLampMessage(){
		/**跑马灯内容 */
		this._value=null;
		/**类型 */
		this._type=0;
		ResRaceLampMessage.__super.call(this);
		this._values=[];
	}

	__class(ResRaceLampMessage,'net.message.racelamp.ResRaceLampMessage',_super);
	var __proto=ResRaceLampMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._value);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._values.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._values.length;++i_am_tmp_i){
			this.writeString(_buf,this._values[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._value=this.readString(_buf);
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._values=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._values[i_am_tmp_i]=this.readString(_buf);
		}
	}

	__proto.getId=function(){
		return 755;
	}

	/**跑马灯内容 */
	/**跑马灯内容 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	/**类型 */
	/**类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'values',function(){
		return this._values;
		},function(value){
		this._values=value;
	});

	return ResRaceLampMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴分解
*/
//class net.message.handbook.ResHandBookDecomposeMessage extends net.Message
var ResHandBookDecomposeMessage=(function(_super){
	function ResHandBookDecomposeMessage(){
		ResHandBookDecomposeMessage.__super.call(this);
		this._goodsNumBean=[];
	}

	__class(ResHandBookDecomposeMessage,'net.message.handbook.ResHandBookDecomposeMessage',_super);
	var __proto=ResHandBookDecomposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsNumBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._goodsNumBean.length;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._goodsNumBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._goodsNumBean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1123;
	}

	/**获得物品 */
	/**获得物品 */
	__getset(0,__proto,'goodsNumBean',function(){
		return this._goodsNumBean;
		},function(value){
		this._goodsNumBean=value;
	});

	return ResHandBookDecomposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送提示
*/
//class net.message.notice.ResSendNoticeMessage extends net.Message
var ResSendNoticeMessage=(function(_super){
	function ResSendNoticeMessage(){
		/**内容 */
		this._content=null;
		/**颜色[1:错误：红字][2:普通:白字][3:成功:绿字] */
		this._color=0;
		/**类型[1:中央提示][2:跑马灯][3:前端用][4:前端用][5:聊天][6:前端用][7:军团] */
		this._type=0;
		ResSendNoticeMessage.__super.call(this);
		this._params=[];
	}

	__class(ResSendNoticeMessage,'net.message.notice.ResSendNoticeMessage',_super);
	var __proto=ResSendNoticeMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._content);
		this.writeInt(_buf,this._color);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._params.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._params.length;++i_am_tmp_i){
			this.writeString(_buf,this._params[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._content=this.readString(_buf);
		this._color=this.readInt(_buf);
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._params=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._params[i_am_tmp_i]=this.readString(_buf);
		}
	}

	__proto.getId=function(){
		return 989;
	}

	/**内容 */
	/**内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	/**颜色[1:错误：红字][2:普通:白字][3:成功:绿字] */
	/**颜色[1:错误：红字][2:普通:白字][3:成功:绿字] */
	__getset(0,__proto,'color',function(){
		return this._color;
		},function(value){
		this._color=value;
	});

	/**类型[1:中央提示][2:跑马灯][3:前端用][4:前端用][5:聊天][6:前端用][7:军团] */
	/**类型[1:中央提示][2:跑马灯][3:前端用][4:前端用][5:聊天][6:前端用][7:军团] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**参数 */
	/**参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ResSendNoticeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买三国令等级
*/
//class net.message.wartoken.ReqBuyWarTokenLevelMessage extends net.Message
var ReqBuyWarTokenLevelMessage=(function(_super){
	function ReqBuyWarTokenLevelMessage(){
		/**购买的物品数量 */
		this._num=0;
		ReqBuyWarTokenLevelMessage.__super.call(this);
	}

	__class(ReqBuyWarTokenLevelMessage,'net.message.wartoken.ReqBuyWarTokenLevelMessage',_super);
	var __proto=ReqBuyWarTokenLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 894;
	}

	/**购买的物品数量 */
	/**购买的物品数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqBuyWarTokenLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新关卡投资计划
*/
//class net.message.investment.ResGuanQiaInvestmentUpdateMessageMessage extends net.Message
var ResGuanQiaInvestmentUpdateMessageMessage=(function(_super){
	function ResGuanQiaInvestmentUpdateMessageMessage(){
		/**战令 */
		this._investmentBean=null;
		ResGuanQiaInvestmentUpdateMessageMessage.__super.call(this);
	}

	__class(ResGuanQiaInvestmentUpdateMessageMessage,'net.message.investment.ResGuanQiaInvestmentUpdateMessageMessage',_super);
	var __proto=ResGuanQiaInvestmentUpdateMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._investmentBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._investmentBean=this.readBean(_buf,GuanQiaInvestmentBean);
	}

	__proto.getId=function(){
		return 1525;
	}

	/**战令 */
	/**战令 */
	__getset(0,__proto,'investmentBean',function(){
		return this._investmentBean;
		},function(value){
		this._investmentBean=value;
	});

	return ResGuanQiaInvestmentUpdateMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求开启逐鹿宝箱错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateZhuluBoxErrorMessage extends net.Message
var ResTeamDuplicateZhuluBoxErrorMessage=(function(_super){
	function ResTeamDuplicateZhuluBoxErrorMessage(){
		/**1:没达到条件或者已经开过了;2:穷;*/
		this._error=0;
		ResTeamDuplicateZhuluBoxErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateZhuluBoxErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateZhuluBoxErrorMessage',_super);
	var __proto=ResTeamDuplicateZhuluBoxErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 483;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateZhuluBoxErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体
*/
//class net.message.fit.ReqFitSynthesisMessage extends net.Message
var ReqFitSynthesisMessage=(function(_super){
	function ReqFitSynthesisMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**主魂位置[1:][2:][3:][4:] */
		this._main=0;
		ReqFitSynthesisMessage.__super.call(this);
	}

	__class(ReqFitSynthesisMessage,'net.message.fit.ReqFitSynthesisMessage',_super);
	var __proto=ReqFitSynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._main);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._main=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1146;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**主魂位置[1:][2:][3:][4:] */
	/**主魂位置[1:][2:][3:][4:] */
	__getset(0,__proto,'main',function(){
		return this._main;
		},function(value){
		this._main=value;
	});

	return ReqFitSynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴一键升星
*/
//class net.message.handbook.ResHandBookFastUpStarMessage extends net.Message
var ResHandBookFastUpStarMessage=(function(_super){
	function ResHandBookFastUpStarMessage(){
		ResHandBookFastUpStarMessage.__super.call(this);
		this._configId=[];
	}

	__class(ResHandBookFastUpStarMessage,'net.message.handbook.ResHandBookFastUpStarMessage',_super);
	var __proto=ResHandBookFastUpStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._configId.length;++i_am_tmp_i){
			this._configId[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._configId=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._configId[i_am_tmp_i]=this.readBeanInList(_buf,HandBookBean);
		}
	}

	__proto.getId=function(){
		return 1434;
	}

	/**结果信息 */
	/**结果信息 */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	return ResHandBookFastUpStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取首通和最小回合数记录
*/
//class net.message.teamDuplicate.ReqTeamDuplicateGetFirstClearanceMessage extends net.Message
var ReqTeamDuplicateGetFirstClearanceMessage=(function(_super){
	function ReqTeamDuplicateGetFirstClearanceMessage(){
		/**副本ID */
		this._qid=0;
		ReqTeamDuplicateGetFirstClearanceMessage.__super.call(this);
	}

	__class(ReqTeamDuplicateGetFirstClearanceMessage,'net.message.teamDuplicate.ReqTeamDuplicateGetFirstClearanceMessage',_super);
	var __proto=ReqTeamDuplicateGetFirstClearanceMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 435;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	return ReqTeamDuplicateGetFirstClearanceMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ResOnHookRewardMessage extends net.Message
var ResOnHookRewardMessage=(function(_super){
	function ResOnHookRewardMessage(){
		/**领取状态 */
		this._success=false;
		ResOnHookRewardMessage.__super.call(this);
	}

	__class(ResOnHookRewardMessage,'net.message.misc.ResOnHookRewardMessage',_super);
	var __proto=ResOnHookRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._success);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._success=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1448;
	}

	/**领取状态 */
	/**领取状态 */
	__getset(0,__proto,'success',function(){
		return this._success;
		},function(value){
		this._success=value;
	});

	return ResOnHookRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新心愿武将
*/
//class net.message.textureHunt.ResSelectLoveHeroMessage extends net.Message
var ResSelectLoveHeroMessage=(function(_super){
	function ResSelectLoveHeroMessage(){
		/**武将道具id */
		this._HeroItemId=0;
		ResSelectLoveHeroMessage.__super.call(this);
	}

	__class(ResSelectLoveHeroMessage,'net.message.textureHunt.ResSelectLoveHeroMessage',_super);
	var __proto=ResSelectLoveHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._HeroItemId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._HeroItemId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1598;
	}

	/**武将道具id */
	/**武将道具id */
	__getset(0,__proto,'HeroItemId',function(){
		return this._HeroItemId;
		},function(value){
		this._HeroItemId=value;
	});

	return ResSelectLoveHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*完成任务
*/
//class net.message.task.ReqTaskFinishMessage extends net.Message
var ReqTaskFinishMessage=(function(_super){
	function ReqTaskFinishMessage(){
		/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
		this._type=0;
		/**任务ID */
		this._taskID=0;
		ReqTaskFinishMessage.__super.call(this);
		this._index=[];
	}

	__class(ReqTaskFinishMessage,'net.message.task.ReqTaskFinishMessage',_super);
	var __proto=ReqTaskFinishMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._taskID);
		this.writeInt(_buf,this._index.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._index.length;++i_am_tmp_i){
			this.writeInt(_buf,this._index[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._taskID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._index=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._index[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1295;
	}

	/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	/**类型[1:主线][2:平定安邦][3:成就][4:军团守护][5:军团广场][6:护符][7:战令][8:官位][9:CRON类型限时任务][10:相对时间类型限时任务][11:其他任务][12:限时任务][13:爵位任务][14:庆典积分任务][15:通关任务][16:沙场点兵任务][17:达标有礼活动任务][18:名将献礼活动任务] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	/**选择的奖励序号 */
	/**选择的奖励序号 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqTaskFinishMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*自身值更新
*/
//class net.message.guild.ResGuildMemberValueUpdateMessage extends net.Message
var ResGuildMemberValueUpdateMessage=(function(_super){
	function ResGuildMemberValueUpdateMessage(){
		/**类型[1:贡献] */
		this._type=0;
		/**值 */
		this._value=0;
		ResGuildMemberValueUpdateMessage.__super.call(this);
	}

	__class(ResGuildMemberValueUpdateMessage,'net.message.guild.ResGuildMemberValueUpdateMessage',_super);
	var __proto=ResGuildMemberValueUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._value=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1248;
	}

	/**类型[1:贡献] */
	/**类型[1:贡献] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**值 */
	/**值 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResGuildMemberValueUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮器升级
*/
//class net.message.general.ReqGeneralUpgradeWeaponMessage extends net.Message
var ReqGeneralUpgradeWeaponMessage=(function(_super){
	function ReqGeneralUpgradeWeaponMessage(){
		/**蛮将id */
		this._id=0;
		ReqGeneralUpgradeWeaponMessage.__super.call(this);
	}

	__class(ReqGeneralUpgradeWeaponMessage,'net.message.general.ReqGeneralUpgradeWeaponMessage',_super);
	var __proto=ReqGeneralUpgradeWeaponMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1411;
	}

	/**蛮将id */
	/**蛮将id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqGeneralUpgradeWeaponMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物觉醒
*/
//class net.message.pet.ReqAwakePetMessage extends net.Message
var ReqAwakePetMessage=(function(_super){
	function ReqAwakePetMessage(){
		/**宠物ID */
		this._petID=0;
		ReqAwakePetMessage.__super.call(this);
	}

	__class(ReqAwakePetMessage,'net.message.pet.ReqAwakePetMessage',_super);
	var __proto=ReqAwakePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1593;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	return ReqAwakePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买挑战次数错误
*/
//class net.message.arena.ResArenaBuyTimesErrorMessage extends net.Message
var ResArenaBuyTimesErrorMessage=(function(_super){
	function ResArenaBuyTimesErrorMessage(){
		/**1:参数错误;2:穷;3:没有剩余购买次数了;*/
		this._error=0;
		ResArenaBuyTimesErrorMessage.__super.call(this);
	}

	__class(ResArenaBuyTimesErrorMessage,'net.message.arena.ResArenaBuyTimesErrorMessage',_super);
	var __proto=ResArenaBuyTimesErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 276;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResArenaBuyTimesErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*指令
*/
//class net.message.misc.ReqCommandMessage extends net.Message
var ReqCommandMessage=(function(_super){
	function ReqCommandMessage(){
		/**指令内容 */
		this._content=null;
		ReqCommandMessage.__super.call(this);
	}

	__class(ReqCommandMessage,'net.message.misc.ReqCommandMessage',_super);
	var __proto=ReqCommandMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._content);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._content=this.readString(_buf);
	}

	__proto.getId=function(){
		return 35;
	}

	/**指令内容 */
	/**指令内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	return ReqCommandMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换当前所在关卡副本ID错误
*/
//class net.message.dungeon.ResChangeGuanQiaDungeonIDErrorMessage extends net.Message
var ResChangeGuanQiaDungeonIDErrorMessage=(function(_super){
	function ResChangeGuanQiaDungeonIDErrorMessage(){
		/**1:不能切换;*/
		this._error=0;
		ResChangeGuanQiaDungeonIDErrorMessage.__super.call(this);
	}

	__class(ResChangeGuanQiaDungeonIDErrorMessage,'net.message.dungeon.ResChangeGuanQiaDungeonIDErrorMessage',_super);
	var __proto=ResChangeGuanQiaDungeonIDErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 119;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChangeGuanQiaDungeonIDErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*邀请加入军团
*/
//class net.message.guild.ReqGuildInviteMessage extends net.Message
var ReqGuildInviteMessage=(function(_super){
	function ReqGuildInviteMessage(){
		/**玩家唯一ID */
		this._uid=null;
		ReqGuildInviteMessage.__super.call(this);
	}

	__class(ReqGuildInviteMessage,'net.message.guild.ReqGuildInviteMessage',_super);
	var __proto=ReqGuildInviteMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1237;
	}

	/**玩家唯一ID */
	/**玩家唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqGuildInviteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送贺礼错误
*/
//class net.message.marriage.ResMarriageGiftErrorMessage extends net.Message
var ResMarriageGiftErrorMessage=(function(_super){
	function ResMarriageGiftErrorMessage(){
		/**1:穷;2:目标没找到;*/
		this._error=0;
		ResMarriageGiftErrorMessage.__super.call(this);
	}

	__class(ResMarriageGiftErrorMessage,'net.message.marriage.ResMarriageGiftErrorMessage',_super);
	var __proto=ResMarriageGiftErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 549;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageGiftErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解道具
*/
//class net.message.goods.ResDisposeMessage extends net.Message
var ResDisposeMessage=(function(_super){
	function ResDisposeMessage(){
		ResDisposeMessage.__super.call(this);
		this._list=[];
		this._disposeGoods=[];
	}

	__class(ResDisposeMessage,'net.message.goods.ResDisposeMessage',_super);
	var __proto=ResDisposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._disposeGoods.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._disposeGoods.length;++i_am_tmp_i){
			this._disposeGoods[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		size52413035=this.readInt(_buf);
		this._disposeGoods=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._disposeGoods[i_am_tmp_i]=this.readBeanInList(_buf,DisposeGoodsBean);
		}
	}

	__proto.getId=function(){
		return 200;
	}

	/**分解获得的物品 */
	/**分解获得的物品 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	/**分解成功的道具 */
	/**分解成功的道具 */
	__getset(0,__proto,'disposeGoods',function(){
		return this._disposeGoods;
		},function(value){
		this._disposeGoods=value;
	});

	return ResDisposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*媚坞寻宝错误
*/
//class net.message.gongCe.ResMeiWuHuntErrorMessage extends net.Message
var ResMeiWuHuntErrorMessage=(function(_super){
	function ResMeiWuHuntErrorMessage(){
		/**1:活动未开启;2:道具不足;3:这个位置已经被开过了;4:还没有开出至宝;5:没有下一层了;*/
		this._error=0;
		ResMeiWuHuntErrorMessage.__super.call(this);
	}

	__class(ResMeiWuHuntErrorMessage,'net.message.gongCe.ResMeiWuHuntErrorMessage',_super);
	var __proto=ResMeiWuHuntErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1668;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMeiWuHuntErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新赤壁今日可以进行任务的次数
*/
//class net.message.chibi.ResChibiUpdateTodayMessage extends net.Message
var ResChibiUpdateTodayMessage=(function(_super){
	function ResChibiUpdateTodayMessage(){
		/**新的次数 */
		this._today=0;
		/**下次恢复的时间 */
		this._time=null;
		ResChibiUpdateTodayMessage.__super.call(this);
	}

	__class(ResChibiUpdateTodayMessage,'net.message.chibi.ResChibiUpdateTodayMessage',_super);
	var __proto=ResChibiUpdateTodayMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._today);
		this.writeLong(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._today=this.readInt(_buf);
		this._time=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 395;
	}

	/**新的次数 */
	/**新的次数 */
	__getset(0,__proto,'today',function(){
		return this._today;
		},function(value){
		this._today=value;
	});

	/**下次恢复的时间 */
	/**下次恢复的时间 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResChibiUpdateTodayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有军团的简要信息
*/
//class net.message.guild.ReqGuildGetAllMessage extends net.Message
var ReqGuildGetAllMessage=(function(_super){
	function ReqGuildGetAllMessage(){
		ReqGuildGetAllMessage.__super.call(this);;
	}

	__class(ReqGuildGetAllMessage,'net.message.guild.ReqGuildGetAllMessage',_super);
	var __proto=ReqGuildGetAllMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1233;
	}

	return ReqGuildGetAllMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买星宿幻境挑战次数
*/
//class net.message.pata.ResBuyXXHJChallengeTimeMessage extends net.Message
var ResBuyXXHJChallengeTimeMessage=(function(_super){
	function ResBuyXXHJChallengeTimeMessage(){
		/**剩余挑战次数 */
		this._challengeTime=0;
		/**已经購買次数 */
		this._buyTime=0;
		ResBuyXXHJChallengeTimeMessage.__super.call(this);
	}

	__class(ResBuyXXHJChallengeTimeMessage,'net.message.pata.ResBuyXXHJChallengeTimeMessage',_super);
	var __proto=ResBuyXXHJChallengeTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._challengeTime);
		this.writeInt(_buf,this._buyTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._challengeTime=this.readInt(_buf);
		this._buyTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1029;
	}

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'challengeTime',function(){
		return this._challengeTime;
		},function(value){
		this._challengeTime=value;
	});

	/**已经購買次数 */
	/**已经購買次数 */
	__getset(0,__proto,'buyTime',function(){
		return this._buyTime;
		},function(value){
		this._buyTime=value;
	});

	return ResBuyXXHJChallengeTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值返利活动
*/
//class net.message.activities.ReqRechargeTurntableMessage extends net.Message
var ReqRechargeTurntableMessage=(function(_super){
	function ReqRechargeTurntableMessage(){
		ReqRechargeTurntableMessage.__super.call(this);;
	}

	__class(ReqRechargeTurntableMessage,'net.message.activities.ReqRechargeTurntableMessage',_super);
	var __proto=ReqRechargeTurntableMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1663;
	}

	return ReqRechargeTurntableMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求王者争霸排行榜
*/
//class net.message.kingwar.ReqKingWarGetRankMessage extends net.Message
var ReqKingWarGetRankMessage=(function(_super){
	function ReqKingWarGetRankMessage(){
		/**1 本周 2 上周[1:本周][2:上周] */
		this._type=0;
		ReqKingWarGetRankMessage.__super.call(this);
	}

	__class(ReqKingWarGetRankMessage,'net.message.kingwar.ReqKingWarGetRankMessage',_super);
	var __proto=ReqKingWarGetRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 498;
	}

	/**1 本周 2 上周[1:本周][2:上周] */
	/**1 本周 2 上周[1:本周][2:上周] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqKingWarGetRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸获取膜拜奖励
*/
//class net.message.kingwar.ResKingWarFightGetWorshipRewardMessage extends net.Message
var ResKingWarFightGetWorshipRewardMessage=(function(_super){
	function ResKingWarFightGetWorshipRewardMessage(){
		ResKingWarFightGetWorshipRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResKingWarFightGetWorshipRewardMessage,'net.message.kingwar.ResKingWarFightGetWorshipRewardMessage',_super);
	var __proto=ResKingWarFightGetWorshipRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1284;
	}

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResKingWarFightGetWorshipRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备错误
*/
//class net.message.equip.ResEquipSuitActiveErrorMessage extends net.Message
var ResEquipSuitActiveErrorMessage=(function(_super){
	function ResEquipSuitActiveErrorMessage(){
		/**1:配置错误;2:条件不满足;*/
		this._error=0;
		ResEquipSuitActiveErrorMessage.__super.call(this);
	}

	__class(ResEquipSuitActiveErrorMessage,'net.message.equip.ResEquipSuitActiveErrorMessage',_super);
	var __proto=ResEquipSuitActiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1486;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipSuitActiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍修改战力条件错误
*/
//class net.message.team.ResTeamChangeFightPowerErrorMessage extends net.Message
var ResTeamChangeFightPowerErrorMessage=(function(_super){
	function ResTeamChangeFightPowerErrorMessage(){
		/**1:无权限;2:没有队伍;*/
		this._error=0;
		ResTeamChangeFightPowerErrorMessage.__super.call(this);
	}

	__class(ResTeamChangeFightPowerErrorMessage,'net.message.team.ResTeamChangeFightPowerErrorMessage',_super);
	var __proto=ResTeamChangeFightPowerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1262;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamChangeFightPowerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵位置替换错误
*/
//class net.message.fight.ResFightPositionExchangeErrorMessage extends net.Message
var ResFightPositionExchangeErrorMessage=(function(_super){
	function ResFightPositionExchangeErrorMessage(){
		/**1:位置不存在;2:参数错误;3:找不到对象;4:找不到对应配置;5:不能被修改;*/
		this._error=0;
		ResFightPositionExchangeErrorMessage.__super.call(this);
	}

	__class(ResFightPositionExchangeErrorMessage,'net.message.fight.ResFightPositionExchangeErrorMessage',_super);
	var __proto=ResFightPositionExchangeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1446;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFightPositionExchangeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新累计重置额度
*/
//class net.message.vip.ReqUpdateVipFreeSkipRoundMessage extends net.Message
var ReqUpdateVipFreeSkipRoundMessage=(function(_super){
	function ReqUpdateVipFreeSkipRoundMessage(){
		ReqUpdateVipFreeSkipRoundMessage.__super.call(this);;
	}

	__class(ReqUpdateVipFreeSkipRoundMessage,'net.message.vip.ReqUpdateVipFreeSkipRoundMessage',_super);
	var __proto=ReqUpdateVipFreeSkipRoundMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1459;
	}

	return ReqUpdateVipFreeSkipRoundMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级技能
*/
//class net.message.skill.ReqUpgradeSkillMessage extends net.Message
var ReqUpgradeSkillMessage=(function(_super){
	function ReqUpgradeSkillMessage(){
		/**技能ID,如果为0则表示全部升级 */
		this._skillID=0;
		ReqUpgradeSkillMessage.__super.call(this);
	}

	__class(ReqUpgradeSkillMessage,'net.message.skill.ReqUpgradeSkillMessage',_super);
	var __proto=ReqUpgradeSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skillID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skillID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 91;
	}

	/**技能ID,如果为0则表示全部升级 */
	/**技能ID,如果为0则表示全部升级 */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	return ReqUpgradeSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童使用属性丹错误
*/
//class net.message.soulboy.ResSoulBoyDrugItemErrorMessage extends net.Message
var ResSoulBoyDrugItemErrorMessage=(function(_super){
	function ResSoulBoyDrugItemErrorMessage(){
		/**1:灵童不存在;2:材料不足;*/
		this._error=0;
		ResSoulBoyDrugItemErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyDrugItemErrorMessage,'net.message.soulboy.ResSoulBoyDrugItemErrorMessage',_super);
	var __proto=ResSoulBoyDrugItemErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 686;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyDrugItemErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*培养错误
*/
//class net.message.treasure.ResTreasurePyErrorMessage extends net.Message
var ResTreasurePyErrorMessage=(function(_super){
	function ResTreasurePyErrorMessage(){
		/**1:没有配置;2:达到上限;3:物品不足;*/
		this._error=0;
		ResTreasurePyErrorMessage.__super.call(this);
	}

	__class(ResTreasurePyErrorMessage,'net.message.treasure.ResTreasurePyErrorMessage',_super);
	var __proto=ResTreasurePyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1627;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTreasurePyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获得空城计战斗回放错误
*/
//class net.message.emptycity.ResEmptyGetBattleRecordErrorMessage extends net.Message
var ResEmptyGetBattleRecordErrorMessage=(function(_super){
	function ResEmptyGetBattleRecordErrorMessage(){
		/**1:尚未开启;2:没有战斗记录;*/
		this._error=0;
		ResEmptyGetBattleRecordErrorMessage.__super.call(this);
	}

	__class(ResEmptyGetBattleRecordErrorMessage,'net.message.emptycity.ResEmptyGetBattleRecordErrorMessage',_super);
	var __proto=ResEmptyGetBattleRecordErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1113;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEmptyGetBattleRecordErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家离开
*/
//class net.message.dungeon.ReqQuanMinBossLeaveMessage extends net.Message
var ReqQuanMinBossLeaveMessage=(function(_super){
	function ReqQuanMinBossLeaveMessage(){
		/**副本id */
		this._dungeonId=0;
		ReqQuanMinBossLeaveMessage.__super.call(this);
	}

	__class(ReqQuanMinBossLeaveMessage,'net.message.dungeon.ReqQuanMinBossLeaveMessage',_super);
	var __proto=ReqQuanMinBossLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1470;
	}

	/**副本id */
	/**副本id */
	__getset(0,__proto,'dungeonId',function(){
		return this._dungeonId;
		},function(value){
		this._dungeonId=value;
	});

	return ReqQuanMinBossLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*创建主英雄
*/
//class net.message.hero.ResCreateMainHeroMessage extends net.Message
var ResCreateMainHeroMessage=(function(_super){
	function ResCreateMainHeroMessage(){
		/**英雄名称 */
		this._name=null;
		/**英雄 */
		this._hero=null;
		ResCreateMainHeroMessage.__super.call(this);
	}

	__class(ResCreateMainHeroMessage,'net.message.hero.ResCreateMainHeroMessage',_super);
	var __proto=ResCreateMainHeroMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeBean(_buf,this._hero);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._hero=this.readBean(_buf,HeroBean);
	}

	__proto.getId=function(){
		return 11;
	}

	/**英雄名称 */
	/**英雄名称 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**英雄 */
	/**英雄 */
	__getset(0,__proto,'hero',function(){
		return this._hero;
		},function(value){
		this._hero=value;
	});

	return ResCreateMainHeroMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动错误
*/
//class net.message.worldboss.ResWorldBossMoveErrorMessage extends net.Message
var ResWorldBossMoveErrorMessage=(function(_super){
	function ResWorldBossMoveErrorMessage(){
		/**1:活动未开始;2:你已经死了 或者离开副本;*/
		this._error=0;
		ResWorldBossMoveErrorMessage.__super.call(this);
	}

	__class(ResWorldBossMoveErrorMessage,'net.message.worldboss.ResWorldBossMoveErrorMessage',_super);
	var __proto=ResWorldBossMoveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 506;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossMoveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*团购领奖
*/
//class net.message.tuangou.ResTuanGouTakePrizeMessage extends net.Message
var ResTuanGouTakePrizeMessage=(function(_super){
	function ResTuanGouTakePrizeMessage(){
		/**对应q_tuangou.q_id */
		this._cfgID=0;
		ResTuanGouTakePrizeMessage.__super.call(this);
	}

	__class(ResTuanGouTakePrizeMessage,'net.message.tuangou.ResTuanGouTakePrizeMessage',_super);
	var __proto=ResTuanGouTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._cfgID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cfgID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1399;
	}

	/**对应q_tuangou.q_id */
	/**对应q_tuangou.q_id */
	__getset(0,__proto,'cfgID',function(){
		return this._cfgID;
		},function(value){
		this._cfgID=value;
	});

	return ResTuanGouTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡的奖励错误
*/
//class net.message.chat.ResChatHelpRewardErrorMessage extends net.Message
var ResChatHelpRewardErrorMessage=(function(_super){
	function ResChatHelpRewardErrorMessage(){
		/**1:没有这个求助;*/
		this._error=0;
		ResChatHelpRewardErrorMessage.__super.call(this);
	}

	__class(ResChatHelpRewardErrorMessage,'net.message.chat.ResChatHelpRewardErrorMessage',_super);
	var __proto=ResChatHelpRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 764;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatHelpRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*转生
*/
//class net.message.zhuansheng.ResZhuanShengMessage extends net.Message
var ResZhuanShengMessage=(function(_super){
	function ResZhuanShengMessage(){
		/**转生 */
		this._zhuanSheng=null;
		ResZhuanShengMessage.__super.call(this);
	}

	__class(ResZhuanShengMessage,'net.message.zhuansheng.ResZhuanShengMessage',_super);
	var __proto=ResZhuanShengMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._zhuanSheng);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._zhuanSheng=this.readBean(_buf,ZhuanShengBean);
	}

	__proto.getId=function(){
		return 51;
	}

	/**转生 */
	/**转生 */
	__getset(0,__proto,'zhuanSheng',function(){
		return this._zhuanSheng;
		},function(value){
		this._zhuanSheng=value;
	});

	return ResZhuanShengMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破
*/
//class net.message.general.ReqGeneralUpgradeMessage extends net.Message
var ReqGeneralUpgradeMessage=(function(_super){
	function ReqGeneralUpgradeMessage(){
		/**id */
		this._id=0;
		/**是否自动购买 */
		this._isAutoBuy=false;
		ReqGeneralUpgradeMessage.__super.call(this);
	}

	__class(ReqGeneralUpgradeMessage,'net.message.general.ReqGeneralUpgradeMessage',_super);
	var __proto=ReqGeneralUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBoolean(_buf,this._isAutoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._isAutoBuy=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 849;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否自动购买 */
	/**是否自动购买 */
	__getset(0,__proto,'isAutoBuy',function(){
		return this._isAutoBuy;
		},function(value){
		this._isAutoBuy=value;
	});

	return ReqGeneralUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*操作神装错误
*/
//class net.message.godClothes.ResGodClothesOperationErrorMessage extends net.Message
var ResGodClothesOperationErrorMessage=(function(_super){
	function ResGodClothesOperationErrorMessage(){
		/**1:参数错误;2:材料不足;3:配置错误;4:淬炼满;5:最大等级;6:神装未激活;*/
		this._error=0;
		ResGodClothesOperationErrorMessage.__super.call(this);
	}

	__class(ResGodClothesOperationErrorMessage,'net.message.godClothes.ResGodClothesOperationErrorMessage',_super);
	var __proto=ResGodClothesOperationErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 854;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGodClothesOperationErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*看别人装逼错误
*/
//class net.message.chat.ResChatKanZhuangBiErrorMessage extends net.Message
var ResChatKanZhuangBiErrorMessage=(function(_super){
	function ResChatKanZhuangBiErrorMessage(){
		/**1:展示已过期;*/
		this._error=0;
		ResChatKanZhuangBiErrorMessage.__super.call(this);
	}

	__class(ResChatKanZhuangBiErrorMessage,'net.message.chat.ResChatKanZhuangBiErrorMessage',_super);
	var __proto=ResChatKanZhuangBiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 780;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResChatKanZhuangBiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ResMarriagePataInviteMessage extends net.Message
var ResMarriagePataInviteMessage=(function(_super){
	function ResMarriagePataInviteMessage(){
		/**房间号 */
		this._roomId=null;
		ResMarriagePataInviteMessage.__super.call(this);
	}

	__class(ResMarriagePataInviteMessage,'net.message.marriage.ResMarriagePataInviteMessage',_super);
	var __proto=ResMarriagePataInviteMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._roomId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._roomId=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1493;
	}

	/**房间号 */
	/**房间号 */
	__getset(0,__proto,'roomId',function(){
		return this._roomId;
		},function(value){
		this._roomId=value;
	});

	return ResMarriagePataInviteMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备
*/
//class net.message.equip.ResEquipMakingMessage extends net.Message
var ResEquipMakingMessage=(function(_super){
	function ResEquipMakingMessage(){
		ResEquipMakingMessage.__super.call(this);
		this._bean=[];
	}

	__class(ResEquipMakingMessage,'net.message.equip.ResEquipMakingMessage',_super);
	var __proto=ResEquipMakingMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bean.length;++i_am_tmp_i){
			this._bean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 1476;
	}

	/**获得的物品 */
	/**获得的物品 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEquipMakingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取押运奖励错误
*/
//class net.message.escort.ResReceiveEscortRewardErrorMessage extends net.Message
var ResReceiveEscortRewardErrorMessage=(function(_super){
	function ResReceiveEscortRewardErrorMessage(){
		/**1:押运时间还没结束;2:钱不够;*/
		this._error=0;
		ResReceiveEscortRewardErrorMessage.__super.call(this);
	}

	__class(ResReceiveEscortRewardErrorMessage,'net.message.escort.ResReceiveEscortRewardErrorMessage',_super);
	var __proto=ResReceiveEscortRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 341;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResReceiveEscortRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取录像
*/
//class net.message.video.ResGetVideoFightDataMessage extends net.Message
var ResGetVideoFightDataMessage=(function(_super){
	function ResGetVideoFightDataMessage(){
		/**战斗data */
		this._bean=null;
		ResGetVideoFightDataMessage.__super.call(this);
	}

	__class(ResGetVideoFightDataMessage,'net.message.video.ResGetVideoFightDataMessage',_super);
	var __proto=ResGetVideoFightDataMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1514;
	}

	/**战斗data */
	/**战斗data */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResGetVideoFightDataMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击BOSS错误
*/
//class net.message.worldboss.ResWorldBossAttackErrorMessage extends net.Message
var ResWorldBossAttackErrorMessage=(function(_super){
	function ResWorldBossAttackErrorMessage(){
		/**1:活动未开始;2:你已经死了 或者离开副本;3:BOSS已死亡;*/
		this._error=0;
		ResWorldBossAttackErrorMessage.__super.call(this);
	}

	__class(ResWorldBossAttackErrorMessage,'net.message.worldboss.ResWorldBossAttackErrorMessage',_super);
	var __proto=ResWorldBossAttackErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 512;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResWorldBossAttackErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成灵童卡错误
*/
//class net.message.soulboy.ResSoulBoySynthesisErrorMessage extends net.Message
var ResSoulBoySynthesisErrorMessage=(function(_super){
	function ResSoulBoySynthesisErrorMessage(){
		/**1:材料不足;*/
		this._error=0;
		ResSoulBoySynthesisErrorMessage.__super.call(this);
	}

	__class(ResSoulBoySynthesisErrorMessage,'net.message.soulboy.ResSoulBoySynthesisErrorMessage',_super);
	var __proto=ResSoulBoySynthesisErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 466;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoySynthesisErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值错误
*/
//class net.message.misc.ResRechargeErrorMessage extends net.Message
var ResRechargeErrorMessage=(function(_super){
	function ResRechargeErrorMessage(){
		/**1:没有该充值;2:param参数解析失败;3:其他错误;*/
		this._error=0;
		ResRechargeErrorMessage.__super.call(this);
	}

	__class(ResRechargeErrorMessage,'net.message.misc.ResRechargeErrorMessage',_super);
	var __proto=ResRechargeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 721;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRechargeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级通用进阶技能错误
*/
//class net.message.upgrade.ResUpgradeCommonSkillLevelErrorMessage extends net.Message
var ResUpgradeCommonSkillLevelErrorMessage=(function(_super){
	function ResUpgradeCommonSkillLevelErrorMessage(){
		/**1:最大等级;2:消耗不足;3:没有这个技能;4:配置错误;*/
		this._error=0;
		ResUpgradeCommonSkillLevelErrorMessage.__super.call(this);
	}

	__class(ResUpgradeCommonSkillLevelErrorMessage,'net.message.upgrade.ResUpgradeCommonSkillLevelErrorMessage',_super);
	var __proto=ResUpgradeCommonSkillLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1363;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeCommonSkillLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新占领王座的帮会
*/
//class net.message.gb.ResLegionBattleUpdateThroneMessage extends net.Message
var ResLegionBattleUpdateThroneMessage=(function(_super){
	function ResLegionBattleUpdateThroneMessage(){
		/**占领者帮会 */
		this._guildID=null;
		ResLegionBattleUpdateThroneMessage.__super.call(this);
		this._members=[];
	}

	__class(ResLegionBattleUpdateThroneMessage,'net.message.gb.ResLegionBattleUpdateThroneMessage',_super);
	var __proto=ResLegionBattleUpdateThroneMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._guildID);
		this.writeInt(_buf,this._members.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._members.length;++i_am_tmp_i){
			this._members[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guildID=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._members=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._members[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleMemberBean);
		}
	}

	__proto.getId=function(){
		return 1329;
	}

	/**占领者帮会 */
	/**占领者帮会 */
	__getset(0,__proto,'guildID',function(){
		return this._guildID;
		},function(value){
		this._guildID=value;
	});

	/**占领者 */
	/**占领者 */
	__getset(0,__proto,'members',function(){
		return this._members;
		},function(value){
		this._members=value;
	});

	return ResLegionBattleUpdateThroneMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新王者争霸信息
*/
//class net.message.kingwar.ResKingWarUpdateMessage extends net.Message
var ResKingWarUpdateMessage=(function(_super){
	function ResKingWarUpdateMessage(){
		/**自己的信息 */
		this._bean=null;
		ResKingWarUpdateMessage.__super.call(this);
	}

	__class(ResKingWarUpdateMessage,'net.message.kingwar.ResKingWarUpdateMessage',_super);
	var __proto=ResKingWarUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,KingWarSelfBean);
	}

	__proto.getId=function(){
		return 488;
	}

	/**自己的信息 */
	/**自己的信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResKingWarUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入队伍错误
*/
//class net.message.team.ResTeamApplyErrorMessage extends net.Message
var ResTeamApplyErrorMessage=(function(_super){
	function ResTeamApplyErrorMessage(){
		/**1:队伍不存在;2:队伍满;3:你有队伍;4:重复申请;5:申请列表满;6:CD中;7:系统错误;*/
		this._error=0;
		ResTeamApplyErrorMessage.__super.call(this);
	}

	__class(ResTeamApplyErrorMessage,'net.message.team.ResTeamApplyErrorMessage',_super);
	var __proto=ResTeamApplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1256;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamApplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新属性道具使用数量
*/
//class net.message.goods.ResUpdateAttributeGoodsMessage extends net.Message
var ResUpdateAttributeGoodsMessage=(function(_super){
	function ResUpdateAttributeGoodsMessage(){
		/**道具ID */
		this._goodsID=0;
		/**使用数量 */
		this._goodsNum=0;
		ResUpdateAttributeGoodsMessage.__super.call(this);
	}

	__class(ResUpdateAttributeGoodsMessage,'net.message.goods.ResUpdateAttributeGoodsMessage',_super);
	var __proto=ResUpdateAttributeGoodsMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._goodsID);
		this.writeInt(_buf,this._goodsNum);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._goodsID=this.readInt(_buf);
		this._goodsNum=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 189;
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'goodsID',function(){
		return this._goodsID;
		},function(value){
		this._goodsID=value;
	});

	/**使用数量 */
	/**使用数量 */
	__getset(0,__proto,'goodsNum',function(){
		return this._goodsNum;
		},function(value){
		this._goodsNum=value;
	});

	return ResUpdateAttributeGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拍卖行物品下架
*/
//class net.message.auction.ResAuctionRemovedMessage extends net.Message
var ResAuctionRemovedMessage=(function(_super){
	function ResAuctionRemovedMessage(){
		/**拍卖品id */
		this._auctionId=null;
		ResAuctionRemovedMessage.__super.call(this);
	}

	__class(ResAuctionRemovedMessage,'net.message.auction.ResAuctionRemovedMessage',_super);
	var __proto=ResAuctionRemovedMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._auctionId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._auctionId=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1414;
	}

	/**拍卖品id */
	/**拍卖品id */
	__getset(0,__proto,'auctionId',function(){
		return this._auctionId;
		},function(value){
		this._auctionId=value;
	});

	return ResAuctionRemovedMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取星宿幻境奖励错误
*/
//class net.message.pata.ResTakeXXHJPrizeErrorMessage extends net.Message
var ResTakeXXHJPrizeErrorMessage=(function(_super){
	function ResTakeXXHJPrizeErrorMessage(){
		/**1:参数错误;2:超过最大层数;3:已经领过奖了;*/
		this._error=0;
		ResTakeXXHJPrizeErrorMessage.__super.call(this);
	}

	__class(ResTakeXXHJPrizeErrorMessage,'net.message.pata.ResTakeXXHJPrizeErrorMessage',_super);
	var __proto=ResTakeXXHJPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1036;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeXXHJPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求寻宝记录
*/
//class net.message.textureHunt.ResHuntRecordMessage extends net.Message
var ResHuntRecordMessage=(function(_super){
	function ResHuntRecordMessage(){
		/**寻宝类型 */
		this._type=0;
		ResHuntRecordMessage.__super.call(this);
		this._Allrecord=[];
		this._record=[];
	}

	__class(ResHuntRecordMessage,'net.message.textureHunt.ResHuntRecordMessage',_super);
	var __proto=ResHuntRecordMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._Allrecord.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._Allrecord.length;++i_am_tmp_i){
			this._Allrecord[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._record.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._record.length;++i_am_tmp_i){
			this._record[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._Allrecord=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._Allrecord[i_am_tmp_i]=this.readBeanInList(_buf,HuntRecordBean);
		}
		size52413035=this.readInt(_buf);
		this._record=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._record[i_am_tmp_i]=this.readBeanInList(_buf,HuntRecordBean);
		}
	}

	__proto.getId=function(){
		return 697;
	}

	/**寻宝类型 */
	/**寻宝类型 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**全服记录 */
	/**全服记录 */
	__getset(0,__proto,'Allrecord',function(){
		return this._Allrecord;
		},function(value){
		this._Allrecord=value;
	});

	/**个人记录 */
	/**个人记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return ResHuntRecordMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求购买投资计划
*/
//class net.message.investment.ReqInvestmengBuyMessageMessage extends net.Message
var ReqInvestmengBuyMessageMessage=(function(_super){
	function ReqInvestmengBuyMessageMessage(){
		/**1 投资计划 2 成长基金 */
		this._type=0;
		ReqInvestmengBuyMessageMessage.__super.call(this);
	}

	__class(ReqInvestmengBuyMessageMessage,'net.message.investment.ReqInvestmengBuyMessageMessage',_super);
	var __proto=ReqInvestmengBuyMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 671;
	}

	/**1 投资计划 2 成长基金 */
	/**1 投资计划 2 成长基金 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqInvestmengBuyMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出军团错误
*/
//class net.message.guild.ResGuildExitErrorMessage extends net.Message
var ResGuildExitErrorMessage=(function(_super){
	function ResGuildExitErrorMessage(){
		/**1:不在帮会中;2:无法退出;3:请解散帮会;*/
		this._error=0;
		ResGuildExitErrorMessage.__super.call(this);
	}

	__class(ResGuildExitErrorMessage,'net.message.guild.ResGuildExitErrorMessage',_super);
	var __proto=ResGuildExitErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1232;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildExitErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知服务端指尖玩家已关注公众号
*/
//class net.message.misc.ResZhiJianFollowSucMessage extends net.Message
var ResZhiJianFollowSucMessage=(function(_super){
	function ResZhiJianFollowSucMessage(){
		/**已领取分享奖励的次数 */
		this._times=0;
		ResZhiJianFollowSucMessage.__super.call(this);
	}

	__class(ResZhiJianFollowSucMessage,'net.message.misc.ResZhiJianFollowSucMessage',_super);
	var __proto=ResZhiJianFollowSucMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._times=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1557;
	}

	/**已领取分享奖励的次数 */
	/**已领取分享奖励的次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResZhiJianFollowSucMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活灵童
*/
//class net.message.soulboy.ReqSoulBoyActivationMessage extends net.Message
var ReqSoulBoyActivationMessage=(function(_super){
	function ReqSoulBoyActivationMessage(){
		/**灵童ID */
		this._id=0;
		ReqSoulBoyActivationMessage.__super.call(this);
	}

	__class(ReqSoulBoyActivationMessage,'net.message.soulboy.ReqSoulBoyActivationMessage',_super);
	var __proto=ReqSoulBoyActivationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 441;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqSoulBoyActivationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新赤壁任务
*/
//class net.message.chibi.ReqChibiRefreshTaskMessage extends net.Message
var ReqChibiRefreshTaskMessage=(function(_super){
	function ReqChibiRefreshTaskMessage(){
		ReqChibiRefreshTaskMessage.__super.call(this);;
	}

	__class(ReqChibiRefreshTaskMessage,'net.message.chibi.ReqChibiRefreshTaskMessage',_super);
	var __proto=ReqChibiRefreshTaskMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 402;
	}

	return ReqChibiRefreshTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求膜拜对象
*/
//class net.message.kingwar.ReqKingWarFightGetWorshipInfoMessage extends net.Message
var ReqKingWarFightGetWorshipInfoMessage=(function(_super){
	function ReqKingWarFightGetWorshipInfoMessage(){
		ReqKingWarFightGetWorshipInfoMessage.__super.call(this);;
	}

	__class(ReqKingWarFightGetWorshipInfoMessage,'net.message.kingwar.ReqKingWarFightGetWorshipInfoMessage',_super);
	var __proto=ReqKingWarFightGetWorshipInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1281;
	}

	return ReqKingWarFightGetWorshipInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*切换当前所在关卡副本ID
*/
//class net.message.dungeon.ReqChangeGuanQiaDungeonIDMessage extends net.Message
var ReqChangeGuanQiaDungeonIDMessage=(function(_super){
	function ReqChangeGuanQiaDungeonIDMessage(){
		ReqChangeGuanQiaDungeonIDMessage.__super.call(this);;
	}

	__class(ReqChangeGuanQiaDungeonIDMessage,'net.message.dungeon.ReqChangeGuanQiaDungeonIDMessage',_super);
	var __proto=ReqChangeGuanQiaDungeonIDMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 117;
	}

	return ReqChangeGuanQiaDungeonIDMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家领取积分奖励
*/
//class net.message.nineHeavy.ReqNineHeavyIntegralRewardMessage extends net.Message
var ReqNineHeavyIntegralRewardMessage=(function(_super){
	function ReqNineHeavyIntegralRewardMessage(){
		/**奖励的下标 0开始 */
		this._index=0;
		ReqNineHeavyIntegralRewardMessage.__super.call(this);
	}

	__class(ReqNineHeavyIntegralRewardMessage,'net.message.nineHeavy.ReqNineHeavyIntegralRewardMessage',_super);
	var __proto=ReqNineHeavyIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 388;
	}

	/**奖励的下标 0开始 */
	/**奖励的下标 0开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqNineHeavyIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始押运
*/
//class net.message.escort.ResStartEscortMessage extends net.Message
var ResStartEscortMessage=(function(_super){
	function ResStartEscortMessage(){
		/**押运的等级 */
		this._lv=0;
		/**押运的到期时间(秒)*/
		this._time=0;
		ResStartEscortMessage.__super.call(this);
	}

	__class(ResStartEscortMessage,'net.message.escort.ResStartEscortMessage',_super);
	var __proto=ResStartEscortMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._time=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 336;
	}

	/**押运的等级 */
	/**押运的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**押运的到期时间(秒)*/
	/**押运的到期时间(秒)*/
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ResStartEscortMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取星宿幻境信息
*/
//class net.message.pata.ReqGetXXHJInfoMessage extends net.Message
var ReqGetXXHJInfoMessage=(function(_super){
	function ReqGetXXHJInfoMessage(){
		ReqGetXXHJInfoMessage.__super.call(this);;
	}

	__class(ReqGetXXHJInfoMessage,'net.message.pata.ReqGetXXHJInfoMessage',_super);
	var __proto=ReqGetXXHJInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1031;
	}

	return ReqGetXXHJInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*降低等级(增加修为)
*/
//class net.message.zhuansheng.ResReduceLevelMessage extends net.Message
var ResReduceLevelMessage=(function(_super){
	function ResReduceLevelMessage(){
		ResReduceLevelMessage.__super.call(this);;
	}

	__class(ResReduceLevelMessage,'net.message.zhuansheng.ResReduceLevelMessage',_super);
	var __proto=ResReduceLevelMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 105;
	}

	return ResReduceLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝信息
*/
//class net.message.textureHunt.ResGetHuntInfoMessage extends net.Message
var ResGetHuntInfoMessage=(function(_super){
	function ResGetHuntInfoMessage(){
		/**当前第N轮 */
		this._round=0;
		/**全服祝福值 */
		this._serverLucky=0;
		ResGetHuntInfoMessage.__super.call(this);
		this._luckyPlayers=[];
	}

	__class(ResGetHuntInfoMessage,'net.message.textureHunt.ResGetHuntInfoMessage',_super);
	var __proto=ResGetHuntInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._round);
		this.writeInt(_buf,this._serverLucky);
		this.writeInt(_buf,this._luckyPlayers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._luckyPlayers.length;++i_am_tmp_i){
			this._luckyPlayers[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._round=this.readInt(_buf);
		this._serverLucky=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._luckyPlayers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._luckyPlayers[i_am_tmp_i]=this.readBeanInList(_buf,HuntLuckyPlayer);
		}
	}

	__proto.getId=function(){
		return 1181;
	}

	/**获奖玩家 */
	/**获奖玩家 */
	__getset(0,__proto,'luckyPlayers',function(){
		return this._luckyPlayers;
		},function(value){
		this._luckyPlayers=value;
	});

	/**当前第N轮 */
	/**当前第N轮 */
	__getset(0,__proto,'round',function(){
		return this._round;
		},function(value){
		this._round=value;
	});

	/**全服祝福值 */
	/**全服祝福值 */
	__getset(0,__proto,'serverLucky',function(){
		return this._serverLucky;
		},function(value){
		this._serverLucky=value;
	});

	return ResGetHuntInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求领取透支计划奖励错误
*/
//class net.message.investment.ResInvestmengUpdateTaskMessageErrorMessage extends net.Message
var ResInvestmengUpdateTaskMessageErrorMessage=(function(_super){
	function ResInvestmengUpdateTaskMessageErrorMessage(){
		/**1:你还没买;2:任务不存在;3:已经领取;4:没达到领取条件;*/
		this._error=0;
		ResInvestmengUpdateTaskMessageErrorMessage.__super.call(this);
	}

	__class(ResInvestmengUpdateTaskMessageErrorMessage,'net.message.investment.ResInvestmengUpdateTaskMessageErrorMessage',_super);
	var __proto=ResInvestmengUpdateTaskMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 676;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResInvestmengUpdateTaskMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*接受或者拒绝求婚
*/
//class net.message.marriage.ReqMarriageOperationProposeMessage extends net.Message
var ReqMarriageOperationProposeMessage=(function(_super){
	function ReqMarriageOperationProposeMessage(){
		/**求婚对象UID */
		this._uid=null;
		/**0拒绝 1接受 */
		this._type=0;
		ReqMarriageOperationProposeMessage.__super.call(this);
	}

	__class(ReqMarriageOperationProposeMessage,'net.message.marriage.ReqMarriageOperationProposeMessage',_super);
	var __proto=ReqMarriageOperationProposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 535;
	}

	/**0拒绝 1接受 */
	/**0拒绝 1接受 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**求婚对象UID */
	/**求婚对象UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ReqMarriageOperationProposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击BOSS的结果
*/
//class net.message.worldboss.ResWorldBossAttackResultMessage extends net.Message
var ResWorldBossAttackResultMessage=(function(_super){
	function ResWorldBossAttackResultMessage(){
		/**发起攻击者的ID */
		this._uid=null;
		/**BOSS剩余HP */
		this._hp=null;
		/**BOSS剩余护盾 */
		this._shield=null;
		/**0 玩家死亡 1 BOSS死亡 */
		this._result=0;
		ResWorldBossAttackResultMessage.__super.call(this);
	}

	__class(ResWorldBossAttackResultMessage,'net.message.worldboss.ResWorldBossAttackResultMessage',_super);
	var __proto=ResWorldBossAttackResultMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._shield);
		this.writeInt(_buf,this._result);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._hp=this.readLong(_buf);
		this._shield=this.readLong(_buf);
		this._result=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 514;
	}

	/**BOSS剩余HP */
	/**BOSS剩余HP */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**发起攻击者的ID */
	/**发起攻击者的ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**BOSS剩余护盾 */
	/**BOSS剩余护盾 */
	__getset(0,__proto,'shield',function(){
		return this._shield;
		},function(value){
		this._shield=value;
	});

	/**0 玩家死亡 1 BOSS死亡 */
	/**0 玩家死亡 1 BOSS死亡 */
	__getset(0,__proto,'result',function(){
		return this._result;
		},function(value){
		this._result=value;
	});

	return ResWorldBossAttackResultMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会成员信息刷新
*/
//class net.message.guild.ResGetLeginMemberInfoMessage extends net.Message
var ResGetLeginMemberInfoMessage=(function(_super){
	function ResGetLeginMemberInfoMessage(){
		ResGetLeginMemberInfoMessage.__super.call(this);
		this._memberBeanList=[];
	}

	__class(ResGetLeginMemberInfoMessage,'net.message.guild.ResGetLeginMemberInfoMessage',_super);
	var __proto=ResGetLeginMemberInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._memberBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._memberBeanList.length;++i_am_tmp_i){
			this._memberBeanList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._memberBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._memberBeanList[i_am_tmp_i]=this.readBeanInList(_buf,GuildMemberBean);
		}
	}

	__proto.getId=function(){
		return 1676;
	}

	/**帮会成员信息 */
	/**帮会成员信息 */
	__getset(0,__proto,'memberBeanList',function(){
		return this._memberBeanList;
		},function(value){
		this._memberBeanList=value;
	});

	return ResGetLeginMemberInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刀币翻倍活动
*/
//class net.message.activities.ReqGoldDoubleActMessage extends net.Message
var ReqGoldDoubleActMessage=(function(_super){
	function ReqGoldDoubleActMessage(){
		/**要投入的刀币的索引 */
		this._cfgIndex=0;
		ReqGoldDoubleActMessage.__super.call(this);
	}

	__class(ReqGoldDoubleActMessage,'net.message.activities.ReqGoldDoubleActMessage',_super);
	var __proto=ReqGoldDoubleActMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._cfgIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._cfgIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1548;
	}

	/**要投入的刀币的索引 */
	/**要投入的刀币的索引 */
	__getset(0,__proto,'cfgIndex',function(){
		return this._cfgIndex;
		},function(value){
		this._cfgIndex=value;
	});

	return ReqGoldDoubleActMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*御魂和灵分解
*/
//class net.message.soulboy.ResSoulBoyXilianTranslateMessage extends net.Message
var ResSoulBoyXilianTranslateMessage=(function(_super){
	function ResSoulBoyXilianTranslateMessage(){
		ResSoulBoyXilianTranslateMessage.__super.call(this);
		this._reward=[];
		this._items=[];
	}

	__class(ResSoulBoyXilianTranslateMessage,'net.message.soulboy.ResSoulBoyXilianTranslateMessage',_super);
	var __proto=ResSoulBoyXilianTranslateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._items.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._items.length;++i_am_tmp_i){
			this._items[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
		size52413035=this.readInt(_buf);
		this._items=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._items[i_am_tmp_i]=this.readBeanInList(_buf,GoodsIdAndIndexBean);
		}
	}

	__proto.getId=function(){
		return 554;
	}

	/**道具奖励 */
	/**道具奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	/**成功的道具 */
	/**成功的道具 */
	__getset(0,__proto,'items',function(){
		return this._items;
		},function(value){
		this._items=value;
	});

	return ResSoulBoyXilianTranslateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用觉醒
*/
//class net.message.upgrade.ReqCommonWakeUpMessage extends net.Message
var ReqCommonWakeUpMessage=(function(_super){
	function ReqCommonWakeUpMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**道具不足是否自动购买 */
		this._autoBuy=false;
		ReqCommonWakeUpMessage.__super.call(this);
	}

	__class(ReqCommonWakeUpMessage,'net.message.upgrade.ReqCommonWakeUpMessage',_super);
	var __proto=ReqCommonWakeUpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeBoolean(_buf,this._autoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 903;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具不足是否自动购买 */
	/**道具不足是否自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqCommonWakeUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征领奖
*/
//class net.message.yuanzheng.ResYuanZhengTakePrizeMessage extends net.Message
var ResYuanZhengTakePrizeMessage=(function(_super){
	function ResYuanZhengTakePrizeMessage(){
		/**当前可挑战关卡ID(0表示全部通关)*/
		this._guanqiaID=0;
		/**当前关卡对手信息 */
		this._target=null;
		ResYuanZhengTakePrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResYuanZhengTakePrizeMessage,'net.message.yuanzheng.ResYuanZhengTakePrizeMessage',_super);
	var __proto=ResYuanZhengTakePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeBean(_buf,this._target);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._target=this.readBean(_buf,ArenaUserBean);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 305;
	}

	/**当前可挑战关卡ID(0表示全部通关)*/
	/**当前可挑战关卡ID(0表示全部通关)*/
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**当前关卡对手信息 */
	/**当前关卡对手信息 */
	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResYuanZhengTakePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*战斗测试
*/
//class net.message.fight.ResFightTestMessage extends net.Message
var ResFightTestMessage=(function(_super){
	function ResFightTestMessage(){
		/**战斗结果 */
		this._bean=null;
		ResFightTestMessage.__super.call(this);
	}

	__class(ResFightTestMessage,'net.message.fight.ResFightTestMessage',_super);
	var __proto=ResFightTestMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 999;
	}

	/**战斗结果 */
	/**战斗结果 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResFightTestMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置镇守错误
*/
//class net.message.garrison.ResGarrisonSetGuardErrorMessage extends net.Message
var ResGarrisonSetGuardErrorMessage=(function(_super){
	function ResGarrisonSetGuardErrorMessage(){
		/**1:没有军师;2:军师已经驻守;3:系统未开启;*/
		this._error=0;
		ResGarrisonSetGuardErrorMessage.__super.call(this);
	}

	__class(ResGarrisonSetGuardErrorMessage,'net.message.garrison.ResGarrisonSetGuardErrorMessage',_super);
	var __proto=ResGarrisonSetGuardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1055;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonSetGuardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知收到花
*/
//class net.message.marriage.ResMarriageReceiveFlowersMessage extends net.Message
var ResMarriageReceiveFlowersMessage=(function(_super){
	function ResMarriageReceiveFlowersMessage(){
		/**送花人名字 */
		this._name=null;
		/**0开始 */
		this._type=0;
		/**数量 */
		this._count=0;
		/**增加的亲密度 */
		this._intimate=null;
		ResMarriageReceiveFlowersMessage.__super.call(this);
	}

	__class(ResMarriageReceiveFlowersMessage,'net.message.marriage.ResMarriageReceiveFlowersMessage',_super);
	var __proto=ResMarriageReceiveFlowersMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._count);
		this.writeLong(_buf,this._intimate);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._type=this.readInt(_buf);
		this._count=this.readInt(_buf);
		this._intimate=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 545;
	}

	/**送花人名字 */
	/**送花人名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**0开始 */
	/**0开始 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	/**增加的亲密度 */
	/**增加的亲密度 */
	__getset(0,__proto,'intimate',function(){
		return this._intimate;
		},function(value){
		this._intimate=value;
	});

	return ResMarriageReceiveFlowersMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新材料副本挑战次数
*/
//class net.message.dungeon.ResUpdateCaiLiaoDungeonTimeMessage extends net.Message
var ResUpdateCaiLiaoDungeonTimeMessage=(function(_super){
	function ResUpdateCaiLiaoDungeonTimeMessage(){
		ResUpdateCaiLiaoDungeonTimeMessage.__super.call(this);
		this._times=[];
	}

	__class(ResUpdateCaiLiaoDungeonTimeMessage,'net.message.dungeon.ResUpdateCaiLiaoDungeonTimeMessage',_super);
	var __proto=ResUpdateCaiLiaoDungeonTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._times.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._times.length;++i_am_tmp_i){
			this.writeInt(_buf,this._times[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._times=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._times[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1188;
	}

	/**已挑战次数 */
	/**已挑战次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	return ResUpdateCaiLiaoDungeonTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知结婚成功
*/
//class net.message.marriage.ResMarriageSuccessMessage extends net.Message
var ResMarriageSuccessMessage=(function(_super){
	function ResMarriageSuccessMessage(){
		/**结婚对象 */
		this._bean=null;
		ResMarriageSuccessMessage.__super.call(this);
	}

	__class(ResMarriageSuccessMessage,'net.message.marriage.ResMarriageSuccessMessage',_super);
	var __proto=ResMarriageSuccessMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,MarriageBean);
	}

	__proto.getId=function(){
		return 538;
	}

	/**结婚对象 */
	/**结婚对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResMarriageSuccessMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用战令领奖消息
*/
//class net.message.wartoken.ReqGetCommonWarTokenRewardMessage extends net.Message
var ReqGetCommonWarTokenRewardMessage=(function(_super){
	function ReqGetCommonWarTokenRewardMessage(){
		/**configId，一键领取传-1 */
		this._configId=0;
		/**战令类型 */
		this._warTokenType=0;
		/**单个领取时，要领取的是否高级奖励 */
		this._isBest=false;
		ReqGetCommonWarTokenRewardMessage.__super.call(this);
	}

	__class(ReqGetCommonWarTokenRewardMessage,'net.message.wartoken.ReqGetCommonWarTokenRewardMessage',_super);
	var __proto=ReqGetCommonWarTokenRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._configId);
		this.writeInt(_buf,this._warTokenType);
		this.writeBoolean(_buf,this._isBest);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._configId=this.readInt(_buf);
		this._warTokenType=this.readInt(_buf);
		this._isBest=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1582;
	}

	/**战令类型 */
	/**战令类型 */
	__getset(0,__proto,'warTokenType',function(){
		return this._warTokenType;
		},function(value){
		this._warTokenType=value;
	});

	/**configId，一键领取传-1 */
	/**configId，一键领取传-1 */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	/**单个领取时，要领取的是否高级奖励 */
	/**单个领取时，要领取的是否高级奖励 */
	__getset(0,__proto,'isBest',function(){
		return this._isBest;
		},function(value){
		this._isBest=value;
	});

	return ReqGetCommonWarTokenRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸获取膜拜奖励
*/
//class net.message.kingwar.ReqKingWarFightGetWorshipRewardMessage extends net.Message
var ReqKingWarFightGetWorshipRewardMessage=(function(_super){
	function ReqKingWarFightGetWorshipRewardMessage(){
		ReqKingWarFightGetWorshipRewardMessage.__super.call(this);;
	}

	__class(ReqKingWarFightGetWorshipRewardMessage,'net.message.kingwar.ReqKingWarFightGetWorshipRewardMessage',_super);
	var __proto=ReqKingWarFightGetWorshipRewardMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1283;
	}

	return ReqKingWarFightGetWorshipRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级或者替换御魂
*/
//class net.message.soulboy.ResSoulBoyHunUpgradeMessage extends net.Message
var ResSoulBoyHunUpgradeMessage=(function(_super){
	function ResSoulBoyHunUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		/**御灵下标 */
		this._index=0;
		/**类型 1 替换 2升级 */
		this._type=0;
		/**新的魂的ID */
		this._value=0;
		/**新的魂的等级 */
		this._lv=0;
		ResSoulBoyHunUpgradeMessage.__super.call(this);
	}

	__class(ResSoulBoyHunUpgradeMessage,'net.message.soulboy.ResSoulBoyHunUpgradeMessage',_super);
	var __proto=ResSoulBoyHunUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._value);
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._value=this.readInt(_buf);
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 454;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**御灵下标 */
	/**御灵下标 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**类型 1 替换 2升级 */
	/**类型 1 替换 2升级 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**新的魂的ID */
	/**新的魂的ID */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	/**新的魂的等级 */
	/**新的魂的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResSoulBoyHunUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更换洗练技能
*/
//class net.message.pet.ResReplaceXiLianPetMessage extends net.Message
var ResReplaceXiLianPetMessage=(function(_super){
	function ResReplaceXiLianPetMessage(){
		/**宠物ID */
		this._petID=0;
		ResReplaceXiLianPetMessage.__super.call(this);
		this._skills=[];
	}

	__class(ResReplaceXiLianPetMessage,'net.message.pet.ResReplaceXiLianPetMessage',_super);
	var __proto=ResReplaceXiLianPetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 155;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**技能列表 */
	/**技能列表 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return ResReplaceXiLianPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*图鉴分解错误
*/
//class net.message.handbook.ResHandBookDecomposeErrorMessage extends net.Message
var ResHandBookDecomposeErrorMessage=(function(_super){
	function ResHandBookDecomposeErrorMessage(){
		/**1:消耗不足;2:其他错误;*/
		this._error=0;
		ResHandBookDecomposeErrorMessage.__super.call(this);
	}

	__class(ResHandBookDecomposeErrorMessage,'net.message.handbook.ResHandBookDecomposeErrorMessage',_super);
	var __proto=ResHandBookDecomposeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1124;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResHandBookDecomposeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*一键使用属性丹
*/
//class net.message.goods.ReqUseAttributeGoodsQuickMessage extends net.Message
var ReqUseAttributeGoodsQuickMessage=(function(_super){
	function ReqUseAttributeGoodsQuickMessage(){
		ReqUseAttributeGoodsQuickMessage.__super.call(this);;
	}

	__class(ReqUseAttributeGoodsQuickMessage,'net.message.goods.ReqUseAttributeGoodsQuickMessage',_super);
	var __proto=ReqUseAttributeGoodsQuickMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1195;
	}

	return ReqUseAttributeGoodsQuickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*背包使用道具(使用类型道具)
*/
//class net.message.goods.ResUseGoodsMessage extends net.Message
var ResUseGoodsMessage=(function(_super){
	function ResUseGoodsMessage(){
		ResUseGoodsMessage.__super.call(this);;
	}

	__class(ResUseGoodsMessage,'net.message.goods.ResUseGoodsMessage',_super);
	var __proto=ResUseGoodsMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 26;
	}

	return ResUseGoodsMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取所有军团的简要信息错误
*/
//class net.message.guild.ResGuildGetAllErrorMessage extends net.Message
var ResGuildGetAllErrorMessage=(function(_super){
	function ResGuildGetAllErrorMessage(){
		/***/
		this._error=0;
		ResGuildGetAllErrorMessage.__super.call(this);
	}

	__class(ResGuildGetAllErrorMessage,'net.message.guild.ResGuildGetAllErrorMessage',_super);
	var __proto=ResGuildGetAllErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1235;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildGetAllErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看霸主错误
*/
//class net.message.garrison.ResGarrisonGetOverLoadErrorMessage extends net.Message
var ResGarrisonGetOverLoadErrorMessage=(function(_super){
	function ResGarrisonGetOverLoadErrorMessage(){
		/**1:系统未开启;*/
		this._error=0;
		ResGarrisonGetOverLoadErrorMessage.__super.call(this);
	}

	__class(ResGarrisonGetOverLoadErrorMessage,'net.message.garrison.ResGarrisonGetOverLoadErrorMessage',_super);
	var __proto=ResGarrisonGetOverLoadErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1066;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonGetOverLoadErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天赋
*/
//class net.message.adviser.ResAdviserUpgradeTalentMessage extends net.Message
var ResAdviserUpgradeTalentMessage=(function(_super){
	function ResAdviserUpgradeTalentMessage(){
		/**新的等级 */
		this._lv=0;
		ResAdviserUpgradeTalentMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeTalentMessage,'net.message.adviser.ResAdviserUpgradeTalentMessage',_super);
	var __proto=ResAdviserUpgradeTalentMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1017;
	}

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResAdviserUpgradeTalentMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*开始副本
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomStartFightMessage extends net.Message
var ResTeamDuplicateRoomStartFightMessage=(function(_super){
	function ResTeamDuplicateRoomStartFightMessage(){
		/**副本ID */
		this._qid=0;
		/**战斗数据 */
		this._data=null;
		ResTeamDuplicateRoomStartFightMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomStartFightMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomStartFightMessage',_super);
	var __proto=ResTeamDuplicateRoomStartFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 430;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResTeamDuplicateRoomStartFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求获得守护每日奖励
*/
//class net.message.legion.ResLegionGuardRewardMessageMessage extends net.Message
var ResLegionGuardRewardMessageMessage=(function(_super){
	function ResLegionGuardRewardMessageMessage(){
		/**奖励ID */
		this._id=0;
		ResLegionGuardRewardMessageMessage.__super.call(this);
	}

	__class(ResLegionGuardRewardMessageMessage,'net.message.legion.ResLegionGuardRewardMessageMessage',_super);
	var __proto=ResLegionGuardRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 622;
	}

	/**奖励ID */
	/**奖励ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResLegionGuardRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家离开
*/
//class net.message.worldboss.ResWorldBossLeaveMessage extends net.Message
var ResWorldBossLeaveMessage=(function(_super){
	function ResWorldBossLeaveMessage(){
		/**离开者的UID */
		this._uid=null;
		ResWorldBossLeaveMessage.__super.call(this);
	}

	__class(ResWorldBossLeaveMessage,'net.message.worldboss.ResWorldBossLeaveMessage',_super);
	var __proto=ResWorldBossLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 508;
	}

	/**离开者的UID */
	/**离开者的UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResWorldBossLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*删除包裹中的道具
*/
//class net.message.packet.ResRemoveItemInPacketMessage extends net.Message
var ResRemoveItemInPacketMessage=(function(_super){
	function ResRemoveItemInPacketMessage(){
		/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
		this._packetType=0;
		/**包裹中的位置 */
		this._index=0;
		ResRemoveItemInPacketMessage.__super.call(this);
	}

	__class(ResRemoveItemInPacketMessage,'net.message.packet.ResRemoveItemInPacketMessage',_super);
	var __proto=ResRemoveItemInPacketMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._packetType);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._packetType=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 16;
	}

	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	/**包裹类型[1:装备][2:道具][3:战纹][4:秘宝] */
	__getset(0,__proto,'packetType',function(){
		return this._packetType;
		},function(value){
		this._packetType=value;
	});

	/**包裹中的位置 */
	/**包裹中的位置 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResRemoveItemInPacketMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成装备打造石
*/
//class net.message.equip.ReqEquipMakingStoneMessage extends net.Message
var ReqEquipMakingStoneMessage=(function(_super){
	function ReqEquipMakingStoneMessage(){
		/**合成的序号 */
		this._id=0;
		/**合成的数量 */
		this._num=0;
		/**是否一键合成 1=是 0=不是 */
		this._isOneCompose=0;
		ReqEquipMakingStoneMessage.__super.call(this);
	}

	__class(ReqEquipMakingStoneMessage,'net.message.equip.ReqEquipMakingStoneMessage',_super);
	var __proto=ReqEquipMakingStoneMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
		this.writeInt(_buf,this._isOneCompose);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
		this._isOneCompose=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1478;
	}

	/**合成的序号 */
	/**合成的序号 */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**合成的数量 */
	/**合成的数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	/**是否一键合成 1=是 0=不是 */
	/**是否一键合成 1=是 0=不是 */
	__getset(0,__proto,'isOneCompose',function(){
		return this._isOneCompose;
		},function(value){
		this._isOneCompose=value;
	});

	return ReqEquipMakingStoneMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合体
*/
//class net.message.fit.ResFitSynthesisMessage extends net.Message
var ResFitSynthesisMessage=(function(_super){
	function ResFitSynthesisMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		/**合体对象 */
		this._fitBean=null;
		ResFitSynthesisMessage.__super.call(this);
	}

	__class(ResFitSynthesisMessage,'net.message.fit.ResFitSynthesisMessage',_super);
	var __proto=ResFitSynthesisMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._fitBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._fitBean=this.readBean(_buf,FitBean);
	}

	__proto.getId=function(){
		return 1147;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**合体对象 */
	/**合体对象 */
	__getset(0,__proto,'fitBean',function(){
		return this._fitBean;
		},function(value){
		this._fitBean=value;
	});

	return ResFitSynthesisMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宠物升级
*/
//class net.message.pet.ReqUpgradePetLevelMessage extends net.Message
var ReqUpgradePetLevelMessage=(function(_super){
	function ReqUpgradePetLevelMessage(){
		/**宠物ID */
		this._petID=0;
		/**是否自动购买道具 */
		this._autoBuy=false;
		ReqUpgradePetLevelMessage.__super.call(this);
	}

	__class(ReqUpgradePetLevelMessage,'net.message.pet.ReqUpgradePetLevelMessage',_super);
	var __proto=ReqUpgradePetLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeBoolean(_buf,this._autoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 157;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**是否自动购买道具 */
	/**是否自动购买道具 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	return ReqUpgradePetLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*捕获宠物
*/
//class net.message.pet.ReqTameWildPetMessage extends net.Message
var ReqTameWildPetMessage=(function(_super){
	function ReqTameWildPetMessage(){
		ReqTameWildPetMessage.__super.call(this);;
	}

	__class(ReqTameWildPetMessage,'net.message.pet.ReqTameWildPetMessage',_super);
	var __proto=ReqTameWildPetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 191;
	}

	return ReqTameWildPetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家移动
*/
//class net.message.worldboss.ReqWorldBossMoveMessage extends net.Message
var ReqWorldBossMoveMessage=(function(_super){
	function ReqWorldBossMoveMessage(){
		/**移动的位置 */
		this._point=null;
		ReqWorldBossMoveMessage.__super.call(this);
	}

	__class(ReqWorldBossMoveMessage,'net.message.worldboss.ReqWorldBossMoveMessage',_super);
	var __proto=ReqWorldBossMoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._point);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._point=this.readBean(_buf,Point);
	}

	__proto.getId=function(){
		return 504;
	}

	/**移动的位置 */
	/**移动的位置 */
	__getset(0,__proto,'point',function(){
		return this._point;
		},function(value){
		this._point=value;
	});

	return ReqWorldBossMoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*关注的物品上架
*/
//class net.message.auction.ResAuctionAttentionNotifyMessage extends net.Message
var ResAuctionAttentionNotifyMessage=(function(_super){
	function ResAuctionAttentionNotifyMessage(){
		/**道具类型 */
		this._itemType=0;
		/**物品子类型 */
		this._type2=0;
		ResAuctionAttentionNotifyMessage.__super.call(this);
	}

	__class(ResAuctionAttentionNotifyMessage,'net.message.auction.ResAuctionAttentionNotifyMessage',_super);
	var __proto=ResAuctionAttentionNotifyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemType);
		this.writeInt(_buf,this._type2);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._itemType=this.readInt(_buf);
		this._type2=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1378;
	}

	/**道具类型 */
	/**道具类型 */
	__getset(0,__proto,'itemType',function(){
		return this._itemType;
		},function(value){
		this._itemType=value;
	});

	/**物品子类型 */
	/**物品子类型 */
	__getset(0,__proto,'type2',function(){
		return this._type2;
		},function(value){
		this._type2=value;
	});

	return ResAuctionAttentionNotifyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新空城计玩家
*/
//class net.message.emptycity.ResEmptyUpdatePlayerMessage extends net.Message
var ResEmptyUpdatePlayerMessage=(function(_super){
	function ResEmptyUpdatePlayerMessage(){
		/***/
		this._bean=null;
		ResEmptyUpdatePlayerMessage.__super.call(this);
	}

	__class(ResEmptyUpdatePlayerMessage,'net.message.emptycity.ResEmptyUpdatePlayerMessage',_super);
	var __proto=ResEmptyUpdatePlayerMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,EmptyCityPlayerBean);
	}

	__proto.getId=function(){
		return 1097;
	}

	/***/
	/***/
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEmptyUpdatePlayerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*踢人
*/
//class net.message.login.ResKickMessage extends net.Message
var ResKickMessage=(function(_super){
	function ResKickMessage(){
		/**为何踢人[1:版本不一致][2:验证未通过][3:多次发送登录消息][4:顶号][5:流程错误][6:非法消息] */
		this._type=0;
		ResKickMessage.__super.call(this);
	}

	__class(ResKickMessage,'net.message.login.ResKickMessage',_super);
	var __proto=ResKickMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1;
	}

	/**为何踢人[1:版本不一致][2:验证未通过][3:多次发送登录消息][4:顶号][5:流程错误][6:非法消息] */
	/**为何踢人[1:版本不一致][2:验证未通过][3:多次发送登录消息][4:顶号][5:流程错误][6:非法消息] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物
*/
//class net.message.rank.ResGetRankInfoMessage extends net.Message
var ResGetRankInfoMessage=(function(_super){
	function ResGetRankInfoMessage(){
		/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
		this._type=0;
		/**页 */
		this._page=0;
		/**第一名 */
		this._first=null;
		/**我的排名,0表示未上榜 */
		this._myRank=0;
		/**我的值 */
		this._myValue=null;
		/**总页数 */
		this._pageMax=0;
		ResGetRankInfoMessage.__super.call(this);
		this._users=[];
	}

	__class(ResGetRankInfoMessage,'net.message.rank.ResGetRankInfoMessage',_super);
	var __proto=ResGetRankInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._page);
		this.writeBean(_buf,this._first);
		this.writeInt(_buf,this._users.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._users.length;++i_am_tmp_i){
			this._users[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myRank);
		this.writeLong(_buf,this._myValue);
		this.writeInt(_buf,this._pageMax);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._page=this.readInt(_buf);
		this._first=this.readBean(_buf,RankBeanUser);
		size52413035=this.readInt(_buf);
		this._users=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._users[i_am_tmp_i]=this.readBeanInList(_buf,RankBeanUser);
		}
		this._myRank=this.readInt(_buf);
		this._myValue=this.readLong(_buf);
		this._pageMax=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 269;
	}

	/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
	/**排行榜类型[1:战力榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][2:等级榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][3:坐骑(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][4:翅膀榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][5:精灵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][6:神兵榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][7:守护榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][8:光环榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][9:符文榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][10:秘核榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][11:虎牢榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][12:长坂坡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][13:铜雀台榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][14:关卡榜(职业,性别,武器ID,坐骑等级,翅膀等级,精灵等级)][15:红颜][16:军师][17:蛮将][18:武将][19:红颜阵法榜][20:红颜灵气榜][21:红颜总等级][22:蛮将总等级][23:军师总等级][24:合体战力][25:消费排行][26:华容道排行][27:蛮族禁地排行][28:魏国武将排行][29:蜀国武将排行][30:吴国武将排行][31:群雄武将排行][32:结婚爬塔排行][33:机关进阶排行][34:试炼之塔榜][35:连服充值排行][36:连服消耗排行] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**页 */
	/**页 */
	__getset(0,__proto,'page',function(){
		return this._page;
		},function(value){
		this._page=value;
	});

	/**我的排名,0表示未上榜 */
	/**我的排名,0表示未上榜 */
	__getset(0,__proto,'myRank',function(){
		return this._myRank;
		},function(value){
		this._myRank=value;
	});

	/**第一名 */
	/**第一名 */
	__getset(0,__proto,'first',function(){
		return this._first;
		},function(value){
		this._first=value;
	});

	/**排行信息 */
	/**排行信息 */
	__getset(0,__proto,'users',function(){
		return this._users;
		},function(value){
		this._users=value;
	});

	/**总页数 */
	/**总页数 */
	__getset(0,__proto,'pageMax',function(){
		return this._pageMax;
		},function(value){
		this._pageMax=value;
	});

	/**我的值 */
	/**我的值 */
	__getset(0,__proto,'myValue',function(){
		return this._myValue;
		},function(value){
		this._myValue=value;
	});

	return ResGetRankInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级技能
*/
//class net.message.skill.ResUpgradeSkillMessage extends net.Message
var ResUpgradeSkillMessage=(function(_super){
	function ResUpgradeSkillMessage(){
		/**技能 */
		this._skill=null;
		ResUpgradeSkillMessage.__super.call(this);
	}

	__class(ResUpgradeSkillMessage,'net.message.skill.ResUpgradeSkillMessage',_super);
	var __proto=ResUpgradeSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._skill);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skill=this.readBean(_buf,SkillBean);
	}

	__proto.getId=function(){
		return 92;
	}

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skill',function(){
		return this._skill;
		},function(value){
		this._skill=value;
	});

	return ResUpgradeSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击错误
*/
//class net.message.nineHeavy.ResNineHeavyPayRebornErrorMessage extends net.Message
var ResNineHeavyPayRebornErrorMessage=(function(_super){
	function ResNineHeavyPayRebornErrorMessage(){
		/**1:你没死;2:穷;*/
		this._error=0;
		ResNineHeavyPayRebornErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyPayRebornErrorMessage,'net.message.nineHeavy.ResNineHeavyPayRebornErrorMessage',_super);
	var __proto=ResNineHeavyPayRebornErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 997;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyPayRebornErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新所有道具商店商品购买次数限制
*/
//class net.message.shop.ResUpdateAllShopGoodsBuyTimesMessage extends net.Message
var ResUpdateAllShopGoodsBuyTimesMessage=(function(_super){
	function ResUpdateAllShopGoodsBuyTimesMessage(){
		ResUpdateAllShopGoodsBuyTimesMessage.__super.call(this);
		this._list=[];
	}

	__class(ResUpdateAllShopGoodsBuyTimesMessage,'net.message.shop.ResUpdateAllShopGoodsBuyTimesMessage',_super);
	var __proto=ResUpdateAllShopGoodsBuyTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,ShopGoodsBuyTimesBean);
		}
	}

	__proto.getId=function(){
		return 1426;
	}

	/**商店商品购买次数 */
	/**商店商品购买次数 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResUpdateAllShopGoodsBuyTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会改名
*/
//class net.message.guild.ReqGuildChangeNoticeMessage extends net.Message
var ReqGuildChangeNoticeMessage=(function(_super){
	function ReqGuildChangeNoticeMessage(){
		/**修改的公告 */
		this._notice=null;
		ReqGuildChangeNoticeMessage.__super.call(this);
	}

	__class(ReqGuildChangeNoticeMessage,'net.message.guild.ReqGuildChangeNoticeMessage',_super);
	var __proto=ReqGuildChangeNoticeMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._notice);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._notice=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1218;
	}

	/**修改的公告 */
	/**修改的公告 */
	__getset(0,__proto,'notice',function(){
		return this._notice;
		},function(value){
		this._notice=value;
	});

	return ReqGuildChangeNoticeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸购买战斗次数
*/
//class net.message.kingwar.ReqKingWarBuyCountMessage extends net.Message
var ReqKingWarBuyCountMessage=(function(_super){
	function ReqKingWarBuyCountMessage(){
		ReqKingWarBuyCountMessage.__super.call(this);;
	}

	__class(ReqKingWarBuyCountMessage,'net.message.kingwar.ReqKingWarBuyCountMessage',_super);
	var __proto=ReqKingWarBuyCountMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 495;
	}

	return ReqKingWarBuyCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战目标错误
*/
//class net.message.garrison.ResGarrisonChallengeTargetErrorMessage extends net.Message
var ResGarrisonChallengeTargetErrorMessage=(function(_super){
	function ResGarrisonChallengeTargetErrorMessage(){
		/**1:次数不足;2:没有目标或者目标已经过期;3:系统未开启;*/
		this._error=0;
		ResGarrisonChallengeTargetErrorMessage.__super.call(this);
	}

	__class(ResGarrisonChallengeTargetErrorMessage,'net.message.garrison.ResGarrisonChallengeTargetErrorMessage',_super);
	var __proto=ResGarrisonChallengeTargetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1051;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGarrisonChallengeTargetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取巡城排行榜
*/
//class net.message.garrison.ResGarrisonGerRankMessage extends net.Message
var ResGarrisonGerRankMessage=(function(_super){
	function ResGarrisonGerRankMessage(){
		/**0 个人 1 军团 */
		this._type=0;
		ResGarrisonGerRankMessage.__super.call(this);
		this._ranks=[];
		this._weekRanks=[];
	}

	__class(ResGarrisonGerRankMessage,'net.message.garrison.ResGarrisonGerRankMessage',_super);
	var __proto=ResGarrisonGerRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._ranks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._ranks.length;++i_am_tmp_i){
			this._ranks[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._weekRanks.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._weekRanks.length;++i_am_tmp_i){
			this._weekRanks[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._ranks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._ranks[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonRankBean);
		}
		size52413035=this.readInt(_buf);
		this._weekRanks=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._weekRanks[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonRankBean);
		}
	}

	__proto.getId=function(){
		return 1062;
	}

	/**0 个人 1 军团 */
	/**0 个人 1 军团 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'weekRanks',function(){
		return this._weekRanks;
		},function(value){
		this._weekRanks=value;
	});

	/**数据 */
	/**数据 */
	__getset(0,__proto,'ranks',function(){
		return this._ranks;
		},function(value){
		this._ranks=value;
	});

	return ResGarrisonGerRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*活动次数变更
*/
//class net.message.activitys.ResUpdateHuoDongNumMessage extends net.Message
var ResUpdateHuoDongNumMessage=(function(_super){
	function ResUpdateHuoDongNumMessage(){
		ResUpdateHuoDongNumMessage.__super.call(this);
		this._huodongNum=[];
	}

	__class(ResUpdateHuoDongNumMessage,'net.message.activitys.ResUpdateHuoDongNumMessage',_super);
	var __proto=ResUpdateHuoDongNumMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._huodongNum.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._huodongNum.length;++i_am_tmp_i){
			this.writeInt(_buf,this._huodongNum[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._huodongNum=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._huodongNum[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1015;
	}

	/**参加活动次数 */
	/**参加活动次数 */
	__getset(0,__proto,'huodongNum',function(){
		return this._huodongNum;
		},function(value){
		this._huodongNum=value;
	});

	return ResUpdateHuoDongNumMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*置换秘籍
*/
//class net.message.miji.ResExchangeMijiMessage extends net.Message
var ResExchangeMijiMessage=(function(_super){
	function ResExchangeMijiMessage(){
		/**置换的秘籍 */
		this._goods=null;
		ResExchangeMijiMessage.__super.call(this);
	}

	__class(ResExchangeMijiMessage,'net.message.miji.ResExchangeMijiMessage',_super);
	var __proto=ResExchangeMijiMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._goods);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._goods=this.readBean(_buf,GoodsBean);
	}

	__proto.getId=function(){
		return 81;
	}

	/**置换的秘籍 */
	/**置换的秘籍 */
	__getset(0,__proto,'goods',function(){
		return this._goods;
		},function(value){
		this._goods=value;
	});

	return ResExchangeMijiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求攻击玩家
*/
//class net.message.gb.ReqLegionBattleLeaveMessage extends net.Message
var ReqLegionBattleLeaveMessage=(function(_super){
	function ReqLegionBattleLeaveMessage(){
		ReqLegionBattleLeaveMessage.__super.call(this);;
	}

	__class(ReqLegionBattleLeaveMessage,'net.message.gb.ReqLegionBattleLeaveMessage',_super);
	var __proto=ReqLegionBattleLeaveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1331;
	}

	return ReqLegionBattleLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*打造装备
*/
//class net.message.equip.ResEquipSuitActiveMessage extends net.Message
var ResEquipSuitActiveMessage=(function(_super){
	function ResEquipSuitActiveMessage(){
		ResEquipSuitActiveMessage.__super.call(this);
		this._suitInfo=[];
	}

	__class(ResEquipSuitActiveMessage,'net.message.equip.ResEquipSuitActiveMessage',_super);
	var __proto=ResEquipSuitActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._suitInfo.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._suitInfo.length;++i_am_tmp_i){
			this._suitInfo[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._suitInfo=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._suitInfo[i_am_tmp_i]=this.readBeanInList(_buf,EquipSuitBean);
		}
	}

	__proto.getId=function(){
		return 1485;
	}

	/**套装信息 */
	/**套装信息 */
	__getset(0,__proto,'suitInfo',function(){
		return this._suitInfo;
		},function(value){
		this._suitInfo=value;
	});

	return ResEquipSuitActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新已经领取的积分奖励
*/
//class net.message.gb.ResLegionBattleUpdateScorePrizeMessage extends net.Message
var ResLegionBattleUpdateScorePrizeMessage=(function(_super){
	function ResLegionBattleUpdateScorePrizeMessage(){
		ResLegionBattleUpdateScorePrizeMessage.__super.call(this);
		this._prizes=[];
	}

	__class(ResLegionBattleUpdateScorePrizeMessage,'net.message.gb.ResLegionBattleUpdateScorePrizeMessage',_super);
	var __proto=ResLegionBattleUpdateScorePrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._prizes.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizes.length;++i_am_tmp_i){
			this.writeInt(_buf,this._prizes[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._prizes=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizes[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1356;
	}

	/**领取过的奖励 */
	/**领取过的奖励 */
	__getset(0,__proto,'prizes',function(){
		return this._prizes;
		},function(value){
		this._prizes=value;
	});

	return ResLegionBattleUpdateScorePrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*分解装备错误
*/
//class net.message.goods.ResDisposeEquipErrorMessage extends net.Message
var ResDisposeEquipErrorMessage=(function(_super){
	function ResDisposeEquipErrorMessage(){
		/**1:参数错误;2:数量错误;3:不可分解;4:背包满;5:英雄不存在;6:装备不存在;*/
		this._error=0;
		ResDisposeEquipErrorMessage.__super.call(this);
	}

	__class(ResDisposeEquipErrorMessage,'net.message.goods.ResDisposeEquipErrorMessage',_super);
	var __proto=ResDisposeEquipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 210;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResDisposeEquipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*拉取伴侣外形错误
*/
//class net.message.marriage.ResMarriageGetTeammateSkinErrorMessage extends net.Message
var ResMarriageGetTeammateSkinErrorMessage=(function(_super){
	function ResMarriageGetTeammateSkinErrorMessage(){
		/**1:未结婚;*/
		this._error=0;
		ResMarriageGetTeammateSkinErrorMessage.__super.call(this);
	}

	__class(ResMarriageGetTeammateSkinErrorMessage,'net.message.marriage.ResMarriageGetTeammateSkinErrorMessage',_super);
	var __proto=ResMarriageGetTeammateSkinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 541;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageGetTeammateSkinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取师门环奖励错误
*/
//class net.message.shimen.ResTakeShiMenRoundPrizeErrorMessage extends net.Message
var ResTakeShiMenRoundPrizeErrorMessage=(function(_super){
	function ResTakeShiMenRoundPrizeErrorMessage(){
		/**1:完成次数不足;2:领过奖了;3:没钱;*/
		this._error=0;
		ResTakeShiMenRoundPrizeErrorMessage.__super.call(this);
	}

	__class(ResTakeShiMenRoundPrizeErrorMessage,'net.message.shimen.ResTakeShiMenRoundPrizeErrorMessage',_super);
	var __proto=ResTakeShiMenRoundPrizeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 144;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeShiMenRoundPrizeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取远征信息错误
*/
//class net.message.yuanzheng.ResYuanZhengGetInfoErrorMessage extends net.Message
var ResYuanZhengGetInfoErrorMessage=(function(_super){
	function ResYuanZhengGetInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResYuanZhengGetInfoErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengGetInfoErrorMessage,'net.message.yuanzheng.ResYuanZhengGetInfoErrorMessage',_super);
	var __proto=ResYuanZhengGetInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 294;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengGetInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建军团错误
*/
//class net.message.guild.ResGuildCreateErrorMessage extends net.Message
var ResGuildCreateErrorMessage=(function(_super){
	function ResGuildCreateErrorMessage(){
		/**1:消耗不足;2:名字非法;3:重复名字;4:在帮会中了;5:军团战期间无法进行该操作;6:VIP等级不足;7:CD中;8:等级不足;*/
		this._error=0;
		ResGuildCreateErrorMessage.__super.call(this);
	}

	__class(ResGuildCreateErrorMessage,'net.message.guild.ResGuildCreateErrorMessage',_super);
	var __proto=ResGuildCreateErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1226;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildCreateErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入军团错误
*/
//class net.message.guild.ResGuildApplyErrorMessage extends net.Message
var ResGuildApplyErrorMessage=(function(_super){
	function ResGuildApplyErrorMessage(){
		/**1:帮会不存在;2:帮会满;3:你有军团;4:重复申请;5:申请列表满;6:CD中;7:战力不足;*/
		this._error=0;
		ResGuildApplyErrorMessage.__super.call(this);
	}

	__class(ResGuildApplyErrorMessage,'net.message.guild.ResGuildApplyErrorMessage',_super);
	var __proto=ResGuildApplyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1205;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGuildApplyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新排行榜
*/
//class net.message.worldboss.ResWorldBossUpdateRankMessage extends net.Message
var ResWorldBossUpdateRankMessage=(function(_super){
	function ResWorldBossUpdateRankMessage(){
		ResWorldBossUpdateRankMessage.__super.call(this);
		this._rank=[];
		this._user_rank=[];
	}

	__class(ResWorldBossUpdateRankMessage,'net.message.worldboss.ResWorldBossUpdateRankMessage',_super);
	var __proto=ResWorldBossUpdateRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._user_rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._user_rank.length;++i_am_tmp_i){
			this._user_rank[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,WorldBossRankBean);
		}
		size52413035=this.readInt(_buf);
		this._user_rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._user_rank[i_am_tmp_i]=this.readBeanInList(_buf,WorldBossUserRankBean);
		}
	}

	__proto.getId=function(){
		return 518;
	}

	/**更新 */
	/**更新 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**更新 */
	/**更新 */
	__getset(0,__proto,'user_rank',function(){
		return this._user_rank;
		},function(value){
		this._user_rank=value;
	});

	return ResWorldBossUpdateRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取团购信息
*/
//class net.message.tuangou.ReqTuanGouGetInfoMessage extends net.Message
var ReqTuanGouGetInfoMessage=(function(_super){
	function ReqTuanGouGetInfoMessage(){
		ReqTuanGouGetInfoMessage.__super.call(this);;
	}

	__class(ReqTuanGouGetInfoMessage,'net.message.tuangou.ReqTuanGouGetInfoMessage',_super);
	var __proto=ReqTuanGouGetInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1395;
	}

	return ReqTuanGouGetInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求求婚
*/
//class net.message.marriage.ResMarriageProposeMessage extends net.Message
var ResMarriageProposeMessage=(function(_super){
	function ResMarriageProposeMessage(){
		/**今日的剩余求婚次数 */
		this._count=0;
		ResMarriageProposeMessage.__super.call(this);
	}

	__class(ResMarriageProposeMessage,'net.message.marriage.ResMarriageProposeMessage',_super);
	var __proto=ResMarriageProposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 532;
	}

	/**今日的剩余求婚次数 */
	/**今日的剩余求婚次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResMarriageProposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新场景同帮人数
*/
//class net.message.gb.ResLegionBattleUpdateSceneCountMessage extends net.Message
var ResLegionBattleUpdateSceneCountMessage=(function(_super){
	function ResLegionBattleUpdateSceneCountMessage(){
		/**我的帮会在当前场景的人数 */
		this._count=0;
		ResLegionBattleUpdateSceneCountMessage.__super.call(this);
	}

	__class(ResLegionBattleUpdateSceneCountMessage,'net.message.gb.ResLegionBattleUpdateSceneCountMessage',_super);
	var __proto=ResLegionBattleUpdateSceneCountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1330;
	}

	/**我的帮会在当前场景的人数 */
	/**我的帮会在当前场景的人数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResLegionBattleUpdateSceneCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征复活
*/
//class net.message.yuanzheng.ReqYuanZhengReliveMessage extends net.Message
var ReqYuanZhengReliveMessage=(function(_super){
	function ReqYuanZhengReliveMessage(){
		ReqYuanZhengReliveMessage.__super.call(this);;
	}

	__class(ReqYuanZhengReliveMessage,'net.message.yuanzheng.ReqYuanZhengReliveMessage',_super);
	var __proto=ReqYuanZhengReliveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 295;
	}

	return ReqYuanZhengReliveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进阶奖励
*/
//class net.message.advanceReward.ReqAdvancedRewardMessage extends net.Message
var ReqAdvancedRewardMessage=(function(_super){
	function ReqAdvancedRewardMessage(){
		/**id */
		this._id=0;
		ReqAdvancedRewardMessage.__super.call(this);
	}

	__class(ReqAdvancedRewardMessage,'net.message.advanceReward.ReqAdvancedRewardMessage',_super);
	var __proto=ReqAdvancedRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 722;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqAdvancedRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮派添加成员
*/
//class net.message.guild.ResGuildMemberAddMessage extends net.Message
var ResGuildMemberAddMessage=(function(_super){
	function ResGuildMemberAddMessage(){
		/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
		this._type=0;
		/**成员信息 */
		this._member=null;
		ResGuildMemberAddMessage.__super.call(this);
	}

	__class(ResGuildMemberAddMessage,'net.message.guild.ResGuildMemberAddMessage',_super);
	var __proto=ResGuildMemberAddMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeBean(_buf,this._member);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._member=this.readBean(_buf,GuildMemberBean);
	}

	__proto.getId=function(){
		return 1246;
	}

	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	/**成员类型[1:申请者][2:被邀请者][3:正式成员] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**成员信息 */
	/**成员信息 */
	__getset(0,__proto,'member',function(){
		return this._member;
		},function(value){
		this._member=value;
	});

	return ResGuildMemberAddMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装错误
*/
//class net.message.skin.ResActivateSkinErrorMessage extends net.Message
var ResActivateSkinErrorMessage=(function(_super){
	function ResActivateSkinErrorMessage(){
		/**1:穷;2:该皮肤只能针对第一个英雄;3:已经有了该皮肤;4:时装不存在;5:英雄不存在;*/
		this._error=0;
		ResActivateSkinErrorMessage.__super.call(this);
	}

	__class(ResActivateSkinErrorMessage,'net.message.skin.ResActivateSkinErrorMessage',_super);
	var __proto=ResActivateSkinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 576;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResActivateSkinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入试炼之塔主界面错误
*/
//class net.message.towerFight.ResEnterTowerErrorMessage extends net.Message
var ResEnterTowerErrorMessage=(function(_super){
	function ResEnterTowerErrorMessage(){
		/***/
		this._error=0;
		ResEnterTowerErrorMessage.__super.call(this);
	}

	__class(ResEnterTowerErrorMessage,'net.message.towerFight.ResEnterTowerErrorMessage',_super);
	var __proto=ResEnterTowerErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1612;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEnterTowerErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更改名字
*/
//class net.message.user.ResUpdateNameMessage extends net.Message
var ResUpdateNameMessage=(function(_super){
	function ResUpdateNameMessage(){
		/**名字 */
		this._name=null;
		ResUpdateNameMessage.__super.call(this);
	}

	__class(ResUpdateNameMessage,'net.message.user.ResUpdateNameMessage',_super);
	var __proto=ResUpdateNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1057;
	}

	/**名字 */
	/**名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ResUpdateNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*微信充值
*/
//class net.message.misc.ReqWxRechargeMessage extends net.Message
var ReqWxRechargeMessage=(function(_super){
	function ReqWxRechargeMessage(){
		/**充值ID */
		this._rechargeID=0;
		/**额外参数 */
		this._params=null;
		ReqWxRechargeMessage.__super.call(this);
	}

	__class(ReqWxRechargeMessage,'net.message.misc.ReqWxRechargeMessage',_super);
	var __proto=ReqWxRechargeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rechargeID);
		this.writeString(_buf,this._params);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rechargeID=this.readInt(_buf);
		this._params=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1518;
	}

	/**充值ID */
	/**充值ID */
	__getset(0,__proto,'rechargeID',function(){
		return this._rechargeID;
		},function(value){
		this._rechargeID=value;
	});

	/**额外参数 */
	/**额外参数 */
	__getset(0,__proto,'params',function(){
		return this._params;
		},function(value){
		this._params=value;
	});

	return ReqWxRechargeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级
*/
//class net.message.totem.ReqTotemUpgradeMessage extends net.Message
var ReqTotemUpgradeMessage=(function(_super){
	function ReqTotemUpgradeMessage(){
		/**id */
		this._id=0;
		/**次数 */
		this._num=0;
		ReqTotemUpgradeMessage.__super.call(this);
	}

	__class(ReqTotemUpgradeMessage,'net.message.totem.ReqTotemUpgradeMessage',_super);
	var __proto=ReqTotemUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 863;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**次数 */
	/**次数 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ReqTotemUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*下阵
*/
//class net.message.fight.ResFightPositionRemoveMessage extends net.Message
var ResFightPositionRemoveMessage=(function(_super){
	function ResFightPositionRemoveMessage(){
		/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
		this._type=0;
		/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
		this._position=0;
		/**出战序号,0开始 */
		this._index=0;
		ResFightPositionRemoveMessage.__super.call(this);
	}

	__class(ResFightPositionRemoveMessage,'net.message.fight.ResFightPositionRemoveMessage',_super);
	var __proto=ResFightPositionRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._position);
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._position=this.readInt(_buf);
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1200;
	}

	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	/**战斗类型[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	/**站位[1:1][2:2][3:3][4:4][5:5][6:6][7:7][8:8][9:9][10:10][11:11][12:12][13:13][14:14][15:15][16:16][17:17][18:18][19:19][20:20][21:21][22:22][23:23][24:24][25:25][26:26][27:27][28:28][29:29][30:30][31:31][32:32][33:33][34:34] */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	/**出战序号,0开始 */
	/**出战序号,0开始 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ResFightPositionRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取结婚爬塔信息
*/
//class net.message.pata.ResGetMarryPataInfoMessage extends net.Message
var ResGetMarryPataInfoMessage=(function(_super){
	function ResGetMarryPataInfoMessage(){
		/**当前所在的的层数 */
		this._layer=0;
		ResGetMarryPataInfoMessage.__super.call(this);
	}

	__class(ResGetMarryPataInfoMessage,'net.message.pata.ResGetMarryPataInfoMessage',_super);
	var __proto=ResGetMarryPataInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1501;
	}

	/**当前所在的的层数 */
	/**当前所在的的层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	return ResGetMarryPataInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级元脉
*/
//class net.message.general.ResGeneralUpgradeYuanMaiMessage extends net.Message
var ResGeneralUpgradeYuanMaiMessage=(function(_super){
	function ResGeneralUpgradeYuanMaiMessage(){
		/**蛮将元脉等级 */
		this._lv=0;
		ResGeneralUpgradeYuanMaiMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeYuanMaiMessage,'net.message.general.ResGeneralUpgradeYuanMaiMessage',_super);
	var __proto=ResGeneralUpgradeYuanMaiMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1406;
	}

	/**蛮将元脉等级 */
	/**蛮将元脉等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResGeneralUpgradeYuanMaiMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取帮会活动当前状态
*/
//class net.message.gb.ResLegionBattleGetStateMessage extends net.Message
var ResLegionBattleGetStateMessage=(function(_super){
	function ResLegionBattleGetStateMessage(){
		/**是否开启 */
		this._isOpen=false;
		/**门的剩余血量,<1不就表示城门破了？ */
		this._hp=null;
		/**剩余的护盾 */
		this._shield=null;
		/**门的最大血量 */
		this._maxHp=null;
		/**自己帮会排名 */
		this._myLegionRank=0;
		/**自己帮会伤害 */
		this._myLegionDamage=null;
		/**自己帮会人数 */
		this._myLegionNum=0;
		/**霸主(可能为空)*/
		this._overload=null;
		ResLegionBattleGetStateMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResLegionBattleGetStateMessage,'net.message.gb.ResLegionBattleGetStateMessage',_super);
	var __proto=ResLegionBattleGetStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isOpen);
		this.writeLong(_buf,this._hp);
		this.writeLong(_buf,this._shield);
		this.writeLong(_buf,this._maxHp);
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myLegionRank);
		this.writeLong(_buf,this._myLegionDamage);
		this.writeInt(_buf,this._myLegionNum);
		this.writeBean(_buf,this._overload);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isOpen=this.readBoolean(_buf);
		this._hp=this.readLong(_buf);
		this._shield=this.readLong(_buf);
		this._maxHp=this.readLong(_buf);
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleDoorRankBean);
		}
		this._myLegionRank=this.readInt(_buf);
		this._myLegionDamage=this.readLong(_buf);
		this._myLegionNum=this.readInt(_buf);
		this._overload=this.readBean(_buf,LegionBattleOverlordBean);
	}

	__proto.getId=function(){
		return 1351;
	}

	/**门的最大血量 */
	/**门的最大血量 */
	__getset(0,__proto,'maxHp',function(){
		return this._maxHp;
		},function(value){
		this._maxHp=value;
	});

	/**是否开启 */
	/**是否开启 */
	__getset(0,__proto,'isOpen',function(){
		return this._isOpen;
		},function(value){
		this._isOpen=value;
	});

	/**门的剩余血量,<1不就表示城门破了？ */
	/**门的剩余血量,<1不就表示城门破了？ */
	__getset(0,__proto,'hp',function(){
		return this._hp;
		},function(value){
		this._hp=value;
	});

	/**自己帮会伤害 */
	/**自己帮会伤害 */
	__getset(0,__proto,'myLegionDamage',function(){
		return this._myLegionDamage;
		},function(value){
		this._myLegionDamage=value;
	});

	/**剩余的护盾 */
	/**剩余的护盾 */
	__getset(0,__proto,'shield',function(){
		return this._shield;
		},function(value){
		this._shield=value;
	});

	/**霸主(可能为空)*/
	/**霸主(可能为空)*/
	__getset(0,__proto,'overload',function(){
		return this._overload;
		},function(value){
		this._overload=value;
	});

	/**自己帮会排名 */
	/**自己帮会排名 */
	__getset(0,__proto,'myLegionRank',function(){
		return this._myLegionRank;
		},function(value){
		this._myLegionRank=value;
	});

	/**前三名伤害排行 */
	/**前三名伤害排行 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	/**自己帮会人数 */
	/**自己帮会人数 */
	__getset(0,__proto,'myLegionNum',function(){
		return this._myLegionNum;
		},function(value){
		this._myLegionNum=value;
	});

	return ResLegionBattleGetStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取珍稀宝物剩余次数信息
*/
//class net.message.textureHunt.ReqGetBaoWuRestTimesMessage extends net.Message
var ReqGetBaoWuRestTimesMessage=(function(_super){
	function ReqGetBaoWuRestTimesMessage(){
		ReqGetBaoWuRestTimesMessage.__super.call(this);;
	}

	__class(ReqGetBaoWuRestTimesMessage,'net.message.textureHunt.ReqGetBaoWuRestTimesMessage',_super);
	var __proto=ReqGetBaoWuRestTimesMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1640;
	}

	return ReqGetBaoWuRestTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取任务奖励
*/
//class net.message.todayrecommend.ResRecommendTaskRewardMessage extends net.Message
var ResRecommendTaskRewardMessage=(function(_super){
	function ResRecommendTaskRewardMessage(){
		/**id */
		this._id=0;
		ResRecommendTaskRewardMessage.__super.call(this);
	}

	__class(ResRecommendTaskRewardMessage,'net.message.todayrecommend.ResRecommendTaskRewardMessage',_super);
	var __proto=ResRecommendTaskRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1508;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ResRecommendTaskRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统错误
*/
//class net.message.user.ResTakeActiveGameSystemRewardErrorMessage extends net.Message
var ResTakeActiveGameSystemRewardErrorMessage=(function(_super){
	function ResTakeActiveGameSystemRewardErrorMessage(){
		/**1:已经领取奖励;2:不能手动领取;*/
		this._error=0;
		ResTakeActiveGameSystemRewardErrorMessage.__super.call(this);
	}

	__class(ResTakeActiveGameSystemRewardErrorMessage,'net.message.user.ResTakeActiveGameSystemRewardErrorMessage',_super);
	var __proto=ResTakeActiveGameSystemRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 881;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTakeActiveGameSystemRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买星宿幻境挑战次数
*/
//class net.message.pata.ReqBuyXXHJChallengeTimeMessage extends net.Message
var ReqBuyXXHJChallengeTimeMessage=(function(_super){
	function ReqBuyXXHJChallengeTimeMessage(){
		/**购买次数 */
		this._time=0;
		ReqBuyXXHJChallengeTimeMessage.__super.call(this);
	}

	__class(ReqBuyXXHJChallengeTimeMessage,'net.message.pata.ReqBuyXXHJChallengeTimeMessage',_super);
	var __proto=ReqBuyXXHJChallengeTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._time);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._time=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1028;
	}

	/**购买次数 */
	/**购买次数 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	return ReqBuyXXHJChallengeTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新帮会成等级
*/
//class net.message.guild.ResGuildUpdateLevelMessage extends net.Message
var ResGuildUpdateLevelMessage=(function(_super){
	function ResGuildUpdateLevelMessage(){
		/**等级 */
		this._level=0;
		ResGuildUpdateLevelMessage.__super.call(this);
	}

	__class(ResGuildUpdateLevelMessage,'net.message.guild.ResGuildUpdateLevelMessage',_super);
	var __proto=ResGuildUpdateLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._level=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1360;
	}

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	return ResGuildUpdateLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*查看霸主
*/
//class net.message.garrison.ResGarrisonGetOverLoadMessage extends net.Message
var ResGarrisonGetOverLoadMessage=(function(_super){
	function ResGarrisonGetOverLoadMessage(){
		ResGarrisonGetOverLoadMessage.__super.call(this);
		this._overLoadBeanList=[];
	}

	__class(ResGarrisonGetOverLoadMessage,'net.message.garrison.ResGarrisonGetOverLoadMessage',_super);
	var __proto=ResGarrisonGetOverLoadMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._overLoadBeanList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._overLoadBeanList.length;++i_am_tmp_i){
			this._overLoadBeanList[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._overLoadBeanList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._overLoadBeanList[i_am_tmp_i]=this.readBeanInList(_buf,GarrisonOverLoadBean);
		}
	}

	__proto.getId=function(){
		return 1065;
	}

	/**霸主们 */
	/**霸主们 */
	__getset(0,__proto,'overLoadBeanList',function(){
		return this._overLoadBeanList;
		},function(value){
		this._overLoadBeanList=value;
	});

	return ResGarrisonGetOverLoadMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入九重天活动
*/
//class net.message.nineHeavy.ReqNineHeavyPlayerJoinMessage extends net.Message
var ReqNineHeavyPlayerJoinMessage=(function(_super){
	function ReqNineHeavyPlayerJoinMessage(){
		ReqNineHeavyPlayerJoinMessage.__super.call(this);;
	}

	__class(ReqNineHeavyPlayerJoinMessage,'net.message.nineHeavy.ReqNineHeavyPlayerJoinMessage',_super);
	var __proto=ReqNineHeavyPlayerJoinMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 365;
	}

	return ReqNineHeavyPlayerJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*申请加入军团
*/
//class net.message.guild.ResGuildApplyMessage extends net.Message
var ResGuildApplyMessage=(function(_super){
	function ResGuildApplyMessage(){
		ResGuildApplyMessage.__super.call(this);;
	}

	__class(ResGuildApplyMessage,'net.message.guild.ResGuildApplyMessage',_super);
	var __proto=ResGuildApplyMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1204;
	}

	return ResGuildApplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*给伴侣赠送鲜花错误
*/
//class net.message.marriage.ResMarriageFlowersErrorMessage extends net.Message
var ResMarriageFlowersErrorMessage=(function(_super){
	function ResMarriageFlowersErrorMessage(){
		/**1:没有结婚;2:没钱了;*/
		this._error=0;
		ResMarriageFlowersErrorMessage.__super.call(this);
	}

	__class(ResMarriageFlowersErrorMessage,'net.message.marriage.ResMarriageFlowersErrorMessage',_super);
	var __proto=ResMarriageFlowersErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 544;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResMarriageFlowersErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征挑战
*/
//class net.message.yuanzheng.ResYuanZhengChallengeMessage extends net.Message
var ResYuanZhengChallengeMessage=(function(_super){
	function ResYuanZhengChallengeMessage(){
		/**当前可挑战关卡ID(0表示全部通关)*/
		this._guanqiaID=0;
		/**是否可领取通关奖励 */
		this._prize=false;
		/**战斗数据 */
		this._data=null;
		ResYuanZhengChallengeMessage.__super.call(this);
		this._prizeForShow=[];
	}

	__class(ResYuanZhengChallengeMessage,'net.message.yuanzheng.ResYuanZhengChallengeMessage',_super);
	var __proto=ResYuanZhengChallengeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._guanqiaID);
		this.writeBoolean(_buf,this._prize);
		this.writeInt(_buf,this._prizeForShow.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prizeForShow.length;++i_am_tmp_i){
			this._prizeForShow[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._guanqiaID=this.readInt(_buf);
		this._prize=this.readBoolean(_buf);
		size52413035=this.readInt(_buf);
		this._prizeForShow=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prizeForShow[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 290;
	}

	/**当前可挑战关卡ID(0表示全部通关)*/
	/**当前可挑战关卡ID(0表示全部通关)*/
	__getset(0,__proto,'guanqiaID',function(){
		return this._guanqiaID;
		},function(value){
		this._guanqiaID=value;
	});

	/**展示奖励 */
	/**展示奖励 */
	__getset(0,__proto,'prizeForShow',function(){
		return this._prizeForShow;
		},function(value){
		this._prizeForShow=value;
	});

	/**是否可领取通关奖励 */
	/**是否可领取通关奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	/**战斗数据 */
	/**战斗数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResYuanZhengChallengeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*附灵信息错误
*/
//class net.message.equip.ResFuLingGetInfoErrorMessage extends net.Message
var ResFuLingGetInfoErrorMessage=(function(_super){
	function ResFuLingGetInfoErrorMessage(){
		/**1:找不到道具;2:道具类型非法;3:配置错误;*/
		this._error=0;
		ResFuLingGetInfoErrorMessage.__super.call(this);
	}

	__class(ResFuLingGetInfoErrorMessage,'net.message.equip.ResFuLingGetInfoErrorMessage',_super);
	var __proto=ResFuLingGetInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1546;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResFuLingGetInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新玄女灵装
*/
//class net.message.xuannv.ResUpdateXuanNvLingZhuangMessage extends net.Message
var ResUpdateXuanNvLingZhuangMessage=(function(_super){
	function ResUpdateXuanNvLingZhuangMessage(){
		/**道具ID */
		this._itemID=0;
		ResUpdateXuanNvLingZhuangMessage.__super.call(this);
	}

	__class(ResUpdateXuanNvLingZhuangMessage,'net.message.xuannv.ResUpdateXuanNvLingZhuangMessage',_super);
	var __proto=ResUpdateXuanNvLingZhuangMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._itemID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._itemID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 255;
	}

	/**道具ID */
	/**道具ID */
	__getset(0,__proto,'itemID',function(){
		return this._itemID;
		},function(value){
		this._itemID=value;
	});

	return ResUpdateXuanNvLingZhuangMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用觉醒
*/
//class net.message.upgrade.ResCommonWakeUpMessage extends net.Message
var ResCommonWakeUpMessage=(function(_super){
	function ResCommonWakeUpMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**等级 */
		this._level=0;
		ResCommonWakeUpMessage.__super.call(this);
	}

	__class(ResCommonWakeUpMessage,'net.message.upgrade.ResCommonWakeUpMessage',_super);
	var __proto=ResCommonWakeUpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._level=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 904;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**等级 */
	/**等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResCommonWakeUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备背包扩容
*/
//class net.message.packet.ResEquipPacketAddCapacityMessage extends net.Message
var ResEquipPacketAddCapacityMessage=(function(_super){
	function ResEquipPacketAddCapacityMessage(){
		/**容量 */
		this._capacity=0;
		ResEquipPacketAddCapacityMessage.__super.call(this);
	}

	__class(ResEquipPacketAddCapacityMessage,'net.message.packet.ResEquipPacketAddCapacityMessage',_super);
	var __proto=ResEquipPacketAddCapacityMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._capacity);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._capacity=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 14;
	}

	/**容量 */
	/**容量 */
	__getset(0,__proto,'capacity',function(){
		return this._capacity;
		},function(value){
		this._capacity=value;
	});

	return ResEquipPacketAddCapacityMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用激活码错误
*/
//class net.message.card.ResUseCardErrorMessage extends net.Message
var ResUseCardErrorMessage=(function(_super){
	function ResUseCardErrorMessage(){
		/**1:无效激活码;2:最大使用次数;3:已经被使用过了;*/
		this._error=0;
		ResUseCardErrorMessage.__super.call(this);
	}

	__class(ResUseCardErrorMessage,'net.message.card.ResUseCardErrorMessage',_super);
	var __proto=ResUseCardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 758;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUseCardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ResFastOnHookRewardInfoMessage extends net.Message
var ResFastOnHookRewardInfoMessage=(function(_super){
	function ResFastOnHookRewardInfoMessage(){
		/**免费刷新时间 */
		this._freeTime=null;
		/**次数 */
		this._time=0;
		/**是否可以免费 */
		this._free=false;
		ResFastOnHookRewardInfoMessage.__super.call(this);
	}

	__class(ResFastOnHookRewardInfoMessage,'net.message.misc.ResFastOnHookRewardInfoMessage',_super);
	var __proto=ResFastOnHookRewardInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._freeTime);
		this.writeInt(_buf,this._time);
		this.writeBoolean(_buf,this._free);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._freeTime=this.readLong(_buf);
		this._time=this.readInt(_buf);
		this._free=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1458;
	}

	/**免费刷新时间 */
	/**免费刷新时间 */
	__getset(0,__proto,'freeTime',function(){
		return this._freeTime;
		},function(value){
		this._freeTime=value;
	});

	/**次数 */
	/**次数 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**是否可以免费 */
	/**是否可以免费 */
	__getset(0,__proto,'free',function(){
		return this._free;
		},function(value){
		this._free=value;
	});

	return ResFastOnHookRewardInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买冷却
*/
//class net.message.emptycity.ResEmptyCityPayColdMessage extends net.Message
var ResEmptyCityPayColdMessage=(function(_super){
	function ResEmptyCityPayColdMessage(){
		ResEmptyCityPayColdMessage.__super.call(this);;
	}

	__class(ResEmptyCityPayColdMessage,'net.message.emptycity.ResEmptyCityPayColdMessage',_super);
	var __proto=ResEmptyCityPayColdMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1099;
	}

	return ResEmptyCityPayColdMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*重置军团广场任务
*/
//class net.message.task.ResTaskGuildSquareResetMessage extends net.Message
var ResTaskGuildSquareResetMessage=(function(_super){
	function ResTaskGuildSquareResetMessage(){
		/**任务ID */
		this._taskID=0;
		ResTaskGuildSquareResetMessage.__super.call(this);
	}

	__class(ResTaskGuildSquareResetMessage,'net.message.task.ResTaskGuildSquareResetMessage',_super);
	var __proto=ResTaskGuildSquareResetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1308;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ResTaskGuildSquareResetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值返利活动错误
*/
//class net.message.activities.ResRechargeTurntableErrorMessage extends net.Message
var ResRechargeTurntableErrorMessage=(function(_super){
	function ResRechargeTurntableErrorMessage(){
		/**1:活动未开启;2:次数不足;3:已抽完;4:背包空间不足;5:配置为找到;*/
		this._error=0;
		ResRechargeTurntableErrorMessage.__super.call(this);
	}

	__class(ResRechargeTurntableErrorMessage,'net.message.activities.ResRechargeTurntableErrorMessage',_super);
	var __proto=ResRechargeTurntableErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1665;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRechargeTurntableErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征重置错误
*/
//class net.message.yuanzheng.ResYuanZhengResetErrorMessage extends net.Message
var ResYuanZhengResetErrorMessage=(function(_super){
	function ResYuanZhengResetErrorMessage(){
		/**1:不能重置;2:穷;*/
		this._error=0;
		ResYuanZhengResetErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengResetErrorMessage,'net.message.yuanzheng.ResYuanZhengResetErrorMessage',_super);
	var __proto=ResYuanZhengResetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 300;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengResetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*退出答题
*/
//class net.message.examination.ResKejuExitMessage extends net.Message
var ResKejuExitMessage=(function(_super){
	function ResKejuExitMessage(){
		ResKejuExitMessage.__super.call(this);;
	}

	__class(ResKejuExitMessage,'net.message.examination.ResKejuExitMessage',_super);
	var __proto=ResKejuExitMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1373;
	}

	return ResKejuExitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*vip升级
*/
//class net.message.vip.ResupdateVipLevelMessage extends net.Message
var ResupdateVipLevelMessage=(function(_super){
	function ResupdateVipLevelMessage(){
		/**vip等级 */
		this._lv=0;
		ResupdateVipLevelMessage.__super.call(this);
	}

	__class(ResupdateVipLevelMessage,'net.message.vip.ResupdateVipLevelMessage',_super);
	var __proto=ResupdateVipLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 785;
	}

	/**vip等级 */
	/**vip等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResupdateVipLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买三国令成功
*/
//class net.message.wartoken.ResBuyWarTokenSucessMessage extends net.Message
var ResBuyWarTokenSucessMessage=(function(_super){
	function ResBuyWarTokenSucessMessage(){
		/**战令 */
		this._warTokenBean=null;
		ResBuyWarTokenSucessMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResBuyWarTokenSucessMessage,'net.message.wartoken.ResBuyWarTokenSucessMessage',_super);
	var __proto=ResBuyWarTokenSucessMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._warTokenBean);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenBean=this.readBean(_buf,WarTokenBean);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 1462;
	}

	/**战令 */
	/**战令 */
	__getset(0,__proto,'warTokenBean',function(){
		return this._warTokenBean;
		},function(value){
		this._warTokenBean=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResBuyWarTokenSucessMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*超值补给活动错误
*/
//class net.message.activities.ResSuperSupplyActErrorMessage extends net.Message
var ResSuperSupplyActErrorMessage=(function(_super){
	function ResSuperSupplyActErrorMessage(){
		/**1:错误;2:配置未找到;3:条件未达成;4:背包空间不足;5:未激活高级资格;6:已领取;*/
		this._error=0;
		ResSuperSupplyActErrorMessage.__super.call(this);
	}

	__class(ResSuperSupplyActErrorMessage,'net.message.activities.ResSuperSupplyActErrorMessage',_super);
	var __proto=ResSuperSupplyActErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1554;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSuperSupplyActErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求排行榜
*/
//class net.message.nineHeavy.ReqNineHeavyPlayerRankMessage extends net.Message
var ReqNineHeavyPlayerRankMessage=(function(_super){
	function ReqNineHeavyPlayerRankMessage(){
		/**1 本周 2 上周 */
		this._type=0;
		ReqNineHeavyPlayerRankMessage.__super.call(this);
	}

	__class(ReqNineHeavyPlayerRankMessage,'net.message.nineHeavy.ReqNineHeavyPlayerRankMessage',_super);
	var __proto=ReqNineHeavyPlayerRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 385;
	}

	/**1 本周 2 上周 */
	/**1 本周 2 上周 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqNineHeavyPlayerRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买三国令等级
*/
//class net.message.wartoken.ResBuyWarTokenLevelMessage extends net.Message
var ResBuyWarTokenLevelMessage=(function(_super){
	function ResBuyWarTokenLevelMessage(){
		/**变化之后的对象 */
		this._warTokenBean=null;
		ResBuyWarTokenLevelMessage.__super.call(this);
	}

	__class(ResBuyWarTokenLevelMessage,'net.message.wartoken.ResBuyWarTokenLevelMessage',_super);
	var __proto=ResBuyWarTokenLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._warTokenBean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._warTokenBean=this.readBean(_buf,WarTokenBean);
	}

	__proto.getId=function(){
		return 895;
	}

	/**变化之后的对象 */
	/**变化之后的对象 */
	__getset(0,__proto,'warTokenBean',function(){
		return this._warTokenBean;
		},function(value){
		this._warTokenBean=value;
	});

	return ResBuyWarTokenLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级
*/
//class net.message.juewei.ReqUpdateJueWeiLevelMessage extends net.Message
var ReqUpdateJueWeiLevelMessage=(function(_super){
	function ReqUpdateJueWeiLevelMessage(){
		ReqUpdateJueWeiLevelMessage.__super.call(this);;
	}

	__class(ReqUpdateJueWeiLevelMessage,'net.message.juewei.ReqUpdateJueWeiLevelMessage',_super);
	var __proto=ReqUpdateJueWeiLevelMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 725;
	}

	return ReqUpdateJueWeiLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改职位
*/
//class net.message.guild.ResGuildChangePositionMessage extends net.Message
var ResGuildChangePositionMessage=(function(_super){
	function ResGuildChangePositionMessage(){
		ResGuildChangePositionMessage.__super.call(this);;
	}

	__class(ResGuildChangePositionMessage,'net.message.guild.ResGuildChangePositionMessage',_super);
	var __proto=ResGuildChangePositionMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1222;
	}

	return ResGuildChangePositionMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场信息错误
*/
//class net.message.arena.ResArenaGetInfoErrorMessage extends net.Message
var ResArenaGetInfoErrorMessage=(function(_super){
	function ResArenaGetInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResArenaGetInfoErrorMessage.__super.call(this);
	}

	__class(ResArenaGetInfoErrorMessage,'net.message.arena.ResArenaGetInfoErrorMessage',_super);
	var __proto=ResArenaGetInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 282;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResArenaGetInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*上阵位置替换
*/
//class net.message.fight.ResFightPositionExchangeMessage extends net.Message
var ResFightPositionExchangeMessage=(function(_super){
	function ResFightPositionExchangeMessage(){
		ResFightPositionExchangeMessage.__super.call(this);
		this._beans=[];
	}

	__class(ResFightPositionExchangeMessage,'net.message.fight.ResFightPositionExchangeMessage',_super);
	var __proto=ResFightPositionExchangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._beans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._beans.length;++i_am_tmp_i){
			this._beans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._beans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._beans[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionAddBean);
		}
	}

	__proto.getId=function(){
		return 1445;
	}

	/**上阵数据 */
	/**上阵数据 */
	__getset(0,__proto,'beans',function(){
		return this._beans;
		},function(value){
		this._beans=value;
	});

	return ResFightPositionExchangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*付费完成平定安邦
*/
//class net.message.task.ReqTaskPingDingAnBangPayMessage extends net.Message
var ReqTaskPingDingAnBangPayMessage=(function(_super){
	function ReqTaskPingDingAnBangPayMessage(){
		ReqTaskPingDingAnBangPayMessage.__super.call(this);;
	}

	__class(ReqTaskPingDingAnBangPayMessage,'net.message.task.ReqTaskPingDingAnBangPayMessage',_super);
	var __proto=ReqTaskPingDingAnBangPayMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1292;
	}

	return ReqTaskPingDingAnBangPayMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*抢
*/
//class net.message.redEnvelopes.ReqRedEnvelopesMessage extends net.Message
var ReqRedEnvelopesMessage=(function(_super){
	function ReqRedEnvelopesMessage(){
		/**id */
		this._id=0;
		ReqRedEnvelopesMessage.__super.call(this);
	}

	__class(ReqRedEnvelopesMessage,'net.message.redEnvelopes.ReqRedEnvelopesMessage',_super);
	var __proto=ReqRedEnvelopesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 736;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqRedEnvelopesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*每日更新组队副本
*/
//class net.message.teamDuplicate.ResTeamDuplicateUpdateMessage extends net.Message
var ResTeamDuplicateUpdateMessage=(function(_super){
	function ResTeamDuplicateUpdateMessage(){
		/**对象 */
		this._bean=null;
		ResTeamDuplicateUpdateMessage.__super.call(this);
	}

	__class(ResTeamDuplicateUpdateMessage,'net.message.teamDuplicate.ResTeamDuplicateUpdateMessage',_super);
	var __proto=ResTeamDuplicateUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,TeamDuplicateBean);
	}

	__proto.getId=function(){
		return 878;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResTeamDuplicateUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新正在押镖的人
*/
//class net.message.escort.ResFlushEscortTargetMessage extends net.Message
var ResFlushEscortTargetMessage=(function(_super){
	function ResFlushEscortTargetMessage(){
		/**你的押运对象 */
		this._bean=null;
		ResFlushEscortTargetMessage.__super.call(this);
		this._targets=[];
	}

	__class(ResFlushEscortTargetMessage,'net.message.escort.ResFlushEscortTargetMessage',_super);
	var __proto=ResFlushEscortTargetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._targets.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._targets.length;++i_am_tmp_i){
			this._targets[i_am_tmp_i].write(_buf);
		}
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._targets=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._targets[i_am_tmp_i]=this.readBeanInList(_buf,EscortTargetBean);
		}
		this._bean=this.readBean(_buf,EscortBean);
	}

	__proto.getId=function(){
		return 333;
	}

	/**正在押镖的人 */
	/**正在押镖的人 */
	__getset(0,__proto,'targets',function(){
		return this._targets;
		},function(value){
		this._targets=value;
	});

	/**你的押运对象 */
	/**你的押运对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResFlushEscortTargetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新全民boss次数
*/
//class net.message.dungeon.ResUpdateQuanMinBossTimesMessage extends net.Message
var ResUpdateQuanMinBossTimesMessage=(function(_super){
	function ResUpdateQuanMinBossTimesMessage(){
		/**全民boss可挑战次数 */
		this._challengeTimes=0;
		/**全民boss可挑战次数恢复时间 */
		this._challengeRecoverTime=0;
		ResUpdateQuanMinBossTimesMessage.__super.call(this);
	}

	__class(ResUpdateQuanMinBossTimesMessage,'net.message.dungeon.ResUpdateQuanMinBossTimesMessage',_super);
	var __proto=ResUpdateQuanMinBossTimesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._challengeTimes);
		this.writeInt(_buf,this._challengeRecoverTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._challengeTimes=this.readInt(_buf);
		this._challengeRecoverTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 215;
	}

	/**全民boss可挑战次数 */
	/**全民boss可挑战次数 */
	__getset(0,__proto,'challengeTimes',function(){
		return this._challengeTimes;
		},function(value){
		this._challengeTimes=value;
	});

	/**全民boss可挑战次数恢复时间 */
	/**全民boss可挑战次数恢复时间 */
	__getset(0,__proto,'challengeRecoverTime',function(){
		return this._challengeRecoverTime;
		},function(value){
		this._challengeRecoverTime=value;
	});

	return ResUpdateQuanMinBossTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*革职宠物
*/
//class net.message.pet.ReqFirePetMessage extends net.Message
var ReqFirePetMessage=(function(_super){
	function ReqFirePetMessage(){
		/**宠物ID */
		this._petID=0;
		ReqFirePetMessage.__super.call(this);
	}

	__class(ReqFirePetMessage,'net.message.pet.ReqFirePetMessage',_super);
	var __proto=ReqFirePetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1438;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	return ReqFirePetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新小怪场景排行榜
*/
//class net.message.gb.ResLegionBattleUpdateMinionRankMessage extends net.Message
var ResLegionBattleUpdateMinionRankMessage=(function(_super){
	function ResLegionBattleUpdateMinionRankMessage(){
		/**我的帮会的进入人数 */
		this._myGuildCount=0;
		/**我的帮会的积分 */
		this._myGuildScore=0;
		/**我的积分 */
		this._myScore=0;
		ResLegionBattleUpdateMinionRankMessage.__super.call(this);
		this._rankBean=[];
	}

	__class(ResLegionBattleUpdateMinionRankMessage,'net.message.gb.ResLegionBattleUpdateMinionRankMessage',_super);
	var __proto=ResLegionBattleUpdateMinionRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rankBean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rankBean.length;++i_am_tmp_i){
			this._rankBean[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._myGuildCount);
		this.writeInt(_buf,this._myGuildScore);
		this.writeInt(_buf,this._myScore);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rankBean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rankBean[i_am_tmp_i]=this.readBeanInList(_buf,LegionBattleMinionRankBean);
		}
		this._myGuildCount=this.readInt(_buf);
		this._myGuildScore=this.readInt(_buf);
		this._myScore=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1319;
	}

	/**排行榜对象(前三)*/
	/**排行榜对象(前三)*/
	__getset(0,__proto,'rankBean',function(){
		return this._rankBean;
		},function(value){
		this._rankBean=value;
	});

	/**我的帮会的进入人数 */
	/**我的帮会的进入人数 */
	__getset(0,__proto,'myGuildCount',function(){
		return this._myGuildCount;
		},function(value){
		this._myGuildCount=value;
	});

	/**我的帮会的积分 */
	/**我的帮会的积分 */
	__getset(0,__proto,'myGuildScore',function(){
		return this._myGuildScore;
		},function(value){
		this._myGuildScore=value;
	});

	/**我的积分 */
	/**我的积分 */
	__getset(0,__proto,'myScore',function(){
		return this._myScore;
		},function(value){
		this._myScore=value;
	});

	return ResLegionBattleUpdateMinionRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*初始化场景对象
*/
//class net.message.scene.ResSceneInitMessage extends net.Message
var ResSceneInitMessage=(function(_super){
	function ResSceneInitMessage(){
		ResSceneInitMessage.__super.call(this);
		this._users=[];
	}

	__class(ResSceneInitMessage,'net.message.scene.ResSceneInitMessage',_super);
	var __proto=ResSceneInitMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._users.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._users.length;++i_am_tmp_i){
			this._users[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._users=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._users[i_am_tmp_i]=this.readBeanInList(_buf,SceneUserBean);
		}
	}

	__proto.getId=function(){
		return 1310;
	}

	/**场景玩家列表 */
	/**场景玩家列表 */
	__getset(0,__proto,'users',function(){
		return this._users;
		},function(value){
		this._users=value;
	});

	return ResSceneInitMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知帮会等级或者资金变更
*/
//class net.message.legion.ResLegionLvUpdateMessageMessage extends net.Message
var ResLegionLvUpdateMessageMessage=(function(_super){
	function ResLegionLvUpdateMessageMessage(){
		/**lv */
		this._lv=0;
		/**exp */
		this._exp=null;
		ResLegionLvUpdateMessageMessage.__super.call(this);
	}

	__class(ResLegionLvUpdateMessageMessage,'net.message.legion.ResLegionLvUpdateMessageMessage',_super);
	var __proto=ResLegionLvUpdateMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeLong(_buf,this._exp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 664;
	}

	/**lv */
	/**lv */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**exp */
	/**exp */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResLegionLvUpdateMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物错误
*/
//class net.message.pet.ResActivePetErrorMessage extends net.Message
var ResActivePetErrorMessage=(function(_super){
	function ResActivePetErrorMessage(){
		/**1:参数错误;2:已经激活;3:道具不足;*/
		this._error=0;
		ResActivePetErrorMessage.__super.call(this);
	}

	__class(ResActivePetErrorMessage,'net.message.pet.ResActivePetErrorMessage',_super);
	var __proto=ResActivePetErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 150;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResActivePetErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*活动转盘
*/
//class net.message.activities.ReqActTurntableMessage extends net.Message
var ReqActTurntableMessage=(function(_super){
	function ReqActTurntableMessage(){
		/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
		this._type=0;
		ReqActTurntableMessage.__super.call(this);
	}

	__class(ReqActTurntableMessage,'net.message.activities.ReqActTurntableMessage',_super);
	var __proto=ReqActTurntableMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1605;
	}

	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqActTurntableMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*爬塔邀请
*/
//class net.message.marriage.ResMarriagePataInviteUpdateMessage extends net.Message
var ResMarriagePataInviteUpdateMessage=(function(_super){
	function ResMarriagePataInviteUpdateMessage(){
		ResMarriagePataInviteUpdateMessage.__super.call(this);;
	}

	__class(ResMarriagePataInviteUpdateMessage,'net.message.marriage.ResMarriagePataInviteUpdateMessage',_super);
	var __proto=ResMarriagePataInviteUpdateMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1496;
	}

	return ResMarriagePataInviteUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征更新阵容
*/
//class net.message.yuanzheng.ResYuanZhengUpdateFightSettingMessage extends net.Message
var ResYuanZhengUpdateFightSettingMessage=(function(_super){
	function ResYuanZhengUpdateFightSettingMessage(){
		/**关卡ID[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
		this._type=0;
		ResYuanZhengUpdateFightSettingMessage.__super.call(this);
		this._bean=[];
	}

	__class(ResYuanZhengUpdateFightSettingMessage,'net.message.yuanzheng.ResYuanZhengUpdateFightSettingMessage',_super);
	var __proto=ResYuanZhengUpdateFightSettingMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bean.length;++i_am_tmp_i){
			this._bean[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bean[i_am_tmp_i]=this.readBeanInList(_buf,FightPositionBean);
		}
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1452;
	}

	/**出站信息 */
	/**出站信息 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**关卡ID[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	/**关卡ID[1:普通][2:远征][3:试炼之塔1][4:试炼之塔2][5:试炼之塔3][6:试炼之塔4] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ResYuanZhengUpdateFightSettingMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子
*/
//class net.message.marriage.ResMarriageRenovationHouseMessage extends net.Message
var ResMarriageRenovationHouseMessage=(function(_super){
	function ResMarriageRenovationHouseMessage(){
		/**房子质量等级 */
		this._lv=0;
		ResMarriageRenovationHouseMessage.__super.call(this);
	}

	__class(ResMarriageRenovationHouseMessage,'net.message.marriage.ResMarriageRenovationHouseMessage',_super);
	var __proto=ResMarriageRenovationHouseMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 564;
	}

	/**房子质量等级 */
	/**房子质量等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	return ResMarriageRenovationHouseMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*进入科举答题活动(打开面板时发送)错误
*/
//class net.message.examination.ResKejuNowExaminationErrorMessage extends net.Message
var ResKejuNowExaminationErrorMessage=(function(_super){
	function ResKejuNowExaminationErrorMessage(){
		/**1:活动未开启或者已经结束;*/
		this._error=0;
		ResKejuNowExaminationErrorMessage.__super.call(this);
	}

	__class(ResKejuNowExaminationErrorMessage,'net.message.examination.ResKejuNowExaminationErrorMessage',_super);
	var __proto=ResKejuNowExaminationErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 410;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKejuNowExaminationErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家离开
*/
//class net.message.dungeon.ResQuanMinBossLeaveMessage extends net.Message
var ResQuanMinBossLeaveMessage=(function(_super){
	function ResQuanMinBossLeaveMessage(){
		/**离开者的UID */
		this._uid=null;
		ResQuanMinBossLeaveMessage.__super.call(this);
	}

	__class(ResQuanMinBossLeaveMessage,'net.message.dungeon.ResQuanMinBossLeaveMessage',_super);
	var __proto=ResQuanMinBossLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1471;
	}

	/**离开者的UID */
	/**离开者的UID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResQuanMinBossLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴装备
*/
//class net.message.equip.ReqPutOnEquipMessage extends net.Message
var ReqPutOnEquipMessage=(function(_super){
	function ReqPutOnEquipMessage(){
		/**英雄ID */
		this._heroID=0;
		ReqPutOnEquipMessage.__super.call(this);
		this._packetIndex=[];
	}

	__class(ReqPutOnEquipMessage,'net.message.equip.ReqPutOnEquipMessage',_super);
	var __proto=ReqPutOnEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._packetIndex.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._packetIndex.length;++i_am_tmp_i){
			this.writeInt(_buf,this._packetIndex[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._packetIndex=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._packetIndex[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 28;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**背包中的位置 */
	/**背包中的位置 */
	__getset(0,__proto,'packetIndex',function(){
		return this._packetIndex;
		},function(value){
		this._packetIndex=value;
	});

	return ReqPutOnEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求怪物错误
*/
//class net.message.gb.ResLegionBattleAttackMonsterErrorMessage extends net.Message
var ResLegionBattleAttackMonsterErrorMessage=(function(_super){
	function ResLegionBattleAttackMonsterErrorMessage(){
		/**1:未开启;2:你不在活动中;3:冷却中;4:没有找到怪物;5:你在死亡状态;6:不是队长;7:没有帮会;8:参数错误;9:系统错误;*/
		this._error=0;
		ResLegionBattleAttackMonsterErrorMessage.__super.call(this);
	}

	__class(ResLegionBattleAttackMonsterErrorMessage,'net.message.gb.ResLegionBattleAttackMonsterErrorMessage',_super);
	var __proto=ResLegionBattleAttackMonsterErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1345;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionBattleAttackMonsterErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取玲珑宝塔信息
*/
//class net.message.pata.ReqGetLLBTInfoMessage extends net.Message
var ReqGetLLBTInfoMessage=(function(_super){
	function ReqGetLLBTInfoMessage(){
		/**类型 0 正常 1 零时活动玲珑宝塔 */
		this._type=0;
		ReqGetLLBTInfoMessage.__super.call(this);
	}

	__class(ReqGetLLBTInfoMessage,'net.message.pata.ReqGetLLBTInfoMessage',_super);
	var __proto=ReqGetLLBTInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 233;
	}

	/**类型 0 正常 1 零时活动玲珑宝塔 */
	/**类型 0 正常 1 零时活动玲珑宝塔 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqGetLLBTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取结婚爬塔信息错误
*/
//class net.message.marriage.ResGetMarryPataInfoErrorMessage extends net.Message
var ResGetMarryPataInfoErrorMessage$1=(function(_super){
	function ResGetMarryPataInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResGetMarryPataInfoErrorMessage.__super.call(this);
	}

	__class(ResGetMarryPataInfoErrorMessage,'net.message.marriage.ResGetMarryPataInfoErrorMessage',_super,'ResGetMarryPataInfoErrorMessage$1');
	var __proto=ResGetMarryPataInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1495;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetMarryPataInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物激活错误
*/
//class net.message.treasure.ResTreasureActiveErrorMessage extends net.Message
var ResTreasureActiveErrorMessage=(function(_super){
	function ResTreasureActiveErrorMessage(){
		/**1:参数错误;2:已经激活;3:道具不足;*/
		this._error=0;
		ResTreasureActiveErrorMessage.__super.call(this);
	}

	__class(ResTreasureActiveErrorMessage,'net.message.treasure.ResTreasureActiveErrorMessage',_super);
	var __proto=ResTreasureActiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1624;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTreasureActiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级灵童天赋错误
*/
//class net.message.soulboy.ResSoulBoyTaletUpgradeErrorMessage extends net.Message
var ResSoulBoyTaletUpgradeErrorMessage=(function(_super){
	function ResSoulBoyTaletUpgradeErrorMessage(){
		/**1:灵童不存在;2:材料不足;*/
		this._error=0;
		ResSoulBoyTaletUpgradeErrorMessage.__super.call(this);
	}

	__class(ResSoulBoyTaletUpgradeErrorMessage,'net.message.soulboy.ResSoulBoyTaletUpgradeErrorMessage',_super);
	var __proto=ResSoulBoyTaletUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 459;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSoulBoyTaletUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*时装升星
*/
//class net.message.skin.ReqUpgradeSkinStarMessage extends net.Message
var ReqUpgradeSkinStarMessage=(function(_super){
	function ReqUpgradeSkinStarMessage(){
		/**皮肤ID */
		this._skinID=0;
		ReqUpgradeSkinStarMessage.__super.call(this);
	}

	__class(ReqUpgradeSkinStarMessage,'net.message.skin.ReqUpgradeSkinStarMessage',_super);
	var __proto=ReqUpgradeSkinStarMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1463;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	return ReqUpgradeSkinStarMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*pvp战斗状态变更
*/
//class net.message.fight.ResPVPFightStateChangeMessage extends net.Message
var ResPVPFightStateChangeMessage=(function(_super){
	function ResPVPFightStateChangeMessage(){
		/**玩家id */
		this._uid=null;
		/**目前是否锁定 */
		this._lock=false;
		ResPVPFightStateChangeMessage.__super.call(this);
	}

	__class(ResPVPFightStateChangeMessage,'net.message.fight.ResPVPFightStateChangeMessage',_super);
	var __proto=ResPVPFightStateChangeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
		this.writeBoolean(_buf,this._lock);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
		this._lock=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1436;
	}

	/**玩家id */
	/**玩家id */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**目前是否锁定 */
	/**目前是否锁定 */
	__getset(0,__proto,'lock',function(){
		return this._lock;
		},function(value){
		this._lock=value;
	});

	return ResPVPFightStateChangeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*神将现世
*/
//class net.message.gongCe.ResGodGeneraThisLifeMessage extends net.Message
var ResGodGeneraThisLifeMessage=(function(_super){
	function ResGodGeneraThisLifeMessage(){
		/**当前消耗刀币数量 */
		this._num=0;
		ResGodGeneraThisLifeMessage.__super.call(this);
	}

	__class(ResGodGeneraThisLifeMessage,'net.message.gongCe.ResGodGeneraThisLifeMessage',_super);
	var __proto=ResGodGeneraThisLifeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1662;
	}

	/**当前消耗刀币数量 */
	/**当前消耗刀币数量 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ResGodGeneraThisLifeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树错误
*/
//class net.message.welfare.ResYaoQianErrorMessage extends net.Message
var ResYaoQianErrorMessage=(function(_super){
	function ResYaoQianErrorMessage(){
		/**1:配置错误;2:扣除不足;3:钱太多;4:奖励失败;*/
		this._error=0;
		ResYaoQianErrorMessage.__super.call(this);
	}

	__class(ResYaoQianErrorMessage,'net.message.welfare.ResYaoQianErrorMessage',_super);
	var __proto=ResYaoQianErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 752;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYaoQianErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*膜拜霸主
*/
//class net.message.garrison.ResGarrisonWorshipMessage extends net.Message
var ResGarrisonWorshipMessage=(function(_super){
	function ResGarrisonWorshipMessage(){
		ResGarrisonWorshipMessage.__super.call(this);;
	}

	__class(ResGarrisonWorshipMessage,'net.message.garrison.ResGarrisonWorshipMessage',_super);
	var __proto=ResGarrisonWorshipMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1078;
	}

	return ResGarrisonWorshipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活错误
*/
//class net.message.adviser.ResAdviserActiveErrorMessage extends net.Message
var ResAdviserActiveErrorMessage=(function(_super){
	function ResAdviserActiveErrorMessage(){
		/**1:材料不足;2:配置错误;3:已激活;*/
		this._error=0;
		ResAdviserActiveErrorMessage.__super.call(this);
	}

	__class(ResAdviserActiveErrorMessage,'net.message.adviser.ResAdviserActiveErrorMessage',_super);
	var __proto=ResAdviserActiveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 800;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserActiveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求劫镖错误
*/
//class net.message.escort.ResEscortRobberyErrorMessage extends net.Message
var ResEscortRobberyErrorMessage=(function(_super){
	function ResEscortRobberyErrorMessage(){
		/**1:劫镖次数不足;2:对方押运已经结束;3:对方达到最大劫镖次数;*/
		this._error=0;
		ResEscortRobberyErrorMessage.__super.call(this);
	}

	__class(ResEscortRobberyErrorMessage,'net.message.escort.ResEscortRobberyErrorMessage',_super);
	var __proto=ResEscortRobberyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 344;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEscortRobberyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*扫荡副本奖励
*/
//class net.message.dungeon.ReqReceiveAllDungeonPrizeMessage extends net.Message
var ReqReceiveAllDungeonPrizeMessage=(function(_super){
	function ReqReceiveAllDungeonPrizeMessage(){
		/**副本ID[1:关卡][2:材料副本][3:个人BOSS][4:全民BOSS][5:至尊BOSS][6:野外BOSS][7:九重天BOSS][8:组队副本BOSS][9:帮派领地][10:帮派战][11:名将录][12:全服boss][13:全服boss(帮会)][14:军团战(小怪)][15:军团战(BOSS)] */
		this._dungeonType=0;
		/**副本id */
		this._dungeonId=0;
		ReqReceiveAllDungeonPrizeMessage.__super.call(this);
	}

	__class(ReqReceiveAllDungeonPrizeMessage,'net.message.dungeon.ReqReceiveAllDungeonPrizeMessage',_super);
	var __proto=ReqReceiveAllDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonType);
		this.writeInt(_buf,this._dungeonId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonType=this.readInt(_buf);
		this._dungeonId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 765;
	}

	/**副本ID[1:关卡][2:材料副本][3:个人BOSS][4:全民BOSS][5:至尊BOSS][6:野外BOSS][7:九重天BOSS][8:组队副本BOSS][9:帮派领地][10:帮派战][11:名将录][12:全服boss][13:全服boss(帮会)][14:军团战(小怪)][15:军团战(BOSS)] */
	/**副本ID[1:关卡][2:材料副本][3:个人BOSS][4:全民BOSS][5:至尊BOSS][6:野外BOSS][7:九重天BOSS][8:组队副本BOSS][9:帮派领地][10:帮派战][11:名将录][12:全服boss][13:全服boss(帮会)][14:军团战(小怪)][15:军团战(BOSS)] */
	__getset(0,__proto,'dungeonType',function(){
		return this._dungeonType;
		},function(value){
		this._dungeonType=value;
	});

	/**副本id */
	/**副本id */
	__getset(0,__proto,'dungeonId',function(){
		return this._dungeonId;
		},function(value){
		this._dungeonId=value;
	});

	return ReqReceiveAllDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知更新守护任务
*/
//class net.message.legion.ResLegionUpdateGuardTaskMessageMessage extends net.Message
var ResLegionUpdateGuardTaskMessageMessage=(function(_super){
	function ResLegionUpdateGuardTaskMessageMessage(){
		/**任务 */
		this._task=null;
		/**今日获得 */
		this._today=0;
		/**总计获得 */
		this._num=0;
		ResLegionUpdateGuardTaskMessageMessage.__super.call(this);
	}

	__class(ResLegionUpdateGuardTaskMessageMessage,'net.message.legion.ResLegionUpdateGuardTaskMessageMessage',_super);
	var __proto=ResLegionUpdateGuardTaskMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._task);
		this.writeInt(_buf,this._today);
		this.writeInt(_buf,this._num);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._task=this.readBean(_buf,TaskBean);
		this._today=this.readInt(_buf);
		this._num=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 620;
	}

	/**任务 */
	/**任务 */
	__getset(0,__proto,'task',function(){
		return this._task;
		},function(value){
		this._task=value;
	});

	/**今日获得 */
	/**今日获得 */
	__getset(0,__proto,'today',function(){
		return this._today;
		},function(value){
		this._today=value;
	});

	/**总计获得 */
	/**总计获得 */
	__getset(0,__proto,'num',function(){
		return this._num;
		},function(value){
		this._num=value;
	});

	return ResLegionUpdateGuardTaskMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*指令
*/
//class net.message.misc.ResCommandMessage extends net.Message
var ResCommandMessage=(function(_super){
	function ResCommandMessage(){
		/**指令内容 */
		this._content=null;
		ResCommandMessage.__super.call(this);
	}

	__class(ResCommandMessage,'net.message.misc.ResCommandMessage',_super);
	var __proto=ResCommandMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._content);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._content=this.readString(_buf);
	}

	__proto.getId=function(){
		return 36;
	}

	/**指令内容 */
	/**指令内容 */
	__getset(0,__proto,'content',function(){
		return this._content;
		},function(value){
		this._content=value;
	});

	return ResCommandMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮会修改战力条件
*/
//class net.message.guild.ResGuildChangeFightPowerMessage extends net.Message
var ResGuildChangeFightPowerMessage=(function(_super){
	function ResGuildChangeFightPowerMessage(){
		/**战力 */
		this._fightPower=null;
		ResGuildChangeFightPowerMessage.__super.call(this);
	}

	__class(ResGuildChangeFightPowerMessage,'net.message.guild.ResGuildChangeFightPowerMessage',_super);
	var __proto=ResGuildChangeFightPowerMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._fightPower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._fightPower=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1213;
	}

	/**战力 */
	/**战力 */
	__getset(0,__proto,'fightPower',function(){
		return this._fightPower;
		},function(value){
		this._fightPower=value;
	});

	return ResGuildChangeFightPowerMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取你提我改客服QQ
*/
//class net.message.misc.ResGetIdeaUpKfQQMessage extends net.Message
var ResGetIdeaUpKfQQMessage=(function(_super){
	function ResGetIdeaUpKfQQMessage(){
		/**qq */
		this._qq=null;
		ResGetIdeaUpKfQQMessage.__super.call(this);
	}

	__class(ResGetIdeaUpKfQQMessage,'net.message.misc.ResGetIdeaUpKfQQMessage',_super);
	var __proto=ResGetIdeaUpKfQQMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._qq);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qq=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1681;
	}

	/**qq */
	/**qq */
	__getset(0,__proto,'qq',function(){
		return this._qq;
		},function(value){
		this._qq=value;
	});

	return ResGetIdeaUpKfQQMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*加入或者创建房间
*/
//class net.message.teamDuplicate.ReqTeamDuplicateRoomJoinMessage extends net.Message
var ReqTeamDuplicateRoomJoinMessage=(function(_super){
	function ReqTeamDuplicateRoomJoinMessage(){
		/**副本ID */
		this._qid=0;
		/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
		this._roomID=0;
		ReqTeamDuplicateRoomJoinMessage.__super.call(this);
	}

	__class(ReqTeamDuplicateRoomJoinMessage,'net.message.teamDuplicate.ReqTeamDuplicateRoomJoinMessage',_super);
	var __proto=ReqTeamDuplicateRoomJoinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._qid);
		this.writeInt(_buf,this._roomID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._qid=this.readInt(_buf);
		this._roomID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 418;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'qid',function(){
		return this._qid;
		},function(value){
		this._qid=value;
	});

	/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
	/**房间ID-1 为创建-2 为快速加入 其他为指定房间号 */
	__getset(0,__proto,'roomID',function(){
		return this._roomID;
		},function(value){
		this._roomID=value;
	});

	return ReqTeamDuplicateRoomJoinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级官位
*/
//class net.message.official.ReqUpgradeOfficialLvMessage extends net.Message
var ReqUpgradeOfficialLvMessage=(function(_super){
	function ReqUpgradeOfficialLvMessage(){
		ReqUpgradeOfficialLvMessage.__super.call(this);;
	}

	__class(ReqUpgradeOfficialLvMessage,'net.message.official.ReqUpgradeOfficialLvMessage',_super);
	var __proto=ReqUpgradeOfficialLvMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 318;
	}

	return ReqUpgradeOfficialLvMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取师门信息
*/
//class net.message.shimen.ResGetShiMenInfoMessage extends net.Message
var ResGetShiMenInfoMessage=(function(_super){
	function ResGetShiMenInfoMessage(){
		/**剩余挑战次数 */
		this._challengeTimes=0;
		/**挑战次数恢复时间 */
		this._challengeTimesRecoverTime=0;
		/**完成次数 */
		this._finishTimes=0;
		/**已领取的师门任务的星级，0表示尚未领取 */
		this._star=0;
		/**是否领取过环奖励 */
		this._roundPrized=false;
		ResGetShiMenInfoMessage.__super.call(this);
	}

	__class(ResGetShiMenInfoMessage,'net.message.shimen.ResGetShiMenInfoMessage',_super);
	var __proto=ResGetShiMenInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._challengeTimes);
		this.writeInt(_buf,this._challengeTimesRecoverTime);
		this.writeInt(_buf,this._finishTimes);
		this.writeInt(_buf,this._star);
		this.writeBoolean(_buf,this._roundPrized);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._challengeTimes=this.readInt(_buf);
		this._challengeTimesRecoverTime=this.readInt(_buf);
		this._finishTimes=this.readInt(_buf);
		this._star=this.readInt(_buf);
		this._roundPrized=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 140;
	}

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'challengeTimes',function(){
		return this._challengeTimes;
		},function(value){
		this._challengeTimes=value;
	});

	/**已领取的师门任务的星级，0表示尚未领取 */
	/**已领取的师门任务的星级，0表示尚未领取 */
	__getset(0,__proto,'star',function(){
		return this._star;
		},function(value){
		this._star=value;
	});

	/**挑战次数恢复时间 */
	/**挑战次数恢复时间 */
	__getset(0,__proto,'challengeTimesRecoverTime',function(){
		return this._challengeTimesRecoverTime;
		},function(value){
		this._challengeTimesRecoverTime=value;
	});

	/**完成次数 */
	/**完成次数 */
	__getset(0,__proto,'finishTimes',function(){
		return this._finishTimes;
		},function(value){
		this._finishTimes=value;
	});

	/**是否领取过环奖励 */
	/**是否领取过环奖励 */
	__getset(0,__proto,'roundPrized',function(){
		return this._roundPrized;
		},function(value){
		this._roundPrized=value;
	});

	return ResGetShiMenInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级天赋
*/
//class net.message.adviser.ReqAdviserUpgradeTalentMessage extends net.Message
var ReqAdviserUpgradeTalentMessage=(function(_super){
	function ReqAdviserUpgradeTalentMessage(){
		ReqAdviserUpgradeTalentMessage.__super.call(this);;
	}

	__class(ReqAdviserUpgradeTalentMessage,'net.message.adviser.ReqAdviserUpgradeTalentMessage',_super);
	var __proto=ReqAdviserUpgradeTalentMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1016;
	}

	return ReqAdviserUpgradeTalentMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*群英会报名
*/
//class net.message.qunyinghui.ReqQunYingHuiSignUpMessage extends net.Message
var ReqQunYingHuiSignUpMessage=(function(_super){
	function ReqQunYingHuiSignUpMessage(){
		ReqQunYingHuiSignUpMessage.__super.call(this);;
	}

	__class(ReqQunYingHuiSignUpMessage,'net.message.qunyinghui.ReqQunYingHuiSignUpMessage',_super);
	var __proto=ReqQunYingHuiSignUpMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 470;
	}

	return ReqQunYingHuiSignUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求给钱复活
*/
//class net.message.gb.ReqLegionBattlePayRebornMessage extends net.Message
var ReqLegionBattlePayRebornMessage=(function(_super){
	function ReqLegionBattlePayRebornMessage(){
		ReqLegionBattlePayRebornMessage.__super.call(this);;
	}

	__class(ReqLegionBattlePayRebornMessage,'net.message.gb.ReqLegionBattlePayRebornMessage',_super);
	var __proto=ReqLegionBattlePayRebornMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1334;
	}

	return ReqLegionBattlePayRebornMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*刷新赤壁任务
*/
//class net.message.chibi.ResChibiRefreshTaskMessage extends net.Message
var ResChibiRefreshTaskMessage=(function(_super){
	function ResChibiRefreshTaskMessage(){
		ResChibiRefreshTaskMessage.__super.call(this);
		this._list=[];
	}

	__class(ResChibiRefreshTaskMessage,'net.message.chibi.ResChibiRefreshTaskMessage',_super);
	var __proto=ResChibiRefreshTaskMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,ChibiTaskBean);
		}
	}

	__proto.getId=function(){
		return 403;
	}

	/**新的赤壁任务 */
	/**新的赤壁任务 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResChibiRefreshTaskMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取福利奖励
*/
//class net.message.welfare.ResGetFuLiRewardMessage extends net.Message
var ResGetFuLiRewardMessage=(function(_super){
	function ResGetFuLiRewardMessage(){
		/**变化后的对象 */
		this._bean=null;
		ResGetFuLiRewardMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResGetFuLiRewardMessage,'net.message.welfare.ResGetFuLiRewardMessage',_super);
	var __proto=ResGetFuLiRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,WelfareBean);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 741;
	}

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	/**变化后的对象 */
	/**变化后的对象 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResGetFuLiRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子的进度领取
*/
//class net.message.marriage.ReqMarriagePromoteHouseReceiveMessage extends net.Message
var ReqMarriagePromoteHouseReceiveMessage=(function(_super){
	function ReqMarriagePromoteHouseReceiveMessage(){
		ReqMarriagePromoteHouseReceiveMessage.__super.call(this);;
	}

	__class(ReqMarriagePromoteHouseReceiveMessage,'net.message.marriage.ReqMarriagePromoteHouseReceiveMessage',_super);
	var __proto=ReqMarriagePromoteHouseReceiveMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 560;
	}

	return ReqMarriagePromoteHouseReceiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*勤王特供错误
*/
//class net.message.gongCe.ResSelectQingWangRewardErrorMessage extends net.Message
var ResSelectQingWangRewardErrorMessage=(function(_super){
	function ResSelectQingWangRewardErrorMessage(){
		/**1:索引错误;*/
		this._error=0;
		ResSelectQingWangRewardErrorMessage.__super.call(this);
	}

	__class(ResSelectQingWangRewardErrorMessage,'net.message.gongCe.ResSelectQingWangRewardErrorMessage',_super);
	var __proto=ResSelectQingWangRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1674;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSelectQingWangRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求团队跳过
*/
//class net.message.legion.ResTeamSkipMessage extends net.Message
var ResTeamSkipMessage=(function(_super){
	function ResTeamSkipMessage(){
		/**组队类型[1:帮会战][2:结婚组队爬塔] */
		this._teamType=0;
		ResTeamSkipMessage.__super.call(this);
	}

	__class(ResTeamSkipMessage,'net.message.legion.ResTeamSkipMessage',_super);
	var __proto=ResTeamSkipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._teamType);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._teamType=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1365;
	}

	/**组队类型[1:帮会战][2:结婚组队爬塔] */
	/**组队类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'teamType',function(){
		return this._teamType;
		},function(value){
		this._teamType=value;
	});

	return ResTeamSkipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新猎命等级
*/
//class net.message.lieming.ResUpdateLieMingLevelMessage extends net.Message
var ResUpdateLieMingLevelMessage=(function(_super){
	function ResUpdateLieMingLevelMessage(){
		/**是否成功 */
		this._isOk=false;
		ResUpdateLieMingLevelMessage.__super.call(this);
	}

	__class(ResUpdateLieMingLevelMessage,'net.message.lieming.ResUpdateLieMingLevelMessage',_super);
	var __proto=ResUpdateLieMingLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._isOk);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isOk=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 733;
	}

	/**是否成功 */
	/**是否成功 */
	__getset(0,__proto,'isOk',function(){
		return this._isOk;
		},function(value){
		this._isOk=value;
	});

	return ResUpdateLieMingLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新时装
*/
//class net.message.skin.ReqUpdateSkinMessage extends net.Message
var ReqUpdateSkinMessage=(function(_super){
	function ReqUpdateSkinMessage(){
		/**英雄ID */
		this._heroID=0;
		ReqUpdateSkinMessage.__super.call(this);
	}

	__class(ReqUpdateSkinMessage,'net.message.skin.ReqUpdateSkinMessage',_super);
	var __proto=ReqUpdateSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1177;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqUpdateSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*保存上次淬炼属性
*/
//class net.message.godClothes.ReqSaveLastQuenchingAttrMessage extends net.Message
var ReqSaveLastQuenchingAttrMessage=(function(_super){
	function ReqSaveLastQuenchingAttrMessage(){
		/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._equipGrid=0;
		/**英雄Id */
		this._heroId=0;
		ReqSaveLastQuenchingAttrMessage.__super.call(this);
	}

	__class(ReqSaveLastQuenchingAttrMessage,'net.message.godClothes.ReqSaveLastQuenchingAttrMessage',_super);
	var __proto=ReqSaveLastQuenchingAttrMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._equipGrid);
		this.writeInt(_buf,this._heroId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._equipGrid=this.readInt(_buf);
		this._heroId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 855;
	}

	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**部位[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'equipGrid',function(){
		return this._equipGrid;
		},function(value){
		this._equipGrid=value;
	});

	/**英雄Id */
	/**英雄Id */
	__getset(0,__proto,'heroId',function(){
		return this._heroId;
		},function(value){
		this._heroId=value;
	});

	return ReqSaveLastQuenchingAttrMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新VIP
*/
//class net.message.vip.ResVipUpdateMessage extends net.Message
var ResVipUpdateMessage=(function(_super){
	function ResVipUpdateMessage(){
		/**vip */
		this._vip=null;
		ResVipUpdateMessage.__super.call(this);
	}

	__class(ResVipUpdateMessage,'net.message.vip.ResVipUpdateMessage',_super);
	var __proto=ResVipUpdateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._vip);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._vip=this.readBean(_buf,VipBean);
	}

	__proto.getId=function(){
		return 663;
	}

	/**vip */
	/**vip */
	__getset(0,__proto,'vip',function(){
		return this._vip;
		},function(value){
		this._vip=value;
	});

	return ResVipUpdateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*离开房间错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomLeaveErrorMessage extends net.Message
var ResTeamDuplicateRoomLeaveErrorMessage=(function(_super){
	function ResTeamDuplicateRoomLeaveErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;2:正在战斗 无法离开;*/
		this._error=0;
		ResTeamDuplicateRoomLeaveErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomLeaveErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomLeaveErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomLeaveErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 424;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomLeaveErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级
*/
//class net.message.totem.ResTotemUpgradeMessage extends net.Message
var ResTotemUpgradeMessage=(function(_super){
	function ResTotemUpgradeMessage(){
		/**对象 */
		this._totemBean=null;
		ResTotemUpgradeMessage.__super.call(this);
		this._record=[];
	}

	__class(ResTotemUpgradeMessage,'net.message.totem.ResTotemUpgradeMessage',_super);
	var __proto=ResTotemUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._totemBean);
		this.writeInt(_buf,this._record.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._record.length;++i_am_tmp_i){
			this.writeInt(_buf,this._record[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._totemBean=this.readBean(_buf,TotemBean);
		size52413035=this.readInt(_buf);
		this._record=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._record[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 864;
	}

	/**对象 */
	/**对象 */
	__getset(0,__proto,'totemBean',function(){
		return this._totemBean;
		},function(value){
		this._totemBean=value;
	});

	/**暴击记录 */
	/**暴击记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return ResTotemUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*心跳
*/
//class net.message.misc.ResHeartBeatMessage extends net.Message
var ResHeartBeatMessage=(function(_super){
	function ResHeartBeatMessage(){
		/**前端unix时间戳 */
		this._ctime=null;
		/**后端unix时间戳 */
		this._stime=null;
		ResHeartBeatMessage.__super.call(this);
	}

	__class(ResHeartBeatMessage,'net.message.misc.ResHeartBeatMessage',_super);
	var __proto=ResHeartBeatMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._ctime);
		this.writeLong(_buf,this._stime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._ctime=this.readLong(_buf);
		this._stime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 9;
	}

	/**后端unix时间戳 */
	/**后端unix时间戳 */
	__getset(0,__proto,'stime',function(){
		return this._stime;
		},function(value){
		this._stime=value;
	});

	/**前端unix时间戳 */
	/**前端unix时间戳 */
	__getset(0,__proto,'ctime',function(){
		return this._ctime;
		},function(value){
		this._ctime=value;
	});

	return ResHeartBeatMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挑战试炼之塔
*/
//class net.message.towerFight.ReqTowerFightMessage extends net.Message
var ReqTowerFightMessage=(function(_super){
	function ReqTowerFightMessage(){
		/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
		this._type=0;
		/**塔层数 */
		this._lower=0;
		ReqTowerFightMessage.__super.call(this);
	}

	__class(ReqTowerFightMessage,'net.message.towerFight.ReqTowerFightMessage',_super);
	var __proto=ReqTowerFightMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._lower);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._lower=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1613;
	}

	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	/**塔类型[1:昊天塔][2:坤山塔][3:人皇塔][4:乱星塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**塔层数 */
	/**塔层数 */
	__getset(0,__proto,'lower',function(){
		return this._lower;
		},function(value){
		this._lower=value;
	});

	return ReqTowerFightMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级英雄技能
*/
//class net.message.skill.ReqUpgradeHeroSkillMessage extends net.Message
var ReqUpgradeHeroSkillMessage=(function(_super){
	function ReqUpgradeHeroSkillMessage(){
		/**英雄ID */
		this._heroID=0;
		/**技能ID,如果为0则表示全部升级 */
		this._skillID=0;
		ReqUpgradeHeroSkillMessage.__super.call(this);
	}

	__class(ReqUpgradeHeroSkillMessage,'net.message.skill.ReqUpgradeHeroSkillMessage',_super);
	var __proto=ReqUpgradeHeroSkillMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._skillID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._skillID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 186;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**技能ID,如果为0则表示全部升级 */
	/**技能ID,如果为0则表示全部升级 */
	__getset(0,__proto,'skillID',function(){
		return this._skillID;
		},function(value){
		this._skillID=value;
	});

	return ReqUpgradeHeroSkillMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*王者争霸请求战斗错误
*/
//class net.message.kingwar.ResKingWarStartFightErrorMessage extends net.Message
var ResKingWarStartFightErrorMessage=(function(_super){
	function ResKingWarStartFightErrorMessage(){
		/**1:没有合适的匹配对象 请稍后重试;2:没有足够的挑战次数;3:你正在被挑战;4:活动未开启;5:系统错误;6:找不到目标;*/
		this._error=0;
		ResKingWarStartFightErrorMessage.__super.call(this);
	}

	__class(ResKingWarStartFightErrorMessage,'net.message.kingwar.ResKingWarStartFightErrorMessage',_super);
	var __proto=ResKingWarStartFightErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 491;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResKingWarStartFightErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*移除场景对象
*/
//class net.message.scene.ResSceneRemoveMessage extends net.Message
var ResSceneRemoveMessage=(function(_super){
	function ResSceneRemoveMessage(){
		/**场景玩家 */
		this._uid=null;
		ResSceneRemoveMessage.__super.call(this);
	}

	__class(ResSceneRemoveMessage,'net.message.scene.ResSceneRemoveMessage',_super);
	var __proto=ResSceneRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1313;
	}

	/**场景玩家 */
	/**场景玩家 */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResSceneRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玄女飞升强化错误
*/
//class net.message.xuannv.ResXuanNvFeiShengQiangHuaErrorMessage extends net.Message
var ResXuanNvFeiShengQiangHuaErrorMessage=(function(_super){
	function ResXuanNvFeiShengQiangHuaErrorMessage(){
		/**1:物品不足;2:已达最高等级;*/
		this._error=0;
		ResXuanNvFeiShengQiangHuaErrorMessage.__super.call(this);
	}

	__class(ResXuanNvFeiShengQiangHuaErrorMessage,'net.message.xuannv.ResXuanNvFeiShengQiangHuaErrorMessage',_super);
	var __proto=ResXuanNvFeiShengQiangHuaErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 258;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResXuanNvFeiShengQiangHuaErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新心愿武将错误
*/
//class net.message.textureHunt.ResSelectLoveHeroErrorMessage extends net.Message
var ResSelectLoveHeroErrorMessage=(function(_super){
	function ResSelectLoveHeroErrorMessage(){
		/**1:没有这个武将;*/
		this._error=0;
		ResSelectLoveHeroErrorMessage.__super.call(this);
	}

	__class(ResSelectLoveHeroErrorMessage,'net.message.textureHunt.ResSelectLoveHeroErrorMessage',_super);
	var __proto=ResSelectLoveHeroErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1599;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSelectLoveHeroErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*周末许愿领取
*/
//class net.message.activities.ReqWeekendXuYuanGetMessage extends net.Message
var ReqWeekendXuYuanGetMessage=(function(_super){
	function ReqWeekendXuYuanGetMessage(){
		ReqWeekendXuYuanGetMessage.__super.call(this);;
	}

	__class(ReqWeekendXuYuanGetMessage,'net.message.activities.ReqWeekendXuYuanGetMessage',_super);
	var __proto=ReqWeekendXuYuanGetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1652;
	}

	return ReqWeekendXuYuanGetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*一键领取三国令等级奖励
*/
//class net.message.wartoken.ReqYiJianGetWarTokenRewardMessage extends net.Message
var ReqYiJianGetWarTokenRewardMessage=(function(_super){
	function ReqYiJianGetWarTokenRewardMessage(){
		ReqYiJianGetWarTokenRewardMessage.__super.call(this);;
	}

	__class(ReqYiJianGetWarTokenRewardMessage,'net.message.wartoken.ReqYiJianGetWarTokenRewardMessage',_super);
	var __proto=ReqYiJianGetWarTokenRewardMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 902;
	}

	return ReqYiJianGetWarTokenRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.general.ReqGeneralActiveMessage extends net.Message
var ReqGeneralActiveMessage=(function(_super){
	function ReqGeneralActiveMessage(){
		/**id */
		this._id=0;
		ReqGeneralActiveMessage.__super.call(this);
	}

	__class(ReqGeneralActiveMessage,'net.message.general.ReqGeneralActiveMessage',_super);
	var __proto=ReqGeneralActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 843;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqGeneralActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍踢人错误
*/
//class net.message.team.ResTeamKickErrorMessage extends net.Message
var ResTeamKickErrorMessage=(function(_super){
	function ResTeamKickErrorMessage(){
		/**1:不在队伍中;2:无权限;3:不能踢自己;4:目标不在队伍中;5:目标不能被踢;*/
		this._error=0;
		ResTeamKickErrorMessage.__super.call(this);
	}

	__class(ResTeamKickErrorMessage,'net.message.team.ResTeamKickErrorMessage',_super);
	var __proto=ResTeamKickErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1275;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamKickErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新红包
*/
//class net.message.redEnvelopes.ResUpdateRedEnvelopesMessage extends net.Message
var ResUpdateRedEnvelopesMessage=(function(_super){
	function ResUpdateRedEnvelopesMessage(){
		ResUpdateRedEnvelopesMessage.__super.call(this);
		this._list=[];
	}

	__class(ResUpdateRedEnvelopesMessage,'net.message.redEnvelopes.ResUpdateRedEnvelopesMessage',_super);
	var __proto=ResUpdateRedEnvelopesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._list.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._list.length;++i_am_tmp_i){
			this._list[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._list=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._list[i_am_tmp_i]=this.readBeanInList(_buf,SingleRedEnvelopes);
		}
	}

	__proto.getId=function(){
		return 739;
	}

	/**红包 */
	/**红包 */
	__getset(0,__proto,'list',function(){
		return this._list;
		},function(value){
		this._list=value;
	});

	return ResUpdateRedEnvelopesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新累计重置额度
*/
//class net.message.vip.ResUpdateRechargeMessage extends net.Message
var ResUpdateRechargeMessage=(function(_super){
	function ResUpdateRechargeMessage(){
		/**每日充值额度 */
		this._rechargeCount=null;
		/**累计充值额度 */
		this._totalRechargeCount=null;
		/**记录 */
		this._record=null;
		ResUpdateRechargeMessage.__super.call(this);
	}

	__class(ResUpdateRechargeMessage,'net.message.vip.ResUpdateRechargeMessage',_super);
	var __proto=ResUpdateRechargeMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._rechargeCount);
		this.writeLong(_buf,this._totalRechargeCount);
		this.writeBean(_buf,this._record);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rechargeCount=this.readLong(_buf);
		this._totalRechargeCount=this.readLong(_buf);
		this._record=this.readBean(_buf,RechargeRecord);
	}

	__proto.getId=function(){
		return 714;
	}

	/**累计充值额度 */
	/**累计充值额度 */
	__getset(0,__proto,'totalRechargeCount',function(){
		return this._totalRechargeCount;
		},function(value){
		this._totalRechargeCount=value;
	});

	/**每日充值额度 */
	/**每日充值额度 */
	__getset(0,__proto,'rechargeCount',function(){
		return this._rechargeCount;
		},function(value){
		this._rechargeCount=value;
	});

	/**记录 */
	/**记录 */
	__getset(0,__proto,'record',function(){
		return this._record;
		},function(value){
		this._record=value;
	});

	return ResUpdateRechargeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*装备背包扩容错误
*/
//class net.message.packet.ResEquipPacketAddCapacityErrorMessage extends net.Message
var ResEquipPacketAddCapacityErrorMessage=(function(_super){
	function ResEquipPacketAddCapacityErrorMessage(){
		/**1:达到上限;2:元宝不足;3:参数非法;*/
		this._error=0;
		ResEquipPacketAddCapacityErrorMessage.__super.call(this);
	}

	__class(ResEquipPacketAddCapacityErrorMessage,'net.message.packet.ResEquipPacketAddCapacityErrorMessage',_super);
	var __proto=ResEquipPacketAddCapacityErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 15;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEquipPacketAddCapacityErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家攻击错误
*/
//class net.message.nineHeavy.ResNineHeavyPlayerAttackErrorMessage extends net.Message
var ResNineHeavyPlayerAttackErrorMessage=(function(_super){
	function ResNineHeavyPlayerAttackErrorMessage(){
		/**1:你不在活动中;2:目标不在活动中;3:对方在战斗状态;4:目标不存在;5:自己已经死亡;6:找不到目标;7:目标已经死亡;*/
		this._error=0;
		ResNineHeavyPlayerAttackErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerAttackErrorMessage,'net.message.nineHeavy.ResNineHeavyPlayerAttackErrorMessage',_super);
	var __proto=ResNineHeavyPlayerAttackErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 381;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyPlayerAttackErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买全服boss挑战次数
*/
//class net.message.quanfuboss.ResQuanFuBossBuyTimeMessage extends net.Message
var ResQuanFuBossBuyTimeMessage=(function(_super){
	function ResQuanFuBossBuyTimeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**剩余挑战次数 */
		this._time=0;
		/**剩余购买次数 */
		this._buyTime=0;
		ResQuanFuBossBuyTimeMessage.__super.call(this);
	}

	__class(ResQuanFuBossBuyTimeMessage,'net.message.quanfuboss.ResQuanFuBossBuyTimeMessage',_super);
	var __proto=ResQuanFuBossBuyTimeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeInt(_buf,this._time);
		this.writeInt(_buf,this._buyTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._time=this.readInt(_buf);
		this._buyTime=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1105;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**剩余挑战次数 */
	/**剩余挑战次数 */
	__getset(0,__proto,'time',function(){
		return this._time;
		},function(value){
		this._time=value;
	});

	/**剩余购买次数 */
	/**剩余购买次数 */
	__getset(0,__proto,'buyTime',function(){
		return this._buyTime;
		},function(value){
		this._buyTime=value;
	});

	return ResQuanFuBossBuyTimeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级帮会技能错误
*/
//class net.message.legion.ResLegionSkillUpgradeMessageErrorMessage extends net.Message
var ResLegionSkillUpgradeMessageErrorMessage=(function(_super){
	function ResLegionSkillUpgradeMessageErrorMessage(){
		/**1:你木有军团;2:穷;*/
		this._error=0;
		ResLegionSkillUpgradeMessageErrorMessage.__super.call(this);
	}

	__class(ResLegionSkillUpgradeMessageErrorMessage,'net.message.legion.ResLegionSkillUpgradeMessageErrorMessage',_super);
	var __proto=ResLegionSkillUpgradeMessageErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 636;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLegionSkillUpgradeMessageErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*boss破盾刷新宝箱
*/
//class net.message.worldboss.ResWorldBossFlushBoxMessage extends net.Message
var ResWorldBossFlushBoxMessage=(function(_super){
	function ResWorldBossFlushBoxMessage(){
		ResWorldBossFlushBoxMessage.__super.call(this);
		this._boxs=[];
	}

	__class(ResWorldBossFlushBoxMessage,'net.message.worldboss.ResWorldBossFlushBoxMessage',_super);
	var __proto=ResWorldBossFlushBoxMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._boxs.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._boxs.length;++i_am_tmp_i){
			this._boxs[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._boxs=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._boxs[i_am_tmp_i]=this.readBeanInList(_buf,WorldBossRewardBox);
		}
	}

	__proto.getId=function(){
		return 519;
	}

	/**宝箱 */
	/**宝箱 */
	__getset(0,__proto,'boxs',function(){
		return this._boxs;
		},function(value){
		this._boxs=value;
	});

	return ResWorldBossFlushBoxMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家通过ID获得房间列表错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomForIDErrorMessage extends net.Message
var ResTeamDuplicateRoomForIDErrorMessage=(function(_super){
	function ResTeamDuplicateRoomForIDErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;*/
		this._error=0;
		ResTeamDuplicateRoomForIDErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomForIDErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomForIDErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomForIDErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 417;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomForIDErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*修改宠物名字
*/
//class net.message.pet.ReqChangePetNameMessage extends net.Message
var ReqChangePetNameMessage=(function(_super){
	function ReqChangePetNameMessage(){
		/**宠物ID */
		this._petID=0;
		/**宠物名字 */
		this._petName=null;
		ReqChangePetNameMessage.__super.call(this);
	}

	__class(ReqChangePetNameMessage,'net.message.pet.ReqChangePetNameMessage',_super);
	var __proto=ReqChangePetNameMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._petID);
		this.writeString(_buf,this._petName);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._petID=this.readInt(_buf);
		this._petName=this.readString(_buf);
	}

	__proto.getId=function(){
		return 151;
	}

	/**宠物ID */
	/**宠物ID */
	__getset(0,__proto,'petID',function(){
		return this._petID;
		},function(value){
		this._petID=value;
	});

	/**宠物名字 */
	/**宠物名字 */
	__getset(0,__proto,'petName',function(){
		return this._petName;
		},function(value){
		this._petName=value;
	});

	return ReqChangePetNameMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求进入九重天活动错误
*/
//class net.message.nineHeavy.ResNineHeavyPlayerJoinErrorMessage extends net.Message
var ResNineHeavyPlayerJoinErrorMessage=(function(_super){
	function ResNineHeavyPlayerJoinErrorMessage(){
		/**1:加入失败 活动未开启;2:你已经在活动中 不能重复加入;*/
		this._error=0;
		ResNineHeavyPlayerJoinErrorMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerJoinErrorMessage,'net.message.nineHeavy.ResNineHeavyPlayerJoinErrorMessage',_super);
	var __proto=ResNineHeavyPlayerJoinErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 367;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResNineHeavyPlayerJoinErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新空城计单位
*/
//class net.message.emptycity.ResEmptyUpdateCityMessage extends net.Message
var ResEmptyUpdateCityMessage=(function(_super){
	function ResEmptyUpdateCityMessage(){
		/***/
		this._bean=null;
		ResEmptyUpdateCityMessage.__super.call(this);
	}

	__class(ResEmptyUpdateCityMessage,'net.message.emptycity.ResEmptyUpdateCityMessage',_super);
	var __proto=ResEmptyUpdateCityMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._bean);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._bean=this.readBean(_buf,EmptyCityBean);
	}

	__proto.getId=function(){
		return 1096;
	}

	/***/
	/***/
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEmptyUpdateCityMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*参与拍卖
*/
//class net.message.auction.ResAuctionContendMessage extends net.Message
var ResAuctionContendMessage=(function(_super){
	function ResAuctionContendMessage(){
		/**拍卖品ID */
		this._auctionID=null;
		/**-1 为一口价 其他为竞价额度 */
		this._cost=0;
		ResAuctionContendMessage.__super.call(this);
	}

	__class(ResAuctionContendMessage,'net.message.auction.ResAuctionContendMessage',_super);
	var __proto=ResAuctionContendMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._auctionID);
		this.writeInt(_buf,this._cost);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._auctionID=this.readLong(_buf);
		this._cost=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 572;
	}

	/**拍卖品ID */
	/**拍卖品ID */
	__getset(0,__proto,'auctionID',function(){
		return this._auctionID;
		},function(value){
		this._auctionID=value;
	});

	/**-1 为一口价 其他为竞价额度 */
	/**-1 为一口价 其他为竞价额度 */
	__getset(0,__proto,'cost',function(){
		return this._cost;
		},function(value){
		this._cost=value;
	});

	return ResAuctionContendMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*铸纹信息
*/
//class net.message.equip.ResGetZhuWenInfoMessage extends net.Message
var ResGetZhuWenInfoMessage=(function(_super){
	function ResGetZhuWenInfoMessage(){
		ResGetZhuWenInfoMessage.__super.call(this);
		this._zhuWenBeans=[];
	}

	__class(ResGetZhuWenInfoMessage,'net.message.equip.ResGetZhuWenInfoMessage',_super);
	var __proto=ResGetZhuWenInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._zhuWenBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._zhuWenBeans.length;++i_am_tmp_i){
			this._zhuWenBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._zhuWenBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._zhuWenBeans[i_am_tmp_i]=this.readBeanInList(_buf,ZhuWenBean);
		}
	}

	__proto.getId=function(){
		return 1536;
	}

	/**铸纹信息 */
	/**铸纹信息 */
	__getset(0,__proto,'zhuWenBeans',function(){
		return this._zhuWenBeans;
		},function(value){
		this._zhuWenBeans=value;
	});

	return ResGetZhuWenInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*发送祥瑞事件错误
*/
//class net.message.goodLuck.ResSelectLuckErrorMessage extends net.Message
var ResSelectLuckErrorMessage=(function(_super){
	function ResSelectLuckErrorMessage(){
		/**1:没钱了;*/
		this._error=0;
		ResSelectLuckErrorMessage.__super.call(this);
	}

	__class(ResSelectLuckErrorMessage,'net.message.goodLuck.ResSelectLuckErrorMessage',_super);
	var __proto=ResSelectLuckErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1604;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResSelectLuckErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取邮件
*/
//class net.message.mail.ReqCollectMailMessage extends net.Message
var ReqCollectMailMessage=(function(_super){
	function ReqCollectMailMessage(){
		/**邮件ID,-1表示全部领取 */
		this._mailID=0;
		ReqCollectMailMessage.__super.call(this);
	}

	__class(ReqCollectMailMessage,'net.message.mail.ReqCollectMailMessage',_super);
	var __proto=ReqCollectMailMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._mailID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._mailID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 43;
	}

	/**邮件ID,-1表示全部领取 */
	/**邮件ID,-1表示全部领取 */
	__getset(0,__proto,'mailID',function(){
		return this._mailID;
		},function(value){
		this._mailID=value;
	});

	return ReqCollectMailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*一键升级觉醒元素
*/
//class net.message.adviser.ResAdviserUpgradeElementQuickMessage extends net.Message
var ResAdviserUpgradeElementQuickMessage=(function(_super){
	function ResAdviserUpgradeElementQuickMessage(){
		ResAdviserUpgradeElementQuickMessage.__super.call(this);
		this._elementBeans=[];
	}

	__class(ResAdviserUpgradeElementQuickMessage,'net.message.adviser.ResAdviserUpgradeElementQuickMessage',_super);
	var __proto=ResAdviserUpgradeElementQuickMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._elementBeans.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._elementBeans.length;++i_am_tmp_i){
			this._elementBeans[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._elementBeans=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._elementBeans[i_am_tmp_i]=this.readBeanInList(_buf,AdviserElementBean);
		}
	}

	__proto.getId=function(){
		return 1193;
	}

	/**元素列表 */
	/**元素列表 */
	__getset(0,__proto,'elementBeans',function(){
		return this._elementBeans;
		},function(value){
		this._elementBeans=value;
	});

	return ResAdviserUpgradeElementQuickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取战斗后的奖励错误
*/
//class net.message.teamDuplicate.ResTeamDuplicateRoomRewardErrorMessage extends net.Message
var ResTeamDuplicateRoomRewardErrorMessage=(function(_super){
	function ResTeamDuplicateRoomRewardErrorMessage(){
		/**1:房间类型错误 或者 房间不存在;*/
		this._error=0;
		ResTeamDuplicateRoomRewardErrorMessage.__super.call(this);
	}

	__class(ResTeamDuplicateRoomRewardErrorMessage,'net.message.teamDuplicate.ResTeamDuplicateRoomRewardErrorMessage',_super);
	var __proto=ResTeamDuplicateRoomRewardErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 434;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResTeamDuplicateRoomRewardErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*有玩家结婚
*/
//class net.message.marriage.ResMarriageWeddingInvitationMessage extends net.Message
var ResMarriageWeddingInvitationMessage=(function(_super){
	function ResMarriageWeddingInvitationMessage(){
		ResMarriageWeddingInvitationMessage.__super.call(this);
		this._spouse=[];
	}

	__class(ResMarriageWeddingInvitationMessage,'net.message.marriage.ResMarriageWeddingInvitationMessage',_super);
	var __proto=ResMarriageWeddingInvitationMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._spouse.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._spouse.length;++i_am_tmp_i){
			this._spouse[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._spouse=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._spouse[i_am_tmp_i]=this.readBeanInList(_buf,SingleBean);
		}
	}

	__proto.getId=function(){
		return 546;
	}

	/**两个结婚的人 */
	/**两个结婚的人 */
	__getset(0,__proto,'spouse',function(){
		return this._spouse;
		},function(value){
		this._spouse=value;
	});

	return ResMarriageWeddingInvitationMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*媚坞寻宝
*/
//class net.message.gongCe.ReqMeiWuHuntMessage extends net.Message
var ReqMeiWuHuntMessage=(function(_super){
	function ReqMeiWuHuntMessage(){
		/**进行的操作 1=寻宝 2=前往下一层 */
		this._type=0;
		/**开启的位置 */
		this._position=0;
		ReqMeiWuHuntMessage.__super.call(this);
	}

	__class(ReqMeiWuHuntMessage,'net.message.gongCe.ReqMeiWuHuntMessage',_super);
	var __proto=ReqMeiWuHuntMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._position);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._position=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1666;
	}

	/**进行的操作 1=寻宝 2=前往下一层 */
	/**进行的操作 1=寻宝 2=前往下一层 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**开启的位置 */
	/**开启的位置 */
	__getset(0,__proto,'position',function(){
		return this._position;
		},function(value){
		this._position=value;
	});

	return ReqMeiWuHuntMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*收取邮件错误
*/
//class net.message.mail.ResCollectMailErrorMessage extends net.Message
var ResCollectMailErrorMessage=(function(_super){
	function ResCollectMailErrorMessage(){
		/**1:找不到对应的邮件;2:背包已满;3:已经领取过;*/
		this._error=0;
		ResCollectMailErrorMessage.__super.call(this);
	}

	__class(ResCollectMailErrorMessage,'net.message.mail.ResCollectMailErrorMessage',_super);
	var __proto=ResCollectMailErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 45;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCollectMailErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取科举的排行榜
*/
//class net.message.examination.ResKejuExaminationRankMessage extends net.Message
var ResKejuExaminationRankMessage=(function(_super){
	function ResKejuExaminationRankMessage(){
		ResKejuExaminationRankMessage.__super.call(this);
		this._rank=[];
	}

	__class(ResKejuExaminationRankMessage,'net.message.examination.ResKejuExaminationRankMessage',_super);
	var __proto=ResKejuExaminationRankMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rank.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rank.length;++i_am_tmp_i){
			this._rank[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._rank=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rank[i_am_tmp_i]=this.readBeanInList(_buf,KejuRankMemberBean);
		}
	}

	__proto.getId=function(){
		return 788;
	}

	/**科举排行榜 */
	/**科举排行榜 */
	__getset(0,__proto,'rank',function(){
		return this._rank;
		},function(value){
		this._rank=value;
	});

	return ResKejuExaminationRankMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到
*/
//class net.message.legion.ReqLegionSignRewardMessageMessage extends net.Message
var ReqLegionSignRewardMessageMessage=(function(_super){
	function ReqLegionSignRewardMessageMessage(){
		/**宝箱下标 0 1 2 */
		this._type=0;
		ReqLegionSignRewardMessageMessage.__super.call(this);
	}

	__class(ReqLegionSignRewardMessageMessage,'net.message.legion.ReqLegionSignRewardMessageMessage',_super);
	var __proto=ReqLegionSignRewardMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 644;
	}

	/**宝箱下标 0 1 2 */
	/**宝箱下标 0 1 2 */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqLegionSignRewardMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活时装
*/
//class net.message.skin.ResWearSkinMessage extends net.Message
var ResWearSkinMessage=(function(_super){
	function ResWearSkinMessage(){
		/**皮肤ID */
		this._skinID=0;
		/**英雄ID */
		this._heroID=0;
		ResWearSkinMessage.__super.call(this);
	}

	__class(ResWearSkinMessage,'net.message.skin.ResWearSkinMessage',_super);
	var __proto=ResWearSkinMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._skinID);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._skinID=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 578;
	}

	/**皮肤ID */
	/**皮肤ID */
	__getset(0,__proto,'skinID',function(){
		return this._skinID;
		},function(value){
		this._skinID=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ResWearSkinMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树额外奖励错误
*/
//class net.message.welfare.ResGetYaoQianRewardAdditionallyErrorMessage extends net.Message
var ResGetYaoQianRewardAdditionallyErrorMessage=(function(_super){
	function ResGetYaoQianRewardAdditionallyErrorMessage(){
		/**1:配置错误;2:领取失败;*/
		this._error=0;
		ResGetYaoQianRewardAdditionallyErrorMessage.__super.call(this);
	}

	__class(ResGetYaoQianRewardAdditionallyErrorMessage,'net.message.welfare.ResGetYaoQianRewardAdditionallyErrorMessage',_super);
	var __proto=ResGetYaoQianRewardAdditionallyErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 745;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGetYaoQianRewardAdditionallyErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*剩余可兑换次数
*/
//class net.message.goods.ResUpdateExchangeCountMessage extends net.Message
var ResUpdateExchangeCountMessage=(function(_super){
	function ResUpdateExchangeCountMessage(){
		/**次数 */
		this._count=0;
		ResUpdateExchangeCountMessage.__super.call(this);
	}

	__class(ResUpdateExchangeCountMessage,'net.message.goods.ResUpdateExchangeCountMessage',_super);
	var __proto=ResUpdateExchangeCountMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 715;
	}

	/**次数 */
	/**次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResUpdateExchangeCountMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取结婚爬塔信息
*/
//class net.message.marriage.ResGetMarryPataInfoMessage extends net.Message
var ResGetMarryPataInfoMessage$1=(function(_super){
	function ResGetMarryPataInfoMessage(){
		/**当前所在的的层数 */
		this._layer=0;
		ResGetMarryPataInfoMessage.__super.call(this);
	}

	__class(ResGetMarryPataInfoMessage,'net.message.marriage.ResGetMarryPataInfoMessage',_super,'ResGetMarryPataInfoMessage$1');
	var __proto=ResGetMarryPataInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1494;
	}

	/**当前所在的的层数 */
	/**当前所在的的层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	return ResGetMarryPataInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*pvp战斗结束请求解锁
*/
//class net.message.fight.ReqPVPFightOverUnlockMessage extends net.Message
var ReqPVPFightOverUnlockMessage=(function(_super){
	function ReqPVPFightOverUnlockMessage(){
		ReqPVPFightOverUnlockMessage.__super.call(this);;
	}

	__class(ReqPVPFightOverUnlockMessage,'net.message.fight.ReqPVPFightOverUnlockMessage',_super);
	var __proto=ReqPVPFightOverUnlockMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1286;
	}

	return ReqPVPFightOverUnlockMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*签到
*/
//class net.message.legion.ResLegionSignMessageMessage extends net.Message
var ResLegionSignMessageMessage=(function(_super){
	function ResLegionSignMessageMessage(){
		ResLegionSignMessageMessage.__super.call(this);;
	}

	__class(ResLegionSignMessageMessage,'net.message.legion.ResLegionSignMessageMessage',_super);
	var __proto=ResLegionSignMessageMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 642;
	}

	return ResLegionSignMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*合成装备打造石
*/
//class net.message.equip.ResEquipMakingStoneMessage extends net.Message
var ResEquipMakingStoneMessage=(function(_super){
	function ResEquipMakingStoneMessage(){
		ResEquipMakingStoneMessage.__super.call(this);
		this._bean=[];
	}

	__class(ResEquipMakingStoneMessage,'net.message.equip.ResEquipMakingStoneMessage',_super);
	var __proto=ResEquipMakingStoneMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._bean.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._bean.length;++i_am_tmp_i){
			this._bean[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._bean=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._bean[i_am_tmp_i]=this.readBeanInList(_buf,GoodsBean);
		}
	}

	__proto.getId=function(){
		return 1479;
	}

	/**得到的物品 */
	/**得到的物品 */
	__getset(0,__proto,'bean',function(){
		return this._bean;
		},function(value){
		this._bean=value;
	});

	return ResEquipMakingStoneMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*回应申请加入队伍
*/
//class net.message.team.ReqTeamApplyReplyMessage extends net.Message
var ReqTeamApplyReplyMessage=(function(_super){
	function ReqTeamApplyReplyMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**申请者唯一ID */
		this._uid=null;
		/**是否同意 */
		this._agree=false;
		ReqTeamApplyReplyMessage.__super.call(this);
	}

	__class(ReqTeamApplyReplyMessage,'net.message.team.ReqTeamApplyReplyMessage',_super);
	var __proto=ReqTeamApplyReplyMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
		this.writeBoolean(_buf,this._agree);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
		this._agree=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 1257;
	}

	/**申请者唯一ID */
	/**申请者唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**是否同意 */
	/**是否同意 */
	__getset(0,__proto,'agree',function(){
		return this._agree;
		},function(value){
		this._agree=value;
	});

	return ReqTeamApplyReplyMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求升级守护
*/
//class net.message.legion.ResLegionGuardUpgradeMessageMessage extends net.Message
var ResLegionGuardUpgradeMessageMessage=(function(_super){
	function ResLegionGuardUpgradeMessageMessage(){
		/**守护等级 */
		this._lv=0;
		/**守护经验 */
		this._exp=0;
		ResLegionGuardUpgradeMessageMessage.__super.call(this);
		this._reward=[];
	}

	__class(ResLegionGuardUpgradeMessageMessage,'net.message.legion.ResLegionGuardUpgradeMessageMessage',_super);
	var __proto=ResLegionGuardUpgradeMessageMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._exp);
		this.writeInt(_buf,this._reward.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._reward.length;++i_am_tmp_i){
			this._reward[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._reward=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._reward[i_am_tmp_i]=this.readBeanInList(_buf,ItemBean);
		}
	}

	__proto.getId=function(){
		return 632;
	}

	/**守护等级 */
	/**守护等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**守护经验 */
	/**守护经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResLegionGuardUpgradeMessageMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级圣甲圣武错误
*/
//class net.message.equip.ResUpGradeEquipErrorMessage extends net.Message
var ResUpGradeEquipErrorMessage=(function(_super){
	function ResUpGradeEquipErrorMessage(){
		/**1:不是装配;2:最大等级;3:升级所需道具不足;4:不是圣武圣甲;5:没有英雄;*/
		this._error=0;
		ResUpGradeEquipErrorMessage.__super.call(this);
	}

	__class(ResUpGradeEquipErrorMessage,'net.message.equip.ResUpGradeEquipErrorMessage',_super);
	var __proto=ResUpGradeEquipErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 949;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpGradeEquipErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求军团首领的大概信息
*/
//class net.message.worldboss.ResWorldBossDetailMessage extends net.Message
var ResWorldBossDetailMessage=(function(_super){
	function ResWorldBossDetailMessage(){
		/**归属名字 */
		this._name=null;
		/**复活时间 */
		this._rebornTime=null;
		ResWorldBossDetailMessage.__super.call(this);
	}

	__class(ResWorldBossDetailMessage,'net.message.worldboss.ResWorldBossDetailMessage',_super);
	var __proto=ResWorldBossDetailMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeLong(_buf,this._rebornTime);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._rebornTime=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 581;
	}

	/**复活时间 */
	/**复活时间 */
	__getset(0,__proto,'rebornTime',function(){
		return this._rebornTime;
		},function(value){
		this._rebornTime=value;
	});

	/**归属名字 */
	/**归属名字 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	return ResWorldBossDetailMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取勇闯天庭信息
*/
//class net.message.pata.ResGetYCTTInfoMessage extends net.Message
var ResGetYCTTInfoMessage=(function(_super){
	function ResGetYCTTInfoMessage(){
		/**已经通关的层数 */
		this._layer=0;
		/**层数上限 */
		this._maxLayer=0;
		/**奖励预览 */
		this._previewPrize=null;
		/**奖励预览的层数 */
		this._previewLayer=0;
		/**是否可以扫荡？0不可 */
		this._todayLayer=0;
		/**是否可以扫荡 */
		this._isMopUp=false;
		ResGetYCTTInfoMessage.__super.call(this);
		this._layers=[];
		this._box=[];
	}

	__class(ResGetYCTTInfoMessage,'net.message.pata.ResGetYCTTInfoMessage',_super);
	var __proto=ResGetYCTTInfoMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layers.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._layers.length;++i_am_tmp_i){
			this._layers[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._box.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._box.length;++i_am_tmp_i){
			this._box[i_am_tmp_i].write(_buf);
		}
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._maxLayer);
		this.writeString(_buf,this._previewPrize);
		this.writeInt(_buf,this._previewLayer);
		this.writeInt(_buf,this._todayLayer);
		this.writeBoolean(_buf,this._isMopUp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._layers=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._layers[i_am_tmp_i]=this.readBeanInList(_buf,YCTTLayerBean);
		}
		size52413035=this.readInt(_buf);
		this._box=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._box[i_am_tmp_i]=this.readBeanInList(_buf,YCTTBoxBean);
		}
		this._layer=this.readInt(_buf);
		this._maxLayer=this.readInt(_buf);
		this._previewPrize=this.readString(_buf);
		this._previewLayer=this.readInt(_buf);
		this._todayLayer=this.readInt(_buf);
		this._isMopUp=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 240;
	}

	/**分层信息 */
	/**分层信息 */
	__getset(0,__proto,'layers',function(){
		return this._layers;
		},function(value){
		this._layers=value;
	});

	/**是否可以扫荡 */
	/**是否可以扫荡 */
	__getset(0,__proto,'isMopUp',function(){
		return this._isMopUp;
		},function(value){
		this._isMopUp=value;
	});

	/**层数上限 */
	/**层数上限 */
	__getset(0,__proto,'maxLayer',function(){
		return this._maxLayer;
		},function(value){
		this._maxLayer=value;
	});

	/**宝箱信息 */
	/**宝箱信息 */
	__getset(0,__proto,'box',function(){
		return this._box;
		},function(value){
		this._box=value;
	});

	/**已经通关的层数 */
	/**已经通关的层数 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励预览 */
	/**奖励预览 */
	__getset(0,__proto,'previewPrize',function(){
		return this._previewPrize;
		},function(value){
		this._previewPrize=value;
	});

	/**奖励预览的层数 */
	/**奖励预览的层数 */
	__getset(0,__proto,'previewLayer',function(){
		return this._previewLayer;
		},function(value){
		this._previewLayer=value;
	});

	/**是否可以扫荡？0不可 */
	/**是否可以扫荡？0不可 */
	__getset(0,__proto,'todayLayer',function(){
		return this._todayLayer;
		},function(value){
		this._todayLayer=value;
	});

	return ResGetYCTTInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取竞技场排名信息错误
*/
//class net.message.arena.ResArenaGetRankInfoErrorMessage extends net.Message
var ResArenaGetRankInfoErrorMessage=(function(_super){
	function ResArenaGetRankInfoErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResArenaGetRankInfoErrorMessage.__super.call(this);
	}

	__class(ResArenaGetRankInfoErrorMessage,'net.message.arena.ResArenaGetRankInfoErrorMessage',_super);
	var __proto=ResArenaGetRankInfoErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 285;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResArenaGetRankInfoErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*玩家退出九重天
*/
//class net.message.nineHeavy.ResNineHeavyPlayerLeaveMessage extends net.Message
var ResNineHeavyPlayerLeaveMessage=(function(_super){
	function ResNineHeavyPlayerLeaveMessage(){
		/**退出的玩家ID */
		this._uid=null;
		ResNineHeavyPlayerLeaveMessage.__super.call(this);
	}

	__class(ResNineHeavyPlayerLeaveMessage,'net.message.nineHeavy.ResNineHeavyPlayerLeaveMessage',_super);
	var __proto=ResNineHeavyPlayerLeaveMessage.prototype;
	__proto.write=function(_buf){
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 377;
	}

	/**退出的玩家ID */
	/**退出的玩家ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	return ResNineHeavyPlayerLeaveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活
*/
//class net.message.totem.ReqTotemActiveMessage extends net.Message
var ReqTotemActiveMessage=(function(_super){
	function ReqTotemActiveMessage(){
		/**id */
		this._id=0;
		ReqTotemActiveMessage.__super.call(this);
	}

	__class(ReqTotemActiveMessage,'net.message.totem.ReqTotemActiveMessage',_super);
	var __proto=ReqTotemActiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 857;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqTotemActiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活宠物缘分错误
*/
//class net.message.pet.ResActivePetGroupErrorMessage extends net.Message
var ResActivePetGroupErrorMessage=(function(_super){
	function ResActivePetGroupErrorMessage(){
		/**1:参数错误;2:已激活;3:没有宠物;*/
		this._error=0;
		ResActivePetGroupErrorMessage.__super.call(this);
	}

	__class(ResActivePetGroupErrorMessage,'net.message.pet.ResActivePetGroupErrorMessage',_super);
	var __proto=ResActivePetGroupErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 168;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResActivePetGroupErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级错误
*/
//class net.message.juewei.ResUpdateJueWeiLevelErrorMessage extends net.Message
var ResUpdateJueWeiLevelErrorMessage=(function(_super){
	function ResUpdateJueWeiLevelErrorMessage(){
		/**1:物品不足;2:活跃不足;3:战力不足;4:解析配置错误;*/
		this._error=0;
		ResUpdateJueWeiLevelErrorMessage.__super.call(this);
	}

	__class(ResUpdateJueWeiLevelErrorMessage,'net.message.juewei.ResUpdateJueWeiLevelErrorMessage',_super);
	var __proto=ResUpdateJueWeiLevelErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 727;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpdateJueWeiLevelErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*设置合体参与者
*/
//class net.message.fit.ReqFitSetParticipantMessage extends net.Message
var ReqFitSetParticipantMessage=(function(_super){
	function ReqFitSetParticipantMessage(){
		/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
		this._type=0;
		ReqFitSetParticipantMessage.__super.call(this);
		this._participant=[];
	}

	__class(ReqFitSetParticipantMessage,'net.message.fit.ReqFitSetParticipantMessage',_super);
	var __proto=ReqFitSetParticipantMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._participant.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._participant.length;++i_am_tmp_i){
			this._participant[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._participant=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._participant[i_am_tmp_i]=this.readBeanInList(_buf,FitSetParticipantBean);
		}
	}

	__proto.getId=function(){
		return 1140;
	}

	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	/**合体类型[1:宠物1][2:宠物2][3:宠物3][4:红颜][5:军师][6:蛮将] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**参与者 */
	/**参与者 */
	__getset(0,__proto,'participant',function(){
		return this._participant;
		},function(value){
		this._participant=value;
	});

	return ReqFitSetParticipantMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级通用进阶技能
*/
//class net.message.upgrade.ResUpgradeCommonSkillLevelMessage extends net.Message
var ResUpgradeCommonSkillLevelMessage=(function(_super){
	function ResUpgradeCommonSkillLevelMessage(){
		/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._upgradeType=0;
		ResUpgradeCommonSkillLevelMessage.__super.call(this);
		this._skills=[];
	}

	__class(ResUpgradeCommonSkillLevelMessage,'net.message.upgrade.ResUpgradeCommonSkillLevelMessage',_super);
	var __proto=ResUpgradeCommonSkillLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._upgradeType);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._upgradeType=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 1362;
	}

	/**技能 */
	/**技能 */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**进阶系统[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'upgradeType',function(){
		return this._upgradeType;
		},function(value){
		this._upgradeType=value;
	});

	return ResUpgradeCommonSkillLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*给伴侣赠送鲜花
*/
//class net.message.marriage.ReqMarriageFlowersMessage extends net.Message
var ReqMarriageFlowersMessage=(function(_super){
	function ReqMarriageFlowersMessage(){
		/**鲜花ID */
		this._type=0;
		/**数量 */
		this._count=0;
		ReqMarriageFlowersMessage.__super.call(this);
	}

	__class(ReqMarriageFlowersMessage,'net.message.marriage.ReqMarriageFlowersMessage',_super);
	var __proto=ReqMarriageFlowersMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 542;
	}

	/**鲜花ID */
	/**鲜花ID */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**数量 */
	/**数量 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ReqMarriageFlowersMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*抢
*/
//class net.message.redEnvelopes.ResRedEnvelopesMessage extends net.Message
var ResRedEnvelopesMessage=(function(_super){
	function ResRedEnvelopesMessage(){
		/**id */
		this._id=0;
		/**金额 */
		this._reward=0;
		ResRedEnvelopesMessage.__super.call(this);
	}

	__class(ResRedEnvelopesMessage,'net.message.redEnvelopes.ResRedEnvelopesMessage',_super);
	var __proto=ResRedEnvelopesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._reward);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._reward=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 737;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**金额 */
	/**金额 */
	__getset(0,__proto,'reward',function(){
		return this._reward;
		},function(value){
		this._reward=value;
	});

	return ResRedEnvelopesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通用进阶
*/
//class net.message.upgrade.ReqCommonUpgradeMessage extends net.Message
var ReqCommonUpgradeMessage=(function(_super){
	function ReqCommonUpgradeMessage(){
		/**英雄ID */
		this._heroID=0;
		/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
		this._type=0;
		/**道具不足是否自动购买 */
		this._autoBuy=false;
		/**进阶暴击id */
		this._configId=0;
		ReqCommonUpgradeMessage.__super.call(this);
	}

	__class(ReqCommonUpgradeMessage,'net.message.upgrade.ReqCommonUpgradeMessage',_super);
	var __proto=ReqCommonUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._type);
		this.writeBoolean(_buf,this._autoBuy);
		this.writeInt(_buf,this._configId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._type=this.readInt(_buf);
		this._autoBuy=this.readBoolean(_buf);
		this._configId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 171;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	/**类型[1:光环][2:守护][3:坐骑][4:翅膀][5:神兵][6:精灵][7:机关][8:符文][9:密核][10:突破][11:军师兵符][12:军师军令][13:军师军旗][14:军师军印][15:红颜阵法][16:红颜灵气][17:蛮将(属性丹）][18:红颜(属性丹）] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**道具不足是否自动购买 */
	/**道具不足是否自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	/**进阶暴击id */
	/**进阶暴击id */
	__getset(0,__proto,'configId',function(){
		return this._configId;
		},function(value){
		this._configId=value;
	});

	return ReqCommonUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新求婚列表
*/
//class net.message.marriage.ResMarriageUpdateProposeMessage extends net.Message
var ResMarriageUpdateProposeMessage=(function(_super){
	function ResMarriageUpdateProposeMessage(){
		ResMarriageUpdateProposeMessage.__super.call(this);
		this._propose=[];
	}

	__class(ResMarriageUpdateProposeMessage,'net.message.marriage.ResMarriageUpdateProposeMessage',_super);
	var __proto=ResMarriageUpdateProposeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._propose.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._propose.length;++i_am_tmp_i){
			this._propose[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._propose=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._propose[i_am_tmp_i]=this.readBeanInList(_buf,ProposeBean);
		}
	}

	__proto.getId=function(){
		return 534;
	}

	/**求婚对象 */
	/**求婚对象 */
	__getset(0,__proto,'propose',function(){
		return this._propose;
		},function(value){
		this._propose=value;
	});

	return ResMarriageUpdateProposeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级技能错误
*/
//class net.message.skill.ResUpgradeSkillErrorMessage extends net.Message
var ResUpgradeSkillErrorMessage=(function(_super){
	function ResUpgradeSkillErrorMessage(){
		/**1:非法技能;2:金币不足;3:非法的英雄;4:没有该技能;5:道具不足;6:最大等级;*/
		this._error=0;
		ResUpgradeSkillErrorMessage.__super.call(this);
	}

	__class(ResUpgradeSkillErrorMessage,'net.message.skill.ResUpgradeSkillErrorMessage',_super);
	var __proto=ResUpgradeSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 93;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童嗑药
*/
//class net.message.soulboy.ResSoulBoyDrugMessage extends net.Message
var ResSoulBoyDrugMessage=(function(_super){
	function ResSoulBoyDrugMessage(){
		/**灵童ID */
		this._id=0;
		/**新的等级 */
		this._lv=0;
		/**新的进度 */
		this._value=0;
		ResSoulBoyDrugMessage.__super.call(this);
	}

	__class(ResSoulBoyDrugMessage,'net.message.soulboy.ResSoulBoyDrugMessage',_super);
	var __proto=ResSoulBoyDrugMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._value);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._lv=this.readInt(_buf);
		this._value=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 448;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**新的等级 */
	/**新的等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**新的进度 */
	/**新的进度 */
	__getset(0,__proto,'value',function(){
		return this._value;
		},function(value){
		this._value=value;
	});

	return ResSoulBoyDrugMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*活动转盘
*/
//class net.message.activities.ResActTurntableMessage extends net.Message
var ResActTurntableMessage=(function(_super){
	function ResActTurntableMessage(){
		/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
		this._type=0;
		/**剩余次数 */
		this._times=0;
		/**本次获得的奖励的序号 */
		this._currentIndex=0;
		ResActTurntableMessage.__super.call(this);
		this._rewardList=[];
	}

	__class(ResActTurntableMessage,'net.message.activities.ResActTurntableMessage',_super);
	var __proto=ResActTurntableMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeInt(_buf,this._times);
		this.writeInt(_buf,this._currentIndex);
		this.writeInt(_buf,this._rewardList.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._rewardList.length;++i_am_tmp_i){
			this.writeInt(_buf,this._rewardList[i_am_tmp_i]);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._times=this.readInt(_buf);
		this._currentIndex=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._rewardList=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._rewardList[i_am_tmp_i]=this.readInt(_buf);
		}
	}

	__proto.getId=function(){
		return 1606;
	}

	/**剩余次数 */
	/**剩余次数 */
	__getset(0,__proto,'times',function(){
		return this._times;
		},function(value){
		this._times=value;
	});

	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	/**转盘类型[1:达标有礼转盘][2:点将转盘][3:活跃转盘] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	/**已获得的奖励的序号 */
	/**已获得的奖励的序号 */
	__getset(0,__proto,'rewardList',function(){
		return this._rewardList;
		},function(value){
		this._rewardList=value;
	});

	/**本次获得的奖励的序号 */
	/**本次获得的奖励的序号 */
	__getset(0,__proto,'currentIndex',function(){
		return this._currentIndex;
		},function(value){
		this._currentIndex=value;
	});

	return ResActTurntableMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*攻击城市
*/
//class net.message.emptycity.ResEmptyCityAttackMessage extends net.Message
var ResEmptyCityAttackMessage=(function(_super){
	function ResEmptyCityAttackMessage(){
		/**数据 */
		this._data=null;
		ResEmptyCityAttackMessage.__super.call(this);
	}

	__class(ResEmptyCityAttackMessage,'net.message.emptycity.ResEmptyCityAttackMessage',_super);
	var __proto=ResEmptyCityAttackMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._data);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._data=this.readBean(_buf,FightBean);
	}

	__proto.getId=function(){
		return 1094;
	}

	/**数据 */
	/**数据 */
	__getset(0,__proto,'data',function(){
		return this._data;
		},function(value){
		this._data=value;
	});

	return ResEmptyCityAttackMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取帮会活动当前状态
*/
//class net.message.gb.ReqLegionBattleGetStateMessage extends net.Message
var ReqLegionBattleGetStateMessage=(function(_super){
	function ReqLegionBattleGetStateMessage(){
		ReqLegionBattleGetStateMessage.__super.call(this);;
	}

	__class(ReqLegionBattleGetStateMessage,'net.message.gb.ReqLegionBattleGetStateMessage',_super);
	var __proto=ReqLegionBattleGetStateMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1350;
	}

	return ReqLegionBattleGetStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*通知世界BOSS状态变化
*/
//class net.message.worldboss.ResWorldBossChangeStateMessage extends net.Message
var ResWorldBossChangeStateMessage=(function(_super){
	function ResWorldBossChangeStateMessage(){
		/**世界BOSS状态 */
		this._state=0;
		ResWorldBossChangeStateMessage.__super.call(this);
	}

	__class(ResWorldBossChangeStateMessage,'net.message.worldboss.ResWorldBossChangeStateMessage',_super);
	var __proto=ResWorldBossChangeStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._state);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._state=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 886;
	}

	/**世界BOSS状态 */
	/**世界BOSS状态 */
	__getset(0,__proto,'state',function(){
		return this._state;
		},function(value){
		this._state=value;
	});

	return ResWorldBossChangeStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级错误
*/
//class net.message.adviser.ResAdviserUpgradeErrorMessage extends net.Message
var ResAdviserUpgradeErrorMessage=(function(_super){
	function ResAdviserUpgradeErrorMessage(){
		/**1:未激活;2:条件不足;3:配置错误;4:最大等级;*/
		this._error=0;
		ResAdviserUpgradeErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeErrorMessage,'net.message.adviser.ResAdviserUpgradeErrorMessage',_super);
	var __proto=ResAdviserUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 806;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新GM权限状态
*/
//class net.message.misc.ResUpdateGMStateMessage extends net.Message
var ResUpdateGMStateMessage=(function(_super){
	function ResUpdateGMStateMessage(){
		/**是否为GM */
		this._gm=false;
		/**额外参数 */
		this._extraParams=null;
		ResUpdateGMStateMessage.__super.call(this);
	}

	__class(ResUpdateGMStateMessage,'net.message.misc.ResUpdateGMStateMessage',_super);
	var __proto=ResUpdateGMStateMessage.prototype;
	__proto.write=function(_buf){
		this.writeBoolean(_buf,this._gm);
		this.writeString(_buf,this._extraParams);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._gm=this.readBoolean(_buf);
		this._extraParams=this.readString(_buf);
	}

	__proto.getId=function(){
		return 1581;
	}

	/**是否为GM */
	/**是否为GM */
	__getset(0,__proto,'gm',function(){
		return this._gm;
		},function(value){
		this._gm=value;
	});

	/**额外参数 */
	/**额外参数 */
	__getset(0,__proto,'extraParams',function(){
		return this._extraParams;
		},function(value){
		this._extraParams=value;
	});

	return ResUpdateGMStateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级
*/
//class net.message.adviser.ReqAdviserUpgradeMessage extends net.Message
var ReqAdviserUpgradeMessage=(function(_super){
	function ReqAdviserUpgradeMessage(){
		/**id */
		this._id=0;
		/**是否自动购买 */
		this._isAutoBuy=false;
		ReqAdviserUpgradeMessage.__super.call(this);
	}

	__class(ReqAdviserUpgradeMessage,'net.message.adviser.ReqAdviserUpgradeMessage',_super);
	var __proto=ReqAdviserUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeBoolean(_buf,this._isAutoBuy);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._isAutoBuy=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 804;
	}

	/**id */
	/**id */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**是否自动购买 */
	/**是否自动购买 */
	__getset(0,__proto,'isAutoBuy',function(){
		return this._isAutoBuy;
		},function(value){
		this._isAutoBuy=value;
	});

	return ReqAdviserUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*获取寻宝时间
*/
//class net.message.textureHunt.ReqGetTimeInfoMessage extends net.Message
var ReqGetTimeInfoMessage=(function(_super){
	function ReqGetTimeInfoMessage(){
		ReqGetTimeInfoMessage.__super.call(this);;
	}

	__class(ReqGetTimeInfoMessage,'net.message.textureHunt.ReqGetTimeInfoMessage',_super);
	var __proto=ReqGetTimeInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1574;
	}

	return ReqGetTimeInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*指令错误
*/
//class net.message.misc.ResCommandErrorMessage extends net.Message
var ResCommandErrorMessage=(function(_super){
	function ResCommandErrorMessage(){
		/**1:不是GM;2:非法指令;3:系统错误;4:非法参数;*/
		this._error=0;
		ResCommandErrorMessage.__super.call(this);
	}

	__class(ResCommandErrorMessage,'net.message.misc.ResCommandErrorMessage',_super);
	var __proto=ResCommandErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 37;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResCommandErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取副本奖励
*/
//class net.message.dungeon.ReqReceiveDungeonPrizeMessage extends net.Message
var ReqReceiveDungeonPrizeMessage=(function(_super){
	function ReqReceiveDungeonPrizeMessage(){
		/**副本ID */
		this._dungeonID=0;
		/**是否是扫荡 */
		this._saodang=false;
		ReqReceiveDungeonPrizeMessage.__super.call(this);
	}

	__class(ReqReceiveDungeonPrizeMessage,'net.message.dungeon.ReqReceiveDungeonPrizeMessage',_super);
	var __proto=ReqReceiveDungeonPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._dungeonID);
		this.writeBoolean(_buf,this._saodang);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._dungeonID=this.readInt(_buf);
		this._saodang=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 108;
	}

	/**副本ID */
	/**副本ID */
	__getset(0,__proto,'dungeonID',function(){
		return this._dungeonID;
		},function(value){
		this._dungeonID=value;
	});

	/**是否是扫荡 */
	/**是否是扫荡 */
	__getset(0,__proto,'saodang',function(){
		return this._saodang;
		},function(value){
		this._saodang=value;
	});

	return ReqReceiveDungeonPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*添加场景对象
*/
//class net.message.scene.ResSceneAddMessage extends net.Message
var ResSceneAddMessage=(function(_super){
	function ResSceneAddMessage(){
		/**场景玩家 */
		this._user=null;
		ResSceneAddMessage.__super.call(this);
	}

	__class(ResSceneAddMessage,'net.message.scene.ResSceneAddMessage',_super);
	var __proto=ResSceneAddMessage.prototype;
	__proto.write=function(_buf){
		this.writeBean(_buf,this._user);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._user=this.readBean(_buf,SceneUserBean);
	}

	__proto.getId=function(){
		return 1312;
	}

	/**场景玩家 */
	/**场景玩家 */
	__getset(0,__proto,'user',function(){
		return this._user;
		},function(value){
		this._user=value;
	});

	return ResSceneAddMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*解散军团
*/
//class net.message.guild.ReqGuildDismissMessage extends net.Message
var ReqGuildDismissMessage=(function(_super){
	function ReqGuildDismissMessage(){
		ReqGuildDismissMessage.__super.call(this);;
	}

	__class(ReqGuildDismissMessage,'net.message.guild.ReqGuildDismissMessage',_super);
	var __proto=ReqGuildDismissMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1227;
	}

	return ReqGuildDismissMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级英雄技能错误
*/
//class net.message.skill.ResUpgradeHeroSkillErrorMessage extends net.Message
var ResUpgradeHeroSkillErrorMessage=(function(_super){
	function ResUpgradeHeroSkillErrorMessage(){
		/**1:非法技能;2:金币不足;3:非法的英雄;4:没有该技能;5:道具不足;6:最大等级;*/
		this._error=0;
		ResUpgradeHeroSkillErrorMessage.__super.call(this);
	}

	__class(ResUpgradeHeroSkillErrorMessage,'net.message.skill.ResUpgradeHeroSkillErrorMessage',_super);
	var __proto=ResUpgradeHeroSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 188;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeHeroSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*推送当前开放中的特殊活动
*/
//class net.message.activities.ResUpdateSpecialActListMessage extends net.Message
var ResUpdateSpecialActListMessage=(function(_super){
	function ResUpdateSpecialActListMessage(){
		ResUpdateSpecialActListMessage.__super.call(this);
		this._onActive=[];
	}

	__class(ResUpdateSpecialActListMessage,'net.message.activities.ResUpdateSpecialActListMessage',_super);
	var __proto=ResUpdateSpecialActListMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._onActive.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._onActive.length;++i_am_tmp_i){
			this._onActive[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._onActive=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._onActive[i_am_tmp_i]=this.readBeanInList(_buf,SpecialActInfoBean);
		}
	}

	__proto.getId=function(){
		return 1555;
	}

	/**当前活动中的 */
	/**当前活动中的 */
	__getset(0,__proto,'onActive',function(){
		return this._onActive;
		},function(value){
		this._onActive=value;
	});

	return ResUpdateSpecialActListMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破错误
*/
//class net.message.general.ResGeneralUpgradeErrorMessage extends net.Message
var ResGeneralUpgradeErrorMessage=(function(_super){
	function ResGeneralUpgradeErrorMessage(){
		/**1:未激活;2:条件不足;3:配置错误;*/
		this._error=0;
		ResGeneralUpgradeErrorMessage.__super.call(this);
	}

	__class(ResGeneralUpgradeErrorMessage,'net.message.general.ResGeneralUpgradeErrorMessage',_super);
	var __proto=ResGeneralUpgradeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 851;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralUpgradeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*商店购买返还信息
*/
//class net.message.shop.ResUpdateShopReturnMessage extends net.Message
var ResUpdateShopReturnMessage=(function(_super){
	function ResUpdateShopReturnMessage(){
		ResUpdateShopReturnMessage.__super.call(this);
		this._types=[];
	}

	__class(ResUpdateShopReturnMessage,'net.message.shop.ResUpdateShopReturnMessage',_super);
	var __proto=ResUpdateShopReturnMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._types.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._types.length;++i_am_tmp_i){
			this._types[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		size52413035=this.readInt(_buf);
		this._types=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._types[i_am_tmp_i]=this.readBeanInList(_buf,ShopTypeBean);
		}
	}

	__proto.getId=function(){
		return 1394;
	}

	/**所有返还的商店 */
	/**所有返还的商店 */
	__getset(0,__proto,'types',function(){
		return this._types;
		},function(value){
		this._types=value;
	});

	return ResUpdateShopReturnMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*许愿错误
*/
//class net.message.gongCe.ResXuYuanErrorMessage extends net.Message
var ResXuYuanErrorMessage=(function(_super){
	function ResXuYuanErrorMessage(){
		/**1:你已经许过了;2:你已经领取过了;*/
		this._error=0;
		ResXuYuanErrorMessage.__super.call(this);
	}

	__class(ResXuYuanErrorMessage,'net.message.gongCe.ResXuYuanErrorMessage',_super);
	var __proto=ResXuYuanErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1637;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResXuYuanErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*突破错误
*/
//class net.message.general.ResGeneralSurmountErrorMessage extends net.Message
var ResGeneralSurmountErrorMessage=(function(_super){
	function ResGeneralSurmountErrorMessage(){
		/**1:未激活;2:条件不足;3:配置错误;*/
		this._error=0;
		ResGeneralSurmountErrorMessage.__super.call(this);
	}

	__class(ResGeneralSurmountErrorMessage,'net.message.general.ResGeneralSurmountErrorMessage',_super);
	var __proto=ResGeneralSurmountErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 848;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResGeneralSurmountErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*挂机奖励
*/
//class net.message.misc.ReqFastOnHookRewardInfoMessage extends net.Message
var ReqFastOnHookRewardInfoMessage=(function(_super){
	function ReqFastOnHookRewardInfoMessage(){
		ReqFastOnHookRewardInfoMessage.__super.call(this);;
	}

	__class(ReqFastOnHookRewardInfoMessage,'net.message.misc.ReqFastOnHookRewardInfoMessage',_super);
	var __proto=ReqFastOnHookRewardInfoMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1457;
	}

	return ReqFastOnHookRewardInfoMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童被动技能洗练
*/
//class net.message.soulboy.ReqSoulBoyXilianMessage extends net.Message
var ReqSoulBoyXilianMessage=(function(_super){
	function ReqSoulBoyXilianMessage(){
		/**灵童ID */
		this._id=0;
		/**自动购买 */
		this._autoBuy=false;
		/**高级洗练? */
		this._isHigh=false;
		ReqSoulBoyXilianMessage.__super.call(this);
		this._lockIndex=[];
	}

	__class(ReqSoulBoyXilianMessage,'net.message.soulboy.ReqSoulBoyXilianMessage',_super);
	var __proto=ReqSoulBoyXilianMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._lockIndex.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._lockIndex.length;++i_am_tmp_i){
			this.writeInt(_buf,this._lockIndex[i_am_tmp_i]);
		}
		this.writeBoolean(_buf,this._autoBuy);
		this.writeBoolean(_buf,this._isHigh);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._lockIndex=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._lockIndex[i_am_tmp_i]=this.readInt(_buf);
		}
		this._autoBuy=this.readBoolean(_buf);
		this._isHigh=this.readBoolean(_buf);
	}

	__proto.getId=function(){
		return 467;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**自动购买 */
	/**自动购买 */
	__getset(0,__proto,'autoBuy',function(){
		return this._autoBuy;
		},function(value){
		this._autoBuy=value;
	});

	/**锁定的 */
	/**锁定的 */
	__getset(0,__proto,'lockIndex',function(){
		return this._lockIndex;
		},function(value){
		this._lockIndex=value;
	});

	/**高级洗练? */
	/**高级洗练? */
	__getset(0,__proto,'isHigh',function(){
		return this._isHigh;
		},function(value){
		this._isHigh=value;
	});

	return ReqSoulBoyXilianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*重置军团广场任务
*/
//class net.message.task.ReqTaskGuildSquareResetMessage extends net.Message
var ReqTaskGuildSquareResetMessage=(function(_super){
	function ReqTaskGuildSquareResetMessage(){
		/**任务ID */
		this._taskID=0;
		ReqTaskGuildSquareResetMessage.__super.call(this);
	}

	__class(ReqTaskGuildSquareResetMessage,'net.message.task.ReqTaskGuildSquareResetMessage',_super);
	var __proto=ReqTaskGuildSquareResetMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._taskID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._taskID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1307;
	}

	/**任务ID */
	/**任务ID */
	__getset(0,__proto,'taskID',function(){
		return this._taskID;
		},function(value){
		this._taskID=value;
	});

	return ReqTaskGuildSquareResetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求复仇错误
*/
//class net.message.escort.ResEscortRevengeErrorMessage extends net.Message
var ResEscortRevengeErrorMessage=(function(_super){
	function ResEscortRevengeErrorMessage(){
		/**1:目标状态发生变化 复仇目标不存在;*/
		this._error=0;
		ResEscortRevengeErrorMessage.__super.call(this);
	}

	__class(ResEscortRevengeErrorMessage,'net.message.escort.ResEscortRevengeErrorMessage',_super);
	var __proto=ResEscortRevengeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 351;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEscortRevengeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*帮助关卡的奖励
*/
//class net.message.chat.ReqChatHelpRewardMessage extends net.Message
var ReqChatHelpRewardMessage=(function(_super){
	function ReqChatHelpRewardMessage(){
		ReqChatHelpRewardMessage.__super.call(this);;
	}

	__class(ReqChatHelpRewardMessage,'net.message.chat.ReqChatHelpRewardMessage',_super);
	var __proto=ReqChatHelpRewardMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 762;
	}

	return ReqChatHelpRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*队伍踢人
*/
//class net.message.team.ReqTeamKickMessage extends net.Message
var ReqTeamKickMessage=(function(_super){
	function ReqTeamKickMessage(){
		/**队伍类型[1:帮会战][2:结婚组队爬塔] */
		this._type=0;
		/**玩家唯一ID */
		this._uid=null;
		ReqTeamKickMessage.__super.call(this);
	}

	__class(ReqTeamKickMessage,'net.message.team.ReqTeamKickMessage',_super);
	var __proto=ReqTeamKickMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._type);
		this.writeLong(_buf,this._uid);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._type=this.readInt(_buf);
		this._uid=this.readLong(_buf);
	}

	__proto.getId=function(){
		return 1273;
	}

	/**玩家唯一ID */
	/**玩家唯一ID */
	__getset(0,__proto,'uid',function(){
		return this._uid;
		},function(value){
		this._uid=value;
	});

	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	/**队伍类型[1:帮会战][2:结婚组队爬塔] */
	__getset(0,__proto,'type',function(){
		return this._type;
		},function(value){
		this._type=value;
	});

	return ReqTeamKickMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取积分奖励
*/
//class net.message.todayrecommend.ReqRecommendTaskIntegralRewardMessage extends net.Message
var ReqRecommendTaskIntegralRewardMessage=(function(_super){
	function ReqRecommendTaskIntegralRewardMessage(){
		/**索引 */
		this._index=0;
		ReqRecommendTaskIntegralRewardMessage.__super.call(this);
	}

	__class(ReqRecommendTaskIntegralRewardMessage,'net.message.todayrecommend.ReqRecommendTaskIntegralRewardMessage',_super);
	var __proto=ReqRecommendTaskIntegralRewardMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._index);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._index=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1504;
	}

	/**索引 */
	/**索引 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	return ReqRecommendTaskIntegralRewardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*充值返利活动
*/
//class net.message.activities.ResRechargeTurntableMessage extends net.Message
var ResRechargeTurntableMessage=(function(_super){
	function ResRechargeTurntableMessage(){
		/**当前活动充值金额 */
		this._rmbTotal=0;
		/**当前活动已累计获得刀币 */
		this._goldTotal=null;
		/**当前最后已抽取的充值档位,没抽过为0 */
		this._currentCfgIndex=0;
		/**本次抽到的倍数下标 */
		this._randIndex=0;
		ResRechargeTurntableMessage.__super.call(this);
	}

	__class(ResRechargeTurntableMessage,'net.message.activities.ResRechargeTurntableMessage',_super);
	var __proto=ResRechargeTurntableMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._rmbTotal);
		this.writeLong(_buf,this._goldTotal);
		this.writeInt(_buf,this._currentCfgIndex);
		this.writeInt(_buf,this._randIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._rmbTotal=this.readInt(_buf);
		this._goldTotal=this.readLong(_buf);
		this._currentCfgIndex=this.readInt(_buf);
		this._randIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1664;
	}

	/**当前活动充值金额 */
	/**当前活动充值金额 */
	__getset(0,__proto,'rmbTotal',function(){
		return this._rmbTotal;
		},function(value){
		this._rmbTotal=value;
	});

	/**当前活动已累计获得刀币 */
	/**当前活动已累计获得刀币 */
	__getset(0,__proto,'goldTotal',function(){
		return this._goldTotal;
		},function(value){
		this._goldTotal=value;
	});

	/**当前最后已抽取的充值档位,没抽过为0 */
	/**当前最后已抽取的充值档位,没抽过为0 */
	__getset(0,__proto,'currentCfgIndex',function(){
		return this._currentCfgIndex;
		},function(value){
		this._currentCfgIndex=value;
	});

	/**本次抽到的倍数下标 */
	/**本次抽到的倍数下标 */
	__getset(0,__proto,'randIndex',function(){
		return this._randIndex;
		},function(value){
		this._randIndex=value;
	});

	return ResRechargeTurntableMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*宝物升星
*/
//class net.message.treasure.ReqTreasureStarUpMessage extends net.Message
var ReqTreasureStarUpMessage=(function(_super){
	function ReqTreasureStarUpMessage(){
		/**宝物ID */
		this._treasureId=0;
		ReqTreasureStarUpMessage.__super.call(this);
	}

	__class(ReqTreasureStarUpMessage,'net.message.treasure.ReqTreasureStarUpMessage',_super);
	var __proto=ReqTreasureStarUpMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._treasureId);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._treasureId=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1628;
	}

	/**宝物ID */
	/**宝物ID */
	__getset(0,__proto,'treasureId',function(){
		return this._treasureId;
		},function(value){
		this._treasureId=value;
	});

	return ReqTreasureStarUpMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*使用激活码
*/
//class net.message.card.ReqUseCardMessage extends net.Message
var ReqUseCardMessage=(function(_super){
	function ReqUseCardMessage(){
		/**码 */
		this._code=null;
		ReqUseCardMessage.__super.call(this);
	}

	__class(ReqUseCardMessage,'net.message.card.ReqUseCardMessage',_super);
	var __proto=ReqUseCardMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._code);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._code=this.readString(_buf);
	}

	__proto.getId=function(){
		return 756;
	}

	/**码 */
	/**码 */
	__getset(0,__proto,'code',function(){
		return this._code;
		},function(value){
		this._code=value;
	});

	return ReqUseCardMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*灵童使用属性丹
*/
//class net.message.soulboy.ResSoulBoyDrugItemMessage extends net.Message
var ResSoulBoyDrugItemMessage=(function(_super){
	function ResSoulBoyDrugItemMessage(){
		/**灵童ID */
		this._id=0;
		/**新的吃药次数 */
		this._count=0;
		ResSoulBoyDrugItemMessage.__super.call(this);
	}

	__class(ResSoulBoyDrugItemMessage,'net.message.soulboy.ResSoulBoyDrugItemMessage',_super);
	var __proto=ResSoulBoyDrugItemMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._count);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		this._count=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 685;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**新的吃药次数 */
	/**新的吃药次数 */
	__getset(0,__proto,'count',function(){
		return this._count;
		},function(value){
		this._count=value;
	});

	return ResSoulBoyDrugItemMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征重置
*/
//class net.message.yuanzheng.ReqYuanZhengResetMessage extends net.Message
var ReqYuanZhengResetMessage=(function(_super){
	function ReqYuanZhengResetMessage(){
		ReqYuanZhengResetMessage.__super.call(this);;
	}

	__class(ReqYuanZhengResetMessage,'net.message.yuanzheng.ReqYuanZhengResetMessage',_super);
	var __proto=ReqYuanZhengResetMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 298;
	}

	return ReqYuanZhengResetMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*膜拜错误
*/
//class net.message.rank.ResRankMoBaiErrorMessage extends net.Message
var ResRankMoBaiErrorMessage=(function(_super){
	function ResRankMoBaiErrorMessage(){
		/**1:参数错误;*/
		this._error=0;
		ResRankMoBaiErrorMessage.__super.call(this);
	}

	__class(ResRankMoBaiErrorMessage,'net.message.rank.ResRankMoBaiErrorMessage',_super);
	var __proto=ResRankMoBaiErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 273;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResRankMoBaiErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*boss宝箱拾取删除
*/
//class net.message.worldboss.ReqWorldBossBoxRemoveMessage extends net.Message
var ReqWorldBossBoxRemoveMessage=(function(_super){
	function ReqWorldBossBoxRemoveMessage(){
		/**宝箱ID */
		this._id=0;
		ReqWorldBossBoxRemoveMessage.__super.call(this);
	}

	__class(ReqWorldBossBoxRemoveMessage,'net.message.worldboss.ReqWorldBossBoxRemoveMessage',_super);
	var __proto=ReqWorldBossBoxRemoveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 522;
	}

	/**宝箱ID */
	/**宝箱ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	return ReqWorldBossBoxRemoveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级觉醒错误
*/
//class net.message.adviser.ResAdviserUpgradeWakeUpErrorMessage extends net.Message
var ResAdviserUpgradeWakeUpErrorMessage=(function(_super){
	function ResAdviserUpgradeWakeUpErrorMessage(){
		/**1:穷;2:没达到条件;*/
		this._error=0;
		ResAdviserUpgradeWakeUpErrorMessage.__super.call(this);
	}

	__class(ResAdviserUpgradeWakeUpErrorMessage,'net.message.adviser.ResAdviserUpgradeWakeUpErrorMessage',_super);
	var __proto=ResAdviserUpgradeWakeUpErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1027;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResAdviserUpgradeWakeUpErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级圣甲圣武
*/
//class net.message.equip.ReqUpGradeEquipMessage extends net.Message
var ReqUpGradeEquipMessage=(function(_super){
	function ReqUpGradeEquipMessage(){
		/**升级包中的还是身上的？ */
		this._isBag=0;
		/**包中的位置 */
		this._index=0;
		/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
		this._grid=0;
		/**英雄ID */
		this._heroID=0;
		ReqUpGradeEquipMessage.__super.call(this);
	}

	__class(ReqUpGradeEquipMessage,'net.message.equip.ReqUpGradeEquipMessage',_super);
	var __proto=ReqUpGradeEquipMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._isBag);
		this.writeInt(_buf,this._index);
		this.writeInt(_buf,this._grid);
		this.writeInt(_buf,this._heroID);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._isBag=this.readInt(_buf);
		this._index=this.readInt(_buf);
		this._grid=this.readInt(_buf);
		this._heroID=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 947;
	}

	/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	/**身上的位置[1:武器][2:头盔][3:项链][4:盔甲][5:护符][6:腰带][7:护腕][8:戒指][9:裤子][10:鞋子][11:圣武][12:圣甲] */
	__getset(0,__proto,'grid',function(){
		return this._grid;
		},function(value){
		this._grid=value;
	});

	/**升级包中的还是身上的？ */
	/**升级包中的还是身上的？ */
	__getset(0,__proto,'isBag',function(){
		return this._isBag;
		},function(value){
		this._isBag=value;
	});

	/**包中的位置 */
	/**包中的位置 */
	__getset(0,__proto,'index',function(){
		return this._index;
		},function(value){
		this._index=value;
	});

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	return ReqUpGradeEquipMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*摇钱树
*/
//class net.message.welfare.ReqYaoQianMessage extends net.Message
var ReqYaoQianMessage=(function(_super){
	function ReqYaoQianMessage(){
		ReqYaoQianMessage.__super.call(this);;
	}

	__class(ReqYaoQianMessage,'net.message.welfare.ReqYaoQianMessage',_super);
	var __proto=ReqYaoQianMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 750;
	}

	return ReqYaoQianMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*蛮将升级觉悟
*/
//class net.message.general.ReqGeneralUpgradeJueWuMessage extends net.Message
var ReqGeneralUpgradeJueWuMessage=(function(_super){
	function ReqGeneralUpgradeJueWuMessage(){
		ReqGeneralUpgradeJueWuMessage.__super.call(this);;
	}

	__class(ReqGeneralUpgradeJueWuMessage,'net.message.general.ReqGeneralUpgradeJueWuMessage',_super);
	var __proto=ReqGeneralUpgradeJueWuMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 1402;
	}

	return ReqGeneralUpgradeJueWuMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新技能
*/
//class net.message.soulboy.ResSoulBoySkillUpgradeMessage extends net.Message
var ResSoulBoySkillUpgradeMessage=(function(_super){
	function ResSoulBoySkillUpgradeMessage(){
		/**灵童ID */
		this._id=0;
		ResSoulBoySkillUpgradeMessage.__super.call(this);
		this._skills=[];
	}

	__class(ResSoulBoySkillUpgradeMessage,'net.message.soulboy.ResSoulBoySkillUpgradeMessage',_super);
	var __proto=ResSoulBoySkillUpgradeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._id);
		this.writeInt(_buf,this._skills.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._skills.length;++i_am_tmp_i){
			this._skills[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._id=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._skills=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._skills[i_am_tmp_i]=this.readBeanInList(_buf,SkillBean);
		}
	}

	__proto.getId=function(){
		return 527;
	}

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'id',function(){
		return this._id;
		},function(value){
		this._id=value;
	});

	/**灵童ID */
	/**灵童ID */
	__getset(0,__proto,'skills',function(){
		return this._skills;
		},function(value){
		this._skills=value;
	});

	return ResSoulBoySkillUpgradeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*远征刷新技能错误
*/
//class net.message.yuanzheng.ResYuanZhengRefreshSkillErrorMessage extends net.Message
var ResYuanZhengRefreshSkillErrorMessage=(function(_super){
	function ResYuanZhengRefreshSkillErrorMessage(){
		/**1:没有精灵;2:已经买了;3:穷;*/
		this._error=0;
		ResYuanZhengRefreshSkillErrorMessage.__super.call(this);
	}

	__class(ResYuanZhengRefreshSkillErrorMessage,'net.message.yuanzheng.ResYuanZhengRefreshSkillErrorMessage',_super);
	var __proto=ResYuanZhengRefreshSkillErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1005;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResYuanZhengRefreshSkillErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*请求创建军团
*/
//class net.message.guild.ReqGuildCreateMessage extends net.Message
var ReqGuildCreateMessage=(function(_super){
	function ReqGuildCreateMessage(){
		/**帮会名 */
		this._name=null;
		/**创建的等级 */
		this._level=0;
		ReqGuildCreateMessage.__super.call(this);
	}

	__class(ReqGuildCreateMessage,'net.message.guild.ReqGuildCreateMessage',_super);
	var __proto=ReqGuildCreateMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1224;
	}

	/**帮会名 */
	/**帮会名 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**创建的等级 */
	/**创建的等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	return ReqGuildCreateMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新爵位等级
*/
//class net.message.juewei.ResUpdateNewJueWeiLevelMessage extends net.Message
var ResUpdateNewJueWeiLevelMessage=(function(_super){
	function ResUpdateNewJueWeiLevelMessage(){
		/**当前等级 */
		this._lv=0;
		/**当前经验 */
		this._exp=0;
		ResUpdateNewJueWeiLevelMessage.__super.call(this);
	}

	__class(ResUpdateNewJueWeiLevelMessage,'net.message.juewei.ResUpdateNewJueWeiLevelMessage',_super);
	var __proto=ResUpdateNewJueWeiLevelMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._exp);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._exp=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1490;
	}

	/**当前等级 */
	/**当前等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**当前经验 */
	/**当前经验 */
	__getset(0,__proto,'exp',function(){
		return this._exp;
		},function(value){
		this._exp=value;
	});

	return ResUpdateNewJueWeiLevelMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*激活系统错误
*/
//class net.message.user.ResActiveGameSystemErrorMessage extends net.Message
var ResActiveGameSystemErrorMessage=(function(_super){
	function ResActiveGameSystemErrorMessage(){
		/**1:已激活;2:条件不足;*/
		this._error=0;
		ResActiveGameSystemErrorMessage.__super.call(this);
	}

	__class(ResActiveGameSystemErrorMessage,'net.message.user.ResActiveGameSystemErrorMessage',_super);
	var __proto=ResActiveGameSystemErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 40;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResActiveGameSystemErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升级官位错误
*/
//class net.message.official.ResUpgradeOfficialLvErrorMessage extends net.Message
var ResUpgradeOfficialLvErrorMessage=(function(_super){
	function ResUpgradeOfficialLvErrorMessage(){
		/**1:经验值不足;*/
		this._error=0;
		ResUpgradeOfficialLvErrorMessage.__super.call(this);
	}

	__class(ResUpgradeOfficialLvErrorMessage,'net.message.official.ResUpgradeOfficialLvErrorMessage',_super);
	var __proto=ResUpgradeOfficialLvErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 320;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResUpgradeOfficialLvErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*升阶房子的进度领取
*/
//class net.message.marriage.ResMarriagePromoteHouseReceiveMessage extends net.Message
var ResMarriagePromoteHouseReceiveMessage=(function(_super){
	function ResMarriagePromoteHouseReceiveMessage(){
		/**房子等级 */
		this._lv=0;
		/**房子进度 */
		this._progress=0;
		ResMarriagePromoteHouseReceiveMessage.__super.call(this);
	}

	__class(ResMarriagePromoteHouseReceiveMessage,'net.message.marriage.ResMarriagePromoteHouseReceiveMessage',_super);
	var __proto=ResMarriagePromoteHouseReceiveMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._lv);
		this.writeInt(_buf,this._progress);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._lv=this.readInt(_buf);
		this._progress=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 561;
	}

	/**房子等级 */
	/**房子等级 */
	__getset(0,__proto,'lv',function(){
		return this._lv;
		},function(value){
		this._lv=value;
	});

	/**房子进度 */
	/**房子进度 */
	__getset(0,__proto,'progress',function(){
		return this._progress;
		},function(value){
		this._progress=value;
	});

	return ResMarriagePromoteHouseReceiveMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*登录(本地)错误
*/
//class net.message.login.ResLoginForTypeErrorMessage extends net.Message
var ResLoginForTypeErrorMessage=(function(_super){
	function ResLoginForTypeErrorMessage(){
		/**1:帐号名称非法;2:主机地址非法;3:重复登录;4:服务器非法;5:名称重复;6:踢下线;7:封号;8:数据验证失败;*/
		this._error=0;
		ResLoginForTypeErrorMessage.__super.call(this);
	}

	__class(ResLoginForTypeErrorMessage,'net.message.login.ResLoginForTypeErrorMessage',_super);
	var __proto=ResLoginForTypeErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 797;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResLoginForTypeErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*穿戴神装
*/
//class net.message.godClothes.ReqPutOnGodClothesMessage extends net.Message
var ReqPutOnGodClothesMessage=(function(_super){
	function ReqPutOnGodClothesMessage(){
		/**英雄ID */
		this._heroID=0;
		/**背包中的位置 */
		this._packetIndex=0;
		ReqPutOnGodClothesMessage.__super.call(this);
	}

	__class(ReqPutOnGodClothesMessage,'net.message.godClothes.ReqPutOnGodClothesMessage',_super);
	var __proto=ReqPutOnGodClothesMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._heroID);
		this.writeInt(_buf,this._packetIndex);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._heroID=this.readInt(_buf);
		this._packetIndex=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 972;
	}

	/**英雄ID */
	/**英雄ID */
	__getset(0,__proto,'heroID',function(){
		return this._heroID;
		},function(value){
		this._heroID=value;
	});

	/**背包中的位置 */
	/**背包中的位置 */
	__getset(0,__proto,'packetIndex',function(){
		return this._packetIndex;
		},function(value){
		this._packetIndex=value;
	});

	return ReqPutOnGodClothesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买冷却错误
*/
//class net.message.emptycity.ResEmptyCityPayColdErrorMessage extends net.Message
var ResEmptyCityPayColdErrorMessage=(function(_super){
	function ResEmptyCityPayColdErrorMessage(){
		/**1:尚未开启;2:穷;3:冷却过了;*/
		this._error=0;
		ResEmptyCityPayColdErrorMessage.__super.call(this);
	}

	__class(ResEmptyCityPayColdErrorMessage,'net.message.emptycity.ResEmptyCityPayColdErrorMessage',_super);
	var __proto=ResEmptyCityPayColdErrorMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this.error);
	}

	__proto.read=function(_buf){
		this._error=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 1100;
	}

	__getset(0,__proto,'error',function(){
		return this._error;
	});

	return ResEmptyCityPayColdErrorMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*购买挑战次数
*/
//class net.message.arena.ReqArenaBuyTimesMessage extends net.Message
var ReqArenaBuyTimesMessage=(function(_super){
	function ReqArenaBuyTimesMessage(){
		ReqArenaBuyTimesMessage.__super.call(this);;
	}

	__class(ReqArenaBuyTimesMessage,'net.message.arena.ReqArenaBuyTimesMessage',_super);
	var __proto=ReqArenaBuyTimesMessage.prototype;
	__proto.write=function(_buf){}
	__proto.read=function(_buf){
		var size52413035=0;
	}

	__proto.getId=function(){
		return 274;
	}

	return ReqArenaBuyTimesMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*领取勇闯天庭奖励
*/
//class net.message.pata.ResTakeYCTTPrizeMessage extends net.Message
var ResTakeYCTTPrizeMessage=(function(_super){
	function ResTakeYCTTPrizeMessage(){
		/**层 */
		this._layer=0;
		ResTakeYCTTPrizeMessage.__super.call(this);
		this._prize=[];
	}

	__class(ResTakeYCTTPrizeMessage,'net.message.pata.ResTakeYCTTPrizeMessage',_super);
	var __proto=ResTakeYCTTPrizeMessage.prototype;
	__proto.write=function(_buf){
		this.writeInt(_buf,this._layer);
		this.writeInt(_buf,this._prize.length);
		for (var i_am_tmp_i=0;i_am_tmp_i < this._prize.length;++i_am_tmp_i){
			this._prize[i_am_tmp_i].write(_buf);
		}
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._layer=this.readInt(_buf);
		size52413035=this.readInt(_buf);
		this._prize=[];
		for (var i_am_tmp_i=0;i_am_tmp_i < size52413035;++i_am_tmp_i){
			this._prize[i_am_tmp_i]=this.readBeanInList(_buf,GoodsNumBean);
		}
	}

	__proto.getId=function(){
		return 252;
	}

	/**层 */
	/**层 */
	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	/**奖励 */
	/**奖励 */
	__getset(0,__proto,'prize',function(){
		return this._prize;
		},function(value){
		this._prize=value;
	});

	return ResTakeYCTTPrizeMessage;
})(Message)


/**
*Created by FreeMarker. DO NOT EDIT!!!
*更新猎命等级成功
*/
//class net.message.lieming.ResUpdateLieMingLevelSucessMessage extends net.Message
var ResUpdateLieMingLevelSucessMessage=(function(_super){
	function ResUpdateLieMingLevelSucessMessage(){
		/**玩家名称 */
		this._name=null;
		/**更新等级 */
		this._level=0;
		ResUpdateLieMingLevelSucessMessage.__super.call(this);
	}

	__class(ResUpdateLieMingLevelSucessMessage,'net.message.lieming.ResUpdateLieMingLevelSucessMessage',_super);
	var __proto=ResUpdateLieMingLevelSucessMessage.prototype;
	__proto.write=function(_buf){
		this.writeString(_buf,this._name);
		this.writeInt(_buf,this._level);
	}

	__proto.read=function(_buf){
		var size52413035=0;
		this._name=this.readString(_buf);
		this._level=this.readInt(_buf);
	}

	__proto.getId=function(){
		return 735;
	}

	/**玩家名称 */
	/**玩家名称 */
	__getset(0,__proto,'name',function(){
		return this._name;
		},function(value){
		this._name=value;
	});

	/**更新等级 */
	/**更新等级 */
	__getset(0,__proto,'level',function(){
		return this._level;
		},function(value){
		this._level=value;
	});

	return ResUpdateLieMingLevelSucessMessage;
})(Message)



})(window,document,Laya);
