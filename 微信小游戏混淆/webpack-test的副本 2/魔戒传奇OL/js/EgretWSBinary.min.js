var egret = window.egret;var EgretWSBinary=(function(){function EgretWSBinary(){this.url="";this.socket=null;this.open_cb=null;this.close_cb=null;this.error_cb=null;this.caller=null;this.msgList=[];this.nowData=null}EgretWSBinary.prototype.getUrl=function(){return this.url};EgretWSBinary.prototype.isAlive=function(){if(this.socket){if(!this.socket.connected){return false}return this.socket}return false};EgretWSBinary.prototype.connect=function(url,open_cb,close_cb,error_cb,caller){this.url=url;this.open_cb=open_cb;this.close_cb=close_cb;this.error_cb=error_cb;this.caller=caller;var that=this;this.socket=new egret.WebSocket();this.socket.type=egret.WebSocket.TYPE_BINARY;this.socket.addEventListener(egret.ProgressEvent.SOCKET_DATA,this.onReceiveMessage,this);this.socket.addEventListener(egret.Event.CONNECT,this.onSocketOpen,this);this.socket.addEventListener(egret.Event.CLOSE,this.onSocketClose,this);this.socket.addEventListener(egret.IOErrorEvent.IO_ERROR,this.onSocketError,this);this.socket.connectByUrl(url)};EgretWSBinary.prototype.onReceiveMessage=function(e){var msgBuff;var btyearray=new egret.ByteArray();this.socket.readBytes(btyearray);var len=btyearray.buffer.byteLength;var dataView=new DataView(btyearray.buffer);var pbView=new DataView(new ArrayBuffer(len));for(var i=0;i<len;i++){pbView.setInt8(i,dataView.getInt8(i))}var msgBuff=dcodeIO.ByteBuffer.wrap(pbView.buffer);var protocol=new HawkProtocol();if(protocol.decode(msgBuff)){HawkProtocolManager.handlerProtocol(protocol)}else{console.log("protocol decode failed")}};EgretWSBinary.prototype.sendProtocol=function(hpCode,msgBuilder){var protocol=new HawkProtocol(hpCode,msgBuilder);var byteBuffer=protocol.encode();var btyeArray=new egret.ByteArray(byteBuffer.toArrayBuffer());if(btyeArray){this.socket.writeBytes(btyeArray);this.socket.flush();return true}};EgretWSBinary.prototype.onSocketOpen=function(){console.log("egret binary websockt session opened: "+this.url);if(this.open_cb){this.open_cb.call(this.caller)}};EgretWSBinary.prototype.onSocketClose=function(){console.log("egret binary websockt session closed: "+this.url);if(this.close_cb){this.close_cb.call(this.caller)}};EgretWSBinary.prototype.onSocketError=function(){console.log("egret binary websockt session error: "+this.url);if(this.error_cb){this.error_cb.call(this.caller)}};EgretWSBinary.prototype.close=function(){this.socket.removeEventListener(egret.ProgressEvent.SOCKET_DATA,this.onReceiveMessage,this);this.socket.removeEventListener(egret.Event.CONNECT,this.onSocketOpen,this);this.socket.removeEventListener(egret.Event.CLOSE,this.onSocketClose,this);this.socket.removeEventListener(egret.IOErrorEvent.IO_ERROR,this.onSocketError,this);this.open_cb=null;this.close_cb=null;this.error_cb=null;this.msgList=null;this.nowData=null;this.caller=null;if(this.socket){this.socket.close();this.socket=null}};return EgretWSBinary})();window.EgretWSBinary=EgretWSBinary;